
set namespaceSeparator ::

abstract class "scheduler::ticker::TickerProvider" {
  +Ticker createTicker()
}

class "scheduler::ticker::Ticker" {
  -TickerFuture? _future
  -bool _muted
  -Duration? _startTime
  -void Function(Duration) _onTick
  -int? _animationId
  +String? debugLabel
  -StackTrace _debugCreationStack
  +bool muted
  +bool isTicking
  +bool isActive
  +bool scheduled
  +bool shouldScheduleTick
  +TickerFuture start()
  +DiagnosticsNode describeForError()
  +void stop()
  -void _tick()
  #void scheduleTick()
  #void unscheduleTick()
  +void absorbTicker()
  +void dispose()
  +String toString()
}

"scheduler::ticker::Ticker" o-- "scheduler::ticker::TickerFuture"
"scheduler::ticker::Ticker" o-- "scheduler::ticker::void Function(Duration)"

class "scheduler::ticker::TickerFuture" {
  -Completer<void> _primaryCompleter
  -Completer<void>? _secondaryCompleter
  -bool? _completed
  +Future<void> orCancel
  -void _complete()
  -void _cancel()
  +void whenCompleteOrCancel()
  +Stream<void> asStream()
  +Future<void> catchError()
  +Future<R> then()
  +Future<void> timeout()
  +Future<void> whenComplete()
  +String toString()
}

"scheduler::ticker::TickerFuture" o-- "dart::async::Completer<void>"
"dart::async::Future" <|-- "scheduler::ticker::TickerFuture"

class "scheduler::ticker::TickerCanceled" {
  +Ticker? ticker
  +String toString()
}

"scheduler::ticker::TickerCanceled" o-- "scheduler::ticker::Ticker"
"dart::core::Exception" <|-- "scheduler::ticker::TickerCanceled"

class "scheduler::priority::Priority" {
  -int _value
  {static} +Priority idle
  {static} +Priority animation
  {static} +Priority touch
  {static} +int kMaxOffset
  +int value
  +Priority +()
  +Priority -()
}

"scheduler::priority::Priority" o-- "scheduler::priority::Priority"

class "scheduler::service_extensions::SchedulerServiceExtensions" {
  +int index
  {static} +List<SchedulerServiceExtensions> values
  {static} +SchedulerServiceExtensions timeDilation
}

"scheduler::service_extensions::SchedulerServiceExtensions" o-- "scheduler::service_extensions::SchedulerServiceExtensions"
"dart::core::Enum" <|-- "scheduler::service_extensions::SchedulerServiceExtensions"

class "scheduler::binding::_TaskEntry" {
  +FutureOr<T> Function() task
  +int priority
  +String? debugLabel
  +Flow? flow
  +StackTrace debugStack
  +Completer<T> completer
  +void run()
}

"scheduler::binding::_TaskEntry" o-- "scheduler::binding::FutureOr<T> Function()"
"scheduler::binding::_TaskEntry" o-- "dart::developer::Flow"
"scheduler::binding::_TaskEntry" o-- "dart::async::Completer<T>"

class "scheduler::binding::_FrameCallbackEntry" {
  +void Function(Duration) callback
  {static} +StackTrace? debugCurrentCallbackStack
  +StackTrace? debugStack
}

"scheduler::binding::_FrameCallbackEntry" o-- "scheduler::binding::void Function(Duration)"

class "scheduler::binding::PerformanceModeRequestHandle" {
  -void Function()? _cleanup
  +void dispose()
}

"scheduler::binding::PerformanceModeRequestHandle" o-- "scheduler::binding::void Function()"

class "scheduler::binding::SchedulerPhase" {
  +int index
  {static} +List<SchedulerPhase> values
  {static} +SchedulerPhase idle
  {static} +SchedulerPhase transientCallbacks
  {static} +SchedulerPhase midFrameMicrotasks
  {static} +SchedulerPhase persistentCallbacks
  {static} +SchedulerPhase postFrameCallbacks
}

"scheduler::binding::SchedulerPhase" o-- "scheduler::binding::SchedulerPhase"
"dart::core::Enum" <|-- "scheduler::binding::SchedulerPhase"

abstract class "scheduler::binding::SchedulerBinding" {
  {static} -SchedulerBinding? _instance
  -List<void Function(List<FrameTiming>)> _timingsCallbacks
  -AppLifecycleState? _lifecycleState
  +bool Function({required int priority, required SchedulerBinding scheduler}) schedulingStrategy
  -PriorityQueue<_TaskEntry<dynamic>> _taskQueue
  -bool _hasRequestedAnEventLoopCallback
  -int _nextFrameCallbackId
  -Map<int, _FrameCallbackEntry> _transientCallbacks
  -Set<int> _removedIds
  -List<void Function(Duration)> _persistentCallbacks
  -List<void Function(Duration)> _postFrameCallbacks
  -Completer<void>? _nextFrameCompleter
  -bool _hasScheduledFrame
  -SchedulerPhase _schedulerPhase
  -bool _framesEnabled
  -bool _warmUpFrame
  -Duration? _firstRawTimeStampInEpoch
  -Duration _epochStart
  -Duration _lastRawTimeStamp
  -Duration? _currentFrameTimeStamp
  -int _debugFrameNumber
  -String? _debugBanner
  -bool _rescheduleAfterWarmUpFrame
  -TimelineTask? _frameTimelineTask
  -dynamic _performanceMode
  -int _numPerformanceModeRequests
  {static} +SchedulerBinding instance
  +AppLifecycleState? lifecycleState
  +int transientCallbackCount
  +Future<void> endOfFrame
  +bool hasScheduledFrame
  +SchedulerPhase schedulerPhase
  +bool framesEnabled
  +Duration currentFrameTimeStamp
  +Duration currentSystemFrameTimeStamp
  +void initInstances()
  +void addTimingsCallback()
  +void removeTimingsCallback()
  -void _executeTimingsCallbacks()
  +void initServiceExtensions()
  +void resetLifecycleState()
  #void handleAppLifecycleStateChanged()
  {static} -int _taskSorter()
  +Future<T> scheduleTask()
  +void unlocked()
  -void _ensureEventLoopCallback()
  -void _runTasks()
  +bool handleEventLoopCallback()
  +int scheduleFrameCallback()
  +void cancelFrameCallbackWithId()
  +bool debugAssertNoTransientCallbacks()
  +bool debugAssertNoPendingPerformanceModeRequests()
  +bool debugAssertNoTimeDilation()
  {static} +void debugPrintTransientCallbackRegistrationStack()
  +void addPersistentFrameCallback()
  +void addPostFrameCallback()
  -void _setFramesEnabledState()
  #void ensureFrameCallbacksRegistered()
  +void ensureVisualUpdate()
  +void scheduleFrame()
  +void scheduleForcedFrame()
  +void scheduleWarmUpFrame()
  +void resetEpoch()
  -Duration _adjustForEpoch()
  -void _handleBeginFrame()
  -void _handleDrawFrame()
  +void handleBeginFrame()
  +PerformanceModeRequestHandle? requestPerformanceMode()
  -void _disposePerformanceModeRequest()
  +dynamic debugGetRequestedPerformanceMode()
  +void handleDrawFrame()
  -void _profileFramePostEvent()
  {static} -void _debugDescribeTimeStamp()
  -void _invokeFrameCallback()
}

"scheduler::binding::SchedulerBinding" o-- "scheduler::binding::SchedulerBinding"
"scheduler::binding::SchedulerBinding" o-- "dart::ui::AppLifecycleState"
"scheduler::binding::SchedulerBinding" o-- "scheduler::binding::bool Function({required int priority, required SchedulerBinding scheduler})"
"scheduler::binding::SchedulerBinding" o-- "collection::src::priority_queue::PriorityQueue<_TaskEntry<dynamic>>"
"scheduler::binding::SchedulerBinding" o-- "dart::async::Completer<void>"
"scheduler::binding::SchedulerBinding" o-- "scheduler::binding::SchedulerPhase"
"scheduler::binding::SchedulerBinding" o-- "dart::developer::TimelineTask"

abstract class "animation::tween::Animatable" {
  +T transform()
  +T evaluate()
  +Animation<T> animate()
  +Animatable<T> chain()
}

class "animation::tween::_CallbackAnimatable" {
  -T Function(double) _callback
  +T transform()
}

"animation::tween::_CallbackAnimatable" o-- "animation::tween::T Function(double)"
"animation::tween::Animatable" <|-- "animation::tween::_CallbackAnimatable"

class "animation::tween::_AnimatedEvaluation" {
  +Animation<double> parent
  -Animatable<T> _evaluatable
  +T value
  +String toString()
  +String toStringDetails()
}

"animation::tween::_AnimatedEvaluation" o-- "animation::animation::Animation<double>"
"animation::tween::_AnimatedEvaluation" o-- "animation::tween::Animatable<T>"
"animation::animation::Animation" <|-- "animation::tween::_AnimatedEvaluation"
"animation::animations::AnimationWithParentMixin" <|-- "animation::tween::_AnimatedEvaluation"

class "animation::tween::_ChainedEvaluation" {
  -Animatable<double> _parent
  -Animatable<T> _evaluatable
  +T transform()
  +String toString()
}

"animation::tween::_ChainedEvaluation" o-- "animation::tween::Animatable<double>"
"animation::tween::_ChainedEvaluation" o-- "animation::tween::Animatable<T>"
"animation::tween::Animatable" <|-- "animation::tween::_ChainedEvaluation"

class "animation::tween::Tween" {
  +T? begin
  +T? end
  #T lerp()
  +T transform()
  +String toString()
}

"animation::tween::Animatable" <|-- "animation::tween::Tween"

class "animation::tween::ReverseTween" {
  +Tween<T> parent
  +T lerp()
}

"animation::tween::ReverseTween" o-- "animation::tween::Tween<T>"
"animation::tween::Tween" <|-- "animation::tween::ReverseTween"

class "animation::tween::ColorTween" {
  +Color? lerp()
}

"animation::tween::Tween" <|-- "animation::tween::ColorTween"

class "animation::tween::SizeTween" {
  +Size? lerp()
}

"animation::tween::Tween" <|-- "animation::tween::SizeTween"

class "animation::tween::RectTween" {
  +Rect? lerp()
}

"animation::tween::Tween" <|-- "animation::tween::RectTween"

class "animation::tween::IntTween" {
  +int lerp()
}

"animation::tween::Tween" <|-- "animation::tween::IntTween"

class "animation::tween::StepTween" {
  +int lerp()
}

"animation::tween::Tween" <|-- "animation::tween::StepTween"

class "animation::tween::ConstantTween" {
  +T lerp()
  +String toString()
}

"animation::tween::Tween" <|-- "animation::tween::ConstantTween"

class "animation::tween::CurveTween" {
  +Curve curve
  +double transform()
  +String toString()
}

"animation::tween::CurveTween" o-- "animation::curves::Curve"
"animation::tween::Animatable" <|-- "animation::tween::CurveTween"

abstract class "animation::listener_helpers::AnimationLazyListenerMixin" {
  -int _listenerCounter
  +bool isListening
  #void didRegisterListener()
  #void didUnregisterListener()
  #void didStartListening()
  #void didStopListening()
}

abstract class "animation::listener_helpers::AnimationEagerListenerMixin" {
  #void didRegisterListener()
  #void didUnregisterListener()
  +void dispose()
}

abstract class "animation::listener_helpers::AnimationLocalListenersMixin" {
  -ObserverList<void Function()> _listeners
  #void didRegisterListener()
  #void didUnregisterListener()
  +void addListener()
  +void removeListener()
  #void clearListeners()
  #void notifyListeners()
}

"animation::listener_helpers::AnimationLocalListenersMixin" o-- "foundation::observer_list::ObserverList<void Function()>"

abstract class "animation::listener_helpers::AnimationLocalStatusListenersMixin" {
  -ObserverList<void Function(AnimationStatus)> _statusListeners
  #void didRegisterListener()
  #void didUnregisterListener()
  +void addStatusListener()
  +void removeStatusListener()
  #void clearStatusListeners()
  #void notifyStatusListeners()
}

"animation::listener_helpers::AnimationLocalStatusListenersMixin" o-- "foundation::observer_list::ObserverList<void Function(AnimationStatus)>"

class "animation::tween_sequence::TweenSequence" {
  -List<TweenSequenceItem<T>> _items
  -List<_Interval> _intervals
  -T _evaluateAt()
  +T transform()
  +String toString()
}

"animation::tween::Animatable" <|-- "animation::tween_sequence::TweenSequence"

class "animation::tween_sequence::FlippedTweenSequence" {
  +double transform()
}

"animation::tween_sequence::TweenSequence" <|-- "animation::tween_sequence::FlippedTweenSequence"

class "animation::tween_sequence::TweenSequenceItem" {
  +Animatable<T> tween
  +double weight
}

"animation::tween_sequence::TweenSequenceItem" o-- "animation::tween::Animatable<T>"

class "animation::tween_sequence::_Interval" {
  +double start
  +double end
  +bool contains()
  +double value()
  +String toString()
}

class "animation::animation_controller::AnimationController" {
  +double lowerBound
  +double upperBound
  +String? debugLabel
  +AnimationBehavior animationBehavior
  +Duration? duration
  +Duration? reverseDuration
  -Ticker? _ticker
  -Simulation? _simulation
  -double _value
  -Duration? _lastElapsedDuration
  -_AnimationDirection _direction
  -AnimationStatus _status
  -AnimationStatus _lastReportedStatus
  +Animation<double> view
  +double value
  +double velocity
  +Duration? lastElapsedDuration
  +bool isAnimating
  +AnimationStatus status
  +void resync()
  +void reset()
  -void _internalSetValue()
  +TickerFuture forward()
  +TickerFuture reverse()
  +TickerFuture animateTo()
  +TickerFuture animateBack()
  -TickerFuture _animateToInternal()
  +TickerFuture repeat()
  -void _directionSetter()
  +TickerFuture fling()
  +TickerFuture animateWith()
  -TickerFuture _startSimulation()
  +void stop()
  +void dispose()
  -void _checkStatusChanged()
  -void _tick()
  +String toStringDetails()
}

"animation::animation_controller::AnimationController" o-- "animation::animation_controller::AnimationBehavior"
"animation::animation_controller::AnimationController" o-- "scheduler::ticker::Ticker"
"animation::animation_controller::AnimationController" o-- "physics::simulation::Simulation"
"animation::animation_controller::AnimationController" o-- "animation::animation_controller::_AnimationDirection"
"animation::animation_controller::AnimationController" o-- "animation::animation::AnimationStatus"
"animation::animation_controller::AnimationController" o-- "animation::animation::Animation<double>"
"animation::animation::Animation" <|-- "animation::animation_controller::AnimationController"
"animation::listener_helpers::AnimationEagerListenerMixin" <|-- "animation::animation_controller::AnimationController"
"animation::listener_helpers::AnimationLocalListenersMixin" <|-- "animation::animation_controller::AnimationController"
"animation::listener_helpers::AnimationLocalStatusListenersMixin" <|-- "animation::animation_controller::AnimationController"

class "animation::animation_controller::_InterpolationSimulation" {
  -double _durationInSeconds
  -double _begin
  -double _end
  -Curve _curve
  +double x()
  +double dx()
  +bool isDone()
}

"animation::animation_controller::_InterpolationSimulation" o-- "animation::curves::Curve"
"physics::simulation::Simulation" <|-- "animation::animation_controller::_InterpolationSimulation"

class "animation::animation_controller::_RepeatingSimulation" {
  +double min
  +double max
  +bool reverse
  +void Function(_AnimationDirection) directionSetter
  -double _periodInSeconds
  -double _initialT
  +double x()
  +double dx()
  +bool isDone()
}

"animation::animation_controller::_RepeatingSimulation" o-- "animation::animation_controller::void Function(_AnimationDirection)"
"physics::simulation::Simulation" <|-- "animation::animation_controller::_RepeatingSimulation"

class "animation::animation_controller::_AnimationDirection" {
  +int index
  {static} +List<_AnimationDirection> values
  {static} +_AnimationDirection forward
  {static} +_AnimationDirection reverse
}

"animation::animation_controller::_AnimationDirection" o-- "animation::animation_controller::_AnimationDirection"
"dart::core::Enum" <|-- "animation::animation_controller::_AnimationDirection"

class "animation::animation_controller::AnimationBehavior" {
  +int index
  {static} +List<AnimationBehavior> values
  {static} +AnimationBehavior normal
  {static} +AnimationBehavior preserve
}

"animation::animation_controller::AnimationBehavior" o-- "animation::animation_controller::AnimationBehavior"
"dart::core::Enum" <|-- "animation::animation_controller::AnimationBehavior"

abstract class "animation::animation::Animation" {
  +AnimationStatus status
  +T value
  +bool isDismissed
  +bool isCompleted
  +void addListener()
  +void removeListener()
  +void addStatusListener()
  +void removeStatusListener()
  +Animation<U> drive()
  +String toString()
  +String toStringDetails()
}

"animation::animation::Animation" o-- "animation::animation::AnimationStatus"
"foundation::change_notifier::Listenable" <|-- "animation::animation::Animation"
"foundation::change_notifier::ValueListenable" <|-- "animation::animation::Animation"

class "animation::animation::_ValueListenableDelegateAnimation" {
  -ValueListenable<T> _listenable
  -T Function(T)? _transformer
  +AnimationStatus status
  +T value
  +void addListener()
  +void addStatusListener()
  +void removeListener()
  +void removeStatusListener()
}

"animation::animation::_ValueListenableDelegateAnimation" o-- "foundation::change_notifier::ValueListenable<T>"
"animation::animation::_ValueListenableDelegateAnimation" o-- "animation::animation::T Function(T)"
"animation::animation::_ValueListenableDelegateAnimation" o-- "animation::animation::AnimationStatus"
"animation::animation::Animation" <|-- "animation::animation::_ValueListenableDelegateAnimation"

class "animation::animation::AnimationStatus" {
  +int index
  {static} +List<AnimationStatus> values
  {static} +AnimationStatus dismissed
  {static} +AnimationStatus forward
  {static} +AnimationStatus reverse
  {static} +AnimationStatus completed
}

"animation::animation::AnimationStatus" o-- "animation::animation::AnimationStatus"
"dart::core::Enum" <|-- "animation::animation::AnimationStatus"

abstract class "animation::curves::ParametricCurve" {
  +T transform()
  #T transformInternal()
  +String toString()
}

abstract class "animation::curves::Curve" {
  +Curve flipped
  +double transform()
}

"animation::curves::Curve" o-- "animation::curves::Curve"
"animation::curves::ParametricCurve" <|-- "animation::curves::Curve"

class "animation::curves::_Linear" {
  +double transformInternal()
}

"animation::curves::Curve" <|-- "animation::curves::_Linear"

class "animation::curves::SawTooth" {
  +int count
  +double transformInternal()
  +String toString()
}

"animation::curves::Curve" <|-- "animation::curves::SawTooth"

class "animation::curves::Interval" {
  +double begin
  +double end
  +Curve curve
  +double transformInternal()
  +String toString()
}

"animation::curves::Interval" o-- "animation::curves::Curve"
"animation::curves::Curve" <|-- "animation::curves::Interval"

class "animation::curves::Threshold" {
  +double threshold
  +double transformInternal()
}

"animation::curves::Curve" <|-- "animation::curves::Threshold"

class "animation::curves::Cubic" {
  +double a
  +double b
  +double c
  +double d
  {static} -double _cubicErrorBound
  -double _evaluateCubic()
  +double transformInternal()
  +String toString()
}

"animation::curves::Curve" <|-- "animation::curves::Cubic"

class "animation::curves::ThreePointCubic" {
  +Offset a1
  +Offset b1
  +Offset midpoint
  +Offset a2
  +Offset b2
  +double transformInternal()
  +String toString()
}

"animation::curves::ThreePointCubic" o-- "dart::ui::Offset"
"animation::curves::Curve" <|-- "animation::curves::ThreePointCubic"

abstract class "animation::curves::Curve2D" {
  +int samplingSeed
  +Iterable<Curve2DSample> generateSamples()
  +double findInverse()
}

"animation::curves::ParametricCurve" <|-- "animation::curves::Curve2D"

class "animation::curves::Curve2DSample" {
  +double t
  +Offset value
  +String toString()
}

"animation::curves::Curve2DSample" o-- "dart::ui::Offset"

class "animation::curves::CatmullRomSpline" {
  -List<List<Offset>> _cubicSegments
  -List<Offset>? _controlPoints
  -Offset? _startHandle
  -Offset? _endHandle
  -double? _tension
  +int samplingSeed
  {static} -List<List<Offset>> _computeSegments()
  -void _initializeIfNeeded()
  +Offset transformInternal()
}

"animation::curves::CatmullRomSpline" o-- "dart::ui::Offset"
"animation::curves::Curve2D" <|-- "animation::curves::CatmullRomSpline"

class "animation::curves::CatmullRomCurve" {
  {static} -List<String> _debugAssertReasons
  -List<Curve2DSample> _precomputedSamples
  +List<Offset> controlPoints
  +double tension
  {static} -List<Curve2DSample> _computeSamples()
  {static} +bool validateControlPoints()
  +double transformInternal()
}

"animation::curves::Curve" <|-- "animation::curves::CatmullRomCurve"

class "animation::curves::FlippedCurve" {
  +Curve curve
  +double transformInternal()
  +String toString()
}

"animation::curves::FlippedCurve" o-- "animation::curves::Curve"
"animation::curves::Curve" <|-- "animation::curves::FlippedCurve"

class "animation::curves::_DecelerateCurve" {
  +double transformInternal()
}

"animation::curves::Curve" <|-- "animation::curves::_DecelerateCurve"

class "animation::curves::_BounceInCurve" {
  +double transformInternal()
}

"animation::curves::Curve" <|-- "animation::curves::_BounceInCurve"

class "animation::curves::_BounceOutCurve" {
  +double transformInternal()
}

"animation::curves::Curve" <|-- "animation::curves::_BounceOutCurve"

class "animation::curves::_BounceInOutCurve" {
  +double transformInternal()
}

"animation::curves::Curve" <|-- "animation::curves::_BounceInOutCurve"

class "animation::curves::ElasticInCurve" {
  +double period
  +double transformInternal()
  +String toString()
}

"animation::curves::Curve" <|-- "animation::curves::ElasticInCurve"

class "animation::curves::ElasticOutCurve" {
  +double period
  +double transformInternal()
  +String toString()
}

"animation::curves::Curve" <|-- "animation::curves::ElasticOutCurve"

class "animation::curves::ElasticInOutCurve" {
  +double period
  +double transformInternal()
  +String toString()
}

"animation::curves::Curve" <|-- "animation::curves::ElasticInOutCurve"

abstract class "animation::curves::Curves" {
  {static} +Curve linear
  {static} +Curve decelerate
  {static} +Cubic fastLinearToSlowEaseIn
  {static} +ThreePointCubic fastEaseInToSlowEaseOut
  {static} +Cubic ease
  {static} +Cubic easeIn
  {static} +Cubic easeInToLinear
  {static} +Cubic easeInSine
  {static} +Cubic easeInQuad
  {static} +Cubic easeInCubic
  {static} +Cubic easeInQuart
  {static} +Cubic easeInQuint
  {static} +Cubic easeInExpo
  {static} +Cubic easeInCirc
  {static} +Cubic easeInBack
  {static} +Cubic easeOut
  {static} +Cubic linearToEaseOut
  {static} +Cubic easeOutSine
  {static} +Cubic easeOutQuad
  {static} +Cubic easeOutCubic
  {static} +Cubic easeOutQuart
  {static} +Cubic easeOutQuint
  {static} +Cubic easeOutExpo
  {static} +Cubic easeOutCirc
  {static} +Cubic easeOutBack
  {static} +Cubic easeInOut
  {static} +Cubic easeInOutSine
  {static} +Cubic easeInOutQuad
  {static} +Cubic easeInOutCubic
  {static} +ThreePointCubic easeInOutCubicEmphasized
  {static} +Cubic easeInOutQuart
  {static} +Cubic easeInOutQuint
  {static} +Cubic easeInOutExpo
  {static} +Cubic easeInOutCirc
  {static} +Cubic easeInOutBack
  {static} +Cubic fastOutSlowIn
  {static} +Cubic slowMiddle
  {static} +Curve bounceIn
  {static} +Curve bounceOut
  {static} +Curve bounceInOut
  {static} +ElasticInCurve elasticIn
  {static} +ElasticOutCurve elasticOut
  {static} +ElasticInOutCurve elasticInOut
}

"animation::curves::Curves" o-- "animation::curves::Curve"
"animation::curves::Curves" o-- "animation::curves::Cubic"
"animation::curves::Curves" o-- "animation::curves::ThreePointCubic"
"animation::curves::Curves" o-- "animation::curves::ElasticInCurve"
"animation::curves::Curves" o-- "animation::curves::ElasticOutCurve"
"animation::curves::Curves" o-- "animation::curves::ElasticInOutCurve"

class "animation::animations::_AlwaysCompleteAnimation" {
  +AnimationStatus status
  +double value
  +void addListener()
  +void removeListener()
  +void addStatusListener()
  +void removeStatusListener()
  +String toString()
}

"animation::animations::_AlwaysCompleteAnimation" o-- "animation::animation::AnimationStatus"
"animation::animation::Animation" <|-- "animation::animations::_AlwaysCompleteAnimation"

class "animation::animations::_AlwaysDismissedAnimation" {
  +AnimationStatus status
  +double value
  +void addListener()
  +void removeListener()
  +void addStatusListener()
  +void removeStatusListener()
  +String toString()
}

"animation::animations::_AlwaysDismissedAnimation" o-- "animation::animation::AnimationStatus"
"animation::animation::Animation" <|-- "animation::animations::_AlwaysDismissedAnimation"

class "animation::animations::AlwaysStoppedAnimation" {
  +T value
  +AnimationStatus status
  +void addListener()
  +void removeListener()
  +void addStatusListener()
  +void removeStatusListener()
  +String toStringDetails()
}

"animation::animations::AlwaysStoppedAnimation" o-- "animation::animation::AnimationStatus"
"animation::animation::Animation" <|-- "animation::animations::AlwaysStoppedAnimation"

class "animation::animations::ProxyAnimation" {
  -AnimationStatus? _status
  -double? _value
  -Animation<double>? _parent
  +Animation<double>? parent
  +AnimationStatus status
  +double value
  +void didStartListening()
  +void didStopListening()
  +String toString()
}

"animation::animations::ProxyAnimation" o-- "animation::animation::AnimationStatus"
"animation::animations::ProxyAnimation" o-- "animation::animation::Animation<double>"
"animation::animation::Animation" <|-- "animation::animations::ProxyAnimation"
"animation::listener_helpers::AnimationLazyListenerMixin" <|-- "animation::animations::ProxyAnimation"
"animation::listener_helpers::AnimationLocalListenersMixin" <|-- "animation::animations::ProxyAnimation"
"animation::listener_helpers::AnimationLocalStatusListenersMixin" <|-- "animation::animations::ProxyAnimation"

class "animation::animations::ReverseAnimation" {
  +Animation<double> parent
  +AnimationStatus status
  +double value
  +void addListener()
  +void removeListener()
  +void didStartListening()
  +void didStopListening()
  -void _statusChangeHandler()
  -AnimationStatus _reverseStatus()
  +String toString()
}

"animation::animations::ReverseAnimation" o-- "animation::animation::Animation<double>"
"animation::animations::ReverseAnimation" o-- "animation::animation::AnimationStatus"
"animation::animation::Animation" <|-- "animation::animations::ReverseAnimation"
"animation::listener_helpers::AnimationLazyListenerMixin" <|-- "animation::animations::ReverseAnimation"
"animation::listener_helpers::AnimationLocalStatusListenersMixin" <|-- "animation::animations::ReverseAnimation"

class "animation::animations::CurvedAnimation" {
  +Animation<double> parent
  +Curve curve
  +Curve? reverseCurve
  -AnimationStatus? _curveDirection
  +bool isDisposed
  -bool _useForwardCurve
  +double value
  -void _updateCurveDirection()
  +void dispose()
  +String toString()
}

"animation::animations::CurvedAnimation" o-- "animation::animation::Animation<double>"
"animation::animations::CurvedAnimation" o-- "animation::curves::Curve"
"animation::animations::CurvedAnimation" o-- "animation::animation::AnimationStatus"
"animation::animation::Animation" <|-- "animation::animations::CurvedAnimation"
"animation::animations::AnimationWithParentMixin" <|-- "animation::animations::CurvedAnimation"

class "animation::animations::TrainHoppingAnimation" {
  -Animation<double>? _currentTrain
  -Animation<double>? _nextTrain
  -_TrainHoppingMode? _mode
  +void Function()? onSwitchedTrain
  -AnimationStatus? _lastStatus
  -double? _lastValue
  +Animation<double>? currentTrain
  +AnimationStatus status
  +double value
  -void _statusChangeHandler()
  -void _valueChangeHandler()
  +void dispose()
  +String toString()
}

"animation::animations::TrainHoppingAnimation" o-- "animation::animation::Animation<double>"
"animation::animations::TrainHoppingAnimation" o-- "animation::animations::_TrainHoppingMode"
"animation::animations::TrainHoppingAnimation" o-- "dart::ui::void Function()"
"animation::animations::TrainHoppingAnimation" o-- "animation::animation::AnimationStatus"
"animation::animation::Animation" <|-- "animation::animations::TrainHoppingAnimation"
"animation::listener_helpers::AnimationEagerListenerMixin" <|-- "animation::animations::TrainHoppingAnimation"
"animation::listener_helpers::AnimationLocalListenersMixin" <|-- "animation::animations::TrainHoppingAnimation"
"animation::listener_helpers::AnimationLocalStatusListenersMixin" <|-- "animation::animations::TrainHoppingAnimation"

abstract class "animation::animations::CompoundAnimation" {
  +Animation<T> first
  +Animation<T> next
  -AnimationStatus? _lastStatus
  -T? _lastValue
  +AnimationStatus status
  +void didStartListening()
  +void didStopListening()
  +String toString()
  -void _maybeNotifyStatusListeners()
  -void _maybeNotifyListeners()
}

"animation::animations::CompoundAnimation" o-- "animation::animation::Animation<T>"
"animation::animations::CompoundAnimation" o-- "animation::animation::AnimationStatus"
"animation::animation::Animation" <|-- "animation::animations::CompoundAnimation"
"animation::listener_helpers::AnimationLazyListenerMixin" <|-- "animation::animations::CompoundAnimation"
"animation::listener_helpers::AnimationLocalListenersMixin" <|-- "animation::animations::CompoundAnimation"
"animation::listener_helpers::AnimationLocalStatusListenersMixin" <|-- "animation::animations::CompoundAnimation"

class "animation::animations::AnimationMean" {
  +double value
}

"animation::animations::CompoundAnimation" <|-- "animation::animations::AnimationMean"

class "animation::animations::AnimationMax" {
  +T value
}

"animation::animations::CompoundAnimation" <|-- "animation::animations::AnimationMax"

class "animation::animations::AnimationMin" {
  +T value
}

"animation::animations::CompoundAnimation" <|-- "animation::animations::AnimationMin"

class "animation::animations::_TrainHoppingMode" {
  +int index
  {static} +List<_TrainHoppingMode> values
  {static} +_TrainHoppingMode minimize
  {static} +_TrainHoppingMode maximize
}

"animation::animations::_TrainHoppingMode" o-- "animation::animations::_TrainHoppingMode"
"dart::core::Enum" <|-- "animation::animations::_TrainHoppingMode"

abstract class "animation::animations::AnimationWithParentMixin" {
  +Animation<T> parent
  +AnimationStatus status
  +void addListener()
  +void removeListener()
  +void addStatusListener()
  +void removeStatusListener()
}

"animation::animations::AnimationWithParentMixin" o-- "animation::animation::Animation<T>"
"animation::animations::AnimationWithParentMixin" o-- "animation::animation::AnimationStatus"

class "foundation::consolidate_response::_OutputBuffer" {
  -List<List<int>>? _chunks
  -int _contentLength
  -Uint8List? _bytes
  +Uint8List bytes
  +void add()
  +void close()
}

"foundation::consolidate_response::_OutputBuffer" o-- "dart::typed_data::Uint8List"
"dart::convert::ByteConversionSinkBase" <|-- "foundation::consolidate_response::_OutputBuffer"

class "foundation::memory_allocations::_FieldNames" {
  {static} +String eventType
  {static} +String libraryName
  {static} +String className
}

abstract class "foundation::memory_allocations::ObjectEvent" {
  +Object object
  +Map<Object, Map<String, Object>> toMap()
}

class "foundation::memory_allocations::ObjectCreated" {
  +String library
  +String className
  +Map<Object, Map<String, Object>> toMap()
}

"foundation::memory_allocations::ObjectEvent" <|-- "foundation::memory_allocations::ObjectCreated"

class "foundation::memory_allocations::ObjectDisposed" {
  +Map<Object, Map<String, Object>> toMap()
}

"foundation::memory_allocations::ObjectEvent" <|-- "foundation::memory_allocations::ObjectDisposed"

class "foundation::memory_allocations::MemoryAllocations" {
  {static} +MemoryAllocations instance
  -List<void Function(ObjectEvent)?>? _listeners
  -int _activeDispatchLoops
  -bool _listenersContainNulls
  +bool hasListeners
  +void addListener()
  +void removeListener()
  -void _tryDefragmentListeners()
  -void _checkListenersForEmptiness()
  +void dispatchObjectEvent()
  +void dispatchObjectCreated()
  +void dispatchObjectDisposed()
  -void _subscribeToSdkObjects()
  -void _unSubscribeFromSdkObjects()
  -void _imageOnCreate()
  -void _pictureOnCreate()
  -void _imageOnDispose()
  -void _pictureOnDispose()
}

"foundation::memory_allocations::MemoryAllocations" o-- "foundation::memory_allocations::MemoryAllocations"

class "foundation::annotations::Category" {
  +List<String> sections
}

class "foundation::annotations::DocumentationIcon" {
  +String url
}

class "foundation::annotations::Summary" {
  +String text
}

class "foundation::persistent_hash_map::PersistentHashMap" {
  -_TrieNode? _root
  +PersistentHashMap<K, V> put()
  +V? []()
}

"foundation::persistent_hash_map::PersistentHashMap" o-- "foundation::persistent_hash_map::_TrieNode"

abstract class "foundation::persistent_hash_map::_TrieNode" {
  {static} +int hashBitsPerLevel
  {static} +int hashBitsPerLevelMask
  {static} +int trieIndex()
  +_TrieNode put()
  +Object? get()
}

class "foundation::persistent_hash_map::_FullNode" {
  {static} +int numElements
  +List<Object?> descendants
  +_TrieNode put()
  +Object? get()
}

"foundation::persistent_hash_map::_TrieNode" <|-- "foundation::persistent_hash_map::_FullNode"

class "foundation::persistent_hash_map::_CompressedNode" {
  {static} +_CompressedNode empty
  {static} -List<Object?> _emptyArray
  +int occupiedIndices
  +List<Object?> keyValuePairs
  +_TrieNode put()
  +Object? get()
  -_FullNode _inflate()
  -int _compressedIndex()
  {static} -_TrieNode _resolveCollision()
}

"foundation::persistent_hash_map::_CompressedNode" o-- "foundation::persistent_hash_map::_CompressedNode"
"foundation::persistent_hash_map::_TrieNode" <|-- "foundation::persistent_hash_map::_CompressedNode"

class "foundation::persistent_hash_map::_HashCollisionNode" {
  +int hash
  +List<Object?> keyValuePairs
  +_TrieNode put()
  +Object? get()
  -int _indexOf()
}

"foundation::persistent_hash_map::_TrieNode" <|-- "foundation::persistent_hash_map::_HashCollisionNode"

class "foundation::assertions::PartialStackFrame" {
  {static} +PartialStackFrame asynchronousSuspension
  +Pattern package
  +String className
  +String method
  +bool matches()
}

"foundation::assertions::PartialStackFrame" o-- "foundation::assertions::PartialStackFrame"

abstract class "foundation::assertions::StackFilter" {
  +void filter()
}

class "foundation::assertions::RepetitiveStackFrameFilter" {
  +List<PartialStackFrame> frames
  +String replacement
  +int numFrames
  -List<String> _replacements
  +void filter()
  -bool _matchesFrames()
}

"foundation::assertions::StackFilter" <|-- "foundation::assertions::RepetitiveStackFrameFilter"

abstract class "foundation::assertions::_ErrorDiagnostic" {
  +List<Object> value
  +String toString()
  +String valueToString()
}

"foundation::diagnostics::DiagnosticsProperty" <|-- "foundation::assertions::_ErrorDiagnostic"

class "foundation::assertions::ErrorDescription" {
}

"foundation::assertions::_ErrorDiagnostic" <|-- "foundation::assertions::ErrorDescription"

class "foundation::assertions::ErrorSummary" {
}

"foundation::assertions::_ErrorDiagnostic" <|-- "foundation::assertions::ErrorSummary"

class "foundation::assertions::ErrorHint" {
}

"foundation::assertions::_ErrorDiagnostic" <|-- "foundation::assertions::ErrorHint"

class "foundation::assertions::ErrorSpacer" {
}

"foundation::diagnostics::DiagnosticsProperty" <|-- "foundation::assertions::ErrorSpacer"

class "foundation::assertions::FlutterErrorDetails" {
  {static} +List<Iterable<DiagnosticsNode> Function(Iterable<DiagnosticsNode>)> propertiesTransformers
  +Object exception
  +StackTrace? stack
  +String? library
  +DiagnosticsNode? context
  +Iterable<String> Function(Iterable<String>)? stackFilter
  +Iterable<DiagnosticsNode> Function()? informationCollector
  +bool silent
  +DiagnosticsNode summary
  +FlutterErrorDetails copyWith()
  +String exceptionAsString()
  -Diagnosticable? _exceptionToDiagnosticable()
  +void debugFillProperties()
  +String toStringShort()
  +String toString()
  +DiagnosticsNode toDiagnosticsNode()
}

"foundation::assertions::FlutterErrorDetails" o-- "foundation::diagnostics::DiagnosticsNode"
"foundation::assertions::FlutterErrorDetails" o-- "foundation::basic_types::Iterable<String> Function(Iterable<String>)"
"foundation::assertions::FlutterErrorDetails" o-- "foundation::assertions::Iterable<DiagnosticsNode> Function()"
"foundation::diagnostics::Diagnosticable" <|-- "foundation::assertions::FlutterErrorDetails"

class "foundation::assertions::FlutterError" {
  +List<DiagnosticsNode> diagnostics
  {static} +void Function(FlutterErrorDetails)? onError
  {static} +StackTrace Function(StackTrace) demangleStackTrace
  {static} +void Function(FlutterErrorDetails) presentError
  {static} -int _errorCount
  {static} +int wrapWidth
  {static} -List<StackFilter> _stackFilters
  +String message
  {static} -StackTrace _defaultStackTraceDemangler()
  {static} +void resetErrorCount()
  {static} +void dumpErrorToConsole()
  {static} +void addDefaultStackFilter()
  {static} +Iterable<String> defaultStackFilter()
  +void debugFillProperties()
  +String toStringShort()
  +String toString()
  {static} +void reportError()
}

"foundation::assertions::FlutterError" o-- "foundation::assertions::void Function(FlutterErrorDetails)"
"foundation::assertions::FlutterError" o-- "foundation::assertions::StackTrace Function(StackTrace)"
"dart::core::Error" <|-- "foundation::assertions::FlutterError"
"foundation::diagnostics::DiagnosticableTreeMixin" <|-- "foundation::assertions::FlutterError"
"dart::core::AssertionError" <|-- "foundation::assertions::FlutterError"

class "foundation::assertions::DiagnosticsStackTrace" {
  +bool allowTruncate
  {static} -List<DiagnosticsNode> _applyStackFilter()
  {static} -DiagnosticsNode _createStackFrame()
}

"foundation::diagnostics::DiagnosticsBlock" <|-- "foundation::assertions::DiagnosticsStackTrace"

class "foundation::assertions::_FlutterErrorDetailsNode" {
  +DiagnosticPropertiesBuilder? builder
}

"foundation::assertions::_FlutterErrorDetailsNode" o-- "foundation::diagnostics::DiagnosticPropertiesBuilder"
"foundation::diagnostics::DiagnosticableNode" <|-- "foundation::assertions::_FlutterErrorDetailsNode"

class "foundation::node::AbstractNode" {
  -int _depth
  -Object? _owner
  -AbstractNode? _parent
  +int depth
  +Object? owner
  +bool attached
  +AbstractNode? parent
  #void redepthChild()
  +void redepthChildren()
  +void attach()
  +void detach()
  #void adoptChild()
  #void dropChild()
}

"foundation::node::AbstractNode" o-- "foundation::node::AbstractNode"

class "foundation::_timeline_web::_DomPerformance" {
}

class "foundation::serialization::WriteBuffer" {
  -Uint8List _buffer
  -int _currentSize
  -bool _isDone
  -ByteData _eightBytes
  -Uint8List _eightBytesAsList
  {static} -Uint8List _zeroBuffer
  -void _add()
  -void _append()
  -void _addAll()
  -void _resize()
  +void putUint8()
  +void putUint16()
  +void putUint32()
  +void putInt32()
  +void putInt64()
  +void putFloat64()
  +void putUint8List()
  +void putInt32List()
  +void putInt64List()
  +void putFloat32List()
  +void putFloat64List()
  -void _alignTo()
  +ByteData done()
}

"foundation::serialization::WriteBuffer" o-- "dart::typed_data::Uint8List"
"foundation::serialization::WriteBuffer" o-- "dart::typed_data::ByteData"

class "foundation::serialization::ReadBuffer" {
  +ByteData data
  -int _position
  +bool hasRemaining
  +int getUint8()
  +int getUint16()
  +int getUint32()
  +int getInt32()
  +int getInt64()
  +double getFloat64()
  +Uint8List getUint8List()
  +Int32List getInt32List()
  +Int64List getInt64List()
  +Float32List getFloat32List()
  +Float64List getFloat64List()
  -void _alignTo()
}

"foundation::serialization::ReadBuffer" o-- "dart::typed_data::ByteData"

class "foundation::licenses::LicenseParagraph" {
  +String text
  +int indent
  {static} +int centeredIndent
}

abstract class "foundation::licenses::LicenseEntry" {
  +Iterable<String> packages
  +Iterable<LicenseParagraph> paragraphs
}

class "foundation::licenses::LicenseEntryWithLineBreaks" {
  +List<String> packages
  +String text
  +Iterable<LicenseParagraph> paragraphs
}

"foundation::licenses::LicenseEntry" <|-- "foundation::licenses::LicenseEntryWithLineBreaks"

abstract class "foundation::licenses::LicenseRegistry" {
  {static} -List<Stream<LicenseEntry> Function()>? _collectors
  {static} +Stream<LicenseEntry> licenses
  {static} +void addLicense()
  {static} +void reset()
}

"foundation::licenses::LicenseRegistry" o-- "dart::async::Stream<LicenseEntry>"

class "foundation::licenses::_LicenseEntryWithLineBreaksParserState" {
  +int index
  {static} +List<_LicenseEntryWithLineBreaksParserState> values
  {static} +_LicenseEntryWithLineBreaksParserState beforeParagraph
  {static} +_LicenseEntryWithLineBreaksParserState inParagraph
}

"foundation::licenses::_LicenseEntryWithLineBreaksParserState" o-- "foundation::licenses::_LicenseEntryWithLineBreaksParserState"
"dart::core::Enum" <|-- "foundation::licenses::_LicenseEntryWithLineBreaksParserState"

class "foundation::print::_WordWrapParseMode" {
  +int index
  {static} +List<_WordWrapParseMode> values
  {static} +_WordWrapParseMode inSpace
  {static} +_WordWrapParseMode inWord
  {static} +_WordWrapParseMode atBreak
}

"foundation::print::_WordWrapParseMode" o-- "foundation::print::_WordWrapParseMode"
"dart::core::Enum" <|-- "foundation::print::_WordWrapParseMode"

abstract class "foundation::timeline::FlutterTimeline" {
  {static} -_BlockBuffer _buffer
  {static} -bool _collectionEnabled
  {static} +bool debugCollectionEnabled
  {static} +int now
  {static} -StateError _createReleaseModeNotSupportedError()
  {static} +void startSync()
  {static} +void finishSync()
  {static} +void instantSync()
  {static} +T timeSync()
  {static} +AggregatedTimings debugCollect()
  {static} +void debugReset()
}

"foundation::timeline::FlutterTimeline" o-- "foundation::timeline::_BlockBuffer"

class "foundation::timeline::TimedBlock" {
  +String name
  +double start
  +double end
  +double duration
  +String toString()
}

class "foundation::timeline::AggregatedTimings" {
  +List<TimedBlock> timedBlocks
  +List<AggregatedTimedBlock> aggregatedBlocks
  -List<AggregatedTimedBlock> _computeAggregatedBlocks()
  +AggregatedTimedBlock getAggregated()
}

class "foundation::timeline::AggregatedTimedBlock" {
  +String name
  +double duration
  +int count
  +String toString()
}

class "foundation::timeline::_Float64ListChain" {
  -List<Float64List> _chain
  -Float64List _slice
  -int _pointer
  -int _length
  +int length
  +void add()
  +List<double> extractElements()
}

"foundation::timeline::_Float64ListChain" o-- "dart::typed_data::Float64List"

class "foundation::timeline::_StringListChain" {
  -List<List<String?>> _chain
  -List<String?> _slice
  -int _pointer
  -int _length
  +int length
  +void add()
  +List<String> extractElements()
}

class "foundation::timeline::_BlockBuffer" {
  {static} -int _stackDepth
  {static} -Float64List _startStack
  {static} -List<String?> _nameStack
  {static} -int _stackPointer
  -_Float64ListChain _starts
  -_Float64ListChain _finishes
  -_StringListChain _names
  +List<TimedBlock> computeTimings()
  +void startSync()
  +void finishSync()
}

"foundation::timeline::_BlockBuffer" o-- "dart::typed_data::Float64List"
"foundation::timeline::_BlockBuffer" o-- "foundation::timeline::_Float64ListChain"
"foundation::timeline::_BlockBuffer" o-- "foundation::timeline::_StringListChain"

class "foundation::observer_list::ObserverList" {
  -List<T> _list
  -bool _isDirty
  -HashSet<T> _set
  +Iterator<T> iterator
  +bool isEmpty
  +bool isNotEmpty
  +void add()
  +bool remove()
  +void clear()
  +bool contains()
  +List<T> toList()
}

"foundation::observer_list::ObserverList" o-- "dart::collection::HashSet<T>"
"dart::core::Iterable" <|-- "foundation::observer_list::ObserverList"

class "foundation::observer_list::HashedObserverList" {
  -LinkedHashMap<T, int> _map
  +Iterator<T> iterator
  +bool isEmpty
  +bool isNotEmpty
  +void add()
  +bool remove()
  +bool contains()
}

"foundation::observer_list::HashedObserverList" o-- "dart::collection::LinkedHashMap<T, int>"
"dart::core::Iterable" <|-- "foundation::observer_list::HashedObserverList"

abstract class "foundation::bitfield::BitField" {
  +bool []()
  +void []=()
  +void reset()
}

class "foundation::_bitfield_io::BitField" {
  -int _length
  -int _bits
  {static} -int _smiBits
  {static} -int _allZeros
  {static} -int _allOnes
  +bool []()
  +void []=()
  +void reset()
}

"foundation::bitfield::BitField" <|-- "foundation::_bitfield_io::BitField"

class "foundation::basic_types::CachingIterable" {
  -Iterator<E> _prefillIterator
  -List<E> _results
  +Iterator<E> iterator
  +int length
  +Iterable<T> map()
  +Iterable<E> where()
  +Iterable<T> expand()
  +Iterable<E> take()
  +Iterable<E> takeWhile()
  +Iterable<E> skip()
  +Iterable<E> skipWhile()
  +List<E> toList()
  -void _precacheEntireList()
  -bool _fillNext()
}

"dart::collection::IterableBase" <|-- "foundation::basic_types::CachingIterable"

class "foundation::basic_types::_LazyListIterator" {
  -CachingIterable<E> _owner
  -int _index
  +E current
  +bool moveNext()
}

"foundation::basic_types::_LazyListIterator" o-- "foundation::basic_types::CachingIterable<E>"
"dart::core::Iterator" <|-- "foundation::basic_types::_LazyListIterator"

class "foundation::basic_types::Factory" {
  +T Function() constructor
  +Type type
  +String toString()
}

"foundation::basic_types::Factory" o-- "foundation::basic_types::T Function()"

class "foundation::synchronous_future::SynchronousFuture" {
  -T _value
  +Stream<T> asStream()
  +Future<T> catchError()
  +Future<R> then()
  +Future<T> timeout()
  +Future<T> whenComplete()
}

"dart::async::Future" <|-- "foundation::synchronous_future::SynchronousFuture"

abstract class "foundation::unicode::Unicode" {
  {static} +String LRE
  {static} +String RLE
  {static} +String PDF
  {static} +String LRO
  {static} +String RLO
  {static} +String LRI
  {static} +String RLI
  {static} +String FSI
  {static} +String PDI
  {static} +String LRM
  {static} +String RLM
  {static} +String ALM
}

class "foundation::diagnostics::TextTreeConfiguration" {
  +String prefixLineOne
  +String suffixLineOne
  +String prefixOtherLines
  +String prefixLastChildLineOne
  +String prefixOtherLinesRootNode
  +String propertyPrefixIfChildren
  +String propertyPrefixNoChildren
  +String linkCharacter
  +String childLinkSpace
  +String lineBreak
  +bool lineBreakProperties
  +String beforeName
  +String afterName
  +String afterDescriptionIfBody
  +String afterDescription
  +String beforeProperties
  +String afterProperties
  +String mandatoryAfterProperties
  +String propertySeparator
  +String bodyIndent
  +bool showChildren
  +bool addBlankLineIfNoChildren
  +bool isNameOnOwnLine
  +String footer
  +String mandatoryFooter
  +bool isBlankLineBetweenPropertiesAndChildren
}

class "foundation::diagnostics::_PrefixedStringBuilder" {
  +String prefixLineOne
  -String? _prefixOtherLines
  -String? _nextPrefixOtherLines
  +int? wrapWidth
  -StringBuffer _buffer
  -StringBuffer _currentLine
  -List<int> _wrappableRanges
  -int _numLines
  +String? prefixOtherLines
  +bool requiresMultipleLines
  +bool isCurrentLineEmpty
  +void incrementPrefixOtherLines()
  -void _finalizeLine()
  {static} -Iterable<String> _wordWrapLine()
  +void write()
  -void _updatePrefix()
  -void _writeLine()
  -String? _getCurrentPrefix()
  +void writeRawLines()
  +void writeStretched()
  +String build()
}

class "foundation::diagnostics::_NoDefaultValue" {
}

class "foundation::diagnostics::TextTreeRenderer" {
  -int _wrapWidth
  -int _wrapWidthProperties
  -DiagnosticLevel _minLevel
  -int _maxDescendentsTruncatableNode
  -TextTreeConfiguration? _childTextConfiguration()
  +String render()
  -String _debugRender()
}

"foundation::diagnostics::TextTreeRenderer" o-- "foundation::diagnostics::DiagnosticLevel"

abstract class "foundation::diagnostics::DiagnosticsNode" {
  +String? name
  +bool showSeparator
  +bool showName
  +String? linePrefix
  +DiagnosticsTreeStyle? style
  +DiagnosticLevel level
  +String? emptyBodyDescription
  +Object? value
  +bool allowWrap
  +bool allowNameWrap
  +bool allowTruncate
  -String _separator
  +TextTreeConfiguration? textTreeConfiguration
  +String toDescription()
  +bool isFiltered()
  +List<DiagnosticsNode> getProperties()
  +List<DiagnosticsNode> getChildren()
  +Map<String, String>? toTimelineArguments()
  +Map<String, Object?> toJsonMap()
  {static} +List<Map<String, Object?>> toJsonList()
  +String toString()
  +String toStringDeep()
}

"foundation::diagnostics::DiagnosticsNode" o-- "foundation::diagnostics::DiagnosticsTreeStyle"
"foundation::diagnostics::DiagnosticsNode" o-- "foundation::diagnostics::DiagnosticLevel"
"foundation::diagnostics::DiagnosticsNode" o-- "foundation::diagnostics::TextTreeConfiguration"

class "foundation::diagnostics::MessageProperty" {
}

"foundation::diagnostics::DiagnosticsProperty" <|-- "foundation::diagnostics::MessageProperty"

class "foundation::diagnostics::StringProperty" {
  +bool quoted
  +Map<String, Object?> toJsonMap()
  +String valueToString()
}

"foundation::diagnostics::DiagnosticsProperty" <|-- "foundation::diagnostics::StringProperty"

abstract class "foundation::diagnostics::_NumProperty" {
  +String? unit
  +Map<String, Object?> toJsonMap()
  +String numberToString()
  +String valueToString()
}

"foundation::diagnostics::DiagnosticsProperty" <|-- "foundation::diagnostics::_NumProperty"

class "foundation::diagnostics::DoubleProperty" {
  +String numberToString()
}

"foundation::diagnostics::_NumProperty" <|-- "foundation::diagnostics::DoubleProperty"

class "foundation::diagnostics::IntProperty" {
  +String numberToString()
}

"foundation::diagnostics::_NumProperty" <|-- "foundation::diagnostics::IntProperty"

class "foundation::diagnostics::PercentProperty" {
  +String valueToString()
  +String numberToString()
}

"foundation::diagnostics::DoubleProperty" <|-- "foundation::diagnostics::PercentProperty"

class "foundation::diagnostics::FlagProperty" {
  +String? ifTrue
  +String? ifFalse
  +bool showName
  +DiagnosticLevel level
  +Map<String, Object?> toJsonMap()
  +String valueToString()
}

"foundation::diagnostics::FlagProperty" o-- "foundation::diagnostics::DiagnosticLevel"
"foundation::diagnostics::DiagnosticsProperty" <|-- "foundation::diagnostics::FlagProperty"

class "foundation::diagnostics::IterableProperty" {
  +DiagnosticLevel level
  +String valueToString()
  +Map<String, Object?> toJsonMap()
}

"foundation::diagnostics::IterableProperty" o-- "foundation::diagnostics::DiagnosticLevel"
"foundation::diagnostics::DiagnosticsProperty" <|-- "foundation::diagnostics::IterableProperty"

class "foundation::diagnostics::EnumProperty" {
  +String valueToString()
}

"foundation::diagnostics::DiagnosticsProperty" <|-- "foundation::diagnostics::EnumProperty"

class "foundation::diagnostics::ObjectFlagProperty" {
  +String? ifPresent
  +bool showName
  +DiagnosticLevel level
  +String valueToString()
  +Map<String, Object?> toJsonMap()
}

"foundation::diagnostics::ObjectFlagProperty" o-- "foundation::diagnostics::DiagnosticLevel"
"foundation::diagnostics::DiagnosticsProperty" <|-- "foundation::diagnostics::ObjectFlagProperty"

class "foundation::diagnostics::FlagsSummary" {
  +Map<String, T?> value
  +DiagnosticLevel level
  +String valueToString()
  +Map<String, Object?> toJsonMap()
  -bool _hasNonNullEntry()
  -Iterable<String> _formattedValues()
}

"foundation::diagnostics::FlagsSummary" o-- "foundation::diagnostics::DiagnosticLevel"
"foundation::diagnostics::DiagnosticsProperty" <|-- "foundation::diagnostics::FlagsSummary"

class "foundation::diagnostics::DiagnosticsProperty" {
  -String? _description
  +bool expandableValue
  +bool allowWrap
  +bool allowNameWrap
  +String? ifNull
  +String? ifEmpty
  +String? tooltip
  +bool missingIfNull
  -T? _value
  -bool _valueComputed
  -Object? _exception
  +Object? defaultValue
  -DiagnosticLevel _defaultLevel
  -T? Function()? _computeValue
  +Type propertyType
  +T? value
  +Object? exception
  +bool isInteresting
  +DiagnosticLevel level
  +Map<String, Object?> toJsonMap()
  +String valueToString()
  +String toDescription()
  -String _addTooltip()
  -void _maybeCacheValue()
  +List<DiagnosticsNode> getProperties()
  +List<DiagnosticsNode> getChildren()
}

"foundation::diagnostics::DiagnosticsProperty" o-- "foundation::diagnostics::DiagnosticLevel"
"foundation::diagnostics::DiagnosticsProperty" o-- "foundation::diagnostics::T Function()"
"foundation::diagnostics::DiagnosticsNode" <|-- "foundation::diagnostics::DiagnosticsProperty"

class "foundation::diagnostics::DiagnosticableNode" {
  +T value
  -DiagnosticPropertiesBuilder? _cachedBuilder
  +DiagnosticPropertiesBuilder? builder
  +DiagnosticsTreeStyle style
  +String? emptyBodyDescription
  +List<DiagnosticsNode> getProperties()
  +List<DiagnosticsNode> getChildren()
  +String toDescription()
}

"foundation::diagnostics::DiagnosticableNode" o-- "foundation::diagnostics::DiagnosticPropertiesBuilder"
"foundation::diagnostics::DiagnosticableNode" o-- "foundation::diagnostics::DiagnosticsTreeStyle"
"foundation::diagnostics::DiagnosticsNode" <|-- "foundation::diagnostics::DiagnosticableNode"

class "foundation::diagnostics::DiagnosticableTreeNode" {
  +List<DiagnosticsNode> getChildren()
}

"foundation::diagnostics::DiagnosticableNode" <|-- "foundation::diagnostics::DiagnosticableTreeNode"

class "foundation::diagnostics::DiagnosticPropertiesBuilder" {
  +List<DiagnosticsNode> properties
  +DiagnosticsTreeStyle defaultDiagnosticsTreeStyle
  +String? emptyBodyDescription
  +void add()
}

"foundation::diagnostics::DiagnosticPropertiesBuilder" o-- "foundation::diagnostics::DiagnosticsTreeStyle"

abstract class "foundation::diagnostics::DiagnosticableTree" {
  +String toStringShallow()
  +String toStringDeep()
  +String toStringShort()
  +DiagnosticsNode toDiagnosticsNode()
  #List<DiagnosticsNode> debugDescribeChildren()
}

"foundation::diagnostics::Diagnosticable" <|-- "foundation::diagnostics::DiagnosticableTree"

class "foundation::diagnostics::DiagnosticsBlock" {
  -List<DiagnosticsNode> _children
  -List<DiagnosticsNode> _properties
  +DiagnosticLevel level
  -String _description
  +Object? value
  +bool allowTruncate
  +List<DiagnosticsNode> getChildren()
  +List<DiagnosticsNode> getProperties()
  +String toDescription()
}

"foundation::diagnostics::DiagnosticsBlock" o-- "foundation::diagnostics::DiagnosticLevel"
"foundation::diagnostics::DiagnosticsNode" <|-- "foundation::diagnostics::DiagnosticsBlock"

abstract class "foundation::diagnostics::DiagnosticsSerializationDelegate" {
  +int subtreeDepth
  +bool includeProperties
  +bool expandPropertyValues
  +Map<String, Object?> additionalNodeProperties()
  +List<DiagnosticsNode> filterChildren()
  +List<DiagnosticsNode> filterProperties()
  +List<DiagnosticsNode> truncateNodesList()
  +DiagnosticsSerializationDelegate delegateForNode()
  +DiagnosticsSerializationDelegate copyWith()
}

class "foundation::diagnostics::_DefaultDiagnosticsSerializationDelegate" {
  +bool includeProperties
  +int subtreeDepth
  +bool expandPropertyValues
  +Map<String, Object?> additionalNodeProperties()
  +DiagnosticsSerializationDelegate delegateForNode()
  +List<DiagnosticsNode> filterChildren()
  +List<DiagnosticsNode> filterProperties()
  +List<DiagnosticsNode> truncateNodesList()
  +DiagnosticsSerializationDelegate copyWith()
}

"foundation::diagnostics::DiagnosticsSerializationDelegate" <|-- "foundation::diagnostics::_DefaultDiagnosticsSerializationDelegate"

class "foundation::diagnostics::DiagnosticLevel" {
  +int index
  {static} +List<DiagnosticLevel> values
  {static} +DiagnosticLevel hidden
  {static} +DiagnosticLevel fine
  {static} +DiagnosticLevel debug
  {static} +DiagnosticLevel info
  {static} +DiagnosticLevel warning
  {static} +DiagnosticLevel hint
  {static} +DiagnosticLevel summary
  {static} +DiagnosticLevel error
  {static} +DiagnosticLevel off
}

"foundation::diagnostics::DiagnosticLevel" o-- "foundation::diagnostics::DiagnosticLevel"
"dart::core::Enum" <|-- "foundation::diagnostics::DiagnosticLevel"

class "foundation::diagnostics::DiagnosticsTreeStyle" {
  +int index
  {static} +List<DiagnosticsTreeStyle> values
  {static} +DiagnosticsTreeStyle none
  {static} +DiagnosticsTreeStyle sparse
  {static} +DiagnosticsTreeStyle offstage
  {static} +DiagnosticsTreeStyle dense
  {static} +DiagnosticsTreeStyle transition
  {static} +DiagnosticsTreeStyle error
  {static} +DiagnosticsTreeStyle whitespace
  {static} +DiagnosticsTreeStyle flat
  {static} +DiagnosticsTreeStyle singleLine
  {static} +DiagnosticsTreeStyle errorProperty
  {static} +DiagnosticsTreeStyle shallow
  {static} +DiagnosticsTreeStyle truncateChildren
}

"foundation::diagnostics::DiagnosticsTreeStyle" o-- "foundation::diagnostics::DiagnosticsTreeStyle"
"dart::core::Enum" <|-- "foundation::diagnostics::DiagnosticsTreeStyle"

class "foundation::diagnostics::_WordWrapParseMode" {
  +int index
  {static} +List<_WordWrapParseMode> values
  {static} +_WordWrapParseMode inSpace
  {static} +_WordWrapParseMode inWord
  {static} +_WordWrapParseMode atBreak
}

"foundation::diagnostics::_WordWrapParseMode" o-- "foundation::diagnostics::_WordWrapParseMode"
"dart::core::Enum" <|-- "foundation::diagnostics::_WordWrapParseMode"

abstract class "foundation::diagnostics::Diagnosticable" {
  +String toStringShort()
  +String toString()
  +DiagnosticsNode toDiagnosticsNode()
  #void debugFillProperties()
}

abstract class "foundation::diagnostics::DiagnosticableTreeMixin" {
  +String toString()
  +String toStringShallow()
  +String toStringDeep()
  +String toStringShort()
  +DiagnosticsNode toDiagnosticsNode()
  +List<DiagnosticsNode> debugDescribeChildren()
  +void debugFillProperties()
}

"foundation::diagnostics::DiagnosticableTree" <|-- "foundation::diagnostics::DiagnosticableTreeMixin"

class "foundation::platform::TargetPlatform" {
  +int index
  {static} +List<TargetPlatform> values
  {static} +TargetPlatform android
  {static} +TargetPlatform fuchsia
  {static} +TargetPlatform iOS
  {static} +TargetPlatform linux
  {static} +TargetPlatform macOS
  {static} +TargetPlatform windows
}

"foundation::platform::TargetPlatform" o-- "foundation::platform::TargetPlatform"
"dart::core::Enum" <|-- "foundation::platform::TargetPlatform"

class "foundation::stack_frame::StackFrame" {
  {static} +StackFrame asynchronousSuspension
  {static} +StackFrame stackOverFlowElision
  {static} -RegExp _webNonDebugFramePattern
  +String source
  +int number
  +String packageScheme
  +String package
  +String packagePath
  +int line
  +int column
  +String className
  +String method
  +bool isConstructor
  +int hashCode
  {static} +List<StackFrame> fromStackTrace()
  {static} +List<StackFrame> fromStackString()
  {static} -StackFrame? _tryParseWebFrame()
  {static} -StackFrame? _tryParseWebDebugFrame()
  {static} -StackFrame? _tryParseWebNonDebugFrame()
  {static} +StackFrame? fromStackTraceLine()
  +bool ==()
  +String toString()
}

"foundation::stack_frame::StackFrame" o-- "foundation::stack_frame::StackFrame"

abstract class "foundation::change_notifier::Listenable" {
  +void addListener()
  +void removeListener()
}

abstract class "foundation::change_notifier::ValueListenable" {
  +T value
}

"foundation::change_notifier::Listenable" <|-- "foundation::change_notifier::ValueListenable"

class "foundation::change_notifier::ChangeNotifier" {
  -int _count
  {static} -List<void Function()?> _emptyListeners
  -List<void Function()?> _listeners
  -int _notificationCallStackDepth
  -int _reentrantlyRemovedListeners
  -bool _debugDisposed
  -bool _creationDispatched
  +bool hasListeners
  {static} +bool debugAssertNotDisposed()
  {static} #void maybeDispatchObjectCreation()
  +void addListener()
  -void _removeAt()
  +void removeListener()
  +void dispose()
  #void notifyListeners()
}

"foundation::change_notifier::Listenable" <|-- "foundation::change_notifier::ChangeNotifier"

class "foundation::change_notifier::_MergingListenable" {
  -List<Listenable?> _children
  +void addListener()
  +void removeListener()
  +String toString()
}

"foundation::change_notifier::Listenable" <|-- "foundation::change_notifier::_MergingListenable"

class "foundation::change_notifier::ValueNotifier" {
  -T _value
  +T value
  +String toString()
}

"foundation::change_notifier::ChangeNotifier" <|-- "foundation::change_notifier::ValueNotifier"
"foundation::change_notifier::ValueListenable" <|-- "foundation::change_notifier::ValueNotifier"

abstract class "foundation::change_notifier::" {
}

class "foundation::_bitfield_web::BitField" {
  +bool []()
  +void []=()
  +void reset()
}

"foundation::bitfield::BitField" <|-- "foundation::_bitfield_web::BitField"

class "foundation::service_extensions::FoundationServiceExtensions" {
  +int index
  {static} +List<FoundationServiceExtensions> values
  {static} +FoundationServiceExtensions reassemble
  {static} +FoundationServiceExtensions exit
  {static} +FoundationServiceExtensions connectedVmServiceUri
  {static} +FoundationServiceExtensions activeDevToolsServerAddress
  {static} +FoundationServiceExtensions platformOverride
  {static} +FoundationServiceExtensions brightnessOverride
}

"foundation::service_extensions::FoundationServiceExtensions" o-- "foundation::service_extensions::FoundationServiceExtensions"
"dart::core::Enum" <|-- "foundation::service_extensions::FoundationServiceExtensions"

abstract class "foundation::key::Key" {
}

abstract class "foundation::key::LocalKey" {
}

"foundation::key::Key" <|-- "foundation::key::LocalKey"

class "foundation::key::UniqueKey" {
  +String toString()
}

"foundation::key::LocalKey" <|-- "foundation::key::UniqueKey"

class "foundation::key::ValueKey" {
  +T value
  +int hashCode
  +bool ==()
  +String toString()
}

"foundation::key::LocalKey" <|-- "foundation::key::ValueKey"

class "foundation::key::_TypeLiteral" {
  +Type type
}



abstract class "semantics::semantics_event::SemanticsEvent" {
  +String type
  +Map<String, dynamic> toMap()
  +Map<String, dynamic> getDataMap()
  +String toString()
}

class "semantics::semantics_event::AnnounceSemanticsEvent" {
  +String message
  +TextDirection textDirection
  +Assertiveness assertiveness
  +Map<String, dynamic> getDataMap()
}

"semantics::semantics_event::AnnounceSemanticsEvent" o-- "dart::ui::TextDirection"
"semantics::semantics_event::AnnounceSemanticsEvent" o-- "semantics::semantics_event::Assertiveness"
"semantics::semantics_event::SemanticsEvent" <|-- "semantics::semantics_event::AnnounceSemanticsEvent"

class "semantics::semantics_event::TooltipSemanticsEvent" {
  +String message
  +Map<String, dynamic> getDataMap()
}

"semantics::semantics_event::SemanticsEvent" <|-- "semantics::semantics_event::TooltipSemanticsEvent"

class "semantics::semantics_event::LongPressSemanticsEvent" {
  +Map<String, dynamic> getDataMap()
}

"semantics::semantics_event::SemanticsEvent" <|-- "semantics::semantics_event::LongPressSemanticsEvent"

class "semantics::semantics_event::TapSemanticEvent" {
  +Map<String, dynamic> getDataMap()
}

"semantics::semantics_event::SemanticsEvent" <|-- "semantics::semantics_event::TapSemanticEvent"

class "semantics::semantics_event::FocusSemanticEvent" {
  +Map<String, dynamic> getDataMap()
}

"semantics::semantics_event::SemanticsEvent" <|-- "semantics::semantics_event::FocusSemanticEvent"

class "semantics::semantics_event::Assertiveness" {
  +int index
  {static} +List<Assertiveness> values
  {static} +Assertiveness polite
  {static} +Assertiveness assertive
}

"semantics::semantics_event::Assertiveness" o-- "semantics::semantics_event::Assertiveness"
"dart::core::Enum" <|-- "semantics::semantics_event::Assertiveness"

abstract class "semantics::semantics_service::SemanticsService" {
  {static} +Future<void> announce()
  {static} +Future<void> tooltip()
}

class "semantics::semantics::SemanticsTag" {
  +String name
  +String toString()
}

class "semantics::semantics::ChildSemanticsConfigurationsResult" {
  +List<SemanticsConfiguration> mergeUp
  +List<List<SemanticsConfiguration>> siblingMergeGroups
}

class "semantics::semantics::ChildSemanticsConfigurationsResultBuilder" {
  -List<SemanticsConfiguration> _mergeUp
  -List<List<SemanticsConfiguration>> _siblingMergeGroups
  +void markAsMergeUp()
  +void markAsSiblingMergeGroup()
  +ChildSemanticsConfigurationsResult build()
}

class "semantics::semantics::CustomSemanticsAction" {
  +String? label
  +String? hint
  +SemanticsAction? action
  {static} -int _nextId
  {static} -Map<int, CustomSemanticsAction> _actions
  {static} -Map<CustomSemanticsAction, int> _ids
  +int hashCode
  +bool ==()
  +String toString()
  {static} +int getIdentifier()
  {static} +CustomSemanticsAction? getAction()
}

"semantics::semantics::CustomSemanticsAction" o-- "dart::ui::SemanticsAction"

class "semantics::semantics::AttributedString" {
  +String string
  +List<StringAttribute> attributes
  +int hashCode
  +AttributedString +()
  +bool ==()
  +String toString()
}

class "semantics::semantics::AttributedStringProperty" {
  +bool showWhenEmpty
  +bool isInteresting
  +String valueToString()
}

"foundation::diagnostics::DiagnosticsProperty" <|-- "semantics::semantics::AttributedStringProperty"

class "semantics::semantics::SemanticsData" {
  +int flags
  +int actions
  +AttributedString attributedLabel
  +AttributedString attributedValue
  +AttributedString attributedIncreasedValue
  +AttributedString attributedDecreasedValue
  +AttributedString attributedHint
  +String tooltip
  +TextDirection? textDirection
  +TextSelection? textSelection
  +int? scrollChildCount
  +int? scrollIndex
  +double? scrollPosition
  +double? scrollExtentMax
  +double? scrollExtentMin
  +int? platformViewId
  +int? maxValueLength
  +int? currentValueLength
  +Rect rect
  +Set<SemanticsTag>? tags
  +Matrix4? transform
  +double elevation
  +double thickness
  +List<int>? customSemanticsActionIds
  +String label
  +String value
  +String increasedValue
  +String decreasedValue
  +String hint
  +int hashCode
  +bool hasFlag()
  +bool hasAction()
  +String toStringShort()
  +void debugFillProperties()
  +bool ==()
  {static} -bool _sortedListsEqual()
}

"semantics::semantics::SemanticsData" o-- "semantics::semantics::AttributedString"
"semantics::semantics::SemanticsData" o-- "dart::ui::TextDirection"
"semantics::semantics::SemanticsData" o-- "services::text_editing::TextSelection"
"semantics::semantics::SemanticsData" o-- "dart::ui::Rect"
"semantics::semantics::SemanticsData" o-- "vector_math::vector_math_64::Matrix4"
"foundation::diagnostics::Diagnosticable" <|-- "semantics::semantics::SemanticsData"

class "semantics::semantics::_SemanticsDiagnosticableNode" {
  +DebugSemanticsDumpOrder childOrder
  +List<DiagnosticsNode> getChildren()
}

"semantics::semantics::_SemanticsDiagnosticableNode" o-- "semantics::semantics::DebugSemanticsDumpOrder"
"foundation::diagnostics::DiagnosticableNode" <|-- "semantics::semantics::_SemanticsDiagnosticableNode"

class "semantics::semantics::SemanticsHintOverrides" {
  +String? onTapHint
  +String? onLongPressHint
  +bool isNotEmpty
  +int hashCode
  +bool ==()
  +void debugFillProperties()
}

"foundation::diagnostics::DiagnosticableTree" <|-- "semantics::semantics::SemanticsHintOverrides"

class "semantics::semantics::SemanticsProperties" {
  +bool? enabled
  +bool? checked
  +bool? mixed
  +bool? expanded
  +bool? toggled
  +bool? selected
  +bool? button
  +bool? link
  +bool? header
  +bool? textField
  +bool? slider
  +bool? keyboardKey
  +bool? readOnly
  +bool? focusable
  +bool? focused
  +bool? inMutuallyExclusiveGroup
  +bool? hidden
  +bool? obscured
  +bool? multiline
  +bool? scopesRoute
  +bool? namesRoute
  +bool? image
  +bool? liveRegion
  +int? maxValueLength
  +int? currentValueLength
  +String? label
  +AttributedString? attributedLabel
  +String? value
  +AttributedString? attributedValue
  +String? increasedValue
  +AttributedString? attributedIncreasedValue
  +String? decreasedValue
  +AttributedString? attributedDecreasedValue
  +String? hint
  +AttributedString? attributedHint
  +String? tooltip
  +SemanticsHintOverrides? hintOverrides
  +TextDirection? textDirection
  +SemanticsSortKey? sortKey
  +SemanticsTag? tagForChildren
  +void Function()? onTap
  +void Function()? onLongPress
  +void Function()? onScrollLeft
  +void Function()? onScrollRight
  +void Function()? onScrollUp
  +void Function()? onScrollDown
  +void Function()? onIncrease
  +void Function()? onDecrease
  +void Function()? onCopy
  +void Function()? onCut
  +void Function()? onPaste
  +void Function(bool)? onMoveCursorForwardByCharacter
  +void Function(bool)? onMoveCursorBackwardByCharacter
  +void Function(bool)? onMoveCursorForwardByWord
  +void Function(bool)? onMoveCursorBackwardByWord
  +void Function(TextSelection)? onSetSelection
  +void Function(String)? onSetText
  +void Function()? onDidGainAccessibilityFocus
  +void Function()? onDidLoseAccessibilityFocus
  +void Function()? onDismiss
  +Map<CustomSemanticsAction, void Function()>? customSemanticsActions
  +void debugFillProperties()
  +String toStringShort()
}

"semantics::semantics::SemanticsProperties" o-- "semantics::semantics::AttributedString"
"semantics::semantics::SemanticsProperties" o-- "semantics::semantics::SemanticsHintOverrides"
"semantics::semantics::SemanticsProperties" o-- "dart::ui::TextDirection"
"semantics::semantics::SemanticsProperties" o-- "semantics::semantics::SemanticsSortKey"
"semantics::semantics::SemanticsProperties" o-- "semantics::semantics::SemanticsTag"
"semantics::semantics::SemanticsProperties" o-- "dart::ui::void Function()"
"semantics::semantics::SemanticsProperties" o-- "semantics::semantics::void Function(bool)"
"semantics::semantics::SemanticsProperties" o-- "semantics::semantics::void Function(TextSelection)"
"semantics::semantics::SemanticsProperties" o-- "semantics::semantics::void Function(String)"
"foundation::diagnostics::DiagnosticableTree" <|-- "semantics::semantics::SemanticsProperties"

class "semantics::semantics::SemanticsNode" {
  {static} -int _maxFrameworkAccessibilityIdentifier
  {static} -int _lastIdentifier
  +Key? key
  -int _id
  -void Function()? _showOnScreen
  -Matrix4? _transform
  -Rect _rect
  +Rect? parentSemanticsClipRect
  +Rect? parentPaintClipRect
  +double? elevationAdjustment
  +int? indexInParent
  -bool _isMergedIntoParent
  -bool _areUserActionsBlocked
  -bool _mergeAllDescendantsIntoThisNode
  -List<SemanticsNode>? _children
  -List<SemanticsNode> _debugPreviousSnapshot
  -bool _dead
  -SemanticsOwner? _owner
  -SemanticsNode? _parent
  -int _depth
  -bool _dirty
  -Map<SemanticsAction, void Function(Object?)> _actions
  -Map<CustomSemanticsAction, void Function()> _customSemanticsActions
  -int _actionsAsBits
  +Set<SemanticsTag>? tags
  -int _flags
  -AttributedString _attributedLabel
  -AttributedString _attributedValue
  -AttributedString _attributedIncreasedValue
  -AttributedString _attributedDecreasedValue
  -AttributedString _attributedHint
  -String _tooltip
  -double _elevation
  -double _thickness
  -SemanticsHintOverrides? _hintOverrides
  -TextDirection? _textDirection
  -SemanticsSortKey? _sortKey
  -TextSelection? _textSelection
  -bool? _isMultiline
  -int? _scrollChildCount
  -int? _scrollIndex
  -double? _scrollPosition
  -double? _scrollExtentMax
  -double? _scrollExtentMin
  -int? _platformViewId
  -int? _maxValueLength
  -int? _currentValueLength
  {static} -SemanticsConfiguration _kEmptyConfig
  {static} -Int32List _kEmptyChildList
  {static} -Int32List _kEmptyCustomSemanticsActionsList
  {static} -Float64List _kIdentityTransform
  +int id
  +Matrix4? transform
  +Rect rect
  +bool isInvisible
  +bool isMergedIntoParent
  +bool areUserActionsBlocked
  +bool isPartOfNodeMerging
  +bool mergeAllDescendantsIntoThisNode
  +bool hasChildren
  +int childrenCount
  +SemanticsOwner? owner
  +bool attached
  +SemanticsNode? parent
  +int depth
  -int _effectiveActionsAsBits
  +String label
  +AttributedString attributedLabel
  +String value
  +AttributedString attributedValue
  +String increasedValue
  +AttributedString attributedIncreasedValue
  +String decreasedValue
  +AttributedString attributedDecreasedValue
  +String hint
  +AttributedString attributedHint
  +String tooltip
  +double elevation
  +double thickness
  +SemanticsHintOverrides? hintOverrides
  +TextDirection? textDirection
  +SemanticsSortKey? sortKey
  +TextSelection? textSelection
  +bool? isMultiline
  +int? scrollChildCount
  +int? scrollIndex
  +double? scrollPosition
  +double? scrollExtentMax
  +double? scrollExtentMin
  +int? platformViewId
  +int? maxValueLength
  +int? currentValueLength
  {static} -int _generateNewId()
  -void _replaceChildren()
  +void visitChildren()
  -bool _visitDescendants()
  -void _redepthChild()
  -void _redepthChildren()
  -void _adoptChild()
  -void _dropChild()
  +void attach()
  +void detach()
  -void _markDirty()
  -bool _isDifferentFromCurrentSemanticAnnotation()
  +bool isTagged()
  +bool hasFlag()
  -bool _canPerformAction()
  +void updateWith()
  +SemanticsData getSemanticsData()
  {static} -Float64List _initIdentityTransform()
  -void _addToUpdate()
  -List<SemanticsNode> _childrenInTraversalOrder()
  +void sendEvent()
  -bool _debugIsActionBlocked()
  +String toStringShort()
  +void debugFillProperties()
  +String toStringDeep()
  +DiagnosticsNode toDiagnosticsNode()
  +List<DiagnosticsNode> debugDescribeChildren()
  +List<SemanticsNode> debugListChildrenInOrder()
}

"semantics::semantics::SemanticsNode" o-- "foundation::key::Key"
"semantics::semantics::SemanticsNode" o-- "dart::ui::void Function()"
"semantics::semantics::SemanticsNode" o-- "vector_math::vector_math_64::Matrix4"
"semantics::semantics::SemanticsNode" o-- "dart::ui::Rect"
"semantics::semantics::SemanticsNode" o-- "semantics::semantics::SemanticsOwner"
"semantics::semantics::SemanticsNode" o-- "semantics::semantics::SemanticsNode"
"semantics::semantics::SemanticsNode" o-- "semantics::semantics::AttributedString"
"semantics::semantics::SemanticsNode" o-- "semantics::semantics::SemanticsHintOverrides"
"semantics::semantics::SemanticsNode" o-- "dart::ui::TextDirection"
"semantics::semantics::SemanticsNode" o-- "semantics::semantics::SemanticsSortKey"
"semantics::semantics::SemanticsNode" o-- "services::text_editing::TextSelection"
"semantics::semantics::SemanticsNode" o-- "semantics::semantics::SemanticsConfiguration"
"semantics::semantics::SemanticsNode" o-- "dart::typed_data::Int32List"
"semantics::semantics::SemanticsNode" o-- "dart::typed_data::Float64List"
"foundation::diagnostics::DiagnosticableTreeMixin" <|-- "semantics::semantics::SemanticsNode"

class "semantics::semantics::_BoxEdge" {
  +bool isLeadingEdge
  +double offset
  +SemanticsNode node
  +int compareTo()
}

"semantics::semantics::_BoxEdge" o-- "semantics::semantics::SemanticsNode"
"dart::core::Comparable" <|-- "semantics::semantics::_BoxEdge"

class "semantics::semantics::_SemanticsSortGroup" {
  +double startOffset
  +TextDirection textDirection
  +List<SemanticsNode> nodes
  +int compareTo()
  +List<SemanticsNode> sortedWithinVerticalGroup()
  +List<SemanticsNode> sortedWithinKnot()
}

"semantics::semantics::_SemanticsSortGroup" o-- "dart::ui::TextDirection"
"dart::core::Comparable" <|-- "semantics::semantics::_SemanticsSortGroup"

class "semantics::semantics::_TraversalSortNode" {
  +SemanticsNode node
  +SemanticsSortKey? sortKey
  +int position
  +int compareTo()
}

"semantics::semantics::_TraversalSortNode" o-- "semantics::semantics::SemanticsNode"
"semantics::semantics::_TraversalSortNode" o-- "semantics::semantics::SemanticsSortKey"
"dart::core::Comparable" <|-- "semantics::semantics::_TraversalSortNode"

class "semantics::semantics::SemanticsOwner" {
  +void Function(SemanticsUpdate) onSemanticsUpdate
  -Set<SemanticsNode> _dirtyNodes
  -Map<int, SemanticsNode> _nodes
  -Set<SemanticsNode> _detachedNodes
  +SemanticsNode? rootSemanticsNode
  +void dispose()
  +void sendSemanticsUpdate()
  -void Function(Object?)? _getSemanticsActionHandlerForId()
  +void performAction()
  -void Function(Object?)? _getSemanticsActionHandlerForPosition()
  +void performActionAt()
  +String toString()
}

"semantics::semantics::SemanticsOwner" o-- "semantics::semantics::void Function(SemanticsUpdate)"
"semantics::semantics::SemanticsOwner" o-- "semantics::semantics::SemanticsNode"
"foundation::change_notifier::ChangeNotifier" <|-- "semantics::semantics::SemanticsOwner"

class "semantics::semantics::SemanticsConfiguration" {
  -bool _isSemanticBoundary
  +bool isBlockingUserActions
  +bool explicitChildNodes
  +bool isBlockingSemanticsOfPreviouslyPaintedNodes
  -bool _hasBeenAnnotated
  -Map<SemanticsAction, void Function(Object?)> _actions
  -int _actionsAsBits
  -void Function()? _onTap
  -void Function()? _onLongPress
  -void Function()? _onScrollLeft
  -void Function()? _onDismiss
  -void Function()? _onScrollRight
  -void Function()? _onScrollUp
  -void Function()? _onScrollDown
  -void Function()? _onIncrease
  -void Function()? _onDecrease
  -void Function()? _onCopy
  -void Function()? _onCut
  -void Function()? _onPaste
  -void Function()? _onShowOnScreen
  -void Function(bool)? _onMoveCursorForwardByCharacter
  -void Function(bool)? _onMoveCursorBackwardByCharacter
  -void Function(bool)? _onMoveCursorForwardByWord
  -void Function(bool)? _onMoveCursorBackwardByWord
  -void Function(TextSelection)? _onSetSelection
  -void Function(String)? _onSetText
  -void Function()? _onDidGainAccessibilityFocus
  -void Function()? _onDidLoseAccessibilityFocus
  -ChildSemanticsConfigurationsResult Function(List<SemanticsConfiguration>)? _childConfigurationsDelegate
  -SemanticsSortKey? _sortKey
  -int? _indexInParent
  -int? _scrollChildCount
  -int? _scrollIndex
  -int? _platformViewId
  -int? _maxValueLength
  -int? _currentValueLength
  -bool _isMergingSemanticsOfDescendants
  -Map<CustomSemanticsAction, void Function()> _customSemanticsActions
  -AttributedString _attributedLabel
  -AttributedString _attributedValue
  -AttributedString _attributedIncreasedValue
  -AttributedString _attributedDecreasedValue
  -AttributedString _attributedHint
  -String _tooltip
  -SemanticsHintOverrides? _hintOverrides
  -double _elevation
  -double _thickness
  -TextDirection? _textDirection
  -TextSelection? _textSelection
  -double? _scrollPosition
  -double? _scrollExtentMax
  -double? _scrollExtentMin
  -Set<SemanticsTag>? _tagsForChildren
  -int _flags
  +bool isSemanticBoundary
  +bool hasBeenAnnotated
  -int _effectiveActionsAsBits
  +void Function()? onTap
  +void Function()? onLongPress
  +void Function()? onScrollLeft
  +void Function()? onDismiss
  +void Function()? onScrollRight
  +void Function()? onScrollUp
  +void Function()? onScrollDown
  +void Function()? onIncrease
  +void Function()? onDecrease
  +void Function()? onCopy
  +void Function()? onCut
  +void Function()? onPaste
  +void Function()? onShowOnScreen
  +void Function(bool)? onMoveCursorForwardByCharacter
  +void Function(bool)? onMoveCursorBackwardByCharacter
  +void Function(bool)? onMoveCursorForwardByWord
  +void Function(bool)? onMoveCursorBackwardByWord
  +void Function(TextSelection)? onSetSelection
  +void Function(String)? onSetText
  +void Function()? onDidGainAccessibilityFocus
  +void Function()? onDidLoseAccessibilityFocus
  +ChildSemanticsConfigurationsResult Function(List<SemanticsConfiguration>)? childConfigurationsDelegate
  +SemanticsSortKey? sortKey
  +int? indexInParent
  +int? scrollChildCount
  +int? scrollIndex
  +int? platformViewId
  +int? maxValueLength
  +int? currentValueLength
  +bool isMergingSemanticsOfDescendants
  +Map<CustomSemanticsAction, void Function()> customSemanticsActions
  +String label
  +AttributedString attributedLabel
  +String value
  +AttributedString attributedValue
  +String increasedValue
  +AttributedString attributedIncreasedValue
  +String decreasedValue
  +AttributedString attributedDecreasedValue
  +String hint
  +AttributedString attributedHint
  +String tooltip
  +SemanticsHintOverrides? hintOverrides
  +double elevation
  +double thickness
  +bool scopesRoute
  +bool namesRoute
  +bool isImage
  +bool liveRegion
  +TextDirection? textDirection
  +bool isSelected
  +bool? isExpanded
  +bool? isEnabled
  +bool? isChecked
  +bool? isCheckStateMixed
  +bool? isToggled
  +bool isInMutuallyExclusiveGroup
  +bool isFocusable
  +bool isFocused
  +bool isButton
  +bool isLink
  +bool isHeader
  +bool isSlider
  +bool isKeyboardKey
  +bool isHidden
  +bool isTextField
  +bool isReadOnly
  +bool isObscured
  +bool isMultiline
  +bool hasImplicitScrolling
  +TextSelection? textSelection
  +double? scrollPosition
  +double? scrollExtentMax
  +double? scrollExtentMin
  +Iterable<SemanticsTag>? tagsForChildren
  -void _addAction()
  -void _addArgumentlessAction()
  +void Function(Object?)? getActionHandler()
  -void _onCustomSemanticsAction()
  +bool tagsChildrenWith()
  +void addTagForChildren()
  -void _setFlag()
  -bool _hasFlag()
  +bool isCompatibleWith()
  +void absorb()
  +SemanticsConfiguration copy()
}

"semantics::semantics::SemanticsConfiguration" o-- "dart::ui::void Function()"
"semantics::semantics::SemanticsConfiguration" o-- "semantics::semantics::void Function(bool)"
"semantics::semantics::SemanticsConfiguration" o-- "semantics::semantics::void Function(TextSelection)"
"semantics::semantics::SemanticsConfiguration" o-- "semantics::semantics::void Function(String)"
"semantics::semantics::SemanticsConfiguration" o-- "semantics::semantics::ChildSemanticsConfigurationsResult Function(List<SemanticsConfiguration>)"
"semantics::semantics::SemanticsConfiguration" o-- "semantics::semantics::SemanticsSortKey"
"semantics::semantics::SemanticsConfiguration" o-- "semantics::semantics::AttributedString"
"semantics::semantics::SemanticsConfiguration" o-- "semantics::semantics::SemanticsHintOverrides"
"semantics::semantics::SemanticsConfiguration" o-- "dart::ui::TextDirection"
"semantics::semantics::SemanticsConfiguration" o-- "services::text_editing::TextSelection"

abstract class "semantics::semantics::SemanticsSortKey" {
  +String? name
  +int compareTo()
  #int doCompare()
  +void debugFillProperties()
}

"foundation::diagnostics::Diagnosticable" <|-- "semantics::semantics::SemanticsSortKey"
"dart::core::Comparable" <|-- "semantics::semantics::SemanticsSortKey"

class "semantics::semantics::OrdinalSortKey" {
  +double order
  +int doCompare()
  +void debugFillProperties()
}

"semantics::semantics::SemanticsSortKey" <|-- "semantics::semantics::OrdinalSortKey"

class "semantics::semantics::DebugSemanticsDumpOrder" {
  +int index
  {static} +List<DebugSemanticsDumpOrder> values
  {static} +DebugSemanticsDumpOrder inverseHitTest
  {static} +DebugSemanticsDumpOrder traversalOrder
}

"semantics::semantics::DebugSemanticsDumpOrder" o-- "semantics::semantics::DebugSemanticsDumpOrder"
"dart::core::Enum" <|-- "semantics::semantics::DebugSemanticsDumpOrder"

class "semantics::binding::SemanticsHandle" {
  -void Function() _onDispose
  +void dispose()
}

"semantics::binding::SemanticsHandle" o-- "dart::ui::void Function()"

abstract class "semantics::binding::SemanticsBinding" {
  {static} -SemanticsBinding? _instance
  -ValueNotifier<bool> _semanticsEnabled
  -int _outstandingHandles
  -SemanticsHandle? _semanticsHandle
  -AccessibilityFeatures _accessibilityFeatures
  {static} +SemanticsBinding instance
  +bool semanticsEnabled
  +int debugOutstandingSemanticsHandles
  +AccessibilityFeatures accessibilityFeatures
  +bool disableAnimations
  +void initInstances()
  +void addSemanticsEnabledListener()
  +void removeSemanticsEnabledListener()
  +SemanticsHandle ensureSemantics()
  -void _didDisposeSemanticsHandle()
  -void _handleSemanticsEnabledChanged()
  -void _handleSemanticsActionEvent()
  #void performSemanticsAction()
  #void handleAccessibilityFeaturesChanged()
  +SemanticsUpdateBuilder createSemanticsUpdateBuilder()
}

"semantics::binding::SemanticsBinding" o-- "semantics::binding::SemanticsBinding"
"semantics::binding::SemanticsBinding" o-- "foundation::change_notifier::ValueNotifier<bool>"
"semantics::binding::SemanticsBinding" o-- "semantics::binding::SemanticsHandle"
"semantics::binding::SemanticsBinding" o-- "dart::ui::AccessibilityFeatures"

abstract class "painting::text_scaler::TextScaler" {
  {static} +TextScaler noScaling
  +double textScaleFactor
  +double scale()
  +TextScaler clamp()
}

"painting::text_scaler::TextScaler" o-- "painting::text_scaler::TextScaler"

class "painting::text_scaler::_LinearTextScaler" {
  +double textScaleFactor
  +int hashCode
  +double scale()
  +TextScaler clamp()
  +bool ==()
  +String toString()
}

"painting::text_scaler::TextScaler" <|-- "painting::text_scaler::_LinearTextScaler"

class "painting::text_scaler::_ClampedTextScaler" {
  +TextScaler scaler
  +double minScale
  +double maxScale
  +double textScaleFactor
  +int hashCode
  +double scale()
  +TextScaler clamp()
  +bool ==()
}

"painting::text_scaler::_ClampedTextScaler" o-- "painting::text_scaler::TextScaler"
"painting::text_scaler::TextScaler" <|-- "painting::text_scaler::_ClampedTextScaler"

class "painting::borders::BorderSide" {
  +Color color
  +double width
  +BorderStyle style
  {static} +BorderSide none
  +double strokeAlign
  {static} +double strokeAlignInside
  {static} +double strokeAlignCenter
  {static} +double strokeAlignOutside
  +double strokeInset
  +double strokeOutset
  +double strokeOffset
  +int hashCode
  {static} +BorderSide merge()
  +BorderSide copyWith()
  +BorderSide scale()
  +Paint toPaint()
  {static} +bool canMerge()
  {static} +BorderSide lerp()
  +bool ==()
  +String toStringShort()
  +void debugFillProperties()
}

"painting::borders::BorderSide" o-- "dart::ui::Color"
"painting::borders::BorderSide" o-- "painting::borders::BorderStyle"
"painting::borders::BorderSide" o-- "painting::borders::BorderSide"
"foundation::diagnostics::Diagnosticable" <|-- "painting::borders::BorderSide"

abstract class "painting::borders::ShapeBorder" {
  +EdgeInsetsGeometry dimensions
  +bool preferPaintInterior
  #ShapeBorder? add()
  +ShapeBorder +()
  +ShapeBorder scale()
  #ShapeBorder? lerpFrom()
  #ShapeBorder? lerpTo()
  {static} +ShapeBorder? lerp()
  +Path getOuterPath()
  +Path getInnerPath()
  +void paintInterior()
  +void paint()
  +String toString()
}

"painting::borders::ShapeBorder" o-- "painting::edge_insets::EdgeInsetsGeometry"

abstract class "painting::borders::OutlinedBorder" {
  +BorderSide side
  +EdgeInsetsGeometry dimensions
  +OutlinedBorder copyWith()
  +ShapeBorder scale()
  +ShapeBorder? lerpFrom()
  +ShapeBorder? lerpTo()
  {static} +OutlinedBorder? lerp()
}

"painting::borders::OutlinedBorder" o-- "painting::borders::BorderSide"
"painting::borders::OutlinedBorder" o-- "painting::edge_insets::EdgeInsetsGeometry"
"painting::borders::ShapeBorder" <|-- "painting::borders::OutlinedBorder"

class "painting::borders::_CompoundBorder" {
  +List<ShapeBorder> borders
  +EdgeInsetsGeometry dimensions
  +bool preferPaintInterior
  +int hashCode
  +ShapeBorder add()
  +ShapeBorder scale()
  +ShapeBorder? lerpFrom()
  +ShapeBorder? lerpTo()
  {static} +_CompoundBorder lerp()
  +Path getInnerPath()
  +Path getOuterPath()
  +void paintInterior()
  +void paint()
  +bool ==()
  +String toString()
}

"painting::borders::_CompoundBorder" o-- "painting::edge_insets::EdgeInsetsGeometry"
"painting::borders::ShapeBorder" <|-- "painting::borders::_CompoundBorder"

class "painting::borders::BorderStyle" {
  +int index
  {static} +List<BorderStyle> values
  {static} +BorderStyle none
  {static} +BorderStyle solid
}

"painting::borders::BorderStyle" o-- "painting::borders::BorderStyle"
"dart::core::Enum" <|-- "painting::borders::BorderStyle"

abstract class "painting::box_border::BoxBorder" {
  +BorderSide top
  +BorderSide bottom
  +bool isUniform
  +bool preferPaintInterior
  +BoxBorder? add()
  {static} +BoxBorder? lerp()
  +Path getInnerPath()
  +Path getOuterPath()
  +void paintInterior()
  +void paint()
  {static} -void _paintUniformBorderWithRadius()
  {static} +void paintNonUniformBorder()
  {static} -RRect _inflateRRect()
  {static} -RRect _deflateRRect()
  {static} -void _paintUniformBorderWithCircle()
  {static} -void _paintUniformBorderWithRectangle()
}

"painting::box_border::BoxBorder" o-- "painting::borders::BorderSide"
"painting::borders::ShapeBorder" <|-- "painting::box_border::BoxBorder"

class "painting::box_border::Border" {
  +BorderSide top
  +BorderSide right
  +BorderSide bottom
  +BorderSide left
  +EdgeInsetsGeometry dimensions
  +bool isUniform
  -bool _colorIsUniform
  -bool _widthIsUniform
  -bool _styleIsUniform
  -bool _strokeAlignIsUniform
  -bool _hasHairlineBorder
  +int hashCode
  {static} +Border merge()
  -Set<Color> _distinctVisibleColors()
  +Border? add()
  +Border scale()
  +ShapeBorder? lerpFrom()
  +ShapeBorder? lerpTo()
  {static} +Border? lerp()
  +void paint()
  +bool ==()
  +String toString()
}

"painting::box_border::Border" o-- "painting::borders::BorderSide"
"painting::box_border::Border" o-- "painting::edge_insets::EdgeInsetsGeometry"
"painting::box_border::BoxBorder" <|-- "painting::box_border::Border"

class "painting::box_border::BorderDirectional" {
  +BorderSide top
  +BorderSide start
  +BorderSide end
  +BorderSide bottom
  +EdgeInsetsGeometry dimensions
  +bool isUniform
  -bool _colorIsUniform
  -bool _widthIsUniform
  -bool _styleIsUniform
  -bool _strokeAlignIsUniform
  -bool _hasHairlineBorder
  +int hashCode
  {static} +BorderDirectional merge()
  -Set<Color> _distinctVisibleColors()
  +BoxBorder? add()
  +BorderDirectional scale()
  +ShapeBorder? lerpFrom()
  +ShapeBorder? lerpTo()
  {static} +BorderDirectional? lerp()
  +void paint()
  +bool ==()
  +String toString()
}

"painting::box_border::BorderDirectional" o-- "painting::borders::BorderSide"
"painting::box_border::BorderDirectional" o-- "painting::edge_insets::EdgeInsetsGeometry"
"painting::box_border::BoxBorder" <|-- "painting::box_border::BorderDirectional"

class "painting::box_border::BoxShape" {
  +int index
  {static} +List<BoxShape> values
  {static} +BoxShape rectangle
  {static} +BoxShape circle
}

"painting::box_border::BoxShape" o-- "painting::box_border::BoxShape"
"dart::core::Enum" <|-- "painting::box_border::BoxShape"

class "painting::image_provider::ImageConfiguration" {
  +AssetBundle? bundle
  +double? devicePixelRatio
  +Locale? locale
  +TextDirection? textDirection
  +Size? size
  +TargetPlatform? platform
  {static} +ImageConfiguration empty
  +int hashCode
  +ImageConfiguration copyWith()
  +bool ==()
  +String toString()
}

"painting::image_provider::ImageConfiguration" o-- "services::asset_bundle::AssetBundle"
"painting::image_provider::ImageConfiguration" o-- "dart::ui::Locale"
"painting::image_provider::ImageConfiguration" o-- "dart::ui::TextDirection"
"painting::image_provider::ImageConfiguration" o-- "dart::ui::Size"
"painting::image_provider::ImageConfiguration" o-- "foundation::platform::TargetPlatform"
"painting::image_provider::ImageConfiguration" o-- "painting::image_provider::ImageConfiguration"

abstract class "painting::image_provider::ImageProvider" {
  +ImageStream resolve()
  #ImageStream createStream()
  +Future<ImageCacheStatus?> obtainCacheStatus()
  -void _createErrorHandlerAndKey()
  #void resolveStreamForKey()
  +Future<bool> evict()
  +Future<T> obtainKey()
  #ImageStreamCompleter loadBuffer()
  #ImageStreamCompleter loadImage()
  +String toString()
}

class "painting::image_provider::_AbstractImageStreamCompleter" {
}

"painting::image_stream::ImageStreamCompleter" <|-- "painting::image_provider::_AbstractImageStreamCompleter"

class "painting::image_provider::AssetBundleImageKey" {
  +AssetBundle bundle
  +String name
  +double scale
  +int hashCode
  +bool ==()
  +String toString()
}

"painting::image_provider::AssetBundleImageKey" o-- "services::asset_bundle::AssetBundle"

abstract class "painting::image_provider::AssetBundleImageProvider" {
  +ImageStreamCompleter loadImage()
  +ImageStreamCompleter loadBuffer()
  -Future<Codec> _loadAsync()
}

"painting::image_provider::ImageProvider" <|-- "painting::image_provider::AssetBundleImageProvider"

class "painting::image_provider::ResizeImageKey" {
  -Object _providerCacheKey
  -ResizeImagePolicy _policy
  -int? _width
  -int? _height
  -bool _allowUpscaling
  +int hashCode
  +bool ==()
}

"painting::image_provider::ResizeImageKey" o-- "painting::image_provider::ResizeImagePolicy"

class "painting::image_provider::ResizeImage" {
  +ImageProvider<Object> imageProvider
  +int? width
  +int? height
  +ResizeImagePolicy policy
  +bool allowUpscaling
  {static} +ImageProvider<Object> resizeIfNeeded()
  +ImageStreamCompleter loadBuffer()
  +ImageStreamCompleter loadImage()
  -void _configureErrorListener()
  +Future<ResizeImageKey> obtainKey()
}

"painting::image_provider::ResizeImage" o-- "painting::image_provider::ImageProvider<Object>"
"painting::image_provider::ResizeImage" o-- "painting::image_provider::ResizeImagePolicy"
"painting::image_provider::ImageProvider" <|-- "painting::image_provider::ResizeImage"

abstract class "painting::image_provider::NetworkImage" {
  +String url
  +double scale
  +Map<String, String>? headers
  +ImageStreamCompleter loadBuffer()
  +ImageStreamCompleter loadImage()
}

"painting::image_provider::ImageProvider" <|-- "painting::image_provider::NetworkImage"

class "painting::image_provider::FileImage" {
  +File file
  +double scale
  +int hashCode
  +Future<FileImage> obtainKey()
  +ImageStreamCompleter loadBuffer()
  #ImageStreamCompleter loadImage()
  -Future<Codec> _loadAsync()
  +bool ==()
  +String toString()
}

"painting::image_provider::FileImage" o-- "dart::io::File"
"painting::image_provider::ImageProvider" <|-- "painting::image_provider::FileImage"

class "painting::image_provider::MemoryImage" {
  +Uint8List bytes
  +double scale
  +int hashCode
  +Future<MemoryImage> obtainKey()
  +ImageStreamCompleter loadBuffer()
  +ImageStreamCompleter loadImage()
  -Future<Codec> _loadAsync()
  +bool ==()
  +String toString()
}

"painting::image_provider::MemoryImage" o-- "dart::typed_data::Uint8List"
"painting::image_provider::ImageProvider" <|-- "painting::image_provider::MemoryImage"

class "painting::image_provider::ExactAssetImage" {
  +String assetName
  +double scale
  +AssetBundle? bundle
  +String? package
  +String keyName
  +int hashCode
  +Future<AssetBundleImageKey> obtainKey()
  +bool ==()
  +String toString()
}

"painting::image_provider::ExactAssetImage" o-- "services::asset_bundle::AssetBundle"
"painting::image_provider::AssetBundleImageProvider" <|-- "painting::image_provider::ExactAssetImage"

class "painting::image_provider::_ErrorImageCompleter" {
}

"painting::image_stream::ImageStreamCompleter" <|-- "painting::image_provider::_ErrorImageCompleter"

class "painting::image_provider::NetworkImageLoadException" {
  +int statusCode
  -String _message
  +Uri uri
  +String toString()
}

"dart::core::Exception" <|-- "painting::image_provider::NetworkImageLoadException"

class "painting::image_provider::ResizeImagePolicy" {
  +int index
  {static} +List<ResizeImagePolicy> values
  {static} +ResizeImagePolicy exact
  {static} +ResizeImagePolicy fit
}

"painting::image_provider::ResizeImagePolicy" o-- "painting::image_provider::ResizeImagePolicy"
"dart::core::Enum" <|-- "painting::image_provider::ResizeImagePolicy"

class "painting::box_shadow::BoxShadow" {
  +double spreadRadius
  +BlurStyle blurStyle
  +int hashCode
  +Paint toPaint()
  +BoxShadow scale()
  {static} +BoxShadow? lerp()
  {static} +List<BoxShadow>? lerpList()
  +bool ==()
  +String toString()
}

"painting::box_shadow::BoxShadow" o-- "dart::ui::BlurStyle"
"dart::ui::Shadow" <|-- "painting::box_shadow::BoxShadow"

class "painting::_network_image_web::NetworkImage" {
  +String url
  +double scale
  +Map<String, String>? headers
  +int hashCode
  +Future<NetworkImage> obtainKey()
  +ImageStreamCompleter loadBuffer()
  +ImageStreamCompleter loadImage()
  -Iterable<DiagnosticsNode> Function()? _imageStreamInformationCollector()
  -Future<Codec> _loadAsync()
  +bool ==()
  +String toString()
}

"painting::image_provider::ImageProvider" <|-- "painting::_network_image_web::NetworkImage"
"painting::image_provider::NetworkImage" <|-- "painting::_network_image_web::NetworkImage"

abstract class "painting::border_radius::BorderRadiusGeometry" {
  -Radius _topLeft
  -Radius _topRight
  -Radius _bottomLeft
  -Radius _bottomRight
  -Radius _topStart
  -Radius _topEnd
  -Radius _bottomStart
  -Radius _bottomEnd
  +int hashCode
  +BorderRadiusGeometry subtract()
  +BorderRadiusGeometry add()
  +BorderRadiusGeometry unary-()
  +BorderRadiusGeometry *()
  +BorderRadiusGeometry /()
  +BorderRadiusGeometry ~/()
  +BorderRadiusGeometry %()
  {static} +BorderRadiusGeometry? lerp()
  +BorderRadius resolve()
  +String toString()
  +bool ==()
}

"painting::border_radius::BorderRadiusGeometry" o-- "dart::ui::Radius"

class "painting::border_radius::BorderRadius" {
  {static} +BorderRadius zero
  +Radius topLeft
  +Radius topRight
  +Radius bottomLeft
  +Radius bottomRight
  -Radius _topLeft
  -Radius _topRight
  -Radius _bottomLeft
  -Radius _bottomRight
  -Radius _topStart
  -Radius _topEnd
  -Radius _bottomStart
  -Radius _bottomEnd
  +BorderRadius copyWith()
  +RRect toRRect()
  +BorderRadiusGeometry subtract()
  +BorderRadiusGeometry add()
  +BorderRadius -()
  +BorderRadius +()
  +BorderRadius unary-()
  +BorderRadius *()
  +BorderRadius /()
  +BorderRadius ~/()
  +BorderRadius %()
  {static} +BorderRadius? lerp()
  +BorderRadius resolve()
}

"painting::border_radius::BorderRadius" o-- "painting::border_radius::BorderRadius"
"painting::border_radius::BorderRadius" o-- "dart::ui::Radius"
"painting::border_radius::BorderRadiusGeometry" <|-- "painting::border_radius::BorderRadius"

class "painting::border_radius::BorderRadiusDirectional" {
  {static} +BorderRadiusDirectional zero
  +Radius topStart
  +Radius topEnd
  +Radius bottomStart
  +Radius bottomEnd
  -Radius _topStart
  -Radius _topEnd
  -Radius _bottomStart
  -Radius _bottomEnd
  -Radius _topLeft
  -Radius _topRight
  -Radius _bottomLeft
  -Radius _bottomRight
  +BorderRadiusGeometry subtract()
  +BorderRadiusGeometry add()
  +BorderRadiusDirectional -()
  +BorderRadiusDirectional +()
  +BorderRadiusDirectional unary-()
  +BorderRadiusDirectional *()
  +BorderRadiusDirectional /()
  +BorderRadiusDirectional ~/()
  +BorderRadiusDirectional %()
  {static} +BorderRadiusDirectional? lerp()
  +BorderRadius resolve()
}

"painting::border_radius::BorderRadiusDirectional" o-- "painting::border_radius::BorderRadiusDirectional"
"painting::border_radius::BorderRadiusDirectional" o-- "dart::ui::Radius"
"painting::border_radius::BorderRadiusGeometry" <|-- "painting::border_radius::BorderRadiusDirectional"

class "painting::border_radius::_MixedBorderRadius" {
  -Radius _topLeft
  -Radius _topRight
  -Radius _bottomLeft
  -Radius _bottomRight
  -Radius _topStart
  -Radius _topEnd
  -Radius _bottomStart
  -Radius _bottomEnd
  +_MixedBorderRadius unary-()
  +_MixedBorderRadius *()
  +_MixedBorderRadius /()
  +_MixedBorderRadius ~/()
  +_MixedBorderRadius %()
  +BorderRadius resolve()
}

"painting::border_radius::_MixedBorderRadius" o-- "dart::ui::Radius"
"painting::border_radius::BorderRadiusGeometry" <|-- "painting::border_radius::_MixedBorderRadius"

class "painting::continuous_rectangle_border::ContinuousRectangleBorder" {
  +BorderRadiusGeometry borderRadius
  +EdgeInsetsGeometry dimensions
  +int hashCode
  +ShapeBorder scale()
  +ShapeBorder? lerpFrom()
  +ShapeBorder? lerpTo()
  -double _clampToShortest()
  -Path _getPath()
  +Path getInnerPath()
  +Path getOuterPath()
  +ContinuousRectangleBorder copyWith()
  +void paint()
  +bool ==()
  +String toString()
}

"painting::continuous_rectangle_border::ContinuousRectangleBorder" o-- "painting::border_radius::BorderRadiusGeometry"
"painting::continuous_rectangle_border::ContinuousRectangleBorder" o-- "painting::edge_insets::EdgeInsetsGeometry"
"painting::borders::OutlinedBorder" <|-- "painting::continuous_rectangle_border::ContinuousRectangleBorder"

class "painting::colors::HSVColor" {
  +double alpha
  +double hue
  +double saturation
  +double value
  +int hashCode
  +HSVColor withAlpha()
  +HSVColor withHue()
  +HSVColor withSaturation()
  +HSVColor withValue()
  +Color toColor()
  -HSVColor _scaleAlpha()
  {static} +HSVColor? lerp()
  +bool ==()
  +String toString()
}

class "painting::colors::HSLColor" {
  +double alpha
  +double hue
  +double saturation
  +double lightness
  +int hashCode
  +HSLColor withAlpha()
  +HSLColor withHue()
  +HSLColor withSaturation()
  +HSLColor withLightness()
  +Color toColor()
  -HSLColor _scaleAlpha()
  {static} +HSLColor? lerp()
  +bool ==()
  +String toString()
}

class "painting::colors::ColorSwatch" {
  -Map<T, Color> _swatch
  +int hashCode
  +Color? []()
  +bool ==()
  +String toString()
  {static} +ColorSwatch<T>? lerp()
}

"dart::ui::Color" <|-- "painting::colors::ColorSwatch"

class "painting::colors::ColorProperty" {
  +Map<String, Object?> toJsonMap()
}

"foundation::diagnostics::DiagnosticsProperty" <|-- "painting::colors::ColorProperty"

class "painting::text_style::TextStyle" {
  +bool inherit
  +Color? color
  +Color? backgroundColor
  +String? fontFamily
  -List<String>? _fontFamilyFallback
  -String? _package
  +double? fontSize
  +FontWeight? fontWeight
  +FontStyle? fontStyle
  +double? letterSpacing
  +double? wordSpacing
  +TextBaseline? textBaseline
  +double? height
  +TextLeadingDistribution? leadingDistribution
  +Locale? locale
  +Paint? foreground
  +Paint? background
  +TextDecoration? decoration
  +Color? decorationColor
  +TextDecorationStyle? decorationStyle
  +double? decorationThickness
  +String? debugLabel
  +List<Shadow>? shadows
  +List<FontFeature>? fontFeatures
  +List<FontVariation>? fontVariations
  +TextOverflow? overflow
  +List<String>? fontFamilyFallback
  -String? _fontFamily
  +int hashCode
  +TextStyle copyWith()
  +TextStyle apply()
  +TextStyle merge()
  {static} +TextStyle? lerp()
  +TextStyle getTextStyle()
  +ParagraphStyle getParagraphStyle()
  +RenderComparison compareTo()
  +bool ==()
  +String toStringShort()
  +void debugFillProperties()
}

"painting::text_style::TextStyle" o-- "dart::ui::Color"
"painting::text_style::TextStyle" o-- "dart::ui::FontWeight"
"painting::text_style::TextStyle" o-- "dart::ui::FontStyle"
"painting::text_style::TextStyle" o-- "dart::ui::TextBaseline"
"painting::text_style::TextStyle" o-- "dart::ui::TextLeadingDistribution"
"painting::text_style::TextStyle" o-- "dart::ui::Locale"
"painting::text_style::TextStyle" o-- "dart::ui::Paint"
"painting::text_style::TextStyle" o-- "dart::ui::TextDecoration"
"painting::text_style::TextStyle" o-- "dart::ui::TextDecorationStyle"
"painting::text_style::TextStyle" o-- "painting::text_painter::TextOverflow"
"foundation::diagnostics::Diagnosticable" <|-- "painting::text_style::TextStyle"

class "painting::image_resolution::AssetImage" {
  +String assetName
  +AssetBundle? bundle
  +String? package
  {static} -double _naturalResolution
  +String keyName
  +int hashCode
  +Future<AssetBundleImageKey> obtainKey()
  -dynamic _chooseVariant()
  -dynamic _findBestVariant()
  +bool ==()
  +String toString()
}

"painting::image_resolution::AssetImage" o-- "services::asset_bundle::AssetBundle"
"painting::image_provider::AssetBundleImageProvider" <|-- "painting::image_resolution::AssetImage"

class "painting::circle_border::CircleBorder" {
  +double eccentricity
  +bool preferPaintInterior
  +int hashCode
  +ShapeBorder scale()
  +ShapeBorder? lerpFrom()
  +ShapeBorder? lerpTo()
  +Path getInnerPath()
  +Path getOuterPath()
  +void paintInterior()
  +CircleBorder copyWith()
  +void paint()
  -Rect _adjustRect()
  +bool ==()
  +String toString()
}

"painting::borders::OutlinedBorder" <|-- "painting::circle_border::CircleBorder"

class "painting::star_border::StarBorder" {
  +double points
  -double? _innerRadiusRatio
  +double pointRounding
  +double valleyRounding
  -double _rotationRadians
  +double squash
  +double innerRadiusRatio
  +double rotation
  +int hashCode
  +ShapeBorder scale()
  -ShapeBorder? _twoPhaseLerp()
  +ShapeBorder? lerpFrom()
  +ShapeBorder? lerpTo()
  +StarBorder copyWith()
  +Path getInnerPath()
  +Path getOuterPath()
  +void paint()
  +bool ==()
  +String toString()
}

"painting::borders::OutlinedBorder" <|-- "painting::star_border::StarBorder"

class "painting::star_border::_PointInfo" {
  +Offset valley
  +Offset point
  +Offset valleyArc1
  +Offset pointArc1
  +Offset pointArc2
  +Offset valleyArc2
}

"painting::star_border::_PointInfo" o-- "dart::ui::Offset"

class "painting::star_border::_StarGenerator" {
  +double points
  +double innerRadiusRatio
  +double pointRounding
  +double valleyRounding
  +double rotation
  +double squash
  +Path generate()
  -double _generatePoints()
  -void _drawPoints()
  -double _getWeight()
  -double _getAngle()
}

class "painting::beveled_rectangle_border::BeveledRectangleBorder" {
  +BorderRadiusGeometry borderRadius
  +int hashCode
  +ShapeBorder scale()
  +ShapeBorder? lerpFrom()
  +ShapeBorder? lerpTo()
  +BeveledRectangleBorder copyWith()
  -Path _getPath()
  +Path getInnerPath()
  +Path getOuterPath()
  +void paint()
  +bool ==()
  +String toString()
}

"painting::beveled_rectangle_border::BeveledRectangleBorder" o-- "painting::border_radius::BorderRadiusGeometry"
"painting::borders::OutlinedBorder" <|-- "painting::beveled_rectangle_border::BeveledRectangleBorder"

class "painting::gradient::_ColorsAndStops" {
  +List<Color> colors
  +List<double> stops
}

abstract class "painting::gradient::GradientTransform" {
  +Matrix4? transform()
}

class "painting::gradient::GradientRotation" {
  +double radians
  +int hashCode
  +Matrix4 transform()
  +bool ==()
  +String toString()
}

"painting::gradient::GradientTransform" <|-- "painting::gradient::GradientRotation"

abstract class "painting::gradient::Gradient" {
  +List<Color> colors
  +List<double>? stops
  +GradientTransform? transform
  -List<double> _impliedStops()
  +Shader createShader()
  +Gradient scale()
  #Gradient? lerpFrom()
  #Gradient? lerpTo()
  {static} +Gradient? lerp()
  -Float64List? _resolveTransform()
}

"painting::gradient::Gradient" o-- "painting::gradient::GradientTransform"

class "painting::gradient::LinearGradient" {
  +AlignmentGeometry begin
  +AlignmentGeometry end
  +TileMode tileMode
  +int hashCode
  +Shader createShader()
  +LinearGradient scale()
  +Gradient? lerpFrom()
  +Gradient? lerpTo()
  {static} +LinearGradient? lerp()
  +bool ==()
  +String toString()
}

"painting::gradient::LinearGradient" o-- "painting::alignment::AlignmentGeometry"
"painting::gradient::LinearGradient" o-- "dart::ui::TileMode"
"painting::gradient::Gradient" <|-- "painting::gradient::LinearGradient"

class "painting::gradient::RadialGradient" {
  +AlignmentGeometry center
  +double radius
  +TileMode tileMode
  +AlignmentGeometry? focal
  +double focalRadius
  +int hashCode
  +Shader createShader()
  +RadialGradient scale()
  +Gradient? lerpFrom()
  +Gradient? lerpTo()
  {static} +RadialGradient? lerp()
  +bool ==()
  +String toString()
}

"painting::gradient::RadialGradient" o-- "painting::alignment::AlignmentGeometry"
"painting::gradient::RadialGradient" o-- "dart::ui::TileMode"
"painting::gradient::Gradient" <|-- "painting::gradient::RadialGradient"

class "painting::gradient::SweepGradient" {
  +AlignmentGeometry center
  +double startAngle
  +double endAngle
  +TileMode tileMode
  +int hashCode
  +Shader createShader()
  +SweepGradient scale()
  +Gradient? lerpFrom()
  +Gradient? lerpTo()
  {static} +SweepGradient? lerp()
  +bool ==()
  +String toString()
}

"painting::gradient::SweepGradient" o-- "painting::alignment::AlignmentGeometry"
"painting::gradient::SweepGradient" o-- "dart::ui::TileMode"
"painting::gradient::Gradient" <|-- "painting::gradient::SweepGradient"

abstract class "painting::placeholder_span::PlaceholderSpan" {
  {static} +int placeholderCodeUnit
  +PlaceholderAlignment alignment
  +TextBaseline? baseline
  +void computeToPlainText()
  +void computeSemanticsInformation()
  +void describeSemantics()
  +void debugFillProperties()
  +bool debugAssertIsValid()
}

"painting::placeholder_span::PlaceholderSpan" o-- "dart::ui::PlaceholderAlignment"
"painting::placeholder_span::PlaceholderSpan" o-- "dart::ui::TextBaseline"
"painting::inline_span::InlineSpan" <|-- "painting::placeholder_span::PlaceholderSpan"

abstract class "painting::shader_warm_up::ShaderWarmUp" {
  +Size size
  #Future<void> warmUpOnCanvas()
  +Future<void> execute()
}

"painting::shader_warm_up::ShaderWarmUp" o-- "dart::ui::Size"

abstract class "painting::alignment::AlignmentGeometry" {
  -double _x
  -double _start
  -double _y
  +int hashCode
  +AlignmentGeometry add()
  +AlignmentGeometry unary-()
  +AlignmentGeometry *()
  +AlignmentGeometry /()
  +AlignmentGeometry ~/()
  +AlignmentGeometry %()
  {static} +AlignmentGeometry? lerp()
  +Alignment resolve()
  +String toString()
  +bool ==()
}

class "painting::alignment::Alignment" {
  +double x
  +double y
  {static} +Alignment topLeft
  {static} +Alignment topCenter
  {static} +Alignment topRight
  {static} +Alignment centerLeft
  {static} +Alignment center
  {static} +Alignment centerRight
  {static} +Alignment bottomLeft
  {static} +Alignment bottomCenter
  {static} +Alignment bottomRight
  -double _x
  -double _start
  -double _y
  +AlignmentGeometry add()
  +Alignment -()
  +Alignment +()
  +Alignment unary-()
  +Alignment *()
  +Alignment /()
  +Alignment ~/()
  +Alignment %()
  +Offset alongOffset()
  +Offset alongSize()
  +Offset withinRect()
  +Rect inscribe()
  {static} +Alignment? lerp()
  +Alignment resolve()
  {static} -String _stringify()
  +String toString()
}

"painting::alignment::Alignment" o-- "painting::alignment::Alignment"
"painting::alignment::AlignmentGeometry" <|-- "painting::alignment::Alignment"

class "painting::alignment::AlignmentDirectional" {
  +double start
  +double y
  {static} +AlignmentDirectional topStart
  {static} +AlignmentDirectional topCenter
  {static} +AlignmentDirectional topEnd
  {static} +AlignmentDirectional centerStart
  {static} +AlignmentDirectional center
  {static} +AlignmentDirectional centerEnd
  {static} +AlignmentDirectional bottomStart
  {static} +AlignmentDirectional bottomCenter
  {static} +AlignmentDirectional bottomEnd
  -double _x
  -double _start
  -double _y
  +AlignmentGeometry add()
  +AlignmentDirectional -()
  +AlignmentDirectional +()
  +AlignmentDirectional unary-()
  +AlignmentDirectional *()
  +AlignmentDirectional /()
  +AlignmentDirectional ~/()
  +AlignmentDirectional %()
  {static} +AlignmentDirectional? lerp()
  +Alignment resolve()
  {static} -String _stringify()
  +String toString()
}

"painting::alignment::AlignmentDirectional" o-- "painting::alignment::AlignmentDirectional"
"painting::alignment::AlignmentGeometry" <|-- "painting::alignment::AlignmentDirectional"

class "painting::alignment::_MixedAlignment" {
  -double _x
  -double _start
  -double _y
  +_MixedAlignment unary-()
  +_MixedAlignment *()
  +_MixedAlignment /()
  +_MixedAlignment ~/()
  +_MixedAlignment %()
  +Alignment resolve()
}

"painting::alignment::AlignmentGeometry" <|-- "painting::alignment::_MixedAlignment"

class "painting::alignment::TextAlignVertical" {
  +double y
  {static} +TextAlignVertical top
  {static} +TextAlignVertical center
  {static} +TextAlignVertical bottom
  +String toString()
}

"painting::alignment::TextAlignVertical" o-- "painting::alignment::TextAlignVertical"

class "painting::linear_border::LinearBorderEdge" {
  +double size
  +double alignment
  +int hashCode
  {static} +LinearBorderEdge? lerp()
  +bool ==()
  +String toString()
}

class "painting::linear_border::LinearBorder" {
  {static} +LinearBorder none
  +LinearBorderEdge? start
  +LinearBorderEdge? end
  +LinearBorderEdge? top
  +LinearBorderEdge? bottom
  +EdgeInsetsGeometry dimensions
  +int hashCode
  +LinearBorder scale()
  +ShapeBorder? lerpFrom()
  +ShapeBorder? lerpTo()
  +LinearBorder copyWith()
  +Path getInnerPath()
  +Path getOuterPath()
  +void paint()
  +bool ==()
  +String toString()
}

"painting::linear_border::LinearBorder" o-- "painting::linear_border::LinearBorder"
"painting::linear_border::LinearBorder" o-- "painting::linear_border::LinearBorderEdge"
"painting::linear_border::LinearBorder" o-- "painting::edge_insets::EdgeInsetsGeometry"
"painting::borders::OutlinedBorder" <|-- "painting::linear_border::LinearBorder"

class "painting::text_span::TextSpan" {
  +String? text
  +List<InlineSpan>? children
  +GestureRecognizer? recognizer
  +MouseCursor mouseCursor
  +void Function(PointerEnterEvent)? onEnter
  +void Function(PointerExitEvent)? onExit
  +String? semanticsLabel
  +Locale? locale
  +bool? spellOut
  +MouseCursor cursor
  +bool validForMouseTracker
  +int hashCode
  +void handleEvent()
  +void build()
  +bool visitChildren()
  +bool visitDirectChildren()
  +InlineSpan? getSpanForPositionVisitor()
  +void computeToPlainText()
  +void computeSemanticsInformation()
  +int? codeUnitAtVisitor()
  +void describeSemantics()
  +bool debugAssertIsValid()
  +RenderComparison compareTo()
  +bool ==()
  +String toStringShort()
  +void debugFillProperties()
  +List<DiagnosticsNode> debugDescribeChildren()
}

"painting::text_span::TextSpan" o-- "gestures::recognizer::GestureRecognizer"
"painting::text_span::TextSpan" o-- "services::mouse_cursor::MouseCursor"
"painting::text_span::TextSpan" o-- "services::mouse_tracking::void Function(PointerEnterEvent)"
"painting::text_span::TextSpan" o-- "services::mouse_tracking::void Function(PointerExitEvent)"
"painting::text_span::TextSpan" o-- "dart::ui::Locale"
"painting::inline_span::InlineSpan" <|-- "painting::text_span::TextSpan"
"gestures::hit_test::HitTestTarget" <|-- "painting::text_span::TextSpan"
"services::mouse_tracking::MouseTrackerAnnotation" <|-- "painting::text_span::TextSpan"

class "painting::debug::ImageSizeInfo" {
  +String? source
  +Size displaySize
  +Size imageSize
  +int displaySizeInBytes
  +int decodedSizeInBytes
  +int hashCode
  -int _sizeToBytes()
  +Map<String, Object?> toJson()
  +bool ==()
  +String toString()
}

"painting::debug::ImageSizeInfo" o-- "dart::ui::Size"

class "painting::flutter_logo::FlutterLogoDecoration" {
  +Color textColor
  +FlutterLogoStyle style
  +EdgeInsets margin
  -double _position
  -double _opacity
  -bool _inTransition
  +bool isComplex
  +int hashCode
  +bool debugAssertIsValid()
  {static} +FlutterLogoDecoration? lerp()
  +FlutterLogoDecoration? lerpFrom()
  +FlutterLogoDecoration? lerpTo()
  +bool hitTest()
  +BoxPainter createBoxPainter()
  +Path getClipPath()
  +bool ==()
  +void debugFillProperties()
}

"painting::flutter_logo::FlutterLogoDecoration" o-- "dart::ui::Color"
"painting::flutter_logo::FlutterLogoDecoration" o-- "painting::flutter_logo::FlutterLogoStyle"
"painting::flutter_logo::FlutterLogoDecoration" o-- "painting::edge_insets::EdgeInsets"
"painting::decoration::Decoration" <|-- "painting::flutter_logo::FlutterLogoDecoration"

class "painting::flutter_logo::_FlutterLogoPainter" {
  -FlutterLogoDecoration _config
  -TextPainter _textPainter
  -Rect _textBoundingRect
  -void _prepareText()
  -void _paintLogo()
  +void paint()
}

"painting::flutter_logo::_FlutterLogoPainter" o-- "painting::flutter_logo::FlutterLogoDecoration"
"painting::flutter_logo::_FlutterLogoPainter" o-- "painting::text_painter::TextPainter"
"painting::flutter_logo::_FlutterLogoPainter" o-- "dart::ui::Rect"
"painting::decoration::BoxPainter" <|-- "painting::flutter_logo::_FlutterLogoPainter"

class "painting::flutter_logo::FlutterLogoStyle" {
  +int index
  {static} +List<FlutterLogoStyle> values
  {static} +FlutterLogoStyle markOnly
  {static} +FlutterLogoStyle horizontal
  {static} +FlutterLogoStyle stacked
}

"painting::flutter_logo::FlutterLogoStyle" o-- "painting::flutter_logo::FlutterLogoStyle"
"dart::core::Enum" <|-- "painting::flutter_logo::FlutterLogoStyle"

class "painting::basic_types::RenderComparison" {
  +int index
  {static} +List<RenderComparison> values
  {static} +RenderComparison identical
  {static} +RenderComparison metadata
  {static} +RenderComparison paint
  {static} +RenderComparison layout
}

"painting::basic_types::RenderComparison" o-- "painting::basic_types::RenderComparison"
"dart::core::Enum" <|-- "painting::basic_types::RenderComparison"

class "painting::basic_types::Axis" {
  +int index
  {static} +List<Axis> values
  {static} +Axis horizontal
  {static} +Axis vertical
}

"painting::basic_types::Axis" o-- "painting::basic_types::Axis"
"dart::core::Enum" <|-- "painting::basic_types::Axis"

class "painting::basic_types::VerticalDirection" {
  +int index
  {static} +List<VerticalDirection> values
  {static} +VerticalDirection up
  {static} +VerticalDirection down
}

"painting::basic_types::VerticalDirection" o-- "painting::basic_types::VerticalDirection"
"dart::core::Enum" <|-- "painting::basic_types::VerticalDirection"

class "painting::basic_types::AxisDirection" {
  +int index
  {static} +List<AxisDirection> values
  {static} +AxisDirection up
  {static} +AxisDirection right
  {static} +AxisDirection down
  {static} +AxisDirection left
}

"painting::basic_types::AxisDirection" o-- "painting::basic_types::AxisDirection"
"dart::core::Enum" <|-- "painting::basic_types::AxisDirection"

class "painting::box_decoration::BoxDecoration" {
  +Color? color
  +DecorationImage? image
  +BoxBorder? border
  +BorderRadiusGeometry? borderRadius
  +List<BoxShadow>? boxShadow
  +Gradient? gradient
  +BlendMode? backgroundBlendMode
  +BoxShape shape
  +EdgeInsetsGeometry padding
  +bool isComplex
  +int hashCode
  +BoxDecoration copyWith()
  +bool debugAssertIsValid()
  +Path getClipPath()
  +BoxDecoration scale()
  +BoxDecoration? lerpFrom()
  +BoxDecoration? lerpTo()
  {static} +BoxDecoration? lerp()
  +bool ==()
  +void debugFillProperties()
  +bool hitTest()
  +BoxPainter createBoxPainter()
}

"painting::box_decoration::BoxDecoration" o-- "dart::ui::Color"
"painting::box_decoration::BoxDecoration" o-- "painting::decoration_image::DecorationImage"
"painting::box_decoration::BoxDecoration" o-- "painting::box_border::BoxBorder"
"painting::box_decoration::BoxDecoration" o-- "painting::border_radius::BorderRadiusGeometry"
"painting::box_decoration::BoxDecoration" o-- "painting::gradient::Gradient"
"painting::box_decoration::BoxDecoration" o-- "dart::ui::BlendMode"
"painting::box_decoration::BoxDecoration" o-- "painting::box_border::BoxShape"
"painting::box_decoration::BoxDecoration" o-- "painting::edge_insets::EdgeInsetsGeometry"
"painting::decoration::Decoration" <|-- "painting::box_decoration::BoxDecoration"

class "painting::box_decoration::_BoxDecorationPainter" {
  -BoxDecoration _decoration
  -Paint? _cachedBackgroundPaint
  -Rect? _rectForCachedBackgroundPaint
  -DecorationImagePainter? _imagePainter
  -Paint _getBackgroundPaint()
  -void _paintBox()
  -void _paintShadows()
  -void _paintBackgroundColor()
  -void _paintBackgroundImage()
  +void dispose()
  +void paint()
  +String toString()
}

"painting::box_decoration::_BoxDecorationPainter" o-- "painting::box_decoration::BoxDecoration"
"painting::box_decoration::_BoxDecorationPainter" o-- "dart::ui::Paint"
"painting::box_decoration::_BoxDecorationPainter" o-- "dart::ui::Rect"
"painting::box_decoration::_BoxDecorationPainter" o-- "painting::decoration_image::DecorationImagePainter"
"painting::decoration::BoxPainter" <|-- "painting::box_decoration::_BoxDecorationPainter"

class "painting::inline_span::Accumulator" {
  -int _value
  +int value
  +void increment()
}

class "painting::inline_span::InlineSpanSemanticsInformation" {
  {static} +InlineSpanSemanticsInformation placeholder
  +String text
  +String? semanticsLabel
  +GestureRecognizer? recognizer
  +bool isPlaceholder
  +bool requiresOwnNode
  +List<StringAttribute> stringAttributes
  +int hashCode
  +bool ==()
  +String toString()
}

"painting::inline_span::InlineSpanSemanticsInformation" o-- "painting::inline_span::InlineSpanSemanticsInformation"
"painting::inline_span::InlineSpanSemanticsInformation" o-- "gestures::recognizer::GestureRecognizer"

abstract class "painting::inline_span::InlineSpan" {
  +TextStyle? style
  +int hashCode
  +void build()
  +bool visitChildren()
  +bool visitDirectChildren()
  +InlineSpan? getSpanForPosition()
  #InlineSpan? getSpanForPositionVisitor()
  +String toPlainText()
  +List<InlineSpanSemanticsInformation> getSemanticsInformation()
  #void computeSemanticsInformation()
  #void computeToPlainText()
  +int? codeUnitAt()
  #int? codeUnitAtVisitor()
  +bool debugAssertIsValid()
  +RenderComparison compareTo()
  +bool ==()
  +void debugFillProperties()
}

"painting::inline_span::InlineSpan" o-- "painting::text_style::TextStyle"
"foundation::diagnostics::DiagnosticableTree" <|-- "painting::inline_span::InlineSpan"

class "painting::fractional_offset::FractionalOffset" {
  {static} +FractionalOffset topLeft
  {static} +FractionalOffset topCenter
  {static} +FractionalOffset topRight
  {static} +FractionalOffset centerLeft
  {static} +FractionalOffset center
  {static} +FractionalOffset centerRight
  {static} +FractionalOffset bottomLeft
  {static} +FractionalOffset bottomCenter
  {static} +FractionalOffset bottomRight
  +double dx
  +double dy
  +Alignment -()
  +Alignment +()
  +FractionalOffset unary-()
  +FractionalOffset *()
  +FractionalOffset /()
  +FractionalOffset ~/()
  +FractionalOffset %()
  {static} +FractionalOffset? lerp()
  +String toString()
}

"painting::fractional_offset::FractionalOffset" o-- "painting::fractional_offset::FractionalOffset"
"painting::alignment::Alignment" <|-- "painting::fractional_offset::FractionalOffset"

class "painting::box_fit::FittedSizes" {
  +Size source
  +Size destination
}

"painting::box_fit::FittedSizes" o-- "dart::ui::Size"

class "painting::box_fit::BoxFit" {
  +int index
  {static} +List<BoxFit> values
  {static} +BoxFit fill
  {static} +BoxFit contain
  {static} +BoxFit cover
  {static} +BoxFit fitWidth
  {static} +BoxFit fitHeight
  {static} +BoxFit none
  {static} +BoxFit scaleDown
}

"painting::box_fit::BoxFit" o-- "painting::box_fit::BoxFit"
"dart::core::Enum" <|-- "painting::box_fit::BoxFit"

abstract class "painting::notched_shapes::NotchedShape" {
  +Path getOuterPath()
}

class "painting::notched_shapes::CircularNotchedRectangle" {
  +Path getOuterPath()
}

"painting::notched_shapes::NotchedShape" <|-- "painting::notched_shapes::CircularNotchedRectangle"

class "painting::notched_shapes::AutomaticNotchedShape" {
  +ShapeBorder host
  +ShapeBorder? guest
  +Path getOuterPath()
}

"painting::notched_shapes::AutomaticNotchedShape" o-- "painting::borders::ShapeBorder"
"painting::notched_shapes::NotchedShape" <|-- "painting::notched_shapes::AutomaticNotchedShape"

abstract class "painting::matrix_utils::MatrixUtils" {
  {static} -Float64List _minMax
  {static} +Offset? getAsTranslation()
  {static} +double? getAsScale()
  {static} +bool matrixEquals()
  {static} +bool isIdentity()
  {static} +Offset transformPoint()
  {static} -Rect _safeTransformRect()
  {static} -void _accumulate()
  {static} +Rect transformRect()
  {static} -double _min4()
  {static} -double _max4()
  {static} +Rect inverseTransformRect()
  {static} +Matrix4 createCylindricalProjectionTransform()
  {static} +Matrix4 forceToPoint()
}

"painting::matrix_utils::MatrixUtils" o-- "dart::typed_data::Float64List"

class "painting::matrix_utils::TransformProperty" {
  +String valueToString()
}

"foundation::diagnostics::DiagnosticsProperty" <|-- "painting::matrix_utils::TransformProperty"

class "painting::stadium_border::StadiumBorder" {
  +bool preferPaintInterior
  +int hashCode
  +ShapeBorder scale()
  +ShapeBorder? lerpFrom()
  +ShapeBorder? lerpTo()
  +StadiumBorder copyWith()
  +Path getInnerPath()
  +Path getOuterPath()
  +void paintInterior()
  +void paint()
  +bool ==()
  +String toString()
}

"painting::borders::OutlinedBorder" <|-- "painting::stadium_border::StadiumBorder"

class "painting::stadium_border::_StadiumToCircleBorder" {
  +double circularity
  +double eccentricity
  +bool preferPaintInterior
  +int hashCode
  +ShapeBorder scale()
  +ShapeBorder? lerpFrom()
  +ShapeBorder? lerpTo()
  -Rect _adjustRect()
  -BorderRadius _adjustBorderRadius()
  +Path getInnerPath()
  +Path getOuterPath()
  +void paintInterior()
  +_StadiumToCircleBorder copyWith()
  +void paint()
  +bool ==()
  +String toString()
}

"painting::borders::OutlinedBorder" <|-- "painting::stadium_border::_StadiumToCircleBorder"

class "painting::stadium_border::_StadiumToRoundedRectangleBorder" {
  +BorderRadiusGeometry borderRadius
  +double rectilinearity
  +bool preferPaintInterior
  +int hashCode
  +ShapeBorder scale()
  +ShapeBorder? lerpFrom()
  +ShapeBorder? lerpTo()
  -BorderRadiusGeometry _adjustBorderRadius()
  +Path getInnerPath()
  +Path getOuterPath()
  +void paintInterior()
  +_StadiumToRoundedRectangleBorder copyWith()
  +void paint()
  +bool ==()
  +String toString()
}

"painting::stadium_border::_StadiumToRoundedRectangleBorder" o-- "painting::border_radius::BorderRadiusGeometry"
"painting::borders::OutlinedBorder" <|-- "painting::stadium_border::_StadiumToRoundedRectangleBorder"

class "painting::_network_image_io::NetworkImage" {
  +String url
  +double scale
  +Map<String, String>? headers
  {static} -HttpClient _sharedHttpClient
  {static} -HttpClient _httpClient
  +int hashCode
  +Future<NetworkImage> obtainKey()
  +ImageStreamCompleter loadBuffer()
  +ImageStreamCompleter loadImage()
  -Future<Codec> _loadAsync()
  +bool ==()
  +String toString()
}

"painting::_network_image_io::NetworkImage" o-- "dart::_http::HttpClient"
"painting::image_provider::ImageProvider" <|-- "painting::_network_image_io::NetworkImage"
"painting::image_provider::NetworkImage" <|-- "painting::_network_image_io::NetworkImage"

class "painting::text_painter::PlaceholderDimensions" {
  {static} +PlaceholderDimensions empty
  +Size size
  +PlaceholderAlignment alignment
  +double? baselineOffset
  +TextBaseline? baseline
  +int hashCode
  +bool ==()
  +String toString()
}

"painting::text_painter::PlaceholderDimensions" o-- "painting::text_painter::PlaceholderDimensions"
"painting::text_painter::PlaceholderDimensions" o-- "dart::ui::Size"
"painting::text_painter::PlaceholderDimensions" o-- "dart::ui::PlaceholderAlignment"
"painting::text_painter::PlaceholderDimensions" o-- "dart::ui::TextBaseline"

class "painting::text_painter::WordBoundary" {
  -InlineSpan _text
  -Paragraph _paragraph
  +dynamic moveByWordBoundary
  +TextRange getTextBoundaryAt()
  {static} -int _codePointFromSurrogates()
  -int? _codePointAt()
  {static} -bool _isNewline()
  -bool _skipSpacesAndPunctuations()
}

"painting::text_painter::WordBoundary" o-- "painting::inline_span::InlineSpan"
"painting::text_painter::WordBoundary" o-- "dart::ui::Paragraph"

class "painting::text_painter::_UntilTextBoundary" {
  -dynamic _predicate
  -dynamic _textBoundary
  +int? getLeadingTextBoundaryAt()
  +int? getTrailingTextBoundaryAt()
}

class "painting::text_painter::_TextLayout" {
  -Paragraph _paragraph
  +bool debugDisposed
  +double width
  +double height
  +double minIntrinsicLineExtent
  +double maxIntrinsicLineExtent
  +double longestLine
  +double getDistanceToBaseline()
}

"painting::text_painter::_TextLayout" o-- "dart::ui::Paragraph"

class "painting::text_painter::_TextPainterLayoutCacheWithOffset" {
  +_TextLayout layout
  +double contentWidth
  +double textAlignment
  -List<TextBox>? _cachedInlinePlaceholderBoxes
  -List<LineMetrics>? _cachedLineMetrics
  -TextPosition? _previousCaretPosition
  +Offset paintOffset
  +Paragraph paragraph
  +List<TextBox> inlinePlaceholderBoxes
  +List<LineMetrics> lineMetrics
  {static} -double _contentWidthFor()
  -bool _resizeToFit()
}

"painting::text_painter::_TextPainterLayoutCacheWithOffset" o-- "painting::text_painter::_TextLayout"
"painting::text_painter::_TextPainterLayoutCacheWithOffset" o-- "dart::ui::TextPosition"
"painting::text_painter::_TextPainterLayoutCacheWithOffset" o-- "dart::ui::Offset"
"painting::text_painter::_TextPainterLayoutCacheWithOffset" o-- "dart::ui::Paragraph"

class "painting::text_painter::_CaretMetrics" {
}

class "painting::text_painter::_LineCaretMetrics" {
  +Offset offset
  +TextDirection writingDirection
  +double fullHeight
}

"painting::text_painter::_LineCaretMetrics" o-- "dart::ui::Offset"
"painting::text_painter::_LineCaretMetrics" o-- "dart::ui::TextDirection"
"painting::text_painter::_CaretMetrics" <|-- "painting::text_painter::_LineCaretMetrics"

class "painting::text_painter::_EmptyLineCaretMetrics" {
  +double lineVerticalOffset
}

"painting::text_painter::_CaretMetrics" <|-- "painting::text_painter::_EmptyLineCaretMetrics"

class "painting::text_painter::TextPainter" {
  -bool _debugNeedsRelayout
  -_TextPainterLayoutCacheWithOffset? _layoutCache
  -bool _rebuildParagraphForPaint
  -double _inputWidth
  -StackTrace? _debugMarkNeedsLayoutCallStack
  -InlineSpan? _text
  -String? _cachedPlainText
  -TextAlign _textAlign
  -TextDirection? _textDirection
  -TextScaler _textScaler
  -String? _ellipsis
  -Locale? _locale
  -int? _maxLines
  -StrutStyle? _strutStyle
  -TextWidthBasis _textWidthBasis
  -TextHeightBehavior? _textHeightBehavior
  -List<PlaceholderDimensions>? _placeholderDimensions
  -Paragraph? _layoutTemplate
  {static} -int _zwjUtf16
  -_CaretMetrics _caretMetrics
  -bool _disposed
  -bool _debugAssertTextLayoutIsValid
  +InlineSpan? text
  +String plainText
  +TextAlign textAlign
  +TextDirection? textDirection
  +double textScaleFactor
  +TextScaler textScaler
  +String? ellipsis
  +Locale? locale
  +int? maxLines
  +StrutStyle? strutStyle
  +TextWidthBasis textWidthBasis
  +TextHeightBehavior? textHeightBehavior
  +List<TextBox>? inlinePlaceholderBoxes
  +double preferredLineHeight
  +double minIntrinsicWidth
  +double maxIntrinsicWidth
  +double width
  +double height
  +Size size
  +bool didExceedMaxLines
  +WordBoundary wordBoundaries
  +bool debugDisposed
  {static} +double computeWidth()
  {static} +double computeMaxIntrinsicWidth()
  +void markNeedsLayout()
  +void setPlaceholderDimensions()
  -ParagraphStyle _createParagraphStyle()
  -Paragraph _createLayoutTemplate()
  +double computeDistanceToActualBaseline()
  -Paragraph _createParagraph()
  +void layout()
  +void paint()
  {static} -bool _isUTF16()
  {static} +bool isHighSurrogate()
  {static} +bool isLowSurrogate()
  {static} -bool _isUnicodeDirectionality()
  +int? getOffsetAfter()
  +int? getOffsetBefore()
  -_CaretMetrics? _getMetricsFromUpstream()
  -_CaretMetrics? _getMetricsFromDownstream()
  {static} -double _computePaintOffsetFraction()
  +Offset getOffsetForCaret()
  +double? getFullHeightForCaret()
  -_CaretMetrics _computeCaretMetrics()
  +List<TextBox> getBoxesForSelection()
  +TextPosition getPositionForOffset()
  +TextRange getWordBoundary()
  +TextRange getLineBoundary()
  {static} -LineMetrics _shiftLineMetrics()
  {static} -TextBox _shiftTextBox()
  +List<LineMetrics> computeLineMetrics()
  +void dispose()
}

"painting::text_painter::TextPainter" o-- "painting::text_painter::_TextPainterLayoutCacheWithOffset"
"painting::text_painter::TextPainter" o-- "painting::inline_span::InlineSpan"
"painting::text_painter::TextPainter" o-- "dart::ui::TextAlign"
"painting::text_painter::TextPainter" o-- "dart::ui::TextDirection"
"painting::text_painter::TextPainter" o-- "painting::text_scaler::TextScaler"
"painting::text_painter::TextPainter" o-- "dart::ui::Locale"
"painting::text_painter::TextPainter" o-- "painting::strut_style::StrutStyle"
"painting::text_painter::TextPainter" o-- "painting::text_painter::TextWidthBasis"
"painting::text_painter::TextPainter" o-- "dart::ui::TextHeightBehavior"
"painting::text_painter::TextPainter" o-- "dart::ui::Paragraph"
"painting::text_painter::TextPainter" o-- "painting::text_painter::_CaretMetrics"
"painting::text_painter::TextPainter" o-- "dart::ui::Size"
"painting::text_painter::TextPainter" o-- "painting::text_painter::WordBoundary"

class "painting::text_painter::TextOverflow" {
  +int index
  {static} +List<TextOverflow> values
  {static} +TextOverflow clip
  {static} +TextOverflow fade
  {static} +TextOverflow ellipsis
  {static} +TextOverflow visible
}

"painting::text_painter::TextOverflow" o-- "painting::text_painter::TextOverflow"
"dart::core::Enum" <|-- "painting::text_painter::TextOverflow"

class "painting::text_painter::TextWidthBasis" {
  +int index
  {static} +List<TextWidthBasis> values
  {static} +TextWidthBasis parent
  {static} +TextWidthBasis longestLine
}

"painting::text_painter::TextWidthBasis" o-- "painting::text_painter::TextWidthBasis"
"dart::core::Enum" <|-- "painting::text_painter::TextWidthBasis"

abstract class "painting::decoration::Decoration" {
  +EdgeInsetsGeometry padding
  +bool isComplex
  +String toStringShort()
  +bool debugAssertIsValid()
  #Decoration? lerpFrom()
  #Decoration? lerpTo()
  {static} +Decoration? lerp()
  +bool hitTest()
  +BoxPainter createBoxPainter()
  +Path getClipPath()
}

"painting::decoration::Decoration" o-- "painting::edge_insets::EdgeInsetsGeometry"
"foundation::diagnostics::Diagnosticable" <|-- "painting::decoration::Decoration"

abstract class "painting::decoration::BoxPainter" {
  +void Function()? onChanged
  +void paint()
  +void dispose()
}

"painting::decoration::BoxPainter" o-- "dart::ui::void Function()"

class "painting::rounded_rectangle_border::RoundedRectangleBorder" {
  +BorderRadiusGeometry borderRadius
  +bool preferPaintInterior
  +int hashCode
  +ShapeBorder scale()
  +ShapeBorder? lerpFrom()
  +ShapeBorder? lerpTo()
  +RoundedRectangleBorder copyWith()
  +Path getInnerPath()
  +Path getOuterPath()
  +void paintInterior()
  +void paint()
  +bool ==()
  +String toString()
}

"painting::rounded_rectangle_border::RoundedRectangleBorder" o-- "painting::border_radius::BorderRadiusGeometry"
"painting::borders::OutlinedBorder" <|-- "painting::rounded_rectangle_border::RoundedRectangleBorder"

class "painting::rounded_rectangle_border::_RoundedRectangleToCircleBorder" {
  +BorderRadiusGeometry borderRadius
  +double circularity
  +double eccentricity
  +bool preferPaintInterior
  +int hashCode
  +ShapeBorder scale()
  +ShapeBorder? lerpFrom()
  +ShapeBorder? lerpTo()
  -Rect _adjustRect()
  -BorderRadius? _adjustBorderRadius()
  +Path getInnerPath()
  +Path getOuterPath()
  +void paintInterior()
  +_RoundedRectangleToCircleBorder copyWith()
  +void paint()
  +bool ==()
  +String toString()
}

"painting::rounded_rectangle_border::_RoundedRectangleToCircleBorder" o-- "painting::border_radius::BorderRadiusGeometry"
"painting::borders::OutlinedBorder" <|-- "painting::rounded_rectangle_border::_RoundedRectangleToCircleBorder"

class "painting::shape_decoration::ShapeDecoration" {
  +Color? color
  +Gradient? gradient
  +DecorationImage? image
  +List<BoxShadow>? shadows
  +ShapeBorder shape
  +EdgeInsetsGeometry padding
  +bool isComplex
  +int hashCode
  +Path getClipPath()
  +ShapeDecoration? lerpFrom()
  +ShapeDecoration? lerpTo()
  {static} +ShapeDecoration? lerp()
  +bool ==()
  +void debugFillProperties()
  +bool hitTest()
  +BoxPainter createBoxPainter()
}

"painting::shape_decoration::ShapeDecoration" o-- "dart::ui::Color"
"painting::shape_decoration::ShapeDecoration" o-- "painting::gradient::Gradient"
"painting::shape_decoration::ShapeDecoration" o-- "painting::decoration_image::DecorationImage"
"painting::shape_decoration::ShapeDecoration" o-- "painting::borders::ShapeBorder"
"painting::shape_decoration::ShapeDecoration" o-- "painting::edge_insets::EdgeInsetsGeometry"
"painting::decoration::Decoration" <|-- "painting::shape_decoration::ShapeDecoration"

class "painting::shape_decoration::_ShapeDecorationPainter" {
  -ShapeDecoration _decoration
  -Rect? _lastRect
  -TextDirection? _lastTextDirection
  -Path _outerPath
  -Path? _innerPath
  -Paint? _interiorPaint
  -int? _shadowCount
  -List<Rect> _shadowBounds
  -List<Path> _shadowPaths
  -List<Paint> _shadowPaints
  -DecorationImagePainter? _imagePainter
  +void Function() onChanged
  -void _precache()
  -void _paintShadows()
  -void _paintInterior()
  -void _paintImage()
  +void dispose()
  +void paint()
}

"painting::shape_decoration::_ShapeDecorationPainter" o-- "painting::shape_decoration::ShapeDecoration"
"painting::shape_decoration::_ShapeDecorationPainter" o-- "dart::ui::Rect"
"painting::shape_decoration::_ShapeDecorationPainter" o-- "dart::ui::TextDirection"
"painting::shape_decoration::_ShapeDecorationPainter" o-- "dart::ui::Path"
"painting::shape_decoration::_ShapeDecorationPainter" o-- "dart::ui::Paint"
"painting::shape_decoration::_ShapeDecorationPainter" o-- "painting::decoration_image::DecorationImagePainter"
"painting::shape_decoration::_ShapeDecorationPainter" o-- "dart::ui::void Function()"
"painting::decoration::BoxPainter" <|-- "painting::shape_decoration::_ShapeDecorationPainter"

abstract class "painting::edge_insets::EdgeInsetsGeometry" {
  {static} +EdgeInsetsGeometry infinity
  -double _bottom
  -double _end
  -double _left
  -double _right
  -double _start
  -double _top
  +bool isNonNegative
  +double horizontal
  +double vertical
  +Size collapsedSize
  +EdgeInsetsGeometry flipped
  +int hashCode
  +double along()
  +Size inflateSize()
  +Size deflateSize()
  +EdgeInsetsGeometry subtract()
  +EdgeInsetsGeometry add()
  +EdgeInsetsGeometry clamp()
  +EdgeInsetsGeometry unary-()
  +EdgeInsetsGeometry *()
  +EdgeInsetsGeometry /()
  +EdgeInsetsGeometry ~/()
  +EdgeInsetsGeometry %()
  {static} +EdgeInsetsGeometry? lerp()
  +EdgeInsets resolve()
  +String toString()
  +bool ==()
}

"painting::edge_insets::EdgeInsetsGeometry" o-- "painting::edge_insets::EdgeInsetsGeometry"
"painting::edge_insets::EdgeInsetsGeometry" o-- "dart::ui::Size"

class "painting::edge_insets::EdgeInsets" {
  {static} +EdgeInsets zero
  +double left
  +double top
  +double right
  +double bottom
  -double _left
  -double _top
  -double _right
  -double _bottom
  -double _start
  -double _end
  +Offset topLeft
  +Offset topRight
  +Offset bottomLeft
  +Offset bottomRight
  +EdgeInsets flipped
  +Rect inflateRect()
  +Rect deflateRect()
  +EdgeInsetsGeometry subtract()
  +EdgeInsetsGeometry add()
  +EdgeInsetsGeometry clamp()
  +EdgeInsets -()
  +EdgeInsets +()
  +EdgeInsets unary-()
  +EdgeInsets *()
  +EdgeInsets /()
  +EdgeInsets ~/()
  +EdgeInsets %()
  {static} +EdgeInsets? lerp()
  +EdgeInsets resolve()
  +EdgeInsets copyWith()
}

"painting::edge_insets::EdgeInsets" o-- "painting::edge_insets::EdgeInsets"
"painting::edge_insets::EdgeInsets" o-- "dart::ui::Offset"
"painting::edge_insets::EdgeInsetsGeometry" <|-- "painting::edge_insets::EdgeInsets"

class "painting::edge_insets::EdgeInsetsDirectional" {
  {static} +EdgeInsetsDirectional zero
  +double start
  +double top
  +double end
  +double bottom
  -double _start
  -double _top
  -double _end
  -double _bottom
  -double _left
  -double _right
  +bool isNonNegative
  +EdgeInsetsDirectional flipped
  +EdgeInsetsGeometry subtract()
  +EdgeInsetsGeometry add()
  +EdgeInsetsDirectional -()
  +EdgeInsetsDirectional +()
  +EdgeInsetsDirectional unary-()
  +EdgeInsetsDirectional *()
  +EdgeInsetsDirectional /()
  +EdgeInsetsDirectional ~/()
  +EdgeInsetsDirectional %()
  {static} +EdgeInsetsDirectional? lerp()
  +EdgeInsets resolve()
}

"painting::edge_insets::EdgeInsetsDirectional" o-- "painting::edge_insets::EdgeInsetsDirectional"
"painting::edge_insets::EdgeInsetsGeometry" <|-- "painting::edge_insets::EdgeInsetsDirectional"

class "painting::edge_insets::_MixedEdgeInsets" {
  -double _left
  -double _right
  -double _start
  -double _end
  -double _top
  -double _bottom
  +bool isNonNegative
  +_MixedEdgeInsets unary-()
  +_MixedEdgeInsets *()
  +_MixedEdgeInsets /()
  +_MixedEdgeInsets ~/()
  +_MixedEdgeInsets %()
  +EdgeInsets resolve()
}

"painting::edge_insets::EdgeInsetsGeometry" <|-- "painting::edge_insets::_MixedEdgeInsets"

abstract class "painting::clip::ClipContext" {
  +Canvas canvas
  -void _clipAndPaint()
  +void clipPathAndPaint()
  +void clipRRectAndPaint()
  +void clipRectAndPaint()
}

"painting::clip::ClipContext" o-- "dart::ui::Canvas"

class "painting::decoration_image::DecorationImage" {
  +ImageProvider<Object> image
  +void Function(Object, StackTrace?)? onError
  +ColorFilter? colorFilter
  +BoxFit? fit
  +AlignmentGeometry alignment
  +Rect? centerSlice
  +ImageRepeat repeat
  +bool matchTextDirection
  +double scale
  +double opacity
  +FilterQuality filterQuality
  +bool invertColors
  +bool isAntiAlias
  +int hashCode
  +DecorationImagePainter createPainter()
  +bool ==()
  +String toString()
  {static} +DecorationImage? lerp()
}

"painting::decoration_image::DecorationImage" o-- "painting::image_provider::ImageProvider<Object>"
"painting::decoration_image::DecorationImage" o-- "painting::image_stream::void Function(Object, StackTrace)"
"painting::decoration_image::DecorationImage" o-- "dart::ui::ColorFilter"
"painting::decoration_image::DecorationImage" o-- "painting::box_fit::BoxFit"
"painting::decoration_image::DecorationImage" o-- "painting::alignment::AlignmentGeometry"
"painting::decoration_image::DecorationImage" o-- "dart::ui::Rect"
"painting::decoration_image::DecorationImage" o-- "painting::decoration_image::ImageRepeat"
"painting::decoration_image::DecorationImage" o-- "dart::ui::FilterQuality"

class "painting::decoration_image::DecorationImagePainter" {
  +void paint()
  +void dispose()
}

class "painting::decoration_image::_DecorationImagePainter" {
  -DecorationImage _details
  -void Function() _onChanged
  -ImageStream? _imageStream
  -ImageInfo? _image
  +void paint()
  -void _handleImage()
  +void dispose()
  +String toString()
}

"painting::decoration_image::_DecorationImagePainter" o-- "painting::decoration_image::DecorationImage"
"painting::decoration_image::_DecorationImagePainter" o-- "dart::ui::void Function()"
"painting::decoration_image::_DecorationImagePainter" o-- "painting::image_stream::ImageStream"
"painting::decoration_image::_DecorationImagePainter" o-- "painting::image_stream::ImageInfo"
"painting::decoration_image::DecorationImagePainter" <|-- "painting::decoration_image::_DecorationImagePainter"

class "painting::decoration_image::_BlendedDecorationImage" {
  +DecorationImage? a
  +DecorationImage? b
  +double t
  +ImageProvider<Object> image
  +void Function(Object, StackTrace?)? onError
  +ColorFilter? colorFilter
  +BoxFit? fit
  +AlignmentGeometry alignment
  +Rect? centerSlice
  +ImageRepeat repeat
  +bool matchTextDirection
  +double scale
  +double opacity
  +FilterQuality filterQuality
  +bool invertColors
  +bool isAntiAlias
  +int hashCode
  +DecorationImagePainter createPainter()
  +bool ==()
  +String toString()
}

"painting::decoration_image::_BlendedDecorationImage" o-- "painting::decoration_image::DecorationImage"
"painting::decoration_image::_BlendedDecorationImage" o-- "painting::image_provider::ImageProvider<Object>"
"painting::decoration_image::_BlendedDecorationImage" o-- "painting::image_stream::void Function(Object, StackTrace)"
"painting::decoration_image::_BlendedDecorationImage" o-- "dart::ui::ColorFilter"
"painting::decoration_image::_BlendedDecorationImage" o-- "painting::box_fit::BoxFit"
"painting::decoration_image::_BlendedDecorationImage" o-- "painting::alignment::AlignmentGeometry"
"painting::decoration_image::_BlendedDecorationImage" o-- "dart::ui::Rect"
"painting::decoration_image::_BlendedDecorationImage" o-- "painting::decoration_image::ImageRepeat"
"painting::decoration_image::_BlendedDecorationImage" o-- "dart::ui::FilterQuality"
"painting::decoration_image::DecorationImage" <|-- "painting::decoration_image::_BlendedDecorationImage"

class "painting::decoration_image::_BlendedDecorationImagePainter" {
  +DecorationImagePainter? a
  +DecorationImagePainter? b
  +double t
  +void paint()
  +void dispose()
  +String toString()
}

"painting::decoration_image::_BlendedDecorationImagePainter" o-- "painting::decoration_image::DecorationImagePainter"
"painting::decoration_image::DecorationImagePainter" <|-- "painting::decoration_image::_BlendedDecorationImagePainter"

class "painting::decoration_image::ImageRepeat" {
  +int index
  {static} +List<ImageRepeat> values
  {static} +ImageRepeat repeat
  {static} +ImageRepeat repeatX
  {static} +ImageRepeat repeatY
  {static} +ImageRepeat noRepeat
}

"painting::decoration_image::ImageRepeat" o-- "painting::decoration_image::ImageRepeat"
"dart::core::Enum" <|-- "painting::decoration_image::ImageRepeat"

class "painting::strut_style::StrutStyle" {
  {static} +StrutStyle disabled
  +String? fontFamily
  -List<String>? _fontFamilyFallback
  -String? _package
  +double? fontSize
  +double? height
  +TextLeadingDistribution? leadingDistribution
  +FontWeight? fontWeight
  +FontStyle? fontStyle
  +double? leading
  +bool? forceStrutHeight
  +String? debugLabel
  +List<String>? fontFamilyFallback
  +int hashCode
  +RenderComparison compareTo()
  +StrutStyle inheritFromTextStyle()
  +bool ==()
  +String toStringShort()
  +void debugFillProperties()
}

"painting::strut_style::StrutStyle" o-- "painting::strut_style::StrutStyle"
"painting::strut_style::StrutStyle" o-- "dart::ui::TextLeadingDistribution"
"painting::strut_style::StrutStyle" o-- "dart::ui::FontWeight"
"painting::strut_style::StrutStyle" o-- "dart::ui::FontStyle"
"foundation::diagnostics::Diagnosticable" <|-- "painting::strut_style::StrutStyle"

class "painting::oval_border::OvalBorder" {
  +ShapeBorder scale()
  +OvalBorder copyWith()
  +ShapeBorder? lerpFrom()
  +ShapeBorder? lerpTo()
  +String toString()
}

"painting::circle_border::CircleBorder" <|-- "painting::oval_border::OvalBorder"

class "painting::image_stream::ImageInfo" {
  +Image image
  +double scale
  +String? debugLabel
  +int sizeBytes
  +int hashCode
  +ImageInfo clone()
  +bool isCloneOf()
  +void dispose()
  +String toString()
  +bool ==()
}

"painting::image_stream::ImageInfo" o-- "dart::ui::Image"

class "painting::image_stream::ImageStreamListener" {
  +void Function(ImageInfo, bool) onImage
  +void Function(ImageChunkEvent)? onChunk
  +void Function(Object, StackTrace?)? onError
  +int hashCode
  +bool ==()
}

"painting::image_stream::ImageStreamListener" o-- "painting::image_stream::void Function(ImageInfo, bool)"
"painting::image_stream::ImageStreamListener" o-- "painting::image_stream::void Function(ImageChunkEvent)"
"painting::image_stream::ImageStreamListener" o-- "painting::image_stream::void Function(Object, StackTrace)"

class "painting::image_stream::ImageChunkEvent" {
  +int cumulativeBytesLoaded
  +int? expectedTotalBytes
  +void debugFillProperties()
}

"foundation::diagnostics::Diagnosticable" <|-- "painting::image_stream::ImageChunkEvent"

class "painting::image_stream::ImageStream" {
  -ImageStreamCompleter? _completer
  -List<ImageStreamListener>? _listeners
  +ImageStreamCompleter? completer
  +Object key
  +void setCompleter()
  +void addListener()
  +void removeListener()
  +void debugFillProperties()
}

"painting::image_stream::ImageStream" o-- "painting::image_stream::ImageStreamCompleter"
"foundation::diagnostics::Diagnosticable" <|-- "painting::image_stream::ImageStream"

class "painting::image_stream::ImageStreamCompleterHandle" {
  -ImageStreamCompleter? _completer
  +void dispose()
}

"painting::image_stream::ImageStreamCompleterHandle" o-- "painting::image_stream::ImageStreamCompleter"

abstract class "painting::image_stream::ImageStreamCompleter" {
  -List<ImageStreamListener> _listeners
  -List<void Function(Object, StackTrace?)> _ephemeralErrorListeners
  -ImageInfo? _currentImage
  -FlutterErrorDetails? _currentError
  +String? debugLabel
  -bool _hadAtLeastOneListener
  -bool _addingInitialListeners
  -int _keepAliveHandles
  -bool _disposed
  -List<void Function()> _onLastListenerRemovedCallbacks
  +bool hasListeners
  +void addListener()
  +void addEphemeralErrorListener()
  +ImageStreamCompleterHandle keepAlive()
  +void removeListener()
  -void _maybeDispose()
  -void _checkDisposed()
  +void addOnLastListenerRemovedCallback()
  +void removeOnLastListenerRemovedCallback()
  #void setImage()
  +void reportError()
  #void reportImageChunkEvent()
  +void debugFillProperties()
}

"painting::image_stream::ImageStreamCompleter" o-- "painting::image_stream::ImageInfo"
"painting::image_stream::ImageStreamCompleter" o-- "foundation::assertions::FlutterErrorDetails"
"foundation::diagnostics::Diagnosticable" <|-- "painting::image_stream::ImageStreamCompleter"

class "painting::image_stream::OneFrameImageStreamCompleter" {
}

"painting::image_stream::ImageStreamCompleter" <|-- "painting::image_stream::OneFrameImageStreamCompleter"

class "painting::image_stream::MultiFrameImageStreamCompleter" {
  -StreamSubscription<ImageChunkEvent>? _chunkSubscription
  -Codec? _codec
  -double _scale
  -Iterable<DiagnosticsNode> Function()? _informationCollector
  -FrameInfo? _nextFrame
  -Duration _shownTimestamp
  -Duration? _frameDuration
  -int _framesEmitted
  -Timer? _timer
  -bool _frameCallbackScheduled
  -void _handleCodecReady()
  -void _handleAppFrame()
  -bool _isFirstFrame()
  -bool _hasFrameDurationPassed()
  -Future<void> _decodeNextFrameAndSchedule()
  -void _scheduleAppFrame()
  -void _emitFrame()
  +void addListener()
  +void removeListener()
  -void _maybeDispose()
}

"painting::image_stream::MultiFrameImageStreamCompleter" o-- "dart::async::StreamSubscription<ImageChunkEvent>"
"painting::image_stream::MultiFrameImageStreamCompleter" o-- "dart::ui::Codec"
"painting::image_stream::MultiFrameImageStreamCompleter" o-- "foundation::assertions::Iterable<DiagnosticsNode> Function()"
"painting::image_stream::MultiFrameImageStreamCompleter" o-- "dart::ui::FrameInfo"
"painting::image_stream::MultiFrameImageStreamCompleter" o-- "dart::async::Timer"
"painting::image_stream::ImageStreamCompleter" <|-- "painting::image_stream::MultiFrameImageStreamCompleter"

class "painting::image_cache::ImageCache" {
  -Map<Object, _PendingImage> _pendingImages
  -Map<Object, _CachedImage> _cache
  -Map<Object, _LiveImage> _liveImages
  -int _maximumSize
  -int _maximumSizeBytes
  -int _currentSizeBytes
  +int maximumSize
  +int currentSize
  +int maximumSizeBytes
  +int currentSizeBytes
  +int liveImageCount
  +int pendingImageCount
  +void clear()
  +bool evict()
  -void _touch()
  -void _trackLiveImage()
  +ImageStreamCompleter? putIfAbsent()
  +ImageCacheStatus statusForKey()
  +bool containsKey()
  +void clearLiveImages()
  -void _checkCacheSize()
}

class "painting::image_cache::ImageCacheStatus" {
  +bool pending
  +bool keepAlive
  +bool live
  +bool tracked
  +bool untracked
  +int hashCode
  +bool ==()
  +String toString()
}

abstract class "painting::image_cache::_CachedImageBase" {
  +ImageStreamCompleter completer
  +int? sizeBytes
  +ImageStreamCompleterHandle? handle
  +void dispose()
}

"painting::image_cache::_CachedImageBase" o-- "painting::image_stream::ImageStreamCompleter"
"painting::image_cache::_CachedImageBase" o-- "painting::image_stream::ImageStreamCompleterHandle"

class "painting::image_cache::_CachedImage" {
}

"painting::image_cache::_CachedImageBase" <|-- "painting::image_cache::_CachedImage"

class "painting::image_cache::_LiveImage" {
  -void Function() _handleRemove
  +void dispose()
  +String toString()
}

"painting::image_cache::_LiveImage" o-- "dart::ui::void Function()"
"painting::image_cache::_CachedImageBase" <|-- "painting::image_cache::_LiveImage"

class "painting::image_cache::_PendingImage" {
  +ImageStreamCompleter completer
  +ImageStreamListener listener
  +void removeListener()
}

"painting::image_cache::_PendingImage" o-- "painting::image_stream::ImageStreamCompleter"
"painting::image_cache::_PendingImage" o-- "painting::image_stream::ImageStreamListener"

class "painting::binding::_SystemFontsNotifier" {
  -Set<void Function()> _systemFontsCallbacks
  +void notifyListeners()
  +void addListener()
  +void removeListener()
}

"foundation::change_notifier::Listenable" <|-- "painting::binding::_SystemFontsNotifier"

abstract class "painting::binding::PaintingBinding" {
  {static} -PaintingBinding? _instance
  {static} +ShaderWarmUp? shaderWarmUp
  -ImageCache _imageCache
  -_SystemFontsNotifier _systemFonts
  {static} +PaintingBinding instance
  +ImageCache imageCache
  +Listenable systemFonts
  +void initInstances()
  #ImageCache createImageCache()
  +Future<Codec> instantiateImageCodecFromBuffer()
  +Future<Codec> instantiateImageCodecWithSize()
  +void evict()
  +void handleMemoryPressure()
  +Future<void> handleSystemMessage()
}

"painting::binding::PaintingBinding" o-- "painting::binding::PaintingBinding"
"painting::binding::PaintingBinding" o-- "painting::shader_warm_up::ShaderWarmUp"
"painting::binding::PaintingBinding" o-- "painting::image_cache::ImageCache"
"painting::binding::PaintingBinding" o-- "painting::binding::_SystemFontsNotifier"
"painting::binding::PaintingBinding" o-- "foundation::change_notifier::Listenable"

class "gestures::lsq_solver::_Vector" {
  -int _offset
  -int _length
  -List<double> _elements
  +double []()
  +void []=()
  +double *()
  +double norm()
}

class "gestures::lsq_solver::_Matrix" {
  -int _columns
  -List<double> _elements
  +double get()
  +void set()
  +_Vector getRow()
}

class "gestures::lsq_solver::PolynomialFit" {
  +List<double> coefficients
  +double confidence
  +String toString()
}

class "gestures::lsq_solver::LeastSquaresSolver" {
  +List<double> x
  +List<double> y
  +List<double> w
  +PolynomialFit? solve()
}

abstract class "gestures::drag::Drag" {
  +void update()
  +void end()
  +void cancel()
}

class "gestures::eager::EagerGestureRecognizer" {
  +String debugDescription
  +void addAllowedPointer()
  +void didStopTrackingLastPointer()
  +void handleEvent()
}

"gestures::recognizer::OneSequenceGestureRecognizer" <|-- "gestures::eager::EagerGestureRecognizer"

class "gestures::team::_CombiningGestureArenaEntry" {
  -_CombiningGestureArenaMember _combiner
  -GestureArenaMember _member
  +void resolve()
}

"gestures::team::_CombiningGestureArenaEntry" o-- "gestures::team::_CombiningGestureArenaMember"
"gestures::team::_CombiningGestureArenaEntry" o-- "gestures::arena::GestureArenaMember"
"gestures::arena::GestureArenaEntry" <|-- "gestures::team::_CombiningGestureArenaEntry"

class "gestures::team::_CombiningGestureArenaMember" {
  -GestureArenaTeam _owner
  -List<GestureArenaMember> _members
  -int _pointer
  -bool _resolved
  -GestureArenaMember? _winner
  -GestureArenaEntry? _entry
  +void acceptGesture()
  +void rejectGesture()
  -void _close()
  -GestureArenaEntry _add()
  -void _resolve()
}

"gestures::team::_CombiningGestureArenaMember" o-- "gestures::team::GestureArenaTeam"
"gestures::team::_CombiningGestureArenaMember" o-- "gestures::arena::GestureArenaMember"
"gestures::team::_CombiningGestureArenaMember" o-- "gestures::arena::GestureArenaEntry"
"gestures::arena::GestureArenaMember" <|-- "gestures::team::_CombiningGestureArenaMember"

class "gestures::team::GestureArenaTeam" {
  -Map<int, _CombiningGestureArenaMember> _combiners
  +GestureArenaMember? captain
  +GestureArenaEntry add()
}

"gestures::team::GestureArenaTeam" o-- "gestures::arena::GestureArenaMember"

class "gestures::multitap::_CountdownZoned" {
  -bool _timeout
  +bool timeout
  -void _onTimeout()
}

class "gestures::multitap::_TapTracker" {
  +DeviceGestureSettings? gestureSettings
  +int pointer
  +GestureArenaEntry entry
  -Offset _initialGlobalPosition
  +int initialButtons
  -_CountdownZoned _doubleTapMinTimeCountdown
  -bool _isTrackingPointer
  +void startTrackingPointer()
  +void stopTrackingPointer()
  +bool isWithinGlobalTolerance()
  +bool hasElapsedMinTime()
  +bool hasSameButton()
}

"gestures::multitap::_TapTracker" o-- "gestures::gesture_settings::DeviceGestureSettings"
"gestures::multitap::_TapTracker" o-- "gestures::arena::GestureArenaEntry"
"gestures::multitap::_TapTracker" o-- "dart::ui::Offset"
"gestures::multitap::_TapTracker" o-- "gestures::multitap::_CountdownZoned"

class "gestures::multitap::DoubleTapGestureRecognizer" {
  +void Function(TapDownDetails)? onDoubleTapDown
  +void Function()? onDoubleTap
  +void Function()? onDoubleTapCancel
  -Timer? _doubleTapTimer
  -_TapTracker? _firstTap
  -Map<int, _TapTracker> _trackers
  +String debugDescription
  {static} -bool _defaultButtonAcceptBehavior()
  +bool isPointerAllowed()
  +void addAllowedPointer()
  -void _trackTap()
  -void _handleEvent()
  +void acceptGesture()
  +void rejectGesture()
  -void _reject()
  +void dispose()
  -void _reset()
  -void _registerFirstTap()
  -void _registerSecondTap()
  -void _clearTrackers()
  -void _freezeTracker()
  -void _startDoubleTapTimer()
  -void _stopDoubleTapTimer()
  -void _checkUp()
  -void _checkCancel()
}

"gestures::multitap::DoubleTapGestureRecognizer" o-- "gestures::tap::void Function(TapDownDetails)"
"gestures::multitap::DoubleTapGestureRecognizer" o-- "gestures::multitap::void Function()"
"gestures::multitap::DoubleTapGestureRecognizer" o-- "gestures::tap::void Function()"
"gestures::multitap::DoubleTapGestureRecognizer" o-- "dart::async::Timer"
"gestures::multitap::DoubleTapGestureRecognizer" o-- "gestures::multitap::_TapTracker"
"gestures::recognizer::GestureRecognizer" <|-- "gestures::multitap::DoubleTapGestureRecognizer"

class "gestures::multitap::_TapGesture" {
  +MultiTapGestureRecognizer gestureRecognizer
  -bool _wonArena
  -Timer? _timer
  -OffsetPair _lastPosition
  -OffsetPair? _finalPosition
  +void handleEvent()
  +void stopTrackingPointer()
  +void accept()
  +void reject()
  +void cancel()
  -void _check()
}

"gestures::multitap::_TapGesture" o-- "gestures::multitap::MultiTapGestureRecognizer"
"gestures::multitap::_TapGesture" o-- "dart::async::Timer"
"gestures::multitap::_TapGesture" o-- "gestures::recognizer::OffsetPair"
"gestures::multitap::_TapTracker" <|-- "gestures::multitap::_TapGesture"

class "gestures::multitap::MultiTapGestureRecognizer" {
  +void Function(int, TapDownDetails)? onTapDown
  +void Function(int, TapUpDetails)? onTapUp
  +void Function(int)? onTap
  +void Function(int)? onTapCancel
  +Duration longTapDelay
  +void Function(int, TapDownDetails)? onLongTapDown
  -Map<int, _TapGesture> _gestureMap
  +String debugDescription
  +void addAllowedPointer()
  +void acceptGesture()
  +void rejectGesture()
  -void _dispatchCancel()
  -void _dispatchTap()
  -void _dispatchLongTap()
  +void dispose()
}

"gestures::multitap::MultiTapGestureRecognizer" o-- "gestures::multitap::void Function(int, TapDownDetails)"
"gestures::multitap::MultiTapGestureRecognizer" o-- "gestures::multitap::void Function(int, TapUpDetails)"
"gestures::multitap::MultiTapGestureRecognizer" o-- "gestures::multitap::void Function(int)"
"gestures::recognizer::GestureRecognizer" <|-- "gestures::multitap::MultiTapGestureRecognizer"

class "gestures::multitap::SerialTapDownDetails" {
  +Offset globalPosition
  +Offset localPosition
  +PointerDeviceKind kind
  +int buttons
  +int count
}

"gestures::multitap::SerialTapDownDetails" o-- "dart::ui::Offset"
"gestures::multitap::SerialTapDownDetails" o-- "dart::ui::PointerDeviceKind"

class "gestures::multitap::SerialTapCancelDetails" {
  +int count
}

class "gestures::multitap::SerialTapUpDetails" {
  +Offset globalPosition
  +Offset localPosition
  +PointerDeviceKind? kind
  +int count
}

"gestures::multitap::SerialTapUpDetails" o-- "dart::ui::Offset"
"gestures::multitap::SerialTapUpDetails" o-- "dart::ui::PointerDeviceKind"

class "gestures::multitap::SerialTapGestureRecognizer" {
  +void Function(SerialTapDownDetails)? onSerialTapDown
  +void Function(SerialTapCancelDetails)? onSerialTapCancel
  +void Function(SerialTapUpDetails)? onSerialTapUp
  -Timer? _serialTapTimer
  -List<_TapTracker> _completedTaps
  -Map<int, GestureDisposition> _gestureResolutions
  -_TapTracker? _pendingTap
  +bool isTrackingPointer
  +String debugDescription
  +bool isPointerAllowed()
  +void addAllowedPointer()
  -bool _representsSameSeries()
  -void _trackTap()
  -void _handleEvent()
  +void acceptGesture()
  +void rejectGesture()
  -void _rejectPendingTap()
  +void dispose()
  -void _reset()
  -void _registerTap()
  -void _stopTrackingPointer()
  -void _startSerialTapTimer()
  -void _stopSerialTapTimer()
  -void _checkUp()
  -void _checkCancel()
}

"gestures::multitap::SerialTapGestureRecognizer" o-- "gestures::multitap::void Function(SerialTapDownDetails)"
"gestures::multitap::SerialTapGestureRecognizer" o-- "gestures::multitap::void Function(SerialTapCancelDetails)"
"gestures::multitap::SerialTapGestureRecognizer" o-- "gestures::multitap::void Function(SerialTapUpDetails)"
"gestures::multitap::SerialTapGestureRecognizer" o-- "dart::async::Timer"
"gestures::multitap::SerialTapGestureRecognizer" o-- "gestures::multitap::_TapTracker"
"gestures::recognizer::GestureRecognizer" <|-- "gestures::multitap::SerialTapGestureRecognizer"

class "gestures::velocity_tracker::Velocity" {
  {static} +Velocity zero
  +Offset pixelsPerSecond
  +int hashCode
  +Velocity unary-()
  +Velocity -()
  +Velocity +()
  +Velocity clampMagnitude()
  +bool ==()
  +String toString()
}

"gestures::velocity_tracker::Velocity" o-- "gestures::velocity_tracker::Velocity"
"gestures::velocity_tracker::Velocity" o-- "dart::ui::Offset"

class "gestures::velocity_tracker::VelocityEstimate" {
  +Offset pixelsPerSecond
  +double confidence
  +Duration duration
  +Offset offset
  +String toString()
}

"gestures::velocity_tracker::VelocityEstimate" o-- "dart::ui::Offset"

class "gestures::velocity_tracker::_PointAtTime" {
  +Duration time
  +Offset point
  +String toString()
}

"gestures::velocity_tracker::_PointAtTime" o-- "dart::ui::Offset"

class "gestures::velocity_tracker::VelocityTracker" {
  {static} -int _assumePointerMoveStoppedMilliseconds
  {static} -int _historySize
  {static} -int _horizonMilliseconds
  {static} -int _minSampleSize
  +PointerDeviceKind kind
  -Stopwatch _sinceLastSample
  -List<_PointAtTime?> _samples
  -int _index
  +void addPosition()
  +VelocityEstimate? getVelocityEstimate()
  +Velocity getVelocity()
}

"gestures::velocity_tracker::VelocityTracker" o-- "dart::ui::PointerDeviceKind"

class "gestures::velocity_tracker::IOSScrollViewFlingVelocityTracker" {
  {static} -int _sampleSize
  -List<_PointAtTime?> _touchSamples
  +void addPosition()
  -Offset _previousVelocityAt()
  +VelocityEstimate getVelocityEstimate()
}

"gestures::velocity_tracker::VelocityTracker" <|-- "gestures::velocity_tracker::IOSScrollViewFlingVelocityTracker"

class "gestures::velocity_tracker::MacOSScrollViewFlingVelocityTracker" {
  +VelocityEstimate getVelocityEstimate()
}

"gestures::velocity_tracker::IOSScrollViewFlingVelocityTracker" <|-- "gestures::velocity_tracker::MacOSScrollViewFlingVelocityTracker"

class "gestures::hit_test::HitTestable" {
  +void hitTest()
  +void hitTestInView()
}

class "gestures::hit_test::HitTestDispatcher" {
  +void dispatchEvent()
}

class "gestures::hit_test::HitTestTarget" {
  +void handleEvent()
}

class "gestures::hit_test::HitTestEntry" {
  +T target
  -Matrix4? _transform
  +Matrix4? transform
  +String toString()
}

"gestures::hit_test::HitTestEntry" o-- "vector_math::vector_math_64::Matrix4"

abstract class "gestures::hit_test::_TransformPart" {
  +Matrix4 multiply()
}

class "gestures::hit_test::_MatrixTransformPart" {
  +Matrix4 matrix
  +Matrix4 multiply()
}

"gestures::hit_test::_MatrixTransformPart" o-- "vector_math::vector_math_64::Matrix4"
"gestures::hit_test::_TransformPart" <|-- "gestures::hit_test::_MatrixTransformPart"

class "gestures::hit_test::_OffsetTransformPart" {
  +Offset offset
  +Matrix4 multiply()
}

"gestures::hit_test::_OffsetTransformPart" o-- "dart::ui::Offset"
"gestures::hit_test::_TransformPart" <|-- "gestures::hit_test::_OffsetTransformPart"

class "gestures::hit_test::HitTestResult" {
  -List<HitTestEntry<HitTestTarget>> _path
  -List<Matrix4> _transforms
  -List<_TransformPart> _localTransforms
  +Iterable<HitTestEntry<HitTestTarget>> path
  -Matrix4 _lastTransform
  -void _globalizeTransforms()
  +void add()
  #void pushTransform()
  #void pushOffset()
  #void popTransform()
  -bool _debugVectorMoreOrLessEquals()
  +String toString()
}

"gestures::hit_test::HitTestResult" o-- "vector_math::vector_math_64::Matrix4"

class "gestures::tap::TapDownDetails" {
  +Offset globalPosition
  +PointerDeviceKind? kind
  +Offset localPosition
}

"gestures::tap::TapDownDetails" o-- "dart::ui::Offset"
"gestures::tap::TapDownDetails" o-- "dart::ui::PointerDeviceKind"

class "gestures::tap::TapUpDetails" {
  +Offset globalPosition
  +Offset localPosition
  +PointerDeviceKind kind
}

"gestures::tap::TapUpDetails" o-- "dart::ui::Offset"
"gestures::tap::TapUpDetails" o-- "dart::ui::PointerDeviceKind"

abstract class "gestures::tap::BaseTapGestureRecognizer" {
  -bool _sentTapDown
  -bool _wonArenaForPrimaryPointer
  -PointerDownEvent? _down
  -PointerUpEvent? _up
  +String debugDescription
  #void handleTapDown()
  #void handleTapUp()
  #void handleTapCancel()
  +void addAllowedPointer()
  #void startTrackingPointer()
  +void handlePrimaryPointer()
  +void resolve()
  +void didExceedDeadline()
  +void acceptGesture()
  +void rejectGesture()
  -void _checkDown()
  -void _checkUp()
  -void _checkCancel()
  -void _reset()
  +void debugFillProperties()
}

"gestures::tap::BaseTapGestureRecognizer" o-- "gestures::events::PointerDownEvent"
"gestures::tap::BaseTapGestureRecognizer" o-- "gestures::events::PointerUpEvent"
"gestures::recognizer::PrimaryPointerGestureRecognizer" <|-- "gestures::tap::BaseTapGestureRecognizer"

class "gestures::tap::TapGestureRecognizer" {
  +void Function(TapDownDetails)? onTapDown
  +void Function(TapUpDetails)? onTapUp
  +void Function()? onTap
  +void Function()? onTapCancel
  +void Function()? onSecondaryTap
  +void Function(TapDownDetails)? onSecondaryTapDown
  +void Function(TapUpDetails)? onSecondaryTapUp
  +void Function()? onSecondaryTapCancel
  +void Function(TapDownDetails)? onTertiaryTapDown
  +void Function(TapUpDetails)? onTertiaryTapUp
  +void Function()? onTertiaryTapCancel
  +String debugDescription
  +bool isPointerAllowed()
  #void handleTapDown()
  #void handleTapUp()
  #void handleTapCancel()
}

"gestures::tap::TapGestureRecognizer" o-- "gestures::tap::void Function(TapDownDetails)"
"gestures::tap::TapGestureRecognizer" o-- "gestures::tap::void Function(TapUpDetails)"
"gestures::tap::TapGestureRecognizer" o-- "gestures::tap::void Function()"
"gestures::tap::BaseTapGestureRecognizer" <|-- "gestures::tap::TapGestureRecognizer"

abstract class "gestures::arena::GestureArenaMember" {
  +void acceptGesture()
  +void rejectGesture()
}


"gestures::arena::GestureArenaEntry" o-- "gestures::arena::GestureArenaMember"

class "gestures::arena::_GestureArena" {
  +List<GestureArenaMember> members
  +bool isOpen
  +bool isHeld
  +bool hasPendingSweep
  +GestureArenaMember? eagerWinner
  +void add()
  +String toString()
}

"gestures::arena::_GestureArena" o-- "gestures::arena::GestureArenaMember"



class "gestures::arena::GestureDisposition" {
  +int index
  {static} +List<GestureDisposition> values
  {static} +GestureDisposition accepted
  {static} +GestureDisposition rejected
}

"gestures::arena::GestureDisposition" o-- "gestures::arena::GestureDisposition"
"dart::core::Enum" <|-- "gestures::arena::GestureDisposition"

class "gestures::pointer_router::PointerRouter" {
  -Map<int, Map<void Function(PointerEvent), Matrix4?>> _routeMap
  -Map<void Function(PointerEvent), Matrix4?> _globalRoutes
  +int debugGlobalRouteCount
  +void addRoute()
  +void removeRoute()
  +void addGlobalRoute()
  +void removeGlobalRoute()
  -void _dispatch()
  +void route()
  -void _dispatchEventToRoutes()
}
class "gestures::arena::GestureArenaEntry" {
  -GestureArenaManager _arena
  -int _pointer
  -GestureArenaMember _member
  +void resolve()
}
class "gestures::arena::GestureArenaManager" {
  -Map<int, _GestureArena> _arenas
  +GestureArenaEntry add()
  +void close()
  +void sweep()
  +void hold()
  +void release()
  -void _resolve()
  -void _tryToResolveArena()
  -void _resolveByDefault()
  -void _resolveInFavorOf()
  -bool _debugLogDiagnostic()
}
"gestures::arena::GestureArenaEntry" o-- "gestures::arena::GestureArenaManager"


abstract class "gestures::recognizer::GestureRecognizer" {
  +Object? debugOwner
  +DeviceGestureSettings? gestureSettings
  +Set<PointerDeviceKind>? supportedDevices
  -bool Function(int) _allowedButtonsFilter
  -Map<int, PointerDeviceKind> _pointerToKind
  +String debugDescription
  {static} -bool _defaultButtonAcceptBehavior()
  +void addPointerPanZoom()
  #void addAllowedPointerPanZoom()
  +void addPointer()
  #void addAllowedPointer()
  #void handleNonAllowedPointer()
  #bool isPointerAllowed()
  #void handleNonAllowedPointerPanZoom()
  #bool isPointerPanZoomAllowed()
  #PointerDeviceKind getKindForPointer()
  +void dispose()
  #T? invokeCallback()
  +void debugFillProperties()
}

"gestures::recognizer::GestureRecognizer" o-- "gestures::gesture_settings::DeviceGestureSettings"
"gestures::recognizer::GestureRecognizer" o-- "gestures::recognizer::bool Function(int)"
"gestures::arena::GestureArenaMember" <|-- "gestures::recognizer::GestureRecognizer"
"foundation::diagnostics::DiagnosticableTreeMixin" <|-- "gestures::recognizer::GestureRecognizer"

abstract class "gestures::recognizer::OneSequenceGestureRecognizer" {
  -Map<int, GestureArenaEntry> _entries
  -Set<int> _trackedPointers
  -GestureArenaTeam? _team
  +GestureArenaTeam? team
  #void addAllowedPointer()
  #void handleNonAllowedPointer()
  #void handleEvent()
  +void acceptGesture()
  +void rejectGesture()
  #void didStopTrackingLastPointer()
  #void resolve()
  #void resolvePointer()
  +void dispose()
  -GestureArenaEntry _addPointerToArena()
  #void startTrackingPointer()
  #void stopTrackingPointer()
  #void stopTrackingIfPointerNoLongerDown()
}

"gestures::recognizer::OneSequenceGestureRecognizer" o-- "gestures::team::GestureArenaTeam"
"gestures::recognizer::GestureRecognizer" <|-- "gestures::recognizer::OneSequenceGestureRecognizer"

abstract class "gestures::recognizer::PrimaryPointerGestureRecognizer" {
  +Duration? deadline
  +double? preAcceptSlopTolerance
  +double? postAcceptSlopTolerance
  -GestureRecognizerState _state
  -int? _primaryPointer
  -OffsetPair? _initialPosition
  -bool _gestureAccepted
  -Timer? _timer
  +GestureRecognizerState state
  +int? primaryPointer
  +OffsetPair? initialPosition
  +void addAllowedPointer()
  +void handleNonAllowedPointer()
  +void handleEvent()
  #void handlePrimaryPointer()
  #void didExceedDeadline()
  #void didExceedDeadlineWithEvent()
  +void acceptGesture()
  +void rejectGesture()
  +void didStopTrackingLastPointer()
  +void dispose()
  -void _stopTimer()
  -double _getGlobalDistance()
  +void debugFillProperties()
}

"gestures::recognizer::PrimaryPointerGestureRecognizer" o-- "gestures::recognizer::GestureRecognizerState"
"gestures::recognizer::PrimaryPointerGestureRecognizer" o-- "gestures::recognizer::OffsetPair"
"gestures::recognizer::PrimaryPointerGestureRecognizer" o-- "dart::async::Timer"
"gestures::recognizer::OneSequenceGestureRecognizer" <|-- "gestures::recognizer::PrimaryPointerGestureRecognizer"

class "gestures::recognizer::OffsetPair" {
  {static} +OffsetPair zero
  +Offset local
  +Offset global
  +OffsetPair +()
  +OffsetPair -()
  +String toString()
}

"gestures::recognizer::OffsetPair" o-- "gestures::recognizer::OffsetPair"
"gestures::recognizer::OffsetPair" o-- "dart::ui::Offset"

class "gestures::recognizer::DragStartBehavior" {
  +int index
  {static} +List<DragStartBehavior> values
  {static} +DragStartBehavior down
  {static} +DragStartBehavior start
}

"gestures::recognizer::DragStartBehavior" o-- "gestures::recognizer::DragStartBehavior"
"dart::core::Enum" <|-- "gestures::recognizer::DragStartBehavior"

class "gestures::recognizer::GestureRecognizerState" {
  +int index
  {static} +List<GestureRecognizerState> values
  {static} +GestureRecognizerState ready
  {static} +GestureRecognizerState possible
  {static} +GestureRecognizerState defunct
}

"gestures::recognizer::GestureRecognizerState" o-- "gestures::recognizer::GestureRecognizerState"
"dart::core::Enum" <|-- "gestures::recognizer::GestureRecognizerState"

abstract class "gestures::multidrag::MultiDragPointerState" {
  +DeviceGestureSettings? gestureSettings
  +Offset initialPosition
  -VelocityTracker _velocityTracker
  +PointerDeviceKind kind
  -Drag? _client
  -Offset? _pendingDelta
  -Duration? _lastPendingEventTimestamp
  -GestureArenaEntry? _arenaEntry
  +Offset? pendingDelta
  -void _setArenaEntry()
  #void resolve()
  -void _move()
  #void checkForResolutionAfterMove()
  #void accepted()
  #void rejected()
  -void _startDrag()
  -void _up()
  -void _cancel()
  #void dispose()
}

"gestures::multidrag::MultiDragPointerState" o-- "gestures::gesture_settings::DeviceGestureSettings"
"gestures::multidrag::MultiDragPointerState" o-- "dart::ui::Offset"
"gestures::multidrag::MultiDragPointerState" o-- "gestures::velocity_tracker::VelocityTracker"
"gestures::multidrag::MultiDragPointerState" o-- "dart::ui::PointerDeviceKind"
"gestures::multidrag::MultiDragPointerState" o-- "gestures::drag::Drag"
"gestures::multidrag::MultiDragPointerState" o-- "gestures::arena::GestureArenaEntry"

abstract class "gestures::multidrag::MultiDragGestureRecognizer" {
  +Drag? Function(Offset)? onStart
  -Map<int, MultiDragPointerState>? _pointers
  {static} -bool _defaultButtonAcceptBehavior()
  +void addAllowedPointer()
  #MultiDragPointerState createNewPointerState()
  -void _handleEvent()
  +void acceptGesture()
  -Drag? _startDrag()
  +void rejectGesture()
  -void _removeState()
  +void dispose()
}

"gestures::multidrag::MultiDragGestureRecognizer" o-- "gestures::multidrag::Drag Function(Offset)"
"gestures::recognizer::GestureRecognizer" <|-- "gestures::multidrag::MultiDragGestureRecognizer"

class "gestures::multidrag::_ImmediatePointerState" {
  +void checkForResolutionAfterMove()
  +void accepted()
}

"gestures::multidrag::MultiDragPointerState" <|-- "gestures::multidrag::_ImmediatePointerState"

class "gestures::multidrag::ImmediateMultiDragGestureRecognizer" {
  +String debugDescription
  +MultiDragPointerState createNewPointerState()
}

"gestures::multidrag::MultiDragGestureRecognizer" <|-- "gestures::multidrag::ImmediateMultiDragGestureRecognizer"

class "gestures::multidrag::_HorizontalPointerState" {
  +void checkForResolutionAfterMove()
  +void accepted()
}

"gestures::multidrag::MultiDragPointerState" <|-- "gestures::multidrag::_HorizontalPointerState"

class "gestures::multidrag::HorizontalMultiDragGestureRecognizer" {
  +String debugDescription
  +MultiDragPointerState createNewPointerState()
}

"gestures::multidrag::MultiDragGestureRecognizer" <|-- "gestures::multidrag::HorizontalMultiDragGestureRecognizer"

class "gestures::multidrag::_VerticalPointerState" {
  +void checkForResolutionAfterMove()
  +void accepted()
}

"gestures::multidrag::MultiDragPointerState" <|-- "gestures::multidrag::_VerticalPointerState"

class "gestures::multidrag::VerticalMultiDragGestureRecognizer" {
  +String debugDescription
  +MultiDragPointerState createNewPointerState()
}

"gestures::multidrag::MultiDragGestureRecognizer" <|-- "gestures::multidrag::VerticalMultiDragGestureRecognizer"

class "gestures::multidrag::_DelayedPointerState" {
  -Timer? _timer
  -Drag? Function(Offset)? _starter
  -void _delayPassed()
  -void _ensureTimerStopped()
  +void accepted()
  +void checkForResolutionAfterMove()
  +void dispose()
}

"gestures::multidrag::_DelayedPointerState" o-- "dart::async::Timer"
"gestures::multidrag::_DelayedPointerState" o-- "gestures::multidrag::Drag Function(Offset)"
"gestures::multidrag::MultiDragPointerState" <|-- "gestures::multidrag::_DelayedPointerState"

class "gestures::multidrag::DelayedMultiDragGestureRecognizer" {
  +Duration delay
  +String debugDescription
  +MultiDragPointerState createNewPointerState()
}

"gestures::multidrag::MultiDragGestureRecognizer" <|-- "gestures::multidrag::DelayedMultiDragGestureRecognizer"

abstract class "gestures::converter::PointerEventConverter" {
  {static} +Iterable<PointerEvent> expand()
  {static} -double _toLogicalPixels()
}

class "gestures::force_press::ForcePressDetails" {
  +Offset globalPosition
  +Offset localPosition
  +double pressure
}

"gestures::force_press::ForcePressDetails" o-- "dart::ui::Offset"

class "gestures::force_press::ForcePressGestureRecognizer" {
  +void Function(ForcePressDetails)? onStart
  +void Function(ForcePressDetails)? onUpdate
  +void Function(ForcePressDetails)? onPeak
  +void Function(ForcePressDetails)? onEnd
  +double startPressure
  +double peakPressure
  +double Function(double, double, double) interpolation
  -OffsetPair _lastPosition
  -double _lastPressure
  -_ForceState _state
  +String debugDescription
  +void addAllowedPointer()
  +void handleEvent()
  +void acceptGesture()
  +void didStopTrackingLastPointer()
  +void rejectGesture()
  {static} -double _inverseLerp()
}

"gestures::force_press::ForcePressGestureRecognizer" o-- "gestures::force_press::void Function(ForcePressDetails)"
"gestures::force_press::ForcePressGestureRecognizer" o-- "gestures::force_press::double Function(double, double, double)"
"gestures::force_press::ForcePressGestureRecognizer" o-- "gestures::recognizer::OffsetPair"
"gestures::force_press::ForcePressGestureRecognizer" o-- "gestures::force_press::_ForceState"
"gestures::recognizer::OneSequenceGestureRecognizer" <|-- "gestures::force_press::ForcePressGestureRecognizer"

class "gestures::force_press::_ForceState" {
  +int index
  {static} +List<_ForceState> values
  {static} +_ForceState ready
  {static} +_ForceState possible
  {static} +_ForceState accepted
  {static} +_ForceState started
  {static} +_ForceState peaked
}

"gestures::force_press::_ForceState" o-- "gestures::force_press::_ForceState"
"dart::core::Enum" <|-- "gestures::force_press::_ForceState"

class "gestures::tap_and_drag::TapDragDownDetails" {
  +Offset globalPosition
  +Offset localPosition
  +PointerDeviceKind? kind
  +int consecutiveTapCount
  +void debugFillProperties()
}

"gestures::tap_and_drag::TapDragDownDetails" o-- "dart::ui::Offset"
"gestures::tap_and_drag::TapDragDownDetails" o-- "dart::ui::PointerDeviceKind"
"foundation::diagnostics::Diagnosticable" <|-- "gestures::tap_and_drag::TapDragDownDetails"

class "gestures::tap_and_drag::TapDragUpDetails" {
  +Offset globalPosition
  +Offset localPosition
  +PointerDeviceKind kind
  +int consecutiveTapCount
  +void debugFillProperties()
}

"gestures::tap_and_drag::TapDragUpDetails" o-- "dart::ui::Offset"
"gestures::tap_and_drag::TapDragUpDetails" o-- "dart::ui::PointerDeviceKind"
"foundation::diagnostics::Diagnosticable" <|-- "gestures::tap_and_drag::TapDragUpDetails"

class "gestures::tap_and_drag::TapDragStartDetails" {
  +Duration? sourceTimeStamp
  +Offset globalPosition
  +Offset localPosition
  +PointerDeviceKind? kind
  +int consecutiveTapCount
  +void debugFillProperties()
}

"gestures::tap_and_drag::TapDragStartDetails" o-- "dart::ui::Offset"
"gestures::tap_and_drag::TapDragStartDetails" o-- "dart::ui::PointerDeviceKind"
"foundation::diagnostics::Diagnosticable" <|-- "gestures::tap_and_drag::TapDragStartDetails"

class "gestures::tap_and_drag::TapDragUpdateDetails" {
  +Duration? sourceTimeStamp
  +Offset delta
  +double? primaryDelta
  +Offset globalPosition
  +Offset localPosition
  +PointerDeviceKind? kind
  +Offset offsetFromOrigin
  +Offset localOffsetFromOrigin
  +int consecutiveTapCount
  +void debugFillProperties()
}

"gestures::tap_and_drag::TapDragUpdateDetails" o-- "dart::ui::Offset"
"gestures::tap_and_drag::TapDragUpdateDetails" o-- "dart::ui::PointerDeviceKind"
"foundation::diagnostics::Diagnosticable" <|-- "gestures::tap_and_drag::TapDragUpdateDetails"

class "gestures::tap_and_drag::TapDragEndDetails" {
  +Velocity velocity
  +double? primaryVelocity
  +int consecutiveTapCount
  +void debugFillProperties()
}

"gestures::tap_and_drag::TapDragEndDetails" o-- "gestures::velocity_tracker::Velocity"
"foundation::diagnostics::Diagnosticable" <|-- "gestures::tap_and_drag::TapDragEndDetails"

class "gestures::tap_and_drag::BaseTapAndDragGestureRecognizer" {
  +DragStartBehavior dragStartBehavior
  +Duration? dragUpdateThrottleFrequency
  +int? maxConsecutiveTap
  +void Function(TapDragDownDetails)? onTapDown
  +void Function(TapDragUpDetails)? onTapUp
  +void Function(TapDragStartDetails)? onDragStart
  +void Function(TapDragUpdateDetails)? onDragUpdate
  +void Function(TapDragEndDetails)? onDragEnd
  +void Function()? onCancel
  -bool _pastSlopTolerance
  -bool _sentTapDown
  -bool _wonArenaForPrimaryPointer
  -int? _primaryPointer
  -Timer? _deadlineTimer
  -Duration _deadline
  -_DragState _dragState
  -PointerEvent? _start
  -OffsetPair _initialPosition
  -double _globalDistanceMoved
  -double _globalDistanceMovedAllAxes
  -OffsetPair? _correctedPosition
  -TapDragUpdateDetails? _lastDragUpdateDetails
  -Timer? _dragUpdateThrottleTimer
  -Set<int> _acceptedActivePointers
  +String debugDescription
  -Offset _getDeltaForDetails()
  -double? _getPrimaryValueFromOffset()
  -bool _hasSufficientGlobalDistanceToAccept()
  -void _handleDragUpdateThrottled()
  +bool isPointerAllowed()
  +void addAllowedPointer()
  +void handleNonAllowedPointer()
  +void acceptGesture()
  +void didStopTrackingLastPointer()
  +void handleEvent()
  +void rejectGesture()
  +void dispose()
  -void _acceptDrag()
  -void _checkDrag()
  -void _checkTapDown()
  -void _checkTapUp()
  -void _checkDragStart()
  -void _checkDragUpdate()
  -void _checkDragEnd()
  -void _checkCancel()
  -void _didExceedDeadlineWithEvent()
  -void _didExceedDeadline()
  -void _giveUpPointer()
  -void _resetTaps()
  -void _resetDragUpdateThrottle()
  -void _stopDeadlineTimer()
}

"gestures::tap_and_drag::BaseTapAndDragGestureRecognizer" o-- "gestures::recognizer::DragStartBehavior"
"gestures::tap_and_drag::BaseTapAndDragGestureRecognizer" o-- "gestures::tap_and_drag::void Function(TapDragDownDetails)"
"gestures::tap_and_drag::BaseTapAndDragGestureRecognizer" o-- "gestures::tap_and_drag::void Function(TapDragUpDetails)"
"gestures::tap_and_drag::BaseTapAndDragGestureRecognizer" o-- "gestures::tap_and_drag::void Function(TapDragStartDetails)"
"gestures::tap_and_drag::BaseTapAndDragGestureRecognizer" o-- "gestures::tap_and_drag::void Function(TapDragUpdateDetails)"
"gestures::tap_and_drag::BaseTapAndDragGestureRecognizer" o-- "gestures::tap_and_drag::void Function(TapDragEndDetails)"
"gestures::tap_and_drag::BaseTapAndDragGestureRecognizer" o-- "gestures::tap_and_drag::void Function()"
"gestures::tap_and_drag::BaseTapAndDragGestureRecognizer" o-- "dart::async::Timer"
"gestures::tap_and_drag::BaseTapAndDragGestureRecognizer" o-- "gestures::tap_and_drag::_DragState"
"gestures::tap_and_drag::BaseTapAndDragGestureRecognizer" o-- "gestures::events::PointerEvent"
"gestures::tap_and_drag::BaseTapAndDragGestureRecognizer" o-- "gestures::recognizer::OffsetPair"
"gestures::tap_and_drag::BaseTapAndDragGestureRecognizer" o-- "gestures::tap_and_drag::TapDragUpdateDetails"
"gestures::recognizer::OneSequenceGestureRecognizer" <|-- "gestures::tap_and_drag::BaseTapAndDragGestureRecognizer"
"gestures::tap_and_drag::_TapStatusTrackerMixin" <|-- "gestures::tap_and_drag::BaseTapAndDragGestureRecognizer"

class "gestures::tap_and_drag::TapAndHorizontalDragGestureRecognizer" {
  +String debugDescription
  -bool _hasSufficientGlobalDistanceToAccept()
  -Offset _getDeltaForDetails()
  -double _getPrimaryValueFromOffset()
}

"gestures::tap_and_drag::BaseTapAndDragGestureRecognizer" <|-- "gestures::tap_and_drag::TapAndHorizontalDragGestureRecognizer"

class "gestures::tap_and_drag::TapAndPanGestureRecognizer" {
  +String debugDescription
  -bool _hasSufficientGlobalDistanceToAccept()
  -Offset _getDeltaForDetails()
  -double? _getPrimaryValueFromOffset()
}

"gestures::tap_and_drag::BaseTapAndDragGestureRecognizer" <|-- "gestures::tap_and_drag::TapAndPanGestureRecognizer"

class "gestures::tap_and_drag::TapAndDragGestureRecognizer" {
  +String debugDescription
  -bool _hasSufficientGlobalDistanceToAccept()
  -Offset _getDeltaForDetails()
  -double? _getPrimaryValueFromOffset()
}

"gestures::tap_and_drag::BaseTapAndDragGestureRecognizer" <|-- "gestures::tap_and_drag::TapAndDragGestureRecognizer"

class "gestures::tap_and_drag::_DragState" {
  +int index
  {static} +List<_DragState> values
  {static} +_DragState ready
  {static} +_DragState possible
  {static} +_DragState accepted
}

"gestures::tap_and_drag::_DragState" o-- "gestures::tap_and_drag::_DragState"
"dart::core::Enum" <|-- "gestures::tap_and_drag::_DragState"

abstract class "gestures::tap_and_drag::_TapStatusTrackerMixin" {
  -PointerDownEvent? _down
  -PointerUpEvent? _up
  -int _consecutiveTapCount
  -OffsetPair? _originPosition
  -int? _previousButtons
  -Timer? _consecutiveTapTimer
  -Offset? _lastTapOffset
  +void Function()? onTapTrackStart
  +void Function()? onTapTrackReset
  +PointerDownEvent? currentDown
  +PointerUpEvent? currentUp
  +int consecutiveTapCount
  +int? maxConsecutiveTap
  +void addAllowedPointer()
  +void handleEvent()
  +void rejectGesture()
  +void dispose()
  -void _trackTap()
  -bool _hasSameButton()
  -bool _isWithinConsecutiveTapTolerance()
  -bool _representsSameSeries()
  -void _consecutiveTapTimerStart()
  -void _consecutiveTapTimerStop()
  -void _consecutiveTapTimerTimeout()
  -void _tapTrackerReset()
}

"gestures::tap_and_drag::_TapStatusTrackerMixin" o-- "gestures::events::PointerDownEvent"
"gestures::tap_and_drag::_TapStatusTrackerMixin" o-- "gestures::events::PointerUpEvent"
"gestures::tap_and_drag::_TapStatusTrackerMixin" o-- "gestures::recognizer::OffsetPair"
"gestures::tap_and_drag::_TapStatusTrackerMixin" o-- "dart::async::Timer"
"gestures::tap_and_drag::_TapStatusTrackerMixin" o-- "dart::ui::Offset"
"gestures::tap_and_drag::_TapStatusTrackerMixin" o-- "dart::ui::void Function()"

class "gestures::pointer_signal_resolver::PointerSignalResolver" {
  -void Function(PointerSignalEvent)? _firstRegisteredCallback
  -PointerSignalEvent? _currentEvent
  +void register()
  +void resolve()
}

"gestures::pointer_signal_resolver::PointerSignalResolver" o-- "gestures::pointer_signal_resolver::void Function(PointerSignalEvent)"
"gestures::pointer_signal_resolver::PointerSignalResolver" o-- "gestures::events::PointerSignalEvent"

class "gestures::long_press::LongPressDownDetails" {
  +Offset globalPosition
  +PointerDeviceKind? kind
  +Offset localPosition
}

"gestures::long_press::LongPressDownDetails" o-- "dart::ui::Offset"
"gestures::long_press::LongPressDownDetails" o-- "dart::ui::PointerDeviceKind"

class "gestures::long_press::LongPressStartDetails" {
  +Offset globalPosition
  +Offset localPosition
}

"gestures::long_press::LongPressStartDetails" o-- "dart::ui::Offset"

class "gestures::long_press::LongPressMoveUpdateDetails" {
  +Offset globalPosition
  +Offset localPosition
  +Offset offsetFromOrigin
  +Offset localOffsetFromOrigin
}

"gestures::long_press::LongPressMoveUpdateDetails" o-- "dart::ui::Offset"

class "gestures::long_press::LongPressEndDetails" {
  +Offset globalPosition
  +Offset localPosition
  +Velocity velocity
}

"gestures::long_press::LongPressEndDetails" o-- "dart::ui::Offset"
"gestures::long_press::LongPressEndDetails" o-- "gestures::velocity_tracker::Velocity"

class "gestures::long_press::LongPressGestureRecognizer" {
  -bool _longPressAccepted
  -OffsetPair? _longPressOrigin
  -int? _initialButtons
  +void Function(LongPressDownDetails)? onLongPressDown
  +void Function()? onLongPressCancel
  +void Function()? onLongPress
  +void Function(LongPressStartDetails)? onLongPressStart
  +void Function(LongPressMoveUpdateDetails)? onLongPressMoveUpdate
  +void Function()? onLongPressUp
  +void Function(LongPressEndDetails)? onLongPressEnd
  +void Function(LongPressDownDetails)? onSecondaryLongPressDown
  +void Function()? onSecondaryLongPressCancel
  +void Function()? onSecondaryLongPress
  +void Function(LongPressStartDetails)? onSecondaryLongPressStart
  +void Function(LongPressMoveUpdateDetails)? onSecondaryLongPressMoveUpdate
  +void Function()? onSecondaryLongPressUp
  +void Function(LongPressEndDetails)? onSecondaryLongPressEnd
  +void Function(LongPressDownDetails)? onTertiaryLongPressDown
  +void Function()? onTertiaryLongPressCancel
  +void Function()? onTertiaryLongPress
  +void Function(LongPressStartDetails)? onTertiaryLongPressStart
  +void Function(LongPressMoveUpdateDetails)? onTertiaryLongPressMoveUpdate
  +void Function()? onTertiaryLongPressUp
  +void Function(LongPressEndDetails)? onTertiaryLongPressEnd
  -VelocityTracker? _velocityTracker
  +String debugDescription
  {static} -bool _defaultButtonAcceptBehavior()
  +bool isPointerAllowed()
  +void didExceedDeadline()
  +void handlePrimaryPointer()
  -void _checkLongPressDown()
  -void _checkLongPressCancel()
  -void _checkLongPressStart()
  -void _checkLongPressMoveUpdate()
  -void _checkLongPressEnd()
  -void _reset()
  +void resolve()
  +void acceptGesture()
}

"gestures::long_press::LongPressGestureRecognizer" o-- "gestures::recognizer::OffsetPair"
"gestures::long_press::LongPressGestureRecognizer" o-- "gestures::long_press::void Function(LongPressDownDetails)"
"gestures::long_press::LongPressGestureRecognizer" o-- "gestures::long_press::void Function()"
"gestures::long_press::LongPressGestureRecognizer" o-- "gestures::long_press::void Function(LongPressStartDetails)"
"gestures::long_press::LongPressGestureRecognizer" o-- "gestures::long_press::void Function(LongPressMoveUpdateDetails)"
"gestures::long_press::LongPressGestureRecognizer" o-- "gestures::long_press::void Function(LongPressEndDetails)"
"gestures::long_press::LongPressGestureRecognizer" o-- "gestures::velocity_tracker::VelocityTracker"
"gestures::recognizer::PrimaryPointerGestureRecognizer" <|-- "gestures::long_press::LongPressGestureRecognizer"

class "gestures::drag_details::DragDownDetails" {
  +Offset globalPosition
  +Offset localPosition
  +String toString()
}

"gestures::drag_details::DragDownDetails" o-- "dart::ui::Offset"

class "gestures::drag_details::DragStartDetails" {
  +Duration? sourceTimeStamp
  +Offset globalPosition
  +Offset localPosition
  +PointerDeviceKind? kind
  +String toString()
}

"gestures::drag_details::DragStartDetails" o-- "dart::ui::Offset"
"gestures::drag_details::DragStartDetails" o-- "dart::ui::PointerDeviceKind"

class "gestures::drag_details::DragUpdateDetails" {
  +Duration? sourceTimeStamp
  +Offset delta
  +double? primaryDelta
  +Offset globalPosition
  +Offset localPosition
  +String toString()
}

"gestures::drag_details::DragUpdateDetails" o-- "dart::ui::Offset"

class "gestures::drag_details::DragEndDetails" {
  +Velocity velocity
  +double? primaryVelocity
  +String toString()
}

"gestures::drag_details::DragEndDetails" o-- "gestures::velocity_tracker::Velocity"

class "gestures::scale::_PointerPanZoomData" {
  +ScaleGestureRecognizer parent
  -Offset _position
  -Offset _pan
  -double _scale
  -double _rotation
  +Offset focalPoint
  +double scale
  +double rotation
  +String toString()
}

"gestures::scale::_PointerPanZoomData" o-- "gestures::scale::ScaleGestureRecognizer"
"gestures::scale::_PointerPanZoomData" o-- "dart::ui::Offset"

class "gestures::scale::ScaleStartDetails" {
  +Offset focalPoint
  +Offset localFocalPoint
  +int pointerCount
  +String toString()
}

"gestures::scale::ScaleStartDetails" o-- "dart::ui::Offset"

class "gestures::scale::ScaleUpdateDetails" {
  +Offset focalPointDelta
  +Offset focalPoint
  +Offset localFocalPoint
  +double scale
  +double horizontalScale
  +double verticalScale
  +double rotation
  +int pointerCount
  +String toString()
}

"gestures::scale::ScaleUpdateDetails" o-- "dart::ui::Offset"

class "gestures::scale::ScaleEndDetails" {
  +Velocity velocity
  +double scaleVelocity
  +int pointerCount
  +String toString()
}

"gestures::scale::ScaleEndDetails" o-- "gestures::velocity_tracker::Velocity"

class "gestures::scale::_LineBetweenPointers" {
  +Offset pointerStartLocation
  +int pointerStartId
  +Offset pointerEndLocation
  +int pointerEndId
}

"gestures::scale::_LineBetweenPointers" o-- "dart::ui::Offset"

class "gestures::scale::ScaleGestureRecognizer" {
  +DragStartBehavior dragStartBehavior
  +void Function(ScaleStartDetails)? onStart
  +void Function(ScaleUpdateDetails)? onUpdate
  +void Function(ScaleEndDetails)? onEnd
  -_ScaleState _state
  -Matrix4? _lastTransform
  +bool trackpadScrollCausesScale
  +Offset trackpadScrollToScaleFactor
  -Offset _initialFocalPoint
  -Offset? _currentFocalPoint
  -double _initialSpan
  -double _currentSpan
  -double _initialHorizontalSpan
  -double _currentHorizontalSpan
  -double _initialVerticalSpan
  -double _currentVerticalSpan
  -Offset _localFocalPoint
  -_LineBetweenPointers? _initialLine
  -_LineBetweenPointers? _currentLine
  -Map<int, Offset> _pointerLocations
  -List<int> _pointerQueue
  -Map<int, VelocityTracker> _velocityTrackers
  -VelocityTracker? _scaleVelocityTracker
  -Offset _delta
  -Map<int, _PointerPanZoomData> _pointerPanZooms
  -double _initialPanZoomScaleFactor
  -double _initialPanZoomRotationFactor
  +int pointerCount
  -double _pointerScaleFactor
  -double _pointerHorizontalScaleFactor
  -double _pointerVerticalScaleFactor
  -double _scaleFactor
  -double _horizontalScaleFactor
  -double _verticalScaleFactor
  +String debugDescription
  -double _computeRotationFactor()
  +void addAllowedPointer()
  +bool isPointerPanZoomAllowed()
  +void addAllowedPointerPanZoom()
  +void handleEvent()
  -void _update()
  -void _updateLines()
  -bool _reconfigure()
  -void _advanceStateMachine()
  -void _dispatchOnStartCallbackIfNeeded()
  +void acceptGesture()
  +void rejectGesture()
  +void didStopTrackingLastPointer()
  +void dispose()
}

"gestures::scale::ScaleGestureRecognizer" o-- "gestures::recognizer::DragStartBehavior"
"gestures::scale::ScaleGestureRecognizer" o-- "gestures::scale::void Function(ScaleStartDetails)"
"gestures::scale::ScaleGestureRecognizer" o-- "gestures::scale::void Function(ScaleUpdateDetails)"
"gestures::scale::ScaleGestureRecognizer" o-- "gestures::scale::void Function(ScaleEndDetails)"
"gestures::scale::ScaleGestureRecognizer" o-- "gestures::scale::_ScaleState"
"gestures::scale::ScaleGestureRecognizer" o-- "vector_math::vector_math_64::Matrix4"
"gestures::scale::ScaleGestureRecognizer" o-- "dart::ui::Offset"
"gestures::scale::ScaleGestureRecognizer" o-- "gestures::scale::_LineBetweenPointers"
"gestures::scale::ScaleGestureRecognizer" o-- "gestures::velocity_tracker::VelocityTracker"
"gestures::recognizer::OneSequenceGestureRecognizer" <|-- "gestures::scale::ScaleGestureRecognizer"

class "gestures::scale::_ScaleState" {
  +int index
  {static} +List<_ScaleState> values
  {static} +_ScaleState ready
  {static} +_ScaleState possible
  {static} +_ScaleState accepted
  {static} +_ScaleState started
}

"gestures::scale::_ScaleState" o-- "gestures::scale::_ScaleState"
"dart::core::Enum" <|-- "gestures::scale::_ScaleState"

class "gestures::resampler::PointerEventResampler" {
  -Queue<PointerEvent> _queuedEvents
  -PointerEvent? _last
  -PointerEvent? _next
  -Offset _position
  -bool _isTracked
  -bool _isDown
  -int _pointerIdentifier
  -int _hasButtons
  +bool hasPendingEvents
  +bool isTracked
  +bool isDown
  -PointerEvent _toHoverEvent()
  -PointerEvent _toMoveEvent()
  -PointerEvent _toMoveOrHoverEvent()
  -Offset _positionAt()
  -void _processPointerEvents()
  -void _dequeueAndSampleNonHoverOrMovePointerEventsUntil()
  -void _samplePointerPosition()
  +void addEvent()
  +void sample()
  +void stop()
}

"gestures::resampler::PointerEventResampler" o-- "dart::collection::Queue<PointerEvent>"
"gestures::resampler::PointerEventResampler" o-- "gestures::events::PointerEvent"
"gestures::resampler::PointerEventResampler" o-- "dart::ui::Offset"

abstract class "gestures::events::PointerEvent" {
  +int viewId
  +int embedderId
  +Duration timeStamp
  +int pointer
  +PointerDeviceKind kind
  +int device
  +Offset position
  +Offset delta
  +int buttons
  +bool down
  +bool obscured
  +double pressure
  +double pressureMin
  +double pressureMax
  +double distance
  +double distanceMax
  +double size
  +double radiusMajor
  +double radiusMinor
  +double radiusMin
  +double radiusMax
  +double orientation
  +double tilt
  +int platformData
  +bool synthesized
  +Matrix4? transform
  +PointerEvent? original
  +Offset localPosition
  +Offset localDelta
  +double distanceMin
  +PointerEvent transformed()
  +PointerEvent copyWith()
  {static} +Offset transformPosition()
  {static} +Offset transformDeltaViaPositions()
  {static} +Matrix4 removePerspectiveTransform()
}

"gestures::events::PointerEvent" o-- "dart::ui::PointerDeviceKind"
"gestures::events::PointerEvent" o-- "dart::ui::Offset"
"gestures::events::PointerEvent" o-- "vector_math::vector_math_64::Matrix4"
"gestures::events::PointerEvent" o-- "gestures::events::PointerEvent"
"foundation::diagnostics::Diagnosticable" <|-- "gestures::events::PointerEvent"

abstract class "gestures::events::_AbstractPointerEvent" {
}

"gestures::events::PointerEvent" <|-- "gestures::events::_AbstractPointerEvent"

abstract class "gestures::events::_TransformedPointerEvent" {
  +Offset localPosition
  +Offset localDelta
  +PointerEvent original
  +Matrix4 transform
  +int embedderId
  +Duration timeStamp
  +int pointer
  +PointerDeviceKind kind
  +int device
  +Offset position
  +Offset delta
  +int buttons
  +bool down
  +bool obscured
  +double pressure
  +double pressureMin
  +double pressureMax
  +double distance
  +double distanceMin
  +double distanceMax
  +double size
  +double radiusMajor
  +double radiusMinor
  +double radiusMin
  +double radiusMax
  +double orientation
  +double tilt
  +int platformData
  +bool synthesized
  +int viewId
}

"gestures::events::_TransformedPointerEvent" o-- "dart::ui::Offset"
"gestures::events::_TransformedPointerEvent" o-- "gestures::events::PointerEvent"
"gestures::events::_TransformedPointerEvent" o-- "vector_math::vector_math_64::Matrix4"
"gestures::events::_TransformedPointerEvent" o-- "dart::ui::PointerDeviceKind"
"gestures::events::_AbstractPointerEvent" <|-- "gestures::events::_TransformedPointerEvent"
"foundation::diagnostics::Diagnosticable" <|-- "gestures::events::_TransformedPointerEvent"
"gestures::events::_PointerEventDescription" <|-- "gestures::events::_TransformedPointerEvent"

class "gestures::events::PointerAddedEvent" {
  +PointerAddedEvent transformed()
}

"gestures::events::PointerEvent" <|-- "gestures::events::PointerAddedEvent"
"gestures::events::_PointerEventDescription" <|-- "gestures::events::PointerAddedEvent"
"gestures::events::_CopyPointerAddedEvent" <|-- "gestures::events::PointerAddedEvent"

class "gestures::events::_TransformedPointerAddedEvent" {
  +PointerAddedEvent original
  +Matrix4 transform
  +PointerAddedEvent transformed()
}

"gestures::events::_TransformedPointerAddedEvent" o-- "gestures::events::PointerAddedEvent"
"gestures::events::_TransformedPointerAddedEvent" o-- "vector_math::vector_math_64::Matrix4"
"gestures::events::_TransformedPointerEvent" <|-- "gestures::events::_TransformedPointerAddedEvent"
"gestures::events::_CopyPointerAddedEvent" <|-- "gestures::events::_TransformedPointerAddedEvent"
"gestures::events::PointerAddedEvent" <|-- "gestures::events::_TransformedPointerAddedEvent"

class "gestures::events::PointerRemovedEvent" {
  +PointerRemovedEvent transformed()
}

"gestures::events::PointerEvent" <|-- "gestures::events::PointerRemovedEvent"
"gestures::events::_PointerEventDescription" <|-- "gestures::events::PointerRemovedEvent"
"gestures::events::_CopyPointerRemovedEvent" <|-- "gestures::events::PointerRemovedEvent"

class "gestures::events::_TransformedPointerRemovedEvent" {
  +PointerRemovedEvent original
  +Matrix4 transform
  +PointerRemovedEvent transformed()
}

"gestures::events::_TransformedPointerRemovedEvent" o-- "gestures::events::PointerRemovedEvent"
"gestures::events::_TransformedPointerRemovedEvent" o-- "vector_math::vector_math_64::Matrix4"
"gestures::events::_TransformedPointerEvent" <|-- "gestures::events::_TransformedPointerRemovedEvent"
"gestures::events::_CopyPointerRemovedEvent" <|-- "gestures::events::_TransformedPointerRemovedEvent"
"gestures::events::PointerRemovedEvent" <|-- "gestures::events::_TransformedPointerRemovedEvent"

class "gestures::events::PointerHoverEvent" {
  +PointerHoverEvent transformed()
}

"gestures::events::PointerEvent" <|-- "gestures::events::PointerHoverEvent"
"gestures::events::_PointerEventDescription" <|-- "gestures::events::PointerHoverEvent"
"gestures::events::_CopyPointerHoverEvent" <|-- "gestures::events::PointerHoverEvent"

class "gestures::events::_TransformedPointerHoverEvent" {
  +PointerHoverEvent original
  +Matrix4 transform
  +PointerHoverEvent transformed()
}

"gestures::events::_TransformedPointerHoverEvent" o-- "gestures::events::PointerHoverEvent"
"gestures::events::_TransformedPointerHoverEvent" o-- "vector_math::vector_math_64::Matrix4"
"gestures::events::_TransformedPointerEvent" <|-- "gestures::events::_TransformedPointerHoverEvent"
"gestures::events::_CopyPointerHoverEvent" <|-- "gestures::events::_TransformedPointerHoverEvent"
"gestures::events::PointerHoverEvent" <|-- "gestures::events::_TransformedPointerHoverEvent"

class "gestures::events::PointerEnterEvent" {
  +PointerEnterEvent transformed()
}

"gestures::events::PointerEvent" <|-- "gestures::events::PointerEnterEvent"
"gestures::events::_PointerEventDescription" <|-- "gestures::events::PointerEnterEvent"
"gestures::events::_CopyPointerEnterEvent" <|-- "gestures::events::PointerEnterEvent"

class "gestures::events::_TransformedPointerEnterEvent" {
  +PointerEnterEvent original
  +Matrix4 transform
  +PointerEnterEvent transformed()
}

"gestures::events::_TransformedPointerEnterEvent" o-- "gestures::events::PointerEnterEvent"
"gestures::events::_TransformedPointerEnterEvent" o-- "vector_math::vector_math_64::Matrix4"
"gestures::events::_TransformedPointerEvent" <|-- "gestures::events::_TransformedPointerEnterEvent"
"gestures::events::_CopyPointerEnterEvent" <|-- "gestures::events::_TransformedPointerEnterEvent"
"gestures::events::PointerEnterEvent" <|-- "gestures::events::_TransformedPointerEnterEvent"

class "gestures::events::PointerExitEvent" {
  +PointerExitEvent transformed()
}

"gestures::events::PointerEvent" <|-- "gestures::events::PointerExitEvent"
"gestures::events::_PointerEventDescription" <|-- "gestures::events::PointerExitEvent"
"gestures::events::_CopyPointerExitEvent" <|-- "gestures::events::PointerExitEvent"

class "gestures::events::_TransformedPointerExitEvent" {
  +PointerExitEvent original
  +Matrix4 transform
  +PointerExitEvent transformed()
}

"gestures::events::_TransformedPointerExitEvent" o-- "gestures::events::PointerExitEvent"
"gestures::events::_TransformedPointerExitEvent" o-- "vector_math::vector_math_64::Matrix4"
"gestures::events::_TransformedPointerEvent" <|-- "gestures::events::_TransformedPointerExitEvent"
"gestures::events::_CopyPointerExitEvent" <|-- "gestures::events::_TransformedPointerExitEvent"
"gestures::events::PointerExitEvent" <|-- "gestures::events::_TransformedPointerExitEvent"

class "gestures::events::PointerDownEvent" {
  +PointerDownEvent transformed()
}

"gestures::events::PointerEvent" <|-- "gestures::events::PointerDownEvent"
"gestures::events::_PointerEventDescription" <|-- "gestures::events::PointerDownEvent"
"gestures::events::_CopyPointerDownEvent" <|-- "gestures::events::PointerDownEvent"

class "gestures::events::_TransformedPointerDownEvent" {
  +PointerDownEvent original
  +Matrix4 transform
  +PointerDownEvent transformed()
}

"gestures::events::_TransformedPointerDownEvent" o-- "gestures::events::PointerDownEvent"
"gestures::events::_TransformedPointerDownEvent" o-- "vector_math::vector_math_64::Matrix4"
"gestures::events::_TransformedPointerEvent" <|-- "gestures::events::_TransformedPointerDownEvent"
"gestures::events::_CopyPointerDownEvent" <|-- "gestures::events::_TransformedPointerDownEvent"
"gestures::events::PointerDownEvent" <|-- "gestures::events::_TransformedPointerDownEvent"

class "gestures::events::PointerMoveEvent" {
  +PointerMoveEvent transformed()
}

"gestures::events::PointerEvent" <|-- "gestures::events::PointerMoveEvent"
"gestures::events::_PointerEventDescription" <|-- "gestures::events::PointerMoveEvent"
"gestures::events::_CopyPointerMoveEvent" <|-- "gestures::events::PointerMoveEvent"

class "gestures::events::_TransformedPointerMoveEvent" {
  +PointerMoveEvent original
  +Matrix4 transform
  +PointerMoveEvent transformed()
}

"gestures::events::_TransformedPointerMoveEvent" o-- "gestures::events::PointerMoveEvent"
"gestures::events::_TransformedPointerMoveEvent" o-- "vector_math::vector_math_64::Matrix4"
"gestures::events::_TransformedPointerEvent" <|-- "gestures::events::_TransformedPointerMoveEvent"
"gestures::events::_CopyPointerMoveEvent" <|-- "gestures::events::_TransformedPointerMoveEvent"
"gestures::events::PointerMoveEvent" <|-- "gestures::events::_TransformedPointerMoveEvent"

class "gestures::events::PointerUpEvent" {
  +PointerUpEvent transformed()
}

"gestures::events::PointerEvent" <|-- "gestures::events::PointerUpEvent"
"gestures::events::_PointerEventDescription" <|-- "gestures::events::PointerUpEvent"
"gestures::events::_CopyPointerUpEvent" <|-- "gestures::events::PointerUpEvent"

class "gestures::events::_TransformedPointerUpEvent" {
  +PointerUpEvent original
  +Matrix4 transform
  +PointerUpEvent transformed()
}

"gestures::events::_TransformedPointerUpEvent" o-- "gestures::events::PointerUpEvent"
"gestures::events::_TransformedPointerUpEvent" o-- "vector_math::vector_math_64::Matrix4"
"gestures::events::_TransformedPointerEvent" <|-- "gestures::events::_TransformedPointerUpEvent"
"gestures::events::_CopyPointerUpEvent" <|-- "gestures::events::_TransformedPointerUpEvent"
"gestures::events::PointerUpEvent" <|-- "gestures::events::_TransformedPointerUpEvent"

abstract class "gestures::events::PointerSignalEvent" {
}

"gestures::events::PointerEvent" <|-- "gestures::events::PointerSignalEvent"

class "gestures::events::PointerScrollEvent" {
  +Offset scrollDelta
  +PointerScrollEvent transformed()
  +void debugFillProperties()
}

"gestures::events::PointerScrollEvent" o-- "dart::ui::Offset"
"gestures::events::PointerSignalEvent" <|-- "gestures::events::PointerScrollEvent"
"gestures::events::_PointerEventDescription" <|-- "gestures::events::PointerScrollEvent"
"gestures::events::_CopyPointerScrollEvent" <|-- "gestures::events::PointerScrollEvent"

class "gestures::events::_TransformedPointerScrollEvent" {
  +PointerScrollEvent original
  +Matrix4 transform
  +Offset scrollDelta
  +PointerScrollEvent transformed()
  +void debugFillProperties()
}

"gestures::events::_TransformedPointerScrollEvent" o-- "gestures::events::PointerScrollEvent"
"gestures::events::_TransformedPointerScrollEvent" o-- "vector_math::vector_math_64::Matrix4"
"gestures::events::_TransformedPointerScrollEvent" o-- "dart::ui::Offset"
"gestures::events::_TransformedPointerEvent" <|-- "gestures::events::_TransformedPointerScrollEvent"
"gestures::events::_CopyPointerScrollEvent" <|-- "gestures::events::_TransformedPointerScrollEvent"
"gestures::events::PointerScrollEvent" <|-- "gestures::events::_TransformedPointerScrollEvent"

class "gestures::events::PointerScrollInertiaCancelEvent" {
  +PointerScrollInertiaCancelEvent transformed()
}

"gestures::events::PointerSignalEvent" <|-- "gestures::events::PointerScrollInertiaCancelEvent"
"gestures::events::_PointerEventDescription" <|-- "gestures::events::PointerScrollInertiaCancelEvent"
"gestures::events::_CopyPointerScrollInertiaCancelEvent" <|-- "gestures::events::PointerScrollInertiaCancelEvent"

class "gestures::events::_TransformedPointerScrollInertiaCancelEvent" {
  +PointerScrollInertiaCancelEvent original
  +Matrix4 transform
  +PointerScrollInertiaCancelEvent transformed()
}

"gestures::events::_TransformedPointerScrollInertiaCancelEvent" o-- "gestures::events::PointerScrollInertiaCancelEvent"
"gestures::events::_TransformedPointerScrollInertiaCancelEvent" o-- "vector_math::vector_math_64::Matrix4"
"gestures::events::_TransformedPointerEvent" <|-- "gestures::events::_TransformedPointerScrollInertiaCancelEvent"
"gestures::events::_CopyPointerScrollInertiaCancelEvent" <|-- "gestures::events::_TransformedPointerScrollInertiaCancelEvent"
"gestures::events::PointerScrollInertiaCancelEvent" <|-- "gestures::events::_TransformedPointerScrollInertiaCancelEvent"

class "gestures::events::PointerScaleEvent" {
  +double scale
  +PointerScaleEvent transformed()
}

"gestures::events::PointerSignalEvent" <|-- "gestures::events::PointerScaleEvent"
"gestures::events::_PointerEventDescription" <|-- "gestures::events::PointerScaleEvent"
"gestures::events::_CopyPointerScaleEvent" <|-- "gestures::events::PointerScaleEvent"

class "gestures::events::_TransformedPointerScaleEvent" {
  +PointerScaleEvent original
  +Matrix4 transform
  +double scale
  +PointerScaleEvent transformed()
}

"gestures::events::_TransformedPointerScaleEvent" o-- "gestures::events::PointerScaleEvent"
"gestures::events::_TransformedPointerScaleEvent" o-- "vector_math::vector_math_64::Matrix4"
"gestures::events::_TransformedPointerEvent" <|-- "gestures::events::_TransformedPointerScaleEvent"
"gestures::events::_CopyPointerScaleEvent" <|-- "gestures::events::_TransformedPointerScaleEvent"
"gestures::events::PointerScaleEvent" <|-- "gestures::events::_TransformedPointerScaleEvent"

class "gestures::events::PointerPanZoomStartEvent" {
  +PointerPanZoomStartEvent transformed()
}

"gestures::events::PointerEvent" <|-- "gestures::events::PointerPanZoomStartEvent"
"gestures::events::_PointerEventDescription" <|-- "gestures::events::PointerPanZoomStartEvent"
"gestures::events::_CopyPointerPanZoomStartEvent" <|-- "gestures::events::PointerPanZoomStartEvent"

class "gestures::events::_TransformedPointerPanZoomStartEvent" {
  +PointerPanZoomStartEvent original
  +Matrix4 transform
  +PointerPanZoomStartEvent transformed()
}

"gestures::events::_TransformedPointerPanZoomStartEvent" o-- "gestures::events::PointerPanZoomStartEvent"
"gestures::events::_TransformedPointerPanZoomStartEvent" o-- "vector_math::vector_math_64::Matrix4"
"gestures::events::_TransformedPointerEvent" <|-- "gestures::events::_TransformedPointerPanZoomStartEvent"
"gestures::events::_CopyPointerPanZoomStartEvent" <|-- "gestures::events::_TransformedPointerPanZoomStartEvent"
"gestures::events::PointerPanZoomStartEvent" <|-- "gestures::events::_TransformedPointerPanZoomStartEvent"

class "gestures::events::PointerPanZoomUpdateEvent" {
  +Offset pan
  +Offset panDelta
  +double scale
  +double rotation
  +Offset localPan
  +Offset localPanDelta
  +PointerPanZoomUpdateEvent transformed()
}

"gestures::events::PointerPanZoomUpdateEvent" o-- "dart::ui::Offset"
"gestures::events::PointerEvent" <|-- "gestures::events::PointerPanZoomUpdateEvent"
"gestures::events::_PointerEventDescription" <|-- "gestures::events::PointerPanZoomUpdateEvent"
"gestures::events::_CopyPointerPanZoomUpdateEvent" <|-- "gestures::events::PointerPanZoomUpdateEvent"

class "gestures::events::_TransformedPointerPanZoomUpdateEvent" {
  +Offset localPan
  +Offset localPanDelta
  +PointerPanZoomUpdateEvent original
  +Matrix4 transform
  +Offset pan
  +Offset panDelta
  +double scale
  +double rotation
  +PointerPanZoomUpdateEvent transformed()
}

"gestures::events::_TransformedPointerPanZoomUpdateEvent" o-- "dart::ui::Offset"
"gestures::events::_TransformedPointerPanZoomUpdateEvent" o-- "gestures::events::PointerPanZoomUpdateEvent"
"gestures::events::_TransformedPointerPanZoomUpdateEvent" o-- "vector_math::vector_math_64::Matrix4"
"gestures::events::_TransformedPointerEvent" <|-- "gestures::events::_TransformedPointerPanZoomUpdateEvent"
"gestures::events::_CopyPointerPanZoomUpdateEvent" <|-- "gestures::events::_TransformedPointerPanZoomUpdateEvent"
"gestures::events::PointerPanZoomUpdateEvent" <|-- "gestures::events::_TransformedPointerPanZoomUpdateEvent"

class "gestures::events::PointerPanZoomEndEvent" {
  +PointerPanZoomEndEvent transformed()
}

"gestures::events::PointerEvent" <|-- "gestures::events::PointerPanZoomEndEvent"
"gestures::events::_PointerEventDescription" <|-- "gestures::events::PointerPanZoomEndEvent"
"gestures::events::_CopyPointerPanZoomEndEvent" <|-- "gestures::events::PointerPanZoomEndEvent"

class "gestures::events::_TransformedPointerPanZoomEndEvent" {
  +PointerPanZoomEndEvent original
  +Matrix4 transform
  +PointerPanZoomEndEvent transformed()
}

"gestures::events::_TransformedPointerPanZoomEndEvent" o-- "gestures::events::PointerPanZoomEndEvent"
"gestures::events::_TransformedPointerPanZoomEndEvent" o-- "vector_math::vector_math_64::Matrix4"
"gestures::events::_TransformedPointerEvent" <|-- "gestures::events::_TransformedPointerPanZoomEndEvent"
"gestures::events::_CopyPointerPanZoomEndEvent" <|-- "gestures::events::_TransformedPointerPanZoomEndEvent"
"gestures::events::PointerPanZoomEndEvent" <|-- "gestures::events::_TransformedPointerPanZoomEndEvent"

class "gestures::events::PointerCancelEvent" {
  +PointerCancelEvent transformed()
}

"gestures::events::PointerEvent" <|-- "gestures::events::PointerCancelEvent"
"gestures::events::_PointerEventDescription" <|-- "gestures::events::PointerCancelEvent"
"gestures::events::_CopyPointerCancelEvent" <|-- "gestures::events::PointerCancelEvent"

class "gestures::events::_TransformedPointerCancelEvent" {
  +PointerCancelEvent original
  +Matrix4 transform
  +PointerCancelEvent transformed()
}

"gestures::events::_TransformedPointerCancelEvent" o-- "gestures::events::PointerCancelEvent"
"gestures::events::_TransformedPointerCancelEvent" o-- "vector_math::vector_math_64::Matrix4"
"gestures::events::_TransformedPointerEvent" <|-- "gestures::events::_TransformedPointerCancelEvent"
"gestures::events::_CopyPointerCancelEvent" <|-- "gestures::events::_TransformedPointerCancelEvent"
"gestures::events::PointerCancelEvent" <|-- "gestures::events::_TransformedPointerCancelEvent"

abstract class "gestures::events::_PointerEventDescription" {
  +void debugFillProperties()
  +String toStringFull()
}

abstract class "gestures::events::_CopyPointerAddedEvent" {
  +PointerAddedEvent copyWith()
}

abstract class "gestures::events::_CopyPointerRemovedEvent" {
  +PointerRemovedEvent copyWith()
}

abstract class "gestures::events::_CopyPointerHoverEvent" {
  +PointerHoverEvent copyWith()
}

abstract class "gestures::events::_CopyPointerEnterEvent" {
  +PointerEnterEvent copyWith()
}

abstract class "gestures::events::_CopyPointerExitEvent" {
  +PointerExitEvent copyWith()
}

abstract class "gestures::events::_CopyPointerDownEvent" {
  +PointerDownEvent copyWith()
}

abstract class "gestures::events::_CopyPointerMoveEvent" {
  +PointerMoveEvent copyWith()
}

abstract class "gestures::events::_CopyPointerUpEvent" {
  +PointerUpEvent copyWith()
}

abstract class "gestures::events::_CopyPointerScrollEvent" {
  +Offset scrollDelta
  +PointerScrollEvent copyWith()
}

"gestures::events::_CopyPointerScrollEvent" o-- "dart::ui::Offset"

abstract class "gestures::events::_CopyPointerScrollInertiaCancelEvent" {
  +PointerScrollInertiaCancelEvent copyWith()
}

abstract class "gestures::events::_CopyPointerScaleEvent" {
  +double scale
  +PointerScaleEvent copyWith()
}

abstract class "gestures::events::_CopyPointerPanZoomStartEvent" {
  +PointerPanZoomStartEvent copyWith()
}

abstract class "gestures::events::_CopyPointerPanZoomUpdateEvent" {
  +Offset pan
  +Offset localPan
  +Offset panDelta
  +Offset localPanDelta
  +double scale
  +double rotation
  +PointerPanZoomUpdateEvent copyWith()
}

"gestures::events::_CopyPointerPanZoomUpdateEvent" o-- "dart::ui::Offset"

abstract class "gestures::events::_CopyPointerPanZoomEndEvent" {
  +PointerPanZoomEndEvent copyWith()
}

abstract class "gestures::events::_CopyPointerCancelEvent" {
  +PointerCancelEvent copyWith()
}

class "gestures::gesture_settings::DeviceGestureSettings" {
  +double? touchSlop
  +double? panSlop
  +int hashCode
  +bool ==()
  +String toString()
}

abstract class "gestures::monodrag::DragGestureRecognizer" {
  +DragStartBehavior dragStartBehavior
  +void Function(DragDownDetails)? onDown
  +void Function(DragStartDetails)? onStart
  +void Function(DragUpdateDetails)? onUpdate
  +void Function(DragEndDetails)? onEnd
  +void Function()? onCancel
  +double? minFlingDistance
  +double? minFlingVelocity
  +double? maxFlingVelocity
  +bool onlyAcceptDragOnThreshold
  +VelocityTracker Function(PointerEvent) velocityTrackerBuilder
  -_DragState _state
  -OffsetPair _initialPosition
  -OffsetPair _pendingDragOffset
  -Duration? _lastPendingEventTimestamp
  -int? _initialButtons
  -Matrix4? _lastTransform
  -double _globalDistanceMoved
  -bool _hasDragThresholdBeenMet
  -Map<int, VelocityTracker> _velocityTrackers
  -Set<int> _acceptedActivePointers
  +Duration? debugLastPendingEventTimestamp
  {static} -VelocityTracker _defaultBuilder()
  {static} -bool _defaultButtonAcceptBehavior()
  +bool isFlingGesture()
  -DragEndDetails? _considerFling()
  -Offset _getDeltaForDetails()
  -double? _getPrimaryValueFromOffset()
  -bool _hasSufficientGlobalDistanceToAccept()
  +bool isPointerAllowed()
  -void _addPointer()
  +void addAllowedPointer()
  +void addAllowedPointerPanZoom()
  +void handleEvent()
  +void acceptGesture()
  +void rejectGesture()
  +void didStopTrackingLastPointer()
  -void _giveUpPointer()
  -void _checkDown()
  -void _checkDrag()
  -void _checkStart()
  -void _checkUpdate()
  -void _checkEnd()
  -void _checkCancel()
  +void dispose()
  +void debugFillProperties()
}

"gestures::monodrag::DragGestureRecognizer" o-- "gestures::recognizer::DragStartBehavior"
"gestures::monodrag::DragGestureRecognizer" o-- "gestures::drag_details::void Function(DragDownDetails)"
"gestures::monodrag::DragGestureRecognizer" o-- "gestures::drag_details::void Function(DragStartDetails)"
"gestures::monodrag::DragGestureRecognizer" o-- "gestures::drag_details::void Function(DragUpdateDetails)"
"gestures::monodrag::DragGestureRecognizer" o-- "gestures::monodrag::void Function(DragEndDetails)"
"gestures::monodrag::DragGestureRecognizer" o-- "gestures::monodrag::void Function()"
"gestures::monodrag::DragGestureRecognizer" o-- "gestures::monodrag::VelocityTracker Function(PointerEvent)"
"gestures::monodrag::DragGestureRecognizer" o-- "gestures::monodrag::_DragState"
"gestures::monodrag::DragGestureRecognizer" o-- "gestures::recognizer::OffsetPair"
"gestures::monodrag::DragGestureRecognizer" o-- "vector_math::vector_math_64::Matrix4"
"gestures::recognizer::OneSequenceGestureRecognizer" <|-- "gestures::monodrag::DragGestureRecognizer"

class "gestures::monodrag::VerticalDragGestureRecognizer" {
  +String debugDescription
  +bool isFlingGesture()
  -DragEndDetails? _considerFling()
  -bool _hasSufficientGlobalDistanceToAccept()
  -Offset _getDeltaForDetails()
  -double _getPrimaryValueFromOffset()
}

"gestures::monodrag::DragGestureRecognizer" <|-- "gestures::monodrag::VerticalDragGestureRecognizer"

class "gestures::monodrag::HorizontalDragGestureRecognizer" {
  +String debugDescription
  +bool isFlingGesture()
  -DragEndDetails? _considerFling()
  -bool _hasSufficientGlobalDistanceToAccept()
  -Offset _getDeltaForDetails()
  -double _getPrimaryValueFromOffset()
}

"gestures::monodrag::DragGestureRecognizer" <|-- "gestures::monodrag::HorizontalDragGestureRecognizer"

class "gestures::monodrag::PanGestureRecognizer" {
  +String debugDescription
  +bool isFlingGesture()
  -DragEndDetails? _considerFling()
  -bool _hasSufficientGlobalDistanceToAccept()
  -Offset _getDeltaForDetails()
  -double? _getPrimaryValueFromOffset()
}

"gestures::monodrag::DragGestureRecognizer" <|-- "gestures::monodrag::PanGestureRecognizer"

class "gestures::monodrag::_DragState" {
  +int index
  {static} +List<_DragState> values
  {static} +_DragState ready
  {static} +_DragState possible
  {static} +_DragState accepted
}

"gestures::monodrag::_DragState" o-- "gestures::monodrag::_DragState"
"dart::core::Enum" <|-- "gestures::monodrag::_DragState"

class "gestures::binding::SamplingClock" {
  +DateTime now()
  +Stopwatch stopwatch()
}

class "gestures::binding::_Resampler" {
  -Map<int, PointerEventResampler> _resamplers
  -bool _frameCallbackScheduled
  -Duration _frameTime
  -Stopwatch _frameTimeAge
  -Duration _lastSampleTime
  -Duration _lastEventTime
  -void Function(PointerEvent) _handlePointerEvent
  -void Function() _handleSampleTimeChanged
  -Duration _samplingInterval
  -Timer? _timer
  +void addOrDispatch()
  +void sample()
  +void stop()
  -void _onSampleTimeChanged()
}

"gestures::binding::_Resampler" o-- "gestures::resampler::void Function(PointerEvent)"
"gestures::binding::_Resampler" o-- "gestures::binding::void Function()"
"gestures::binding::_Resampler" o-- "dart::async::Timer"

class "gestures::binding::FlutterErrorDetailsForPointerEventDispatcher" {
  +PointerEvent? event
  +HitTestEntry<HitTestTarget>? hitTestEntry
}

"gestures::binding::FlutterErrorDetailsForPointerEventDispatcher" o-- "gestures::events::PointerEvent"
"gestures::binding::FlutterErrorDetailsForPointerEventDispatcher" o-- "gestures::hit_test::HitTestEntry<HitTestTarget>"
"foundation::assertions::FlutterErrorDetails" <|-- "gestures::binding::FlutterErrorDetailsForPointerEventDispatcher"


"gestures::hit_test::HitTestable" <|-- "gestures::binding::GestureBinding"
"gestures::hit_test::HitTestDispatcher" <|-- "gestures::binding::GestureBinding"
"gestures::hit_test::HitTestTarget" <|-- "gestures::binding::GestureBinding"



abstract class "rendering::custom_paint::CustomPainter" {
  -Listenable? _repaint
  +List<CustomPainterSemantics> Function(Size)? semanticsBuilder
  +void addListener()
  +void removeListener()
  +void paint()
  +bool shouldRebuildSemantics()
  +bool shouldRepaint()
  +bool? hitTest()
  +String toString()
}

"rendering::custom_paint::CustomPainter" o-- "foundation::change_notifier::Listenable"
"rendering::custom_paint::CustomPainter" o-- "rendering::custom_paint::List<CustomPainterSemantics> Function(Size)"
"foundation::change_notifier::Listenable" <|-- "rendering::custom_paint::CustomPainter"

class "rendering::custom_paint::CustomPainterSemantics" {
  +Key? key
  +Rect rect
  +Matrix4? transform
  +SemanticsProperties properties
  +Set<SemanticsTag>? tags
}

"rendering::custom_paint::CustomPainterSemantics" o-- "foundation::key::Key"
"rendering::custom_paint::CustomPainterSemantics" o-- "dart::ui::Rect"
"rendering::custom_paint::CustomPainterSemantics" o-- "vector_math::vector_math_64::Matrix4"
"rendering::custom_paint::CustomPainterSemantics" o-- "semantics::semantics::SemanticsProperties"

class "rendering::custom_paint::RenderCustomPaint" {
  -CustomPainter? _painter
  -CustomPainter? _foregroundPainter
  -Size _preferredSize
  +bool isComplex
  +bool willChange
  -List<CustomPainterSemantics> Function(Size)? _backgroundSemanticsBuilder
  -List<CustomPainterSemantics> Function(Size)? _foregroundSemanticsBuilder
  -List<SemanticsNode>? _backgroundSemanticsNodes
  -List<SemanticsNode>? _foregroundSemanticsNodes
  +CustomPainter? painter
  +CustomPainter? foregroundPainter
  +Size preferredSize
  -void _didUpdatePainter()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +void attach()
  +void detach()
  +bool hitTestChildren()
  +bool hitTestSelf()
  +void performLayout()
  +Size computeSizeForNoChild()
  -void _paintWithPainter()
  +void paint()
  -void _setRasterCacheHints()
  +void describeSemanticsConfiguration()
  +void assembleSemanticsNode()
  +void clearSemantics()
  {static} -List<SemanticsNode> _updateSemanticsChildren()
  {static} -bool _canUpdateSemanticsChild()
  {static} -SemanticsNode _updateSemanticsChild()
  +void debugFillProperties()
}

"rendering::custom_paint::RenderCustomPaint" o-- "rendering::custom_paint::CustomPainter"
"rendering::custom_paint::RenderCustomPaint" o-- "dart::ui::Size"
"rendering::custom_paint::RenderCustomPaint" o-- "rendering::custom_paint::List<CustomPainterSemantics> Function(Size)"
"rendering::proxy_box::RenderProxyBox" <|-- "rendering::custom_paint::RenderCustomPaint"

class "rendering::sliver_persistent_header::OverScrollHeaderStretchConfiguration" {
  +double stretchTriggerOffset
  +Future<void> Function()? onStretchTrigger
}

"rendering::sliver_persistent_header::OverScrollHeaderStretchConfiguration" o-- "foundation::basic_types::Future<void> Function()"

class "rendering::sliver_persistent_header::PersistentHeaderShowOnScreenConfiguration" {
  +double minShowOnScreenExtent
  +double maxShowOnScreenExtent
}

abstract class "rendering::sliver_persistent_header::RenderSliverPersistentHeader" {
  -double _lastStretchOffset
  -bool _needsUpdateChild
  -double _lastShrinkOffset
  -bool _lastOverlapsContent
  +OverScrollHeaderStretchConfiguration? stretchConfiguration
  +double maxExtent
  +double minExtent
  +double childExtent
  #void updateChild()
  +void markNeedsLayout()
  #void layoutChild()
  +double childMainAxisPosition()
  +bool hitTestChildren()
  +void applyPaintTransform()
  +void paint()
  +void describeSemanticsConfiguration()
  +void debugFillProperties()
}

"rendering::sliver_persistent_header::RenderSliverPersistentHeader" o-- "rendering::sliver_persistent_header::OverScrollHeaderStretchConfiguration"
"rendering::sliver::RenderSliver" <|-- "rendering::sliver_persistent_header::RenderSliverPersistentHeader"
"rendering::object::RenderObjectWithChildMixin" <|-- "rendering::sliver_persistent_header::RenderSliverPersistentHeader"
"rendering::sliver::RenderSliverHelpers" <|-- "rendering::sliver_persistent_header::RenderSliverPersistentHeader"

abstract class "rendering::sliver_persistent_header::RenderSliverScrollingPersistentHeader" {
  -double? _childPosition
  #double updateGeometry()
  +void performLayout()
  +double childMainAxisPosition()
}

"rendering::sliver_persistent_header::RenderSliverPersistentHeader" <|-- "rendering::sliver_persistent_header::RenderSliverScrollingPersistentHeader"

abstract class "rendering::sliver_persistent_header::RenderSliverPinnedPersistentHeader" {
  +PersistentHeaderShowOnScreenConfiguration? showOnScreenConfiguration
  +void performLayout()
  +double childMainAxisPosition()
  +void showOnScreen()
}

"rendering::sliver_persistent_header::RenderSliverPinnedPersistentHeader" o-- "rendering::sliver_persistent_header::PersistentHeaderShowOnScreenConfiguration"
"rendering::sliver_persistent_header::RenderSliverPersistentHeader" <|-- "rendering::sliver_persistent_header::RenderSliverPinnedPersistentHeader"

class "rendering::sliver_persistent_header::FloatingHeaderSnapConfiguration" {
  +Curve curve
  +Duration duration
}

"rendering::sliver_persistent_header::FloatingHeaderSnapConfiguration" o-- "animation::curves::Curve"

abstract class "rendering::sliver_persistent_header::RenderSliverFloatingPersistentHeader" {
  -AnimationController? _controller
  -Animation<double> _animation
  -double? _lastActualScrollOffset
  -double? _effectiveScrollOffset
  -ScrollDirection? _lastStartedScrollDirection
  -double? _childPosition
  -TickerProvider? _vsync
  +FloatingHeaderSnapConfiguration? snapConfiguration
  +PersistentHeaderShowOnScreenConfiguration? showOnScreenConfiguration
  +TickerProvider? vsync
  +void detach()
  #double updateGeometry()
  -void _updateAnimation()
  +void updateScrollStartDirection()
  +void maybeStartSnapAnimation()
  +void maybeStopSnapAnimation()
  +void performLayout()
  +void showOnScreen()
  +double childMainAxisPosition()
  +void debugFillProperties()
}

"rendering::sliver_persistent_header::RenderSliverFloatingPersistentHeader" o-- "animation::animation_controller::AnimationController"
"rendering::sliver_persistent_header::RenderSliverFloatingPersistentHeader" o-- "animation::animation::Animation<double>"
"rendering::sliver_persistent_header::RenderSliverFloatingPersistentHeader" o-- "rendering::viewport_offset::ScrollDirection"
"rendering::sliver_persistent_header::RenderSliverFloatingPersistentHeader" o-- "scheduler::ticker::TickerProvider"
"rendering::sliver_persistent_header::RenderSliverFloatingPersistentHeader" o-- "rendering::sliver_persistent_header::FloatingHeaderSnapConfiguration"
"rendering::sliver_persistent_header::RenderSliverFloatingPersistentHeader" o-- "rendering::sliver_persistent_header::PersistentHeaderShowOnScreenConfiguration"
"rendering::sliver_persistent_header::RenderSliverPersistentHeader" <|-- "rendering::sliver_persistent_header::RenderSliverFloatingPersistentHeader"

abstract class "rendering::sliver_persistent_header::RenderSliverFloatingPinnedPersistentHeader" {
  +double updateGeometry()
}

"rendering::sliver_persistent_header::RenderSliverFloatingPersistentHeader" <|-- "rendering::sliver_persistent_header::RenderSliverFloatingPinnedPersistentHeader"

abstract class "rendering::list_wheel_viewport::ListWheelChildManager" {
  +int? childCount
  +bool childExistsAt()
  +void createChild()
  +void removeChild()
}

class "rendering::list_wheel_viewport::ListWheelParentData" {
  +int? index
  +Matrix4? transform
}

"rendering::list_wheel_viewport::ListWheelParentData" o-- "vector_math::vector_math_64::Matrix4"
"rendering::box::ContainerBoxParentData" <|-- "rendering::list_wheel_viewport::ListWheelParentData"

class "rendering::list_wheel_viewport::RenderListWheelViewport" {
  {static} +double defaultDiameterRatio
  {static} +double defaultPerspective
  {static} +String diameterRatioZeroMessage
  {static} +String perspectiveTooHighMessage
  {static} +String clipBehaviorAndRenderChildrenOutsideViewportConflict
  +ListWheelChildManager childManager
  -ViewportOffset _offset
  -double _diameterRatio
  -double _perspective
  -double _offAxisFraction
  -bool _useMagnifier
  -double _magnification
  -double _overAndUnderCenterOpacity
  -double _itemExtent
  -double _squeeze
  -bool _renderChildrenOutsideViewport
  -Clip _clipBehavior
  -LayerHandle<ClipRectLayer> _clipRectLayer
  +ViewportOffset offset
  +double diameterRatio
  +double perspective
  +double offAxisFraction
  +bool useMagnifier
  +double magnification
  +double overAndUnderCenterOpacity
  +double itemExtent
  +double squeeze
  +bool renderChildrenOutsideViewport
  +Clip clipBehavior
  +bool isRepaintBoundary
  -double _viewportExtent
  -double _minEstimatedScrollExtent
  -double _maxEstimatedScrollExtent
  -double _topScrollMarginExtent
  -double _maxVisibleRadian
  +bool sizedByParent
  -void _hasScrolled()
  +void setupParentData()
  +void attach()
  +void detach()
  -double _getUntransformedPaintingCoordinateY()
  -double _getIntrinsicCrossAxis()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +Size computeDryLayout()
  +int indexOf()
  +int scrollOffsetToIndex()
  +double indexToScrollOffset()
  -void _createChild()
  -void _destroyChild()
  -void _layoutChild()
  +void performLayout()
  -bool _shouldClipAtCurrentOffset()
  +void paint()
  +void dispose()
  -void _paintVisibleChildren()
  -void _paintAllChildren()
  -void _paintTransformedChild()
  -void _paintChildWithMagnifier()
  -void _paintChildCylindrically()
  -Matrix4 _magnifyTransform()
  -Matrix4 _centerOriginTransform()
  {static} -bool _debugAssertValidHitTestOffsets()
  +void applyPaintTransform()
  +Rect? describeApproximatePaintClip()
  +bool hitTestChildren()
  +RevealedOffset getOffsetToReveal()
  +void showOnScreen()
}

"rendering::list_wheel_viewport::RenderListWheelViewport" o-- "rendering::list_wheel_viewport::ListWheelChildManager"
"rendering::list_wheel_viewport::RenderListWheelViewport" o-- "rendering::viewport_offset::ViewportOffset"
"rendering::list_wheel_viewport::RenderListWheelViewport" o-- "dart::ui::Clip"
"rendering::list_wheel_viewport::RenderListWheelViewport" o-- "rendering::layer::LayerHandle<ClipRectLayer>"
"rendering::box::RenderBox" <|-- "rendering::list_wheel_viewport::RenderListWheelViewport"
"rendering::object::ContainerRenderObjectMixin" <|-- "rendering::list_wheel_viewport::RenderListWheelViewport"
"rendering::viewport::RenderAbstractViewport" <|-- "rendering::list_wheel_viewport::RenderListWheelViewport"

class "rendering::image::RenderImage" {
  -Alignment? _resolvedAlignment
  -bool? _flipHorizontally
  -Image? _image
  +String? debugImageLabel
  -double? _width
  -double? _height
  -double _scale
  -ColorFilter? _colorFilter
  -Color? _color
  -Animation<double>? _opacity
  -FilterQuality _filterQuality
  -BlendMode? _colorBlendMode
  -BoxFit? _fit
  -AlignmentGeometry _alignment
  -ImageRepeat _repeat
  -Rect? _centerSlice
  -bool _invertColors
  -bool _matchTextDirection
  -TextDirection? _textDirection
  -bool _isAntiAlias
  +Image? image
  +double? width
  +double? height
  +double scale
  +Color? color
  +Animation<double>? opacity
  +FilterQuality filterQuality
  +BlendMode? colorBlendMode
  +BoxFit? fit
  +AlignmentGeometry alignment
  +ImageRepeat repeat
  +Rect? centerSlice
  +bool invertColors
  +bool matchTextDirection
  +TextDirection? textDirection
  +bool isAntiAlias
  -void _resolve()
  -void _markNeedResolution()
  -void _updateColorFilter()
  -Size _sizeForConstraints()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +bool hitTestSelf()
  +Size computeDryLayout()
  +void performLayout()
  +void attach()
  +void detach()
  +void paint()
  +void dispose()
  +void debugFillProperties()
}

"rendering::image::RenderImage" o-- "painting::alignment::Alignment"
"rendering::image::RenderImage" o-- "dart::ui::Image"
"rendering::image::RenderImage" o-- "dart::ui::ColorFilter"
"rendering::image::RenderImage" o-- "dart::ui::Color"
"rendering::image::RenderImage" o-- "animation::animation::Animation<double>"
"rendering::image::RenderImage" o-- "dart::ui::FilterQuality"
"rendering::image::RenderImage" o-- "dart::ui::BlendMode"
"rendering::image::RenderImage" o-- "painting::box_fit::BoxFit"
"rendering::image::RenderImage" o-- "painting::alignment::AlignmentGeometry"
"rendering::image::RenderImage" o-- "painting::decoration_image::ImageRepeat"
"rendering::image::RenderImage" o-- "dart::ui::Rect"
"rendering::image::RenderImage" o-- "dart::ui::TextDirection"
"rendering::box::RenderBox" <|-- "rendering::image::RenderImage"

class "rendering::texture::TextureBox" {
  -int _textureId
  -bool _freeze
  -FilterQuality _filterQuality
  +int textureId
  +bool freeze
  +FilterQuality filterQuality
  +bool sizedByParent
  +bool alwaysNeedsCompositing
  +bool isRepaintBoundary
  +Size computeDryLayout()
  +bool hitTestSelf()
  +void paint()
}

"rendering::texture::TextureBox" o-- "dart::ui::FilterQuality"
"rendering::box::RenderBox" <|-- "rendering::texture::TextureBox"

class "rendering::sliver_group::RenderSliverCrossAxisGroup" {
  +void setupParentData()
  +double childMainAxisPosition()
  +double childCrossAxisPosition()
  +void performLayout()
  +void paint()
  +void applyPaintTransform()
  +bool hitTestChildren()
}

"rendering::sliver::RenderSliver" <|-- "rendering::sliver_group::RenderSliverCrossAxisGroup"
"rendering::object::ContainerRenderObjectMixin" <|-- "rendering::sliver_group::RenderSliverCrossAxisGroup"

class "rendering::sliver_group::RenderSliverMainAxisGroup" {
  +void setupParentData()
  +double childMainAxisPosition()
  +double childCrossAxisPosition()
  +void performLayout()
  +void paint()
  +void applyPaintTransform()
  +bool hitTestChildren()
  +void visitChildrenForSemantics()
}

"rendering::sliver::RenderSliver" <|-- "rendering::sliver_group::RenderSliverMainAxisGroup"
"rendering::object::ContainerRenderObjectMixin" <|-- "rendering::sliver_group::RenderSliverMainAxisGroup"

class "rendering::debug_overflow_indicator::_OverflowRegionData" {
  +Rect rect
  +String label
  +Offset labelOffset
  +double rotation
  +_OverflowSide side
}

"rendering::debug_overflow_indicator::_OverflowRegionData" o-- "dart::ui::Rect"
"rendering::debug_overflow_indicator::_OverflowRegionData" o-- "dart::ui::Offset"
"rendering::debug_overflow_indicator::_OverflowRegionData" o-- "rendering::debug_overflow_indicator::_OverflowSide"

class "rendering::debug_overflow_indicator::_OverflowSide" {
  +int index
  {static} +List<_OverflowSide> values
  {static} +_OverflowSide left
  {static} +_OverflowSide top
  {static} +_OverflowSide bottom
  {static} +_OverflowSide right
}

"rendering::debug_overflow_indicator::_OverflowSide" o-- "rendering::debug_overflow_indicator::_OverflowSide"
"dart::core::Enum" <|-- "rendering::debug_overflow_indicator::_OverflowSide"

abstract class "rendering::debug_overflow_indicator::DebugOverflowIndicatorMixin" {
  {static} -Color _black
  {static} -Color _yellow
  {static} -double _indicatorFraction
  {static} -double _indicatorFontSizePixels
  {static} -double _indicatorLabelPaddingPixels
  {static} -TextStyle _indicatorTextStyle
  {static} -Paint _indicatorPaint
  {static} -Paint _labelBackgroundPaint
  -List<TextPainter> _indicatorLabel
  -bool _overflowReportNeeded
  +void dispose()
  -String _formatPixels()
  -List<_OverflowRegionData> _calculateOverflowRegions()
  -void _reportOverflow()
  +void paintOverflowIndicator()
  +void reassemble()
}

"rendering::debug_overflow_indicator::DebugOverflowIndicatorMixin" o-- "dart::ui::Color"
"rendering::debug_overflow_indicator::DebugOverflowIndicatorMixin" o-- "painting::text_style::TextStyle"
"rendering::debug_overflow_indicator::DebugOverflowIndicatorMixin" o-- "dart::ui::Paint"

class "rendering::wrap::_RunMetrics" {
  +double mainAxisExtent
  +double crossAxisExtent
  +int childCount
}

class "rendering::wrap::WrapParentData" {
  -int _runIndex
}

"rendering::box::ContainerBoxParentData" <|-- "rendering::wrap::WrapParentData"

class "rendering::wrap::RenderWrap" {
  -Axis _direction
  -WrapAlignment _alignment
  -double _spacing
  -WrapAlignment _runAlignment
  -double _runSpacing
  -WrapCrossAlignment _crossAxisAlignment
  -TextDirection? _textDirection
  -VerticalDirection _verticalDirection
  -Clip _clipBehavior
  -bool _hasVisualOverflow
  -LayerHandle<ClipRectLayer> _clipRectLayer
  +Axis direction
  +WrapAlignment alignment
  +double spacing
  +WrapAlignment runAlignment
  +double runSpacing
  +WrapCrossAlignment crossAxisAlignment
  +TextDirection? textDirection
  +VerticalDirection verticalDirection
  +Clip clipBehavior
  -bool _debugHasNecessaryDirections
  +void setupParentData()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double? computeDistanceToActualBaseline()
  -double _getMainAxisExtent()
  -double _getCrossAxisExtent()
  -Offset _getOffset()
  -double _getChildCrossAxisOffset()
  +Size computeDryLayout()
  -Size _computeDryLayout()
  +void performLayout()
  +bool hitTestChildren()
  +void paint()
  +void dispose()
  +void debugFillProperties()
}

"rendering::wrap::RenderWrap" o-- "painting::basic_types::Axis"
"rendering::wrap::RenderWrap" o-- "rendering::wrap::WrapAlignment"
"rendering::wrap::RenderWrap" o-- "rendering::wrap::WrapCrossAlignment"
"rendering::wrap::RenderWrap" o-- "dart::ui::TextDirection"
"rendering::wrap::RenderWrap" o-- "painting::basic_types::VerticalDirection"
"rendering::wrap::RenderWrap" o-- "dart::ui::Clip"
"rendering::wrap::RenderWrap" o-- "rendering::layer::LayerHandle<ClipRectLayer>"
"rendering::box::RenderBox" <|-- "rendering::wrap::RenderWrap"
"rendering::object::ContainerRenderObjectMixin" <|-- "rendering::wrap::RenderWrap"
"rendering::box::RenderBoxContainerDefaultsMixin" <|-- "rendering::wrap::RenderWrap"

class "rendering::wrap::WrapAlignment" {
  +int index
  {static} +List<WrapAlignment> values
  {static} +WrapAlignment start
  {static} +WrapAlignment end
  {static} +WrapAlignment center
  {static} +WrapAlignment spaceBetween
  {static} +WrapAlignment spaceAround
  {static} +WrapAlignment spaceEvenly
}

"rendering::wrap::WrapAlignment" o-- "rendering::wrap::WrapAlignment"
"dart::core::Enum" <|-- "rendering::wrap::WrapAlignment"

class "rendering::wrap::WrapCrossAlignment" {
  +int index
  {static} +List<WrapCrossAlignment> values
  {static} +WrapCrossAlignment start
  {static} +WrapCrossAlignment end
  {static} +WrapCrossAlignment center
}

"rendering::wrap::WrapCrossAlignment" o-- "rendering::wrap::WrapCrossAlignment"
"dart::core::Enum" <|-- "rendering::wrap::WrapCrossAlignment"

class "rendering::table_border::TableBorder" {
  +BorderSide top
  +BorderSide right
  +BorderSide bottom
  +BorderSide left
  +BorderSide horizontalInside
  +BorderSide verticalInside
  +BorderRadius borderRadius
  +EdgeInsets dimensions
  +bool isUniform
  +int hashCode
  +TableBorder scale()
  {static} +TableBorder? lerp()
  +void paint()
  +bool ==()
  +String toString()
}

"rendering::table_border::TableBorder" o-- "painting::borders::BorderSide"
"rendering::table_border::TableBorder" o-- "painting::border_radius::BorderRadius"
"rendering::table_border::TableBorder" o-- "painting::edge_insets::EdgeInsets"

class "rendering::proxy_box::RenderProxyBox" {
}

"rendering::box::RenderBox" <|-- "rendering::proxy_box::RenderProxyBox"
"rendering::object::RenderObjectWithChildMixin" <|-- "rendering::proxy_box::RenderProxyBox"
"rendering::proxy_box::RenderProxyBoxMixin" <|-- "rendering::proxy_box::RenderProxyBox"

abstract class "rendering::proxy_box::RenderProxyBoxWithHitTestBehavior" {
  +HitTestBehavior behavior
  +bool hitTest()
  +bool hitTestSelf()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderProxyBoxWithHitTestBehavior" o-- "rendering::proxy_box::HitTestBehavior"
"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderProxyBoxWithHitTestBehavior"

class "rendering::proxy_box::RenderConstrainedBox" {
  -BoxConstraints _additionalConstraints
  +BoxConstraints additionalConstraints
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +void performLayout()
  +Size computeDryLayout()
  +void debugPaintSize()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderConstrainedBox" o-- "rendering::box::BoxConstraints"
"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderConstrainedBox"

class "rendering::proxy_box::RenderLimitedBox" {
  -double _maxWidth
  -double _maxHeight
  +double maxWidth
  +double maxHeight
  -BoxConstraints _limitConstraints()
  -Size _computeSize()
  +Size computeDryLayout()
  +void performLayout()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderLimitedBox"

class "rendering::proxy_box::RenderAspectRatio" {
  -double _aspectRatio
  +double aspectRatio
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  -Size _applyAspectRatio()
  +Size computeDryLayout()
  +void performLayout()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderAspectRatio"

class "rendering::proxy_box::RenderIntrinsicWidth" {
  -double? _stepWidth
  -double? _stepHeight
  +double? stepWidth
  +double? stepHeight
  {static} -double _applyStep()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  -Size _computeSize()
  +Size computeDryLayout()
  +void performLayout()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderIntrinsicWidth"

class "rendering::proxy_box::RenderIntrinsicHeight" {
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  -Size _computeSize()
  +Size computeDryLayout()
  +void performLayout()
}

"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderIntrinsicHeight"

class "rendering::proxy_box::RenderIgnoreBaseline" {
  +double? computeDistanceToActualBaseline()
}

"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderIgnoreBaseline"

class "rendering::proxy_box::RenderOpacity" {
  -int _alpha
  -double _opacity
  -bool _alwaysIncludeSemantics
  +bool alwaysNeedsCompositing
  +bool isRepaintBoundary
  +double opacity
  +bool alwaysIncludeSemantics
  +bool paintsChild()
  +OffsetLayer updateCompositedLayer()
  +void paint()
  +void visitChildrenForSemantics()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderOpacity"

class "rendering::proxy_box::RenderAnimatedOpacity" {
}

"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderAnimatedOpacity"
"rendering::proxy_box::RenderAnimatedOpacityMixin" <|-- "rendering::proxy_box::RenderAnimatedOpacity"

class "rendering::proxy_box::RenderShaderMask" {
  -Shader Function(Rect) _shaderCallback
  -BlendMode _blendMode
  +ShaderMaskLayer? layer
  +Shader Function(Rect) shaderCallback
  +BlendMode blendMode
  +bool alwaysNeedsCompositing
  +void paint()
}

"rendering::proxy_box::RenderShaderMask" o-- "rendering::proxy_box::Shader Function(Rect)"
"rendering::proxy_box::RenderShaderMask" o-- "dart::ui::BlendMode"
"rendering::proxy_box::RenderShaderMask" o-- "rendering::layer::ShaderMaskLayer"
"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderShaderMask"

class "rendering::proxy_box::RenderBackdropFilter" {
  -ImageFilter _filter
  -BlendMode _blendMode
  +BackdropFilterLayer? layer
  +ImageFilter filter
  +BlendMode blendMode
  +bool alwaysNeedsCompositing
  +void paint()
}

"rendering::proxy_box::RenderBackdropFilter" o-- "dart::ui::ImageFilter"
"rendering::proxy_box::RenderBackdropFilter" o-- "dart::ui::BlendMode"
"rendering::proxy_box::RenderBackdropFilter" o-- "rendering::layer::BackdropFilterLayer"
"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderBackdropFilter"

abstract class "rendering::proxy_box::CustomClipper" {
  -Listenable? _reclip
  +void addListener()
  +void removeListener()
  +T getClip()
  +Rect getApproximateClipRect()
  +bool shouldReclip()
  +String toString()
}

"rendering::proxy_box::CustomClipper" o-- "foundation::change_notifier::Listenable"
"foundation::change_notifier::Listenable" <|-- "rendering::proxy_box::CustomClipper"

class "rendering::proxy_box::ShapeBorderClipper" {
  +ShapeBorder shape
  +TextDirection? textDirection
  +Path getClip()
  +bool shouldReclip()
}

"rendering::proxy_box::ShapeBorderClipper" o-- "painting::borders::ShapeBorder"
"rendering::proxy_box::ShapeBorderClipper" o-- "dart::ui::TextDirection"
"rendering::proxy_box::CustomClipper" <|-- "rendering::proxy_box::ShapeBorderClipper"

abstract class "rendering::proxy_box::_RenderCustomClip" {
  -CustomClipper<T>? _clipper
  -T? _clip
  -Clip _clipBehavior
  -Paint? _debugPaint
  -TextPainter? _debugText
  +CustomClipper<T>? clipper
  -T _defaultClip
  +Clip clipBehavior
  +void attach()
  +void detach()
  -void _markNeedsClip()
  +void performLayout()
  -void _updateClip()
  +Rect? describeApproximatePaintClip()
  +void debugPaintSize()
  +void dispose()
}

"rendering::proxy_box::_RenderCustomClip" o-- "rendering::proxy_box::CustomClipper<T>"
"rendering::proxy_box::_RenderCustomClip" o-- "dart::ui::Clip"
"rendering::proxy_box::_RenderCustomClip" o-- "dart::ui::Paint"
"rendering::proxy_box::_RenderCustomClip" o-- "painting::text_painter::TextPainter"
"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::_RenderCustomClip"

class "rendering::proxy_box::RenderClipRect" {
  -Rect _defaultClip
  +bool hitTest()
  +void paint()
  +void debugPaintSize()
}

"rendering::proxy_box::RenderClipRect" o-- "dart::ui::Rect"
"rendering::proxy_box::_RenderCustomClip" <|-- "rendering::proxy_box::RenderClipRect"

class "rendering::proxy_box::RenderClipRRect" {
  -BorderRadiusGeometry _borderRadius
  -TextDirection? _textDirection
  +BorderRadiusGeometry borderRadius
  +TextDirection? textDirection
  -RRect _defaultClip
  +bool hitTest()
  +void paint()
  +void debugPaintSize()
}

"rendering::proxy_box::RenderClipRRect" o-- "painting::border_radius::BorderRadiusGeometry"
"rendering::proxy_box::RenderClipRRect" o-- "dart::ui::TextDirection"
"rendering::proxy_box::RenderClipRRect" o-- "dart::ui::RRect"
"rendering::proxy_box::_RenderCustomClip" <|-- "rendering::proxy_box::RenderClipRRect"

class "rendering::proxy_box::RenderClipOval" {
  -Rect? _cachedRect
  -Path _cachedPath
  -Rect _defaultClip
  -Path _getClipPath()
  +bool hitTest()
  +void paint()
  +void debugPaintSize()
}

"rendering::proxy_box::RenderClipOval" o-- "dart::ui::Rect"
"rendering::proxy_box::RenderClipOval" o-- "dart::ui::Path"
"rendering::proxy_box::_RenderCustomClip" <|-- "rendering::proxy_box::RenderClipOval"

class "rendering::proxy_box::RenderClipPath" {
  -Path _defaultClip
  +bool hitTest()
  +void paint()
  +void debugPaintSize()
}

"rendering::proxy_box::RenderClipPath" o-- "dart::ui::Path"
"rendering::proxy_box::_RenderCustomClip" <|-- "rendering::proxy_box::RenderClipPath"

abstract class "rendering::proxy_box::_RenderPhysicalModelBase" {
  -double _elevation
  -Color _shadowColor
  -Color _color
  +double elevation
  +Color shadowColor
  +Color color
  +void describeSemanticsConfiguration()
  +void debugFillProperties()
}

"rendering::proxy_box::_RenderPhysicalModelBase" o-- "dart::ui::Color"
"rendering::proxy_box::_RenderCustomClip" <|-- "rendering::proxy_box::_RenderPhysicalModelBase"

class "rendering::proxy_box::RenderPhysicalModel" {
  -BoxShape _shape
  -BorderRadius? _borderRadius
  +BoxShape shape
  +BorderRadius? borderRadius
  -RRect _defaultClip
  +bool hitTest()
  +void paint()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderPhysicalModel" o-- "painting::box_border::BoxShape"
"rendering::proxy_box::RenderPhysicalModel" o-- "painting::border_radius::BorderRadius"
"rendering::proxy_box::RenderPhysicalModel" o-- "dart::ui::RRect"
"rendering::proxy_box::_RenderPhysicalModelBase" <|-- "rendering::proxy_box::RenderPhysicalModel"

class "rendering::proxy_box::RenderPhysicalShape" {
  -Path _defaultClip
  +bool hitTest()
  +void paint()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderPhysicalShape" o-- "dart::ui::Path"
"rendering::proxy_box::_RenderPhysicalModelBase" <|-- "rendering::proxy_box::RenderPhysicalShape"

class "rendering::proxy_box::RenderDecoratedBox" {
  -BoxPainter? _painter
  -Decoration _decoration
  -DecorationPosition _position
  -ImageConfiguration _configuration
  +Decoration decoration
  +DecorationPosition position
  +ImageConfiguration configuration
  +void detach()
  +bool hitTestSelf()
  +void paint()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderDecoratedBox" o-- "painting::decoration::BoxPainter"
"rendering::proxy_box::RenderDecoratedBox" o-- "painting::decoration::Decoration"
"rendering::proxy_box::RenderDecoratedBox" o-- "rendering::proxy_box::DecorationPosition"
"rendering::proxy_box::RenderDecoratedBox" o-- "painting::image_provider::ImageConfiguration"
"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderDecoratedBox"

class "rendering::proxy_box::RenderTransform" {
  -Offset? _origin
  -AlignmentGeometry? _alignment
  -TextDirection? _textDirection
  +bool transformHitTests
  -Matrix4? _transform
  -FilterQuality? _filterQuality
  +Offset? origin
  +AlignmentGeometry? alignment
  +TextDirection? textDirection
  +bool alwaysNeedsCompositing
  +Matrix4 transform
  +FilterQuality? filterQuality
  -Matrix4? _effectiveTransform
  +void setIdentity()
  +void rotateX()
  +void rotateY()
  +void rotateZ()
  +void translate()
  +void scale()
  +bool hitTest()
  +bool hitTestChildren()
  +void paint()
  +void applyPaintTransform()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderTransform" o-- "dart::ui::Offset"
"rendering::proxy_box::RenderTransform" o-- "painting::alignment::AlignmentGeometry"
"rendering::proxy_box::RenderTransform" o-- "dart::ui::TextDirection"
"rendering::proxy_box::RenderTransform" o-- "vector_math::vector_math_64::Matrix4"
"rendering::proxy_box::RenderTransform" o-- "dart::ui::FilterQuality"
"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderTransform"

class "rendering::proxy_box::RenderFittedBox" {
  -Alignment? _resolvedAlignment
  -BoxFit _fit
  -AlignmentGeometry _alignment
  -TextDirection? _textDirection
  -bool? _hasVisualOverflow
  -Matrix4? _transform
  -Clip _clipBehavior
  +BoxFit fit
  +AlignmentGeometry alignment
  +TextDirection? textDirection
  +Clip clipBehavior
  -void _resolve()
  -void _markNeedResolution()
  -bool _fitAffectsLayout()
  +Size computeDryLayout()
  +void performLayout()
  -void _clearPaintData()
  -void _updatePaintData()
  -TransformLayer? _paintChildWithTransform()
  +void paint()
  +bool hitTestChildren()
  +bool paintsChild()
  +void applyPaintTransform()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderFittedBox" o-- "painting::alignment::Alignment"
"rendering::proxy_box::RenderFittedBox" o-- "painting::box_fit::BoxFit"
"rendering::proxy_box::RenderFittedBox" o-- "painting::alignment::AlignmentGeometry"
"rendering::proxy_box::RenderFittedBox" o-- "dart::ui::TextDirection"
"rendering::proxy_box::RenderFittedBox" o-- "vector_math::vector_math_64::Matrix4"
"rendering::proxy_box::RenderFittedBox" o-- "dart::ui::Clip"
"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderFittedBox"

class "rendering::proxy_box::RenderFractionalTranslation" {
  -Offset _translation
  +bool transformHitTests
  +Offset translation
  +bool hitTest()
  +bool hitTestChildren()
  +void paint()
  +void applyPaintTransform()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderFractionalTranslation" o-- "dart::ui::Offset"
"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderFractionalTranslation"

class "rendering::proxy_box::RenderPointerListener" {
  +void Function(PointerDownEvent)? onPointerDown
  +void Function(PointerMoveEvent)? onPointerMove
  +void Function(PointerUpEvent)? onPointerUp
  +void Function(PointerHoverEvent)? onPointerHover
  +void Function(PointerCancelEvent)? onPointerCancel
  +void Function(PointerPanZoomStartEvent)? onPointerPanZoomStart
  +void Function(PointerPanZoomUpdateEvent)? onPointerPanZoomUpdate
  +void Function(PointerPanZoomEndEvent)? onPointerPanZoomEnd
  +void Function(PointerSignalEvent)? onPointerSignal
  +Size computeSizeForNoChild()
  +void handleEvent()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderPointerListener" o-- "rendering::proxy_box::void Function(PointerDownEvent)"
"rendering::proxy_box::RenderPointerListener" o-- "rendering::proxy_box::void Function(PointerMoveEvent)"
"rendering::proxy_box::RenderPointerListener" o-- "rendering::proxy_box::void Function(PointerUpEvent)"
"rendering::proxy_box::RenderPointerListener" o-- "services::mouse_tracking::void Function(PointerHoverEvent)"
"rendering::proxy_box::RenderPointerListener" o-- "rendering::proxy_box::void Function(PointerCancelEvent)"
"rendering::proxy_box::RenderPointerListener" o-- "rendering::proxy_box::void Function(PointerPanZoomStartEvent)"
"rendering::proxy_box::RenderPointerListener" o-- "rendering::proxy_box::void Function(PointerPanZoomUpdateEvent)"
"rendering::proxy_box::RenderPointerListener" o-- "rendering::proxy_box::void Function(PointerPanZoomEndEvent)"
"rendering::proxy_box::RenderPointerListener" o-- "rendering::proxy_box::void Function(PointerSignalEvent)"
"rendering::proxy_box::RenderProxyBoxWithHitTestBehavior" <|-- "rendering::proxy_box::RenderPointerListener"

class "rendering::proxy_box::RenderMouseRegion" {
  -bool _opaque
  +void Function(PointerEnterEvent)? onEnter
  +void Function(PointerHoverEvent)? onHover
  +void Function(PointerExitEvent)? onExit
  -MouseCursor _cursor
  -bool _validForMouseTracker
  +bool opaque
  +HitTestBehavior? hitTestBehavior
  +MouseCursor cursor
  +bool validForMouseTracker
  +bool hitTest()
  +void handleEvent()
  +void attach()
  +void detach()
  +Size computeSizeForNoChild()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderMouseRegion" o-- "services::mouse_tracking::void Function(PointerEnterEvent)"
"rendering::proxy_box::RenderMouseRegion" o-- "services::mouse_tracking::void Function(PointerHoverEvent)"
"rendering::proxy_box::RenderMouseRegion" o-- "services::mouse_tracking::void Function(PointerExitEvent)"
"rendering::proxy_box::RenderMouseRegion" o-- "services::mouse_cursor::MouseCursor"
"rendering::proxy_box::RenderMouseRegion" o-- "rendering::proxy_box::HitTestBehavior"
"rendering::proxy_box::RenderProxyBoxWithHitTestBehavior" <|-- "rendering::proxy_box::RenderMouseRegion"
"services::mouse_tracking::MouseTrackerAnnotation" <|-- "rendering::proxy_box::RenderMouseRegion"

class "rendering::proxy_box::RenderRepaintBoundary" {
  -int _debugSymmetricPaintCount
  -int _debugAsymmetricPaintCount
  +bool isRepaintBoundary
  +int debugSymmetricPaintCount
  +int debugAsymmetricPaintCount
  +Future<Image> toImage()
  +Image toImageSync()
  +void debugResetMetrics()
  +void debugRegisterRepaintBoundaryPaint()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderRepaintBoundary"

class "rendering::proxy_box::RenderIgnorePointer" {
  -bool _ignoring
  -bool? _ignoringSemantics
  +bool ignoring
  +bool? ignoringSemantics
  +bool hitTest()
  +void visitChildrenForSemantics()
  +void describeSemanticsConfiguration()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderIgnorePointer"

class "rendering::proxy_box::RenderOffstage" {
  -bool _offstage
  +bool offstage
  +bool sizedByParent
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double? computeDistanceToActualBaseline()
  +Size computeDryLayout()
  +void performResize()
  +void performLayout()
  +bool hitTest()
  +bool paintsChild()
  +void paint()
  +void visitChildrenForSemantics()
  +void debugFillProperties()
  +List<DiagnosticsNode> debugDescribeChildren()
}

"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderOffstage"

class "rendering::proxy_box::RenderAbsorbPointer" {
  -bool _absorbing
  -bool? _ignoringSemantics
  +bool absorbing
  +bool? ignoringSemantics
  +bool hitTest()
  +void visitChildrenForSemantics()
  +void describeSemanticsConfiguration()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderAbsorbPointer"

class "rendering::proxy_box::RenderMetaData" {
  +dynamic metaData
  +void debugFillProperties()
}

"rendering::proxy_box::RenderProxyBoxWithHitTestBehavior" <|-- "rendering::proxy_box::RenderMetaData"

class "rendering::proxy_box::RenderSemanticsGestureHandler" {
  -Set<SemanticsAction>? _validActions
  -void Function()? _onTap
  -void Function()? _onLongPress
  -void Function(DragUpdateDetails)? _onHorizontalDragUpdate
  -void Function(DragUpdateDetails)? _onVerticalDragUpdate
  +double scrollFactor
  +Set<SemanticsAction>? validActions
  +void Function()? onTap
  +void Function()? onLongPress
  +void Function(DragUpdateDetails)? onHorizontalDragUpdate
  +void Function(DragUpdateDetails)? onVerticalDragUpdate
  +void describeSemanticsConfiguration()
  -bool _isValidAction()
  -void _performSemanticScrollLeft()
  -void _performSemanticScrollRight()
  -void _performSemanticScrollUp()
  -void _performSemanticScrollDown()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderSemanticsGestureHandler" o-- "gestures::tap::void Function()"
"rendering::proxy_box::RenderSemanticsGestureHandler" o-- "gestures::long_press::void Function()"
"rendering::proxy_box::RenderSemanticsGestureHandler" o-- "gestures::drag_details::void Function(DragUpdateDetails)"
"rendering::proxy_box::RenderProxyBoxWithHitTestBehavior" <|-- "rendering::proxy_box::RenderSemanticsGestureHandler"

class "rendering::proxy_box::RenderSemanticsAnnotations" {
  -SemanticsProperties _properties
  -bool _container
  -bool _explicitChildNodes
  -bool _excludeSemantics
  -bool _blockUserActions
  -AttributedString? _attributedLabel
  -AttributedString? _attributedValue
  -AttributedString? _attributedIncreasedValue
  -AttributedString? _attributedDecreasedValue
  -AttributedString? _attributedHint
  -TextDirection? _textDirection
  +SemanticsProperties properties
  +bool container
  +bool explicitChildNodes
  +bool excludeSemantics
  +bool blockUserActions
  +TextDirection? textDirection
  -void _updateAttributedFields()
  -AttributedString? _effectiveAttributedLabel()
  -AttributedString? _effectiveAttributedValue()
  -AttributedString? _effectiveAttributedIncreasedValue()
  -AttributedString? _effectiveAttributedDecreasedValue()
  -AttributedString? _effectiveAttributedHint()
  +void visitChildrenForSemantics()
  +void describeSemanticsConfiguration()
  -void _performTap()
  -void _performLongPress()
  -void _performDismiss()
  -void _performScrollLeft()
  -void _performScrollRight()
  -void _performScrollUp()
  -void _performScrollDown()
  -void _performIncrease()
  -void _performDecrease()
  -void _performCopy()
  -void _performCut()
  -void _performPaste()
  -void _performMoveCursorForwardByCharacter()
  -void _performMoveCursorBackwardByCharacter()
  -void _performMoveCursorForwardByWord()
  -void _performMoveCursorBackwardByWord()
  -void _performSetSelection()
  -void _performSetText()
  -void _performDidGainAccessibilityFocus()
  -void _performDidLoseAccessibilityFocus()
}

"rendering::proxy_box::RenderSemanticsAnnotations" o-- "semantics::semantics::SemanticsProperties"
"rendering::proxy_box::RenderSemanticsAnnotations" o-- "semantics::semantics::AttributedString"
"rendering::proxy_box::RenderSemanticsAnnotations" o-- "dart::ui::TextDirection"
"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderSemanticsAnnotations"

class "rendering::proxy_box::RenderBlockSemantics" {
  -bool _blocking
  +bool blocking
  +void describeSemanticsConfiguration()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderBlockSemantics"

class "rendering::proxy_box::RenderMergeSemantics" {
  +void describeSemanticsConfiguration()
}

"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderMergeSemantics"

class "rendering::proxy_box::RenderExcludeSemantics" {
  -bool _excluding
  +bool excluding
  +void visitChildrenForSemantics()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderExcludeSemantics"

class "rendering::proxy_box::RenderIndexedSemantics" {
  -int _index
  +int index
  +void describeSemanticsConfiguration()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderIndexedSemantics"

class "rendering::proxy_box::RenderLeaderLayer" {
  -LayerLink _link
  -Size? _previousLayoutSize
  +LayerLink link
  +bool alwaysNeedsCompositing
  +void performLayout()
  +void paint()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderLeaderLayer" o-- "rendering::layer::LayerLink"
"rendering::proxy_box::RenderLeaderLayer" o-- "dart::ui::Size"
"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderLeaderLayer"

class "rendering::proxy_box::RenderFollowerLayer" {
  -LayerLink _link
  -bool _showWhenUnlinked
  -Offset _offset
  -Alignment _leaderAnchor
  -Alignment _followerAnchor
  +LayerLink link
  +bool showWhenUnlinked
  +Offset offset
  +Alignment leaderAnchor
  +Alignment followerAnchor
  +bool alwaysNeedsCompositing
  +FollowerLayer? layer
  +void detach()
  +Matrix4 getCurrentTransform()
  +bool hitTest()
  +bool hitTestChildren()
  +void paint()
  +void applyPaintTransform()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderFollowerLayer" o-- "rendering::layer::LayerLink"
"rendering::proxy_box::RenderFollowerLayer" o-- "dart::ui::Offset"
"rendering::proxy_box::RenderFollowerLayer" o-- "painting::alignment::Alignment"
"rendering::proxy_box::RenderFollowerLayer" o-- "rendering::layer::FollowerLayer"
"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderFollowerLayer"

class "rendering::proxy_box::RenderAnnotatedRegion" {
  -T _value
  -bool _sized
  +bool alwaysNeedsCompositing
  +T value
  +bool sized
  +void paint()
}

"rendering::proxy_box::RenderProxyBox" <|-- "rendering::proxy_box::RenderAnnotatedRegion"

class "rendering::proxy_box::HitTestBehavior" {
  +int index
  {static} +List<HitTestBehavior> values
  {static} +HitTestBehavior deferToChild
  {static} +HitTestBehavior opaque
  {static} +HitTestBehavior translucent
}

"rendering::proxy_box::HitTestBehavior" o-- "rendering::proxy_box::HitTestBehavior"
"dart::core::Enum" <|-- "rendering::proxy_box::HitTestBehavior"

class "rendering::proxy_box::DecorationPosition" {
  +int index
  {static} +List<DecorationPosition> values
  {static} +DecorationPosition background
  {static} +DecorationPosition foreground
}

"rendering::proxy_box::DecorationPosition" o-- "rendering::proxy_box::DecorationPosition"
"dart::core::Enum" <|-- "rendering::proxy_box::DecorationPosition"

abstract class "rendering::proxy_box::RenderProxyBoxMixin" {
  +void setupParentData()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double? computeDistanceToActualBaseline()
  +Size computeDryLayout()
  +void performLayout()
  +Size computeSizeForNoChild()
  +bool hitTestChildren()
  +void applyPaintTransform()
  +void paint()
}

abstract class "rendering::proxy_box::RenderAnimatedOpacityMixin" {
  -int? _alpha
  -bool? _currentlyIsRepaintBoundary
  -Animation<double>? _opacity
  -bool? _alwaysIncludeSemantics
  +bool isRepaintBoundary
  +Animation<double> opacity
  +bool alwaysIncludeSemantics
  +OffsetLayer updateCompositedLayer()
  +void attach()
  +void detach()
  -void _updateOpacity()
  +bool paintsChild()
  +void paint()
  +void visitChildrenForSemantics()
  +void debugFillProperties()
}

"rendering::proxy_box::RenderAnimatedOpacityMixin" o-- "animation::animation::Animation<double>"

abstract class "rendering::viewport_offset::ViewportOffset" {
  +double pixels
  +bool hasPixels
  +ScrollDirection userScrollDirection
  +bool allowImplicitScrolling
  +bool applyViewportDimension()
  +bool applyContentDimensions()
  +void correctBy()
  +void jumpTo()
  +Future<void> animateTo()
  +Future<void> moveTo()
  +String toString()
  +void debugFillDescription()
}

"rendering::viewport_offset::ViewportOffset" o-- "rendering::viewport_offset::ScrollDirection"
"foundation::change_notifier::ChangeNotifier" <|-- "rendering::viewport_offset::ViewportOffset"

class "rendering::viewport_offset::_FixedViewportOffset" {
  -double _pixels
  +double pixels
  +bool hasPixels
  +ScrollDirection userScrollDirection
  +bool allowImplicitScrolling
  +bool applyViewportDimension()
  +bool applyContentDimensions()
  +void correctBy()
  +void jumpTo()
  +Future<void> animateTo()
}

"rendering::viewport_offset::_FixedViewportOffset" o-- "rendering::viewport_offset::ScrollDirection"
"rendering::viewport_offset::ViewportOffset" <|-- "rendering::viewport_offset::_FixedViewportOffset"

class "rendering::viewport_offset::ScrollDirection" {
  +int index
  {static} +List<ScrollDirection> values
  {static} +ScrollDirection idle
  {static} +ScrollDirection forward
  {static} +ScrollDirection reverse
}

"rendering::viewport_offset::ScrollDirection" o-- "rendering::viewport_offset::ScrollDirection"
"dart::core::Enum" <|-- "rendering::viewport_offset::ScrollDirection"

abstract class "rendering::sliver_multi_box_adaptor::RenderSliverBoxChildManager" {
  +int childCount
  +void createChild()
  +void removeChild()
  +double estimateMaxScrollOffset()
  +void didAdoptChild()
  +void setDidUnderflow()
  +void didStartLayout()
  +void didFinishLayout()
  +bool debugAssertChildListLocked()
}

class "rendering::sliver_multi_box_adaptor::SliverMultiBoxAdaptorParentData" {
  +int? index
  -bool _keptAlive
  +bool keptAlive
  +String toString()
}

"rendering::sliver::SliverLogicalParentData" <|-- "rendering::sliver_multi_box_adaptor::SliverMultiBoxAdaptorParentData"
"rendering::object::ContainerParentDataMixin" <|-- "rendering::sliver_multi_box_adaptor::SliverMultiBoxAdaptorParentData"
"rendering::sliver_multi_box_adaptor::KeepAliveParentDataMixin" <|-- "rendering::sliver_multi_box_adaptor::SliverMultiBoxAdaptorParentData"

abstract class "rendering::sliver_multi_box_adaptor::RenderSliverMultiBoxAdaptor" {
  -RenderSliverBoxChildManager _childManager
  -Map<int, RenderBox> _keepAliveBucket
  -List<RenderBox> _debugDanglingKeepAlives
  -bool _debugChildIntegrityEnabled
  +RenderSliverBoxChildManager childManager
  +bool debugChildIntegrityEnabled
  +void setupParentData()
  +void adoptChild()
  -bool _debugAssertChildListLocked()
  -bool _debugVerifyChildOrder()
  +void insert()
  +void move()
  +void remove()
  +void removeAll()
  -void _createOrObtainChild()
  -void _destroyOrCacheChild()
  +void attach()
  +void detach()
  +void redepthChildren()
  +void visitChildren()
  +void visitChildrenForSemantics()
  #bool addInitialChild()
  #RenderBox? insertAndLayoutLeadingChild()
  #RenderBox? insertAndLayoutChild()
  #void collectGarbage()
  +int indexOf()
  #double paintExtentOf()
  +bool hitTestChildren()
  +double childMainAxisPosition()
  +double? childScrollOffset()
  +bool paintsChild()
  +void applyPaintTransform()
  +void paint()
  +void debugFillProperties()
  +bool debugAssertChildListIsNonEmptyAndContiguous()
  +List<DiagnosticsNode> debugDescribeChildren()
}

"rendering::sliver_multi_box_adaptor::RenderSliverMultiBoxAdaptor" o-- "rendering::sliver_multi_box_adaptor::RenderSliverBoxChildManager"
"rendering::sliver::RenderSliver" <|-- "rendering::sliver_multi_box_adaptor::RenderSliverMultiBoxAdaptor"
"rendering::object::ContainerRenderObjectMixin" <|-- "rendering::sliver_multi_box_adaptor::RenderSliverMultiBoxAdaptor"
"rendering::sliver::RenderSliverHelpers" <|-- "rendering::sliver_multi_box_adaptor::RenderSliverMultiBoxAdaptor"
"rendering::sliver_multi_box_adaptor::RenderSliverWithKeepAliveMixin" <|-- "rendering::sliver_multi_box_adaptor::RenderSliverMultiBoxAdaptor"

abstract class "rendering::sliver_multi_box_adaptor::KeepAliveParentDataMixin" {
  +bool keepAlive
  +bool keptAlive
}

"rendering::object::ParentData" <|-- "rendering::sliver_multi_box_adaptor::KeepAliveParentDataMixin"

abstract class "rendering::sliver_multi_box_adaptor::RenderSliverWithKeepAliveMixin" {
  +void setupParentData()
}

"rendering::sliver::RenderSliver" <|-- "rendering::sliver_multi_box_adaptor::RenderSliverWithKeepAliveMixin"

abstract class "rendering::flow::FlowPaintingContext" {
  +Size size
  +int childCount
  +Size? getChildSize()
  +void paintChild()
}

"rendering::flow::FlowPaintingContext" o-- "dart::ui::Size"

abstract class "rendering::flow::FlowDelegate" {
  -Listenable? _repaint
  +Size getSize()
  +BoxConstraints getConstraintsForChild()
  +void paintChildren()
  +bool shouldRelayout()
  +bool shouldRepaint()
  +String toString()
}

"rendering::flow::FlowDelegate" o-- "foundation::change_notifier::Listenable"

class "rendering::flow::FlowParentData" {
  -Matrix4? _transform
}

"rendering::flow::FlowParentData" o-- "vector_math::vector_math_64::Matrix4"
"rendering::box::ContainerBoxParentData" <|-- "rendering::flow::FlowParentData"

class "rendering::flow::RenderFlow" {
  -FlowDelegate _delegate
  -Clip _clipBehavior
  -List<RenderBox> _randomAccessChildren
  -List<int> _lastPaintOrder
  -PaintingContext? _paintingContext
  -Offset? _paintingOffset
  -LayerHandle<ClipRectLayer> _clipRectLayer
  +FlowDelegate delegate
  +Clip clipBehavior
  +bool isRepaintBoundary
  +void setupParentData()
  +void attach()
  +void detach()
  -Size _getSize()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +Size computeDryLayout()
  +void performLayout()
  +Size? getChildSize()
  +void paintChild()
  -void _paintWithDelegate()
  +void paint()
  +void dispose()
  +bool hitTestChildren()
  +void applyPaintTransform()
}

"rendering::flow::RenderFlow" o-- "rendering::flow::FlowDelegate"
"rendering::flow::RenderFlow" o-- "dart::ui::Clip"
"rendering::flow::RenderFlow" o-- "rendering::object::PaintingContext"
"rendering::flow::RenderFlow" o-- "dart::ui::Offset"
"rendering::flow::RenderFlow" o-- "rendering::layer::LayerHandle<ClipRectLayer>"
"rendering::box::RenderBox" <|-- "rendering::flow::RenderFlow"
"rendering::object::ContainerRenderObjectMixin" <|-- "rendering::flow::RenderFlow"
"rendering::box::RenderBoxContainerDefaultsMixin" <|-- "rendering::flow::RenderFlow"
"rendering::flow::FlowPaintingContext" <|-- "rendering::flow::RenderFlow"

class "rendering::object::ParentData" {
  #void detach()
  +String toString()
}

class "rendering::object::PaintingContext" {
  -ContainerLayer _containerLayer
  +Rect estimatedBounds
  -PictureLayer? _currentLayer
  -PictureRecorder? _recorder
  -Canvas? _canvas
  -bool _isRecording
  +Canvas canvas
  {static} +void repaintCompositedChild()
  {static} -void _repaintCompositedChild()
  {static} +void updateLayerProperties()
  {static} +void debugInstrumentRepaintCompositedChild()
  +void paintChild()
  -void _compositeChild()
  #void appendLayer()
  -void _startRecording()
  +void Function() addCompositionCallback()
  #void stopRecordingIfNeeded()
  +void setIsComplexHint()
  +void setWillChangeHint()
  +void addLayer()
  +void pushLayer()
  #PaintingContext createChildContext()
  +ClipRectLayer? pushClipRect()
  +ClipRRectLayer? pushClipRRect()
  +ClipPathLayer? pushClipPath()
  +ColorFilterLayer pushColorFilter()
  +TransformLayer? pushTransform()
  +OpacityLayer pushOpacity()
  +String toString()
}

"rendering::object::PaintingContext" o-- "rendering::layer::ContainerLayer"
"rendering::object::PaintingContext" o-- "dart::ui::Rect"
"rendering::object::PaintingContext" o-- "rendering::layer::PictureLayer"
"rendering::object::PaintingContext" o-- "dart::ui::PictureRecorder"
"rendering::object::PaintingContext" o-- "dart::ui::Canvas"
"painting::clip::ClipContext" <|-- "rendering::object::PaintingContext"

abstract class "rendering::object::Constraints" {
  +bool isTight
  +bool isNormalized
  +bool debugAssertIsValid()
}

class "rendering::object::_LocalSemanticsHandle" {
  -PipelineOwner _owner
  +void Function()? listener
  +void dispose()
}

"rendering::object::_LocalSemanticsHandle" o-- "rendering::object::PipelineOwner"
"rendering::object::_LocalSemanticsHandle" o-- "dart::ui::void Function()"

class "rendering::object::PipelineOwner" {
  +void Function()? onNeedVisualUpdate
  +void Function()? onSemanticsOwnerCreated
  +dynamic onSemanticsUpdate
  +void Function()? onSemanticsOwnerDisposed
  -RenderObject? _rootNode
  -bool _shouldMergeDirtyNodes
  -List<RenderObject> _nodesNeedingLayout
  -bool _debugDoingLayout
  -bool _debugDoingChildLayout
  -bool _debugAllowMutationsToDirtySubtrees
  -List<RenderObject> _nodesNeedingCompositingBitsUpdate
  -List<RenderObject> _nodesNeedingPaint
  -bool _debugDoingPaint
  -SemanticsOwner? _semanticsOwner
  -int _outstandingSemanticsHandles
  -bool _debugDoingSemantics
  -Set<RenderObject> _nodesNeedingSemantics
  -Set<PipelineOwner> _children
  -PipelineManifold? _manifold
  -PipelineOwner? _debugParent
  +RenderObject? rootNode
  +bool debugDoingLayout
  +bool debugDoingPaint
  +SemanticsOwner? semanticsOwner
  +int debugOutstandingSemanticsHandles
  -String _debugRootSuffixForTimelineEventNames
  -bool _debugAllowChildListModifications
  +void requestVisualUpdate()
  +void flushLayout()
  -void _enableMutationsToDirtySubtrees()
  +void flushCompositingBits()
  +void flushPaint()
  +dynamic ensureSemantics()
  -void _updateSemanticsOwner()
  -void _didDisposeSemanticsHandle()
  +void flushSemantics()
  +List<DiagnosticsNode> debugDescribeChildren()
  +void debugFillProperties()
  -bool _debugSetParent()
  +void attach()
  +void detach()
  +void adoptChild()
  +void dropChild()
  +void visitChildren()
  +void dispose()
}

"rendering::object::PipelineOwner" o-- "dart::ui::void Function()"
"rendering::object::PipelineOwner" o-- "rendering::object::RenderObject"
"rendering::object::PipelineOwner" o-- "semantics::semantics::SemanticsOwner"
"rendering::object::PipelineOwner" o-- "rendering::object::PipelineManifold"
"rendering::object::PipelineOwner" o-- "rendering::object::PipelineOwner"
"foundation::diagnostics::DiagnosticableTreeMixin" <|-- "rendering::object::PipelineOwner"

abstract class "rendering::object::PipelineManifold" {
  +bool semanticsEnabled
  +void requestVisualUpdate()
}

"foundation::change_notifier::Listenable" <|-- "rendering::object::PipelineManifold"

abstract class "rendering::object::RenderObject" {
  -bool _debugDisposed
  +ParentData? parentData
  -int _depth
  -RenderObject? _parent
  +Object? debugCreator
  -bool _debugDoingThisResize
  -bool _debugDoingThisLayout
  {static} -RenderObject? _debugActiveLayout
  -bool? _debugCanParentUseSize
  -bool _debugMutationsLocked
  -PipelineOwner? _owner
  -bool _needsLayout
  -RenderObject? _relayoutBoundary
  -bool _doingThisLayoutWithCallback
  -Constraints? _constraints
  {static} +bool debugCheckingIntrinsics
  -bool _debugDoingThisPaint
  {static} -RenderObject? _debugActivePaint
  -bool _wasRepaintBoundary
  -LayerHandle<ContainerLayer> _layerHandle
  -bool _needsCompositingBitsUpdate
  -bool _needsCompositing
  -bool _needsPaint
  -bool _needsCompositedLayerUpdate
  -SemanticsConfiguration? _cachedSemanticsConfiguration
  -bool _needsSemanticsUpdate
  -SemanticsNode? _semantics
  +bool? debugDisposed
  +int depth
  +RenderObject? parent
  +bool debugDoingThisResize
  +bool debugDoingThisLayout
  {static} +RenderObject? debugActiveLayout
  +bool debugCanParentUseSize
  -bool _debugCanPerformMutations
  +RenderObject? debugLayoutParent
  +PipelineOwner? owner
  +bool attached
  +bool debugNeedsLayout
  +bool debugDoingThisLayoutWithCallback
  +Constraints constraints
  +bool sizedByParent
  +bool debugDoingThisPaint
  {static} +RenderObject? debugActivePaint
  +bool isRepaintBoundary
  +bool alwaysNeedsCompositing
  +ContainerLayer? layer
  +ContainerLayer? debugLayer
  +bool needsCompositing
  +bool debugNeedsPaint
  +bool debugNeedsCompositedLayerUpdate
  +Rect paintBounds
  -SemanticsConfiguration _semanticsConfiguration
  +Rect semanticBounds
  +SemanticsNode? debugSemantics
  +void reassemble()
  +void dispose()
  +void setupParentData()
  #void redepthChild()
  #void redepthChildren()
  #void adoptChild()
  #void dropChild()
  +void visitChildren()
  -void _reportException()
  {static} -T _withDebugActiveLayoutCleared()
  +void attach()
  +void detach()
  #void debugAssertDoesMeetConstraints()
  -bool _debugSubtreeRelayoutRootAlreadyMarkedNeedsLayout()
  +void markNeedsLayout()
  #void markParentNeedsLayout()
  +void markNeedsLayoutForSizedByParentChange()
  -void _cleanRelayoutBoundary()
  -void _propagateRelayoutBoundary()
  {static} -void _cleanChildRelayoutBoundary()
  {static} -void _propagateRelayoutBoundaryToChild()
  +void scheduleInitialLayout()
  -void _layoutWithoutResize()
  +void layout()
  #void debugResetSize()
  #void performResize()
  #void performLayout()
  #void invokeLayoutCallback()
  +void debugRegisterRepaintBoundaryPaint()
  +OffsetLayer updateCompositedLayer()
  +void markNeedsCompositingBitsUpdate()
  -void _updateCompositingBits()
  +void markNeedsPaint()
  +void markNeedsCompositedLayerUpdate()
  -void _skippedPaintingOnLayer()
  +void scheduleInitialPaint()
  +void replaceRootLayer()
  -void _paintWithContext()
  +void debugPaint()
  +void paint()
  +void applyPaintTransform()
  +bool paintsChild()
  +Matrix4 getTransformTo()
  +Rect? describeApproximatePaintClip()
  +Rect? describeSemanticsClip()
  +void scheduleInitialSemantics()
  #void describeSemanticsConfiguration()
  +void sendSemanticsEvent()
  +void clearSemantics()
  +void markNeedsSemanticsUpdate()
  -void _updateSemantics()
  -_SemanticsFragment _getSemanticsForParent()
  -void _marksExplicitInMergeGroup()
  +void visitChildrenForSemantics()
  +void assembleSemanticsNode()
  +void handleEvent()
  +String toStringShort()
  +String toString()
  +String toStringDeep()
  +String toStringShallow()
  #void debugFillProperties()
  +List<DiagnosticsNode> debugDescribeChildren()
  +void showOnScreen()
  +DiagnosticsNode describeForError()
}

"rendering::object::RenderObject" o-- "rendering::object::ParentData"
"rendering::object::RenderObject" o-- "rendering::object::RenderObject"
"rendering::object::RenderObject" o-- "rendering::object::PipelineOwner"
"rendering::object::RenderObject" o-- "rendering::object::Constraints"
"rendering::object::RenderObject" o-- "rendering::layer::LayerHandle<ContainerLayer>"
"rendering::object::RenderObject" o-- "semantics::semantics::SemanticsConfiguration"
"rendering::object::RenderObject" o-- "semantics::semantics::SemanticsNode"
"rendering::object::RenderObject" o-- "rendering::layer::ContainerLayer"
"rendering::object::RenderObject" o-- "dart::ui::Rect"
"foundation::diagnostics::DiagnosticableTreeMixin" <|-- "rendering::object::RenderObject"
"gestures::hit_test::HitTestTarget" <|-- "rendering::object::RenderObject"

abstract class "rendering::object::_SemanticsFragment" {
  +bool dropsSemanticsOfPreviousSiblings
  +List<_InterestingSemanticsFragment> mergeUpFragments
  +void addAll()
}

class "rendering::object::_ContainerSemanticsFragment" {
  +List<List<_InterestingSemanticsFragment>> siblingMergeGroups
  +List<_InterestingSemanticsFragment> mergeUpFragments
  +void addAll()
}

"rendering::object::_SemanticsFragment" <|-- "rendering::object::_ContainerSemanticsFragment"

abstract class "rendering::object::_InterestingSemanticsFragment" {
  -List<RenderObject> _ancestorChain
  -Set<SemanticsTag>? _tagsForChildren
  +RenderObject owner
  +SemanticsConfiguration? config
  +bool hasConfigForParent
  +List<_InterestingSemanticsFragment> mergeUpFragments
  +void compileChildren()
  +void markAsExplicit()
  +void addAll()
  +void addTags()
  +void addAncestor()
}

"rendering::object::_InterestingSemanticsFragment" o-- "rendering::object::RenderObject"
"rendering::object::_InterestingSemanticsFragment" o-- "semantics::semantics::SemanticsConfiguration"
"rendering::object::_SemanticsFragment" <|-- "rendering::object::_InterestingSemanticsFragment"

class "rendering::object::_RootSemanticsFragment" {
  -List<_InterestingSemanticsFragment> _children
  +SemanticsConfiguration? config
  +void compileChildren()
  +void markAsExplicit()
  +void addAll()
}

"rendering::object::_RootSemanticsFragment" o-- "semantics::semantics::SemanticsConfiguration"
"rendering::object::_InterestingSemanticsFragment" <|-- "rendering::object::_RootSemanticsFragment"

class "rendering::object::_IncompleteSemanticsFragment" {
  +SemanticsConfiguration config
  +void addAll()
  +void compileChildren()
  +void markAsExplicit()
}

"rendering::object::_IncompleteSemanticsFragment" o-- "semantics::semantics::SemanticsConfiguration"
"rendering::object::_InterestingSemanticsFragment" <|-- "rendering::object::_IncompleteSemanticsFragment"

class "rendering::object::_SwitchableSemanticsFragment" {
  -bool _mergeIntoParent
  -SemanticsConfiguration _config
  -bool _isConfigWritable
  -bool _mergesToSibling
  -List<List<_InterestingSemanticsFragment>> _siblingMergeGroups
  -List<_InterestingSemanticsFragment> _children
  -bool _isExplicit
  +SemanticsConfiguration? config
  -bool _needsGeometryUpdate
  -void _mergeSiblingGroup()
  +void compileChildren()
  -_SemanticsGeometry? _computeSemanticsGeometry()
  +void addAll()
  +void addTags()
  -void _ensureConfigIsWritable()
  +void markAsExplicit()
}

"rendering::object::_SwitchableSemanticsFragment" o-- "semantics::semantics::SemanticsConfiguration"
"rendering::object::_InterestingSemanticsFragment" <|-- "rendering::object::_SwitchableSemanticsFragment"

class "rendering::object::_SemanticsGeometry" {
  -Rect? _paintClipRect
  -Rect? _semanticsClipRect
  -Matrix4 _transform
  -Rect _rect
  {static} -Matrix4 _temporaryTransformHolder
  -bool _markAsHidden
  +Matrix4 transform
  +Rect? semanticsClipRect
  +Rect? paintClipRect
  +Rect rect
  +bool dropFromTree
  +bool markAsHidden
  -void _computeValues()
  {static} -Rect? _transformRect()
  {static} -void _applyIntermediatePaintTransforms()
  {static} -Rect? _intersectRects()
}

"rendering::object::_SemanticsGeometry" o-- "dart::ui::Rect"
"rendering::object::_SemanticsGeometry" o-- "vector_math::vector_math_64::Matrix4"

class "rendering::object::DiagnosticsDebugCreator" {
}

"foundation::diagnostics::DiagnosticsProperty" <|-- "rendering::object::DiagnosticsDebugCreator"

abstract class "rendering::object::RenderObjectWithChildMixin" {
  -ChildType? _child
  +ChildType? child
  +bool debugValidateChild()
  +void attach()
  +void detach()
  +void redepthChildren()
  +void visitChildren()
  +List<DiagnosticsNode> debugDescribeChildren()
}

abstract class "rendering::object::ContainerParentDataMixin" {
  +ChildType? previousSibling
  +ChildType? nextSibling
  +void detach()
}

abstract class "rendering::object::ContainerRenderObjectMixin" {
  -int _childCount
  -ChildType? _firstChild
  -ChildType? _lastChild
  +int childCount
  +ChildType? firstChild
  +ChildType? lastChild
  -bool _debugUltimatePreviousSiblingOf()
  -bool _debugUltimateNextSiblingOf()
  +bool debugValidateChild()
  -void _insertIntoChildList()
  +void insert()
  +void add()
  +void addAll()
  -void _removeFromChildList()
  +void remove()
  +void removeAll()
  +void move()
  +void attach()
  +void detach()
  +void redepthChildren()
  +void visitChildren()
  +ChildType? childBefore()
  +ChildType? childAfter()
  +List<DiagnosticsNode> debugDescribeChildren()
}

abstract class "rendering::object::RelayoutWhenSystemFontsChangeMixin" {
  -bool _hasPendingSystemFontsDidChangeCallBack
  #void systemFontsDidChange()
  -void _scheduleSystemFontsUpdate()
  +void attach()
  +void detach()
}

abstract class "rendering::selection::SelectionHandler" {
  +void pushHandleLayers()
  +SelectedContent? getSelectedContent()
  +SelectionResult dispatchSelectionEvent()
}

"foundation::change_notifier::ValueListenable" <|-- "rendering::selection::SelectionHandler"

class "rendering::selection::SelectedContent" {
  +String plainText
}

abstract class "rendering::selection::SelectionUtils" {
  {static} +SelectionResult getResultBasedOnRect()
  {static} +Offset adjustDragOffset()
}

abstract class "rendering::selection::SelectionEvent" {
  +SelectionEventType type
}

"rendering::selection::SelectionEvent" o-- "rendering::selection::SelectionEventType"

class "rendering::selection::SelectAllSelectionEvent" {
}

"rendering::selection::SelectionEvent" <|-- "rendering::selection::SelectAllSelectionEvent"

class "rendering::selection::ClearSelectionEvent" {
}

"rendering::selection::SelectionEvent" <|-- "rendering::selection::ClearSelectionEvent"

class "rendering::selection::SelectWordSelectionEvent" {
  +Offset globalPosition
}

"rendering::selection::SelectWordSelectionEvent" o-- "dart::ui::Offset"
"rendering::selection::SelectionEvent" <|-- "rendering::selection::SelectWordSelectionEvent"

class "rendering::selection::SelectionEdgeUpdateEvent" {
  +Offset globalPosition
  +TextGranularity granularity
}

"rendering::selection::SelectionEdgeUpdateEvent" o-- "dart::ui::Offset"
"rendering::selection::SelectionEdgeUpdateEvent" o-- "rendering::selection::TextGranularity"
"rendering::selection::SelectionEvent" <|-- "rendering::selection::SelectionEdgeUpdateEvent"

class "rendering::selection::GranularlyExtendSelectionEvent" {
  +bool forward
  +bool isEnd
  +TextGranularity granularity
}

"rendering::selection::GranularlyExtendSelectionEvent" o-- "rendering::selection::TextGranularity"
"rendering::selection::SelectionEvent" <|-- "rendering::selection::GranularlyExtendSelectionEvent"

class "rendering::selection::DirectionallyExtendSelectionEvent" {
  +double dx
  +bool isEnd
  +SelectionExtendDirection direction
  +DirectionallyExtendSelectionEvent copyWith()
}

"rendering::selection::DirectionallyExtendSelectionEvent" o-- "rendering::selection::SelectionExtendDirection"
"rendering::selection::SelectionEvent" <|-- "rendering::selection::DirectionallyExtendSelectionEvent"

abstract class "rendering::selection::SelectionRegistrar" {
  +void add()
  +void remove()
}

class "rendering::selection::SelectionGeometry" {
  +SelectionPoint? startSelectionPoint
  +SelectionPoint? endSelectionPoint
  +SelectionStatus status
  +List<Rect> selectionRects
  +bool hasContent
  +bool hasSelection
  +int hashCode
  +SelectionGeometry copyWith()
  +bool ==()
}

"rendering::selection::SelectionGeometry" o-- "rendering::selection::SelectionPoint"
"rendering::selection::SelectionGeometry" o-- "rendering::selection::SelectionStatus"

class "rendering::selection::SelectionPoint" {
  +Offset localPosition
  +double lineHeight
  +TextSelectionHandleType handleType
  +int hashCode
  +bool ==()
  +void debugFillProperties()
}

"rendering::selection::SelectionPoint" o-- "dart::ui::Offset"
"rendering::selection::SelectionPoint" o-- "rendering::selection::TextSelectionHandleType"
"foundation::diagnostics::Diagnosticable" <|-- "rendering::selection::SelectionPoint"

class "rendering::selection::SelectionResult" {
  +int index
  {static} +List<SelectionResult> values
  {static} +SelectionResult next
  {static} +SelectionResult previous
  {static} +SelectionResult end
  {static} +SelectionResult pending
  {static} +SelectionResult none
}

"rendering::selection::SelectionResult" o-- "rendering::selection::SelectionResult"
"dart::core::Enum" <|-- "rendering::selection::SelectionResult"

class "rendering::selection::SelectionEventType" {
  +int index
  {static} +List<SelectionEventType> values
  {static} +SelectionEventType startEdgeUpdate
  {static} +SelectionEventType endEdgeUpdate
  {static} +SelectionEventType clear
  {static} +SelectionEventType selectAll
  {static} +SelectionEventType selectWord
  {static} +SelectionEventType granularlyExtendSelection
  {static} +SelectionEventType directionallyExtendSelection
}

"rendering::selection::SelectionEventType" o-- "rendering::selection::SelectionEventType"
"dart::core::Enum" <|-- "rendering::selection::SelectionEventType"

class "rendering::selection::TextGranularity" {
  +int index
  {static} +List<TextGranularity> values
  {static} +TextGranularity character
  {static} +TextGranularity word
  {static} +TextGranularity line
  {static} +TextGranularity document
}

"rendering::selection::TextGranularity" o-- "rendering::selection::TextGranularity"
"dart::core::Enum" <|-- "rendering::selection::TextGranularity"

class "rendering::selection::SelectionExtendDirection" {
  +int index
  {static} +List<SelectionExtendDirection> values
  {static} +SelectionExtendDirection previousLine
  {static} +SelectionExtendDirection nextLine
  {static} +SelectionExtendDirection forward
  {static} +SelectionExtendDirection backward
}

"rendering::selection::SelectionExtendDirection" o-- "rendering::selection::SelectionExtendDirection"
"dart::core::Enum" <|-- "rendering::selection::SelectionExtendDirection"

class "rendering::selection::SelectionStatus" {
  +int index
  {static} +List<SelectionStatus> values
  {static} +SelectionStatus uncollapsed
  {static} +SelectionStatus collapsed
  {static} +SelectionStatus none
}

"rendering::selection::SelectionStatus" o-- "rendering::selection::SelectionStatus"
"dart::core::Enum" <|-- "rendering::selection::SelectionStatus"

class "rendering::selection::TextSelectionHandleType" {
  +int index
  {static} +List<TextSelectionHandleType> values
  {static} +TextSelectionHandleType left
  {static} +TextSelectionHandleType right
  {static} +TextSelectionHandleType collapsed
}

"rendering::selection::TextSelectionHandleType" o-- "rendering::selection::TextSelectionHandleType"
"dart::core::Enum" <|-- "rendering::selection::TextSelectionHandleType"

abstract class "rendering::selection::Selectable" {
  +Size size
  +Matrix4 getTransformTo()
  +void dispose()
}

"rendering::selection::Selectable" o-- "dart::ui::Size"
"rendering::selection::SelectionHandler" <|-- "rendering::selection::Selectable"

abstract class "rendering::selection::SelectionRegistrant" {
  -SelectionRegistrar? _registrar
  -bool _subscribedToSelectionRegistrar
  +SelectionRegistrar? registrar
  +void dispose()
  -void _updateSelectionRegistrarSubscription()
  -void _removeSelectionRegistrarSubscription()
}

"rendering::selection::SelectionRegistrant" o-- "rendering::selection::SelectionRegistrar"

class "rendering::flex::FlexParentData" {
  +int? flex
  +FlexFit? fit
  +String toString()
}

"rendering::flex::FlexParentData" o-- "rendering::flex::FlexFit"
"rendering::box::ContainerBoxParentData" <|-- "rendering::flex::FlexParentData"

class "rendering::flex::RenderFlex" {
  -Axis _direction
  -MainAxisAlignment _mainAxisAlignment
  -MainAxisSize _mainAxisSize
  -CrossAxisAlignment _crossAxisAlignment
  -TextDirection? _textDirection
  -VerticalDirection _verticalDirection
  -TextBaseline? _textBaseline
  -double _overflow
  -Clip _clipBehavior
  -LayerHandle<ClipRectLayer> _clipRectLayer
  +Axis direction
  +MainAxisAlignment mainAxisAlignment
  +MainAxisSize mainAxisSize
  +CrossAxisAlignment crossAxisAlignment
  +TextDirection? textDirection
  +VerticalDirection verticalDirection
  +TextBaseline? textBaseline
  -bool _debugHasNecessaryDirections
  -bool _hasOverflow
  +Clip clipBehavior
  -bool _canComputeIntrinsics
  +void setupParentData()
  -double _getIntrinsicSize()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double? computeDistanceToActualBaseline()
  -int _getFlex()
  -FlexFit _getFit()
  -double _getCrossSize()
  -double _getMainSize()
  +Size computeDryLayout()
  -FlutterError? _debugCheckConstraints()
  -_LayoutSizes _computeSizes()
  +void performLayout()
  +bool hitTestChildren()
  +void paint()
  +void dispose()
  +Rect? describeApproximatePaintClip()
  +String toStringShort()
  +void debugFillProperties()
}

"rendering::flex::RenderFlex" o-- "painting::basic_types::Axis"
"rendering::flex::RenderFlex" o-- "rendering::flex::MainAxisAlignment"
"rendering::flex::RenderFlex" o-- "rendering::flex::MainAxisSize"
"rendering::flex::RenderFlex" o-- "rendering::flex::CrossAxisAlignment"
"rendering::flex::RenderFlex" o-- "dart::ui::TextDirection"
"rendering::flex::RenderFlex" o-- "painting::basic_types::VerticalDirection"
"rendering::flex::RenderFlex" o-- "dart::ui::TextBaseline"
"rendering::flex::RenderFlex" o-- "dart::ui::Clip"
"rendering::flex::RenderFlex" o-- "rendering::layer::LayerHandle<ClipRectLayer>"
"rendering::box::RenderBox" <|-- "rendering::flex::RenderFlex"
"rendering::object::ContainerRenderObjectMixin" <|-- "rendering::flex::RenderFlex"
"rendering::box::RenderBoxContainerDefaultsMixin" <|-- "rendering::flex::RenderFlex"
"rendering::debug_overflow_indicator::DebugOverflowIndicatorMixin" <|-- "rendering::flex::RenderFlex"

class "rendering::flex::_LayoutSizes" {
  +double mainSize
  +double crossSize
  +double allocatedSize
}

class "rendering::flex::FlexFit" {
  +int index
  {static} +List<FlexFit> values
  {static} +FlexFit tight
  {static} +FlexFit loose
}

"rendering::flex::FlexFit" o-- "rendering::flex::FlexFit"
"dart::core::Enum" <|-- "rendering::flex::FlexFit"

class "rendering::flex::MainAxisSize" {
  +int index
  {static} +List<MainAxisSize> values
  {static} +MainAxisSize min
  {static} +MainAxisSize max
}

"rendering::flex::MainAxisSize" o-- "rendering::flex::MainAxisSize"
"dart::core::Enum" <|-- "rendering::flex::MainAxisSize"

class "rendering::flex::MainAxisAlignment" {
  +int index
  {static} +List<MainAxisAlignment> values
  {static} +MainAxisAlignment start
  {static} +MainAxisAlignment end
  {static} +MainAxisAlignment center
  {static} +MainAxisAlignment spaceBetween
  {static} +MainAxisAlignment spaceAround
  {static} +MainAxisAlignment spaceEvenly
}

"rendering::flex::MainAxisAlignment" o-- "rendering::flex::MainAxisAlignment"
"dart::core::Enum" <|-- "rendering::flex::MainAxisAlignment"

class "rendering::flex::CrossAxisAlignment" {
  +int index
  {static} +List<CrossAxisAlignment> values
  {static} +CrossAxisAlignment start
  {static} +CrossAxisAlignment end
  {static} +CrossAxisAlignment center
  {static} +CrossAxisAlignment stretch
  {static} +CrossAxisAlignment baseline
}

"rendering::flex::CrossAxisAlignment" o-- "rendering::flex::CrossAxisAlignment"
"dart::core::Enum" <|-- "rendering::flex::CrossAxisAlignment"

abstract class "rendering::sliver_fixed_extent_list::RenderSliverFixedExtentBoxAdaptor" {
  -SliverLayoutDimensions _currentLayoutDimensions
  +double? itemExtent
  +double Function(int, SliverLayoutDimensions)? itemExtentBuilder
  #double indexToLayoutOffset()
  #int getMinChildIndexForScrollOffset()
  #int getMaxChildIndexForScrollOffset()
  #double estimateMaxScrollOffset()
  #double computeMaxScrollOffset()
  -int _calculateLeadingGarbage()
  -int _calculateTrailingGarbage()
  -int _getChildIndexForScrollOffset()
  -BoxConstraints _getChildConstraints()
  +void performLayout()
}

"rendering::sliver_fixed_extent_list::RenderSliverFixedExtentBoxAdaptor" o-- "rendering::sliver::SliverLayoutDimensions"
"rendering::sliver_fixed_extent_list::RenderSliverFixedExtentBoxAdaptor" o-- "rendering::sliver::double Function(int, SliverLayoutDimensions)"
"rendering::sliver_multi_box_adaptor::RenderSliverMultiBoxAdaptor" <|-- "rendering::sliver_fixed_extent_list::RenderSliverFixedExtentBoxAdaptor"

class "rendering::sliver_fixed_extent_list::RenderSliverFixedExtentList" {
  -double _itemExtent
  +double itemExtent
}

"rendering::sliver_fixed_extent_list::RenderSliverFixedExtentBoxAdaptor" <|-- "rendering::sliver_fixed_extent_list::RenderSliverFixedExtentList"

class "rendering::table::TableCellParentData" {
  +TableCellVerticalAlignment? verticalAlignment
  +int? x
  +int? y
  +String toString()
}

"rendering::table::TableCellParentData" o-- "rendering::table::TableCellVerticalAlignment"
"rendering::box::BoxParentData" <|-- "rendering::table::TableCellParentData"

abstract class "rendering::table::TableColumnWidth" {
  +double minIntrinsicWidth()
  +double maxIntrinsicWidth()
  +double? flex()
  +String toString()
}

class "rendering::table::IntrinsicColumnWidth" {
  -double? _flex
  +double minIntrinsicWidth()
  +double maxIntrinsicWidth()
  +double? flex()
  +String toString()
}

"rendering::table::TableColumnWidth" <|-- "rendering::table::IntrinsicColumnWidth"

class "rendering::table::FixedColumnWidth" {
  +double value
  +double minIntrinsicWidth()
  +double maxIntrinsicWidth()
  +String toString()
}

"rendering::table::TableColumnWidth" <|-- "rendering::table::FixedColumnWidth"

class "rendering::table::FractionColumnWidth" {
  +double value
  +double minIntrinsicWidth()
  +double maxIntrinsicWidth()
  +String toString()
}

"rendering::table::TableColumnWidth" <|-- "rendering::table::FractionColumnWidth"

class "rendering::table::FlexColumnWidth" {
  +double value
  +double minIntrinsicWidth()
  +double maxIntrinsicWidth()
  +double flex()
  +String toString()
}

"rendering::table::TableColumnWidth" <|-- "rendering::table::FlexColumnWidth"

class "rendering::table::MaxColumnWidth" {
  +TableColumnWidth a
  +TableColumnWidth b
  +double minIntrinsicWidth()
  +double maxIntrinsicWidth()
  +double? flex()
  +String toString()
}

"rendering::table::MaxColumnWidth" o-- "rendering::table::TableColumnWidth"
"rendering::table::TableColumnWidth" <|-- "rendering::table::MaxColumnWidth"

class "rendering::table::MinColumnWidth" {
  +TableColumnWidth a
  +TableColumnWidth b
  +double minIntrinsicWidth()
  +double maxIntrinsicWidth()
  +double? flex()
  +String toString()
}

"rendering::table::MinColumnWidth" o-- "rendering::table::TableColumnWidth"
"rendering::table::TableColumnWidth" <|-- "rendering::table::MinColumnWidth"

class "rendering::table::RenderTable" {
  -List<RenderBox?> _children
  -int _columns
  -int _rows
  -Map<int, TableColumnWidth> _columnWidths
  -TableColumnWidth _defaultColumnWidth
  -TextDirection _textDirection
  -TableBorder? _border
  -List<Decoration?>? _rowDecorations
  -List<BoxPainter?>? _rowDecorationPainters
  -ImageConfiguration _configuration
  -TableCellVerticalAlignment _defaultVerticalAlignment
  -TextBaseline? _textBaseline
  -double? _baselineDistance
  -List<double> _rowTops
  -Iterable<double>? _columnLefts
  -double _tableWidth
  +int columns
  +int rows
  +Map<int, TableColumnWidth>? columnWidths
  +TableColumnWidth defaultColumnWidth
  +TextDirection textDirection
  +TableBorder? border
  +List<Decoration> rowDecorations
  +ImageConfiguration configuration
  +TableCellVerticalAlignment defaultVerticalAlignment
  +TextBaseline? textBaseline
  +void setColumnWidth()
  +void setupParentData()
  +void setFlatChildren()
  +void setChildren()
  +void addRow()
  +void setChild()
  +void attach()
  +void detach()
  +void visitChildren()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double? computeDistanceToActualBaseline()
  +Iterable<RenderBox> column()
  +Iterable<RenderBox> row()
  -List<double> _computeColumnWidths()
  +Rect getRowBox()
  +Size computeDryLayout()
  +void performLayout()
  +bool hitTestChildren()
  +void paint()
  +void debugFillProperties()
  +List<DiagnosticsNode> debugDescribeChildren()
}

"rendering::table::RenderTable" o-- "rendering::table::TableColumnWidth"
"rendering::table::RenderTable" o-- "dart::ui::TextDirection"
"rendering::table::RenderTable" o-- "rendering::table_border::TableBorder"
"rendering::table::RenderTable" o-- "painting::image_provider::ImageConfiguration"
"rendering::table::RenderTable" o-- "rendering::table::TableCellVerticalAlignment"
"rendering::table::RenderTable" o-- "dart::ui::TextBaseline"
"rendering::box::RenderBox" <|-- "rendering::table::RenderTable"

class "rendering::table::TableCellVerticalAlignment" {
  +int index
  {static} +List<TableCellVerticalAlignment> values
  {static} +TableCellVerticalAlignment top
  {static} +TableCellVerticalAlignment middle
  {static} +TableCellVerticalAlignment bottom
  {static} +TableCellVerticalAlignment baseline
  {static} +TableCellVerticalAlignment fill
}

"rendering::table::TableCellVerticalAlignment" o-- "rendering::table::TableCellVerticalAlignment"
"dart::core::Enum" <|-- "rendering::table::TableCellVerticalAlignment"

class "rendering::mouse_tracker::_MouseState" {
  -LinkedHashMap<MouseTrackerAnnotation, Matrix4> _annotations
  -PointerEvent _latestEvent
  +LinkedHashMap<MouseTrackerAnnotation, Matrix4> annotations
  +PointerEvent latestEvent
  +int device
  +LinkedHashMap<MouseTrackerAnnotation, Matrix4> replaceAnnotations()
  +PointerEvent replaceLatestEvent()
  +String toString()
}

"rendering::mouse_tracker::_MouseState" o-- "dart::collection::LinkedHashMap<MouseTrackerAnnotation, Matrix4>"
"rendering::mouse_tracker::_MouseState" o-- "gestures::events::PointerEvent"

class "rendering::mouse_tracker::_MouseTrackerUpdateDetails" {
  +LinkedHashMap<MouseTrackerAnnotation, Matrix4> lastAnnotations
  +LinkedHashMap<MouseTrackerAnnotation, Matrix4> nextAnnotations
  +PointerEvent? previousEvent
  +PointerEvent? triggeringEvent
  +int device
  +PointerEvent latestEvent
  +void debugFillProperties()
}

"rendering::mouse_tracker::_MouseTrackerUpdateDetails" o-- "dart::collection::LinkedHashMap<MouseTrackerAnnotation, Matrix4>"
"rendering::mouse_tracker::_MouseTrackerUpdateDetails" o-- "gestures::events::PointerEvent"
"foundation::diagnostics::Diagnosticable" <|-- "rendering::mouse_tracker::_MouseTrackerUpdateDetails"

class "rendering::mouse_tracker::MouseTracker" {
  -HitTestResult Function(Offset, int) _hitTestInView
  -MouseCursorManager _mouseCursorMixin
  -Map<int, _MouseState> _mouseStates
  -bool _debugDuringDeviceUpdate
  +bool mouseIsConnected
  -void _monitorMouseConnection()
  -void _deviceUpdatePhase()
  {static} -bool _shouldMarkStateDirty()
  -LinkedHashMap<MouseTrackerAnnotation, Matrix4> _hitTestInViewResultToAnnotations()
  -LinkedHashMap<MouseTrackerAnnotation, Matrix4> _findAnnotations()
  -void _handleDeviceUpdate()
  +void updateWithEvent()
  +void updateAllDevices()
  +MouseCursor? debugDeviceActiveCursor()
  {static} -void _handleDeviceUpdateMouseEvents()
}

"rendering::mouse_tracker::MouseTracker" o-- "rendering::mouse_tracker::HitTestResult Function(Offset, int)"
"rendering::mouse_tracker::MouseTracker" o-- "services::mouse_cursor::MouseCursorManager"
"foundation::change_notifier::ChangeNotifier" <|-- "rendering::mouse_tracker::MouseTracker"

class "rendering::rotated_box::RenderRotatedBox" {
  -int _quarterTurns
  -Matrix4? _paintTransform
  -LayerHandle<TransformLayer> _transformLayer
  +int quarterTurns
  -bool _isVertical
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +Size computeDryLayout()
  +void performLayout()
  +bool hitTestChildren()
  -void _paintChild()
  +void paint()
  +void dispose()
  +void applyPaintTransform()
}

"rendering::rotated_box::RenderRotatedBox" o-- "vector_math::vector_math_64::Matrix4"
"rendering::rotated_box::RenderRotatedBox" o-- "rendering::layer::LayerHandle<TransformLayer>"
"rendering::box::RenderBox" <|-- "rendering::rotated_box::RenderRotatedBox"
"rendering::object::RenderObjectWithChildMixin" <|-- "rendering::rotated_box::RenderRotatedBox"

abstract class "rendering::shifted_box::RenderShiftedBox" {
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double? computeDistanceToActualBaseline()
  +void paint()
  +bool hitTestChildren()
}

"rendering::box::RenderBox" <|-- "rendering::shifted_box::RenderShiftedBox"
"rendering::object::RenderObjectWithChildMixin" <|-- "rendering::shifted_box::RenderShiftedBox"

class "rendering::shifted_box::RenderPadding" {
  -EdgeInsets? _resolvedPadding
  -EdgeInsetsGeometry _padding
  -TextDirection? _textDirection
  +EdgeInsetsGeometry padding
  +TextDirection? textDirection
  -void _resolve()
  -void _markNeedResolution()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +Size computeDryLayout()
  +void performLayout()
  +void debugPaintSize()
  +void debugFillProperties()
}

"rendering::shifted_box::RenderPadding" o-- "painting::edge_insets::EdgeInsets"
"rendering::shifted_box::RenderPadding" o-- "painting::edge_insets::EdgeInsetsGeometry"
"rendering::shifted_box::RenderPadding" o-- "dart::ui::TextDirection"
"rendering::shifted_box::RenderShiftedBox" <|-- "rendering::shifted_box::RenderPadding"

abstract class "rendering::shifted_box::RenderAligningShiftedBox" {
  -Alignment? _resolvedAlignment
  -AlignmentGeometry _alignment
  -TextDirection? _textDirection
  +AlignmentGeometry alignment
  +TextDirection? textDirection
  -void _resolve()
  -void _markNeedResolution()
  #void alignChild()
  +void debugFillProperties()
}

"rendering::shifted_box::RenderAligningShiftedBox" o-- "painting::alignment::Alignment"
"rendering::shifted_box::RenderAligningShiftedBox" o-- "painting::alignment::AlignmentGeometry"
"rendering::shifted_box::RenderAligningShiftedBox" o-- "dart::ui::TextDirection"
"rendering::shifted_box::RenderShiftedBox" <|-- "rendering::shifted_box::RenderAligningShiftedBox"

class "rendering::shifted_box::RenderPositionedBox" {
  -double? _widthFactor
  -double? _heightFactor
  +double? widthFactor
  +double? heightFactor
  +Size computeDryLayout()
  +void performLayout()
  +void debugPaintSize()
  +void debugFillProperties()
}

"rendering::shifted_box::RenderAligningShiftedBox" <|-- "rendering::shifted_box::RenderPositionedBox"

class "rendering::shifted_box::RenderConstrainedOverflowBox" {
  -double? _minWidth
  -double? _maxWidth
  -double? _minHeight
  -double? _maxHeight
  +double? minWidth
  +double? maxWidth
  +double? minHeight
  +double? maxHeight
  +bool sizedByParent
  -BoxConstraints _getInnerConstraints()
  +Size computeDryLayout()
  +void performLayout()
  +void debugFillProperties()
}

"rendering::shifted_box::RenderAligningShiftedBox" <|-- "rendering::shifted_box::RenderConstrainedOverflowBox"

class "rendering::shifted_box::RenderConstraintsTransformBox" {
  -BoxConstraints Function(BoxConstraints) _constraintsTransform
  -Clip _clipBehavior
  -Rect _overflowContainerRect
  -Rect _overflowChildRect
  -bool _isOverflowing
  -BoxConstraints? _childConstraints
  -LayerHandle<ClipRectLayer> _clipRectLayer
  +BoxConstraints Function(BoxConstraints) constraintsTransform
  +Clip clipBehavior
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +Size computeDryLayout()
  +void performLayout()
  +void paint()
  +void dispose()
  +Rect? describeApproximatePaintClip()
  +String toStringShort()
}

"rendering::shifted_box::RenderConstraintsTransformBox" o-- "rendering::shifted_box::BoxConstraints Function(BoxConstraints)"
"rendering::shifted_box::RenderConstraintsTransformBox" o-- "dart::ui::Clip"
"rendering::shifted_box::RenderConstraintsTransformBox" o-- "dart::ui::Rect"
"rendering::shifted_box::RenderConstraintsTransformBox" o-- "rendering::box::BoxConstraints"
"rendering::shifted_box::RenderConstraintsTransformBox" o-- "rendering::layer::LayerHandle<ClipRectLayer>"
"rendering::shifted_box::RenderAligningShiftedBox" <|-- "rendering::shifted_box::RenderConstraintsTransformBox"
"rendering::debug_overflow_indicator::DebugOverflowIndicatorMixin" <|-- "rendering::shifted_box::RenderConstraintsTransformBox"

class "rendering::shifted_box::RenderSizedOverflowBox" {
  -Size _requestedSize
  +Size requestedSize
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double? computeDistanceToActualBaseline()
  +Size computeDryLayout()
  +void performLayout()
}

"rendering::shifted_box::RenderSizedOverflowBox" o-- "dart::ui::Size"
"rendering::shifted_box::RenderAligningShiftedBox" <|-- "rendering::shifted_box::RenderSizedOverflowBox"

class "rendering::shifted_box::RenderFractionallySizedOverflowBox" {
  -double? _widthFactor
  -double? _heightFactor
  +double? widthFactor
  +double? heightFactor
  -BoxConstraints _getInnerConstraints()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +Size computeDryLayout()
  +void performLayout()
  +void debugFillProperties()
}

"rendering::shifted_box::RenderAligningShiftedBox" <|-- "rendering::shifted_box::RenderFractionallySizedOverflowBox"

abstract class "rendering::shifted_box::SingleChildLayoutDelegate" {
  -Listenable? _relayout
  +Size getSize()
  +BoxConstraints getConstraintsForChild()
  +Offset getPositionForChild()
  +bool shouldRelayout()
}

"rendering::shifted_box::SingleChildLayoutDelegate" o-- "foundation::change_notifier::Listenable"

class "rendering::shifted_box::RenderCustomSingleChildLayoutBox" {
  -SingleChildLayoutDelegate _delegate
  +SingleChildLayoutDelegate delegate
  +void attach()
  +void detach()
  -Size _getSize()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +Size computeDryLayout()
  +void performLayout()
}

"rendering::shifted_box::RenderCustomSingleChildLayoutBox" o-- "rendering::shifted_box::SingleChildLayoutDelegate"
"rendering::shifted_box::RenderShiftedBox" <|-- "rendering::shifted_box::RenderCustomSingleChildLayoutBox"

class "rendering::shifted_box::RenderBaseline" {
  -double _baseline
  -TextBaseline _baselineType
  +double baseline
  +TextBaseline baselineType
  +Size computeDryLayout()
  +void performLayout()
  +void debugFillProperties()
}

"rendering::shifted_box::RenderBaseline" o-- "dart::ui::TextBaseline"
"rendering::shifted_box::RenderShiftedBox" <|-- "rendering::shifted_box::RenderBaseline"

abstract class "rendering::layout_helper::ChildLayoutHelper" {
  {static} +Size dryLayoutChild()
  {static} +Size layoutChild()
}

abstract class "rendering::proxy_sliver::RenderProxySliver" {
  +void setupParentData()
  +void performLayout()
  +void paint()
  +bool hitTestChildren()
  +double childMainAxisPosition()
  +void applyPaintTransform()
}

"rendering::sliver::RenderSliver" <|-- "rendering::proxy_sliver::RenderProxySliver"
"rendering::object::RenderObjectWithChildMixin" <|-- "rendering::proxy_sliver::RenderProxySliver"

class "rendering::proxy_sliver::RenderSliverOpacity" {
  -int _alpha
  -double _opacity
  -bool _alwaysIncludeSemantics
  +bool alwaysNeedsCompositing
  +double opacity
  +bool alwaysIncludeSemantics
  +void paint()
  +void visitChildrenForSemantics()
  +void debugFillProperties()
}

"rendering::proxy_sliver::RenderProxySliver" <|-- "rendering::proxy_sliver::RenderSliverOpacity"

class "rendering::proxy_sliver::RenderSliverIgnorePointer" {
  -bool _ignoring
  -bool? _ignoringSemantics
  +bool ignoring
  +bool? ignoringSemantics
  +bool hitTest()
  +void visitChildrenForSemantics()
  +void describeSemanticsConfiguration()
  +void debugFillProperties()
}

"rendering::proxy_sliver::RenderProxySliver" <|-- "rendering::proxy_sliver::RenderSliverIgnorePointer"

class "rendering::proxy_sliver::RenderSliverOffstage" {
  -bool _offstage
  +bool offstage
  +void performLayout()
  +bool hitTest()
  +bool hitTestChildren()
  +void paint()
  +void visitChildrenForSemantics()
  +void debugFillProperties()
  +List<DiagnosticsNode> debugDescribeChildren()
}

"rendering::proxy_sliver::RenderProxySliver" <|-- "rendering::proxy_sliver::RenderSliverOffstage"

class "rendering::proxy_sliver::RenderSliverAnimatedOpacity" {
}

"rendering::proxy_sliver::RenderProxySliver" <|-- "rendering::proxy_sliver::RenderSliverAnimatedOpacity"
"rendering::proxy_box::RenderAnimatedOpacityMixin" <|-- "rendering::proxy_sliver::RenderSliverAnimatedOpacity"

class "rendering::proxy_sliver::RenderSliverConstrainedCrossAxis" {
  -double _maxExtent
  +double maxExtent
  +void performLayout()
}

"rendering::proxy_sliver::RenderProxySliver" <|-- "rendering::proxy_sliver::RenderSliverConstrainedCrossAxis"

class "rendering::performance_overlay::RenderPerformanceOverlay" {
  -int _optionsMask
  -int _rasterizerThreshold
  -bool _checkerboardRasterCacheImages
  -bool _checkerboardOffscreenLayers
  +int optionsMask
  +int rasterizerThreshold
  +bool checkerboardRasterCacheImages
  +bool checkerboardOffscreenLayers
  +bool sizedByParent
  +bool alwaysNeedsCompositing
  -double _intrinsicHeight
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +Size computeDryLayout()
  +void paint()
}

"rendering::box::RenderBox" <|-- "rendering::performance_overlay::RenderPerformanceOverlay"

class "rendering::performance_overlay::PerformanceOverlayOption" {
  +int index
  {static} +List<PerformanceOverlayOption> values
  {static} +PerformanceOverlayOption displayRasterizerStatistics
  {static} +PerformanceOverlayOption visualizeRasterizerStatistics
  {static} +PerformanceOverlayOption displayEngineStatistics
  {static} +PerformanceOverlayOption visualizeEngineStatistics
}

"rendering::performance_overlay::PerformanceOverlayOption" o-- "rendering::performance_overlay::PerformanceOverlayOption"
"dart::core::Enum" <|-- "rendering::performance_overlay::PerformanceOverlayOption"

class "rendering::view::ViewConfiguration" {
  +Size size
  +double devicePixelRatio
  +int hashCode
  +Matrix4 toMatrix()
  +bool ==()
  +String toString()
}

"rendering::view::ViewConfiguration" o-- "dart::ui::Size"

class "rendering::view::RenderView" {
  -Size _size
  -ViewConfiguration? _configuration
  -FlutterView _view
  +bool automaticSystemUiAdjustment
  -Matrix4? _rootTransform
  {static} -List<void Function(PaintingContext, Offset, RenderView)> _debugPaintCallbacks
  +Size size
  +ViewConfiguration configuration
  +bool hasConfiguration
  +FlutterView flutterView
  +bool isRepaintBoundary
  +Rect paintBounds
  +Rect semanticBounds
  +void prepareInitialFrame()
  -TransformLayer _updateMatricesAndCreateNewRootLayer()
  +void debugAssertDoesMeetConstraints()
  +void performResize()
  +void performLayout()
  +bool hitTest()
  +void paint()
  +void applyPaintTransform()
  +void compositeFrame()
  +void updateSemantics()
  -void _updateSystemChrome()
  +void debugFillProperties()
  {static} +void debugAddPaintCallback()
  {static} +void debugRemovePaintCallback()
}

"rendering::view::RenderView" o-- "dart::ui::Size"
"rendering::view::RenderView" o-- "rendering::view::ViewConfiguration"
"rendering::view::RenderView" o-- "dart::ui::FlutterView"
"rendering::view::RenderView" o-- "vector_math::vector_math_64::Matrix4"
"rendering::view::RenderView" o-- "dart::ui::Rect"
"rendering::object::RenderObject" <|-- "rendering::view::RenderView"
"rendering::object::RenderObjectWithChildMixin" <|-- "rendering::view::RenderView"

class "rendering::sliver_grid::SliverGridGeometry" {
  +double scrollOffset
  +double crossAxisOffset
  +double mainAxisExtent
  +double crossAxisExtent
  +double trailingScrollOffset
  +BoxConstraints getBoxConstraints()
  +String toString()
}

abstract class "rendering::sliver_grid::SliverGridLayout" {
  +int getMinChildIndexForScrollOffset()
  +int getMaxChildIndexForScrollOffset()
  +SliverGridGeometry getGeometryForChildIndex()
  +double computeMaxScrollOffset()
}

class "rendering::sliver_grid::SliverGridRegularTileLayout" {
  +int crossAxisCount
  +double mainAxisStride
  +double crossAxisStride
  +double childMainAxisExtent
  +double childCrossAxisExtent
  +bool reverseCrossAxis
  +int getMinChildIndexForScrollOffset()
  +int getMaxChildIndexForScrollOffset()
  -double _getOffsetFromStartInCrossAxis()
  +SliverGridGeometry getGeometryForChildIndex()
  +double computeMaxScrollOffset()
}

"rendering::sliver_grid::SliverGridLayout" <|-- "rendering::sliver_grid::SliverGridRegularTileLayout"

abstract class "rendering::sliver_grid::SliverGridDelegate" {
  +SliverGridLayout getLayout()
  +bool shouldRelayout()
}

class "rendering::sliver_grid::SliverGridDelegateWithFixedCrossAxisCount" {
  +int crossAxisCount
  +double mainAxisSpacing
  +double crossAxisSpacing
  +double childAspectRatio
  +double? mainAxisExtent
  -bool _debugAssertIsValid()
  +SliverGridLayout getLayout()
  +bool shouldRelayout()
}

"rendering::sliver_grid::SliverGridDelegate" <|-- "rendering::sliver_grid::SliverGridDelegateWithFixedCrossAxisCount"

class "rendering::sliver_grid::SliverGridDelegateWithMaxCrossAxisExtent" {
  +double maxCrossAxisExtent
  +double mainAxisSpacing
  +double crossAxisSpacing
  +double childAspectRatio
  +double? mainAxisExtent
  -bool _debugAssertIsValid()
  +SliverGridLayout getLayout()
  +bool shouldRelayout()
}

"rendering::sliver_grid::SliverGridDelegate" <|-- "rendering::sliver_grid::SliverGridDelegateWithMaxCrossAxisExtent"

class "rendering::sliver_grid::SliverGridParentData" {
  +double? crossAxisOffset
  +String toString()
}

"rendering::sliver_multi_box_adaptor::SliverMultiBoxAdaptorParentData" <|-- "rendering::sliver_grid::SliverGridParentData"

class "rendering::sliver_grid::RenderSliverGrid" {
  -SliverGridDelegate _gridDelegate
  +SliverGridDelegate gridDelegate
  +void setupParentData()
  +double childCrossAxisPosition()
  +void performLayout()
}

"rendering::sliver_grid::RenderSliverGrid" o-- "rendering::sliver_grid::SliverGridDelegate"
"rendering::sliver_multi_box_adaptor::RenderSliverMultiBoxAdaptor" <|-- "rendering::sliver_grid::RenderSliverGrid"

class "rendering::decorated_sliver::RenderDecoratedSliver" {
  -Decoration _decoration
  -DecorationPosition _position
  -ImageConfiguration _configuration
  -BoxPainter? _painter
  +Decoration decoration
  +DecorationPosition position
  +ImageConfiguration configuration
  +void attach()
  +void detach()
  +void dispose()
  +void paint()
}

"rendering::decorated_sliver::RenderDecoratedSliver" o-- "painting::decoration::Decoration"
"rendering::decorated_sliver::RenderDecoratedSliver" o-- "rendering::proxy_box::DecorationPosition"
"rendering::decorated_sliver::RenderDecoratedSliver" o-- "painting::image_provider::ImageConfiguration"
"rendering::decorated_sliver::RenderDecoratedSliver" o-- "painting::decoration::BoxPainter"
"rendering::proxy_sliver::RenderProxySliver" <|-- "rendering::decorated_sliver::RenderDecoratedSliver"

class "rendering::viewport::RenderAbstractViewport" {
  {static} +double defaultCacheExtent
  {static} +RenderAbstractViewport? maybeOf()
  {static} +RenderAbstractViewport of()
  +RevealedOffset getOffsetToReveal()
}

"rendering::object::RenderObject" <|-- "rendering::viewport::RenderAbstractViewport"

class "rendering::viewport::RevealedOffset" {
  +double offset
  +Rect rect
  {static} +RevealedOffset? clampOffset()
  +String toString()
}

"rendering::viewport::RevealedOffset" o-- "dart::ui::Rect"

abstract class "rendering::viewport::RenderViewportBase" {
  -AxisDirection _axisDirection
  -AxisDirection _crossAxisDirection
  -ViewportOffset _offset
  -double _cacheExtent
  -double? _calculatedCacheExtent
  -CacheExtentStyle _cacheExtentStyle
  -Clip _clipBehavior
  -LayerHandle<ClipRectLayer> _clipRectLayer
  +AxisDirection axisDirection
  +AxisDirection crossAxisDirection
  +Axis axis
  +ViewportOffset offset
  +double? cacheExtent
  +CacheExtentStyle cacheExtentStyle
  +Clip clipBehavior
  +bool isRepaintBoundary
  +bool hasVisualOverflow
  +int indexOfFirstChild
  +Iterable<RenderSliver> childrenInPaintOrder
  +Iterable<RenderSliver> childrenInHitTestOrder
  +void describeSemanticsConfiguration()
  +void visitChildrenForSemantics()
  +void attach()
  +void detach()
  #bool debugThrowIfNotCheckingIntrinsics()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  #double layoutChildSequence()
  +Rect? describeApproximatePaintClip()
  +Rect describeSemanticsClip()
  +void paint()
  +void dispose()
  -void _paintContents()
  +void debugPaintSize()
  +bool hitTestChildren()
  +RevealedOffset getOffsetToReveal()
  #Offset computeAbsolutePaintOffset()
  +void debugFillProperties()
  +List<DiagnosticsNode> debugDescribeChildren()
  #void updateOutOfBandData()
  #void updateChildLayoutOffset()
  #Offset paintOffsetOf()
  #double scrollOffsetOf()
  #double maxScrollObstructionExtentBefore()
  #double computeChildMainAxisPosition()
  #String labelForChild()
  +void showOnScreen()
  {static} +Rect? showInViewport()
}

"rendering::viewport::RenderViewportBase" o-- "painting::basic_types::AxisDirection"
"rendering::viewport::RenderViewportBase" o-- "rendering::viewport_offset::ViewportOffset"
"rendering::viewport::RenderViewportBase" o-- "rendering::viewport::CacheExtentStyle"
"rendering::viewport::RenderViewportBase" o-- "dart::ui::Clip"
"rendering::viewport::RenderViewportBase" o-- "rendering::layer::LayerHandle<ClipRectLayer>"
"rendering::viewport::RenderViewportBase" o-- "painting::basic_types::Axis"
"rendering::box::RenderBox" <|-- "rendering::viewport::RenderViewportBase"
"rendering::object::ContainerRenderObjectMixin" <|-- "rendering::viewport::RenderViewportBase"
"rendering::viewport::RenderAbstractViewport" <|-- "rendering::viewport::RenderViewportBase"

class "rendering::viewport::RenderViewport" {
  {static} +SemanticsTag useTwoPaneSemantics
  {static} +SemanticsTag excludeFromScrolling
  -double _anchor
  -RenderSliver? _center
  {static} -int _maxLayoutCycles
  -double _minScrollExtent
  -double _maxScrollExtent
  -bool _hasVisualOverflow
  +double anchor
  +RenderSliver? center
  +bool sizedByParent
  +bool hasVisualOverflow
  +int indexOfFirstChild
  +Iterable<RenderSliver> childrenInPaintOrder
  +Iterable<RenderSliver> childrenInHitTestOrder
  +void setupParentData()
  +Size computeDryLayout()
  +void performLayout()
  -double _attemptLayout()
  +void updateOutOfBandData()
  +void updateChildLayoutOffset()
  +Offset paintOffsetOf()
  +double scrollOffsetOf()
  +double maxScrollObstructionExtentBefore()
  +void applyPaintTransform()
  +double computeChildMainAxisPosition()
  +String labelForChild()
  +void debugFillProperties()
}

"rendering::viewport::RenderViewport" o-- "semantics::semantics::SemanticsTag"
"rendering::viewport::RenderViewport" o-- "rendering::sliver::RenderSliver"
"rendering::viewport::RenderViewportBase" <|-- "rendering::viewport::RenderViewport"

class "rendering::viewport::RenderShrinkWrappingViewport" {
  -double _maxScrollExtent
  -double _shrinkWrapExtent
  -bool _hasVisualOverflow
  +bool hasVisualOverflow
  +int indexOfFirstChild
  +Iterable<RenderSliver> childrenInPaintOrder
  +Iterable<RenderSliver> childrenInHitTestOrder
  +void setupParentData()
  +bool debugThrowIfNotCheckingIntrinsics()
  -bool _debugCheckHasBoundedCrossAxis()
  +void performLayout()
  -double _attemptLayout()
  +void updateOutOfBandData()
  +void updateChildLayoutOffset()
  +Offset paintOffsetOf()
  +double scrollOffsetOf()
  +double maxScrollObstructionExtentBefore()
  +void applyPaintTransform()
  +double computeChildMainAxisPosition()
  +String labelForChild()
}

"rendering::viewport::RenderViewportBase" <|-- "rendering::viewport::RenderShrinkWrappingViewport"

class "rendering::viewport::CacheExtentStyle" {
  +int index
  {static} +List<CacheExtentStyle> values
  {static} +CacheExtentStyle pixel
  {static} +CacheExtentStyle viewport
}

"rendering::viewport::CacheExtentStyle" o-- "rendering::viewport::CacheExtentStyle"
"dart::core::Enum" <|-- "rendering::viewport::CacheExtentStyle"

class "rendering::sliver_list::RenderSliverList" {
  +void performLayout()
}

"rendering::sliver_multi_box_adaptor::RenderSliverMultiBoxAdaptor" <|-- "rendering::sliver_list::RenderSliverList"

abstract class "rendering::sliver_padding::RenderSliverEdgeInsetsPadding" {
  +EdgeInsets? resolvedPadding
  +double beforePadding
  +double afterPadding
  +double mainAxisPadding
  +double crossAxisPadding
  +void setupParentData()
  +void performLayout()
  +bool hitTestChildren()
  +double childMainAxisPosition()
  +double childCrossAxisPosition()
  +double? childScrollOffset()
  +void applyPaintTransform()
  +void paint()
  +void debugPaint()
}

"rendering::sliver_padding::RenderSliverEdgeInsetsPadding" o-- "painting::edge_insets::EdgeInsets"
"rendering::sliver::RenderSliver" <|-- "rendering::sliver_padding::RenderSliverEdgeInsetsPadding"
"rendering::object::RenderObjectWithChildMixin" <|-- "rendering::sliver_padding::RenderSliverEdgeInsetsPadding"

class "rendering::sliver_padding::RenderSliverPadding" {
  -EdgeInsets? _resolvedPadding
  -EdgeInsetsGeometry _padding
  -TextDirection? _textDirection
  +EdgeInsets? resolvedPadding
  +EdgeInsetsGeometry padding
  +TextDirection? textDirection
  -void _resolve()
  -void _markNeedsResolution()
  +void performLayout()
  +void debugFillProperties()
}

"rendering::sliver_padding::RenderSliverPadding" o-- "painting::edge_insets::EdgeInsets"
"rendering::sliver_padding::RenderSliverPadding" o-- "painting::edge_insets::EdgeInsetsGeometry"
"rendering::sliver_padding::RenderSliverPadding" o-- "dart::ui::TextDirection"
"rendering::sliver_padding::RenderSliverEdgeInsetsPadding" <|-- "rendering::sliver_padding::RenderSliverPadding"

class "rendering::sliver::SliverLayoutDimensions" {
  +double scrollOffset
  +double precedingScrollExtent
  +double viewportMainAxisExtent
  +double crossAxisExtent
  +int hashCode
  +bool ==()
  +String toString()
}

class "rendering::sliver::SliverConstraints" {
  +AxisDirection axisDirection
  +GrowthDirection growthDirection
  +ScrollDirection userScrollDirection
  +double scrollOffset
  +double precedingScrollExtent
  +double overlap
  +double remainingPaintExtent
  +double crossAxisExtent
  +AxisDirection crossAxisDirection
  +double viewportMainAxisExtent
  +double cacheOrigin
  +double remainingCacheExtent
  +Axis axis
  +GrowthDirection normalizedGrowthDirection
  +bool isTight
  +bool isNormalized
  +int hashCode
  +SliverConstraints copyWith()
  +BoxConstraints asBoxConstraints()
  +bool debugAssertIsValid()
  +bool ==()
  +String toString()
}

"rendering::sliver::SliverConstraints" o-- "painting::basic_types::AxisDirection"
"rendering::sliver::SliverConstraints" o-- "rendering::sliver::GrowthDirection"
"rendering::sliver::SliverConstraints" o-- "rendering::viewport_offset::ScrollDirection"
"rendering::sliver::SliverConstraints" o-- "painting::basic_types::Axis"
"rendering::object::Constraints" <|-- "rendering::sliver::SliverConstraints"

class "rendering::sliver::SliverGeometry" {
  {static} +SliverGeometry zero
  +double scrollExtent
  +double paintOrigin
  +double paintExtent
  +double layoutExtent
  +double maxPaintExtent
  +double maxScrollObstructionExtent
  +double hitTestExtent
  +bool visible
  +bool hasVisualOverflow
  +double? scrollOffsetCorrection
  +double cacheExtent
  +double? crossAxisExtent
  +SliverGeometry copyWith()
  +bool debugAssertIsValid()
  +String toStringShort()
  +void debugFillProperties()
}

"rendering::sliver::SliverGeometry" o-- "rendering::sliver::SliverGeometry"
"foundation::diagnostics::Diagnosticable" <|-- "rendering::sliver::SliverGeometry"

class "rendering::sliver::SliverHitTestResult" {
  +bool addWithAxisOffset()
}

"gestures::hit_test::HitTestResult" <|-- "rendering::sliver::SliverHitTestResult"

class "rendering::sliver::SliverHitTestEntry" {
  +double mainAxisPosition
  +double crossAxisPosition
  +String toString()
}

"gestures::hit_test::HitTestEntry" <|-- "rendering::sliver::SliverHitTestEntry"

class "rendering::sliver::SliverLogicalParentData" {
  +double? layoutOffset
  +String toString()
}

"rendering::object::ParentData" <|-- "rendering::sliver::SliverLogicalParentData"

class "rendering::sliver::SliverLogicalContainerParentData" {
}

"rendering::sliver::SliverLogicalParentData" <|-- "rendering::sliver::SliverLogicalContainerParentData"
"rendering::object::ContainerParentDataMixin" <|-- "rendering::sliver::SliverLogicalContainerParentData"

class "rendering::sliver::SliverPhysicalParentData" {
  +Offset paintOffset
  +int? crossAxisFlex
  +void applyPaintTransform()
  +String toString()
}

"rendering::sliver::SliverPhysicalParentData" o-- "dart::ui::Offset"
"rendering::object::ParentData" <|-- "rendering::sliver::SliverPhysicalParentData"

class "rendering::sliver::SliverPhysicalContainerParentData" {
}

"rendering::sliver::SliverPhysicalParentData" <|-- "rendering::sliver::SliverPhysicalContainerParentData"
"rendering::object::ContainerParentDataMixin" <|-- "rendering::sliver::SliverPhysicalContainerParentData"

abstract class "rendering::sliver::RenderSliver" {
  -SliverGeometry? _geometry
  +SliverConstraints constraints
  +SliverGeometry? geometry
  +Rect semanticBounds
  +Rect paintBounds
  +double centerOffsetAdjustment
  +void debugResetSize()
  +void debugAssertDoesMeetConstraints()
  +void performResize()
  +bool hitTest()
  #bool hitTestSelf()
  #bool hitTestChildren()
  +double calculatePaintOffset()
  +double calculateCacheOffset()
  #double childMainAxisPosition()
  #double childCrossAxisPosition()
  +double? childScrollOffset()
  +void applyPaintTransform()
  #Size getAbsoluteSizeRelativeToOrigin()
  #Size getAbsoluteSize()
  -void _debugDrawArrow()
  +void debugPaint()
  +void handleEvent()
  +void debugFillProperties()
}

"rendering::sliver::RenderSliver" o-- "rendering::sliver::SliverGeometry"
"rendering::sliver::RenderSliver" o-- "rendering::sliver::SliverConstraints"
"rendering::sliver::RenderSliver" o-- "dart::ui::Rect"
"rendering::object::RenderObject" <|-- "rendering::sliver::RenderSliver"

abstract class "rendering::sliver::RenderSliverSingleBoxAdapter" {
  +void setupParentData()
  #void setChildParentData()
  +bool hitTestChildren()
  +double childMainAxisPosition()
  +void applyPaintTransform()
  +void paint()
}

"rendering::sliver::RenderSliver" <|-- "rendering::sliver::RenderSliverSingleBoxAdapter"
"rendering::object::RenderObjectWithChildMixin" <|-- "rendering::sliver::RenderSliverSingleBoxAdapter"
"rendering::sliver::RenderSliverHelpers" <|-- "rendering::sliver::RenderSliverSingleBoxAdapter"

class "rendering::sliver::RenderSliverToBoxAdapter" {
  +void performLayout()
}

"rendering::sliver::RenderSliverSingleBoxAdapter" <|-- "rendering::sliver::RenderSliverToBoxAdapter"

class "rendering::sliver::GrowthDirection" {
  +int index
  {static} +List<GrowthDirection> values
  {static} +GrowthDirection forward
  {static} +GrowthDirection reverse
}

"rendering::sliver::GrowthDirection" o-- "rendering::sliver::GrowthDirection"
"dart::core::Enum" <|-- "rendering::sliver::GrowthDirection"

abstract class "rendering::sliver::RenderSliverHelpers" {
  -bool _getRightWayUp()
  #bool hitTestBoxChild()
  #void applyPaintTransformForBoxChild()
}

"rendering::sliver::RenderSliver" <|-- "rendering::sliver::RenderSliverHelpers"

class "rendering::error::RenderErrorBox" {
  +String message
  -Paragraph? _paragraph
  {static} +EdgeInsets padding
  {static} +double minimumWidth
  {static} +Color backgroundColor
  {static} +TextStyle textStyle
  {static} +ParagraphStyle paragraphStyle
  +bool sizedByParent
  +double computeMaxIntrinsicWidth()
  +double computeMaxIntrinsicHeight()
  +bool hitTestSelf()
  +Size computeDryLayout()
  {static} -Color _initBackgroundColor()
  {static} -TextStyle _initTextStyle()
  +void paint()
}

"rendering::error::RenderErrorBox" o-- "dart::ui::Paragraph"
"rendering::error::RenderErrorBox" o-- "painting::edge_insets::EdgeInsets"
"rendering::error::RenderErrorBox" o-- "dart::ui::Color"
"rendering::error::RenderErrorBox" o-- "dart::ui::TextStyle"
"rendering::error::RenderErrorBox" o-- "dart::ui::ParagraphStyle"
"rendering::box::RenderBox" <|-- "rendering::error::RenderErrorBox"

class "rendering::stack::RelativeRect" {
  {static} +RelativeRect fill
  +double left
  +double top
  +double right
  +double bottom
  +bool hasInsets
  +int hashCode
  +RelativeRect shift()
  +RelativeRect inflate()
  +RelativeRect deflate()
  +RelativeRect intersect()
  +Rect toRect()
  +Size toSize()
  {static} +RelativeRect? lerp()
  +bool ==()
  +String toString()
}

"rendering::stack::RelativeRect" o-- "rendering::stack::RelativeRect"

class "rendering::stack::StackParentData" {
  +double? top
  +double? right
  +double? bottom
  +double? left
  +double? width
  +double? height
  +RelativeRect rect
  +bool isPositioned
  +String toString()
}

"rendering::stack::StackParentData" o-- "rendering::stack::RelativeRect"
"rendering::box::ContainerBoxParentData" <|-- "rendering::stack::StackParentData"

class "rendering::stack::RenderStack" {
  -bool _hasVisualOverflow
  -Alignment? _resolvedAlignment
  -AlignmentGeometry _alignment
  -TextDirection? _textDirection
  -StackFit _fit
  -Clip _clipBehavior
  -LayerHandle<ClipRectLayer> _clipRectLayer
  +AlignmentGeometry alignment
  +TextDirection? textDirection
  +StackFit fit
  +Clip clipBehavior
  +void setupParentData()
  -void _resolve()
  -void _markNeedResolution()
  {static} +double getIntrinsicDimension()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double? computeDistanceToActualBaseline()
  {static} +bool layoutPositionedChild()
  +Size computeDryLayout()
  -Size _computeSize()
  +void performLayout()
  +bool hitTestChildren()
  #void paintStack()
  +void paint()
  +void dispose()
  +Rect? describeApproximatePaintClip()
  +void debugFillProperties()
}

"rendering::stack::RenderStack" o-- "painting::alignment::Alignment"
"rendering::stack::RenderStack" o-- "painting::alignment::AlignmentGeometry"
"rendering::stack::RenderStack" o-- "dart::ui::TextDirection"
"rendering::stack::RenderStack" o-- "rendering::stack::StackFit"
"rendering::stack::RenderStack" o-- "dart::ui::Clip"
"rendering::stack::RenderStack" o-- "rendering::layer::LayerHandle<ClipRectLayer>"
"rendering::box::RenderBox" <|-- "rendering::stack::RenderStack"
"rendering::object::ContainerRenderObjectMixin" <|-- "rendering::stack::RenderStack"
"rendering::box::RenderBoxContainerDefaultsMixin" <|-- "rendering::stack::RenderStack"

class "rendering::stack::RenderIndexedStack" {
  -int? _index
  +int? index
  +void visitChildrenForSemantics()
  -RenderBox _childAtIndex()
  +bool hitTestChildren()
  +void paintStack()
  +void debugFillProperties()
  +List<DiagnosticsNode> debugDescribeChildren()
}

"rendering::stack::RenderStack" <|-- "rendering::stack::RenderIndexedStack"

class "rendering::stack::StackFit" {
  +int index
  {static} +List<StackFit> values
  {static} +StackFit loose
  {static} +StackFit expand
  {static} +StackFit passthrough
}

"rendering::stack::StackFit" o-- "rendering::stack::StackFit"
"dart::core::Enum" <|-- "rendering::stack::StackFit"

class "rendering::list_body::ListBodyParentData" {
}

"rendering::box::ContainerBoxParentData" <|-- "rendering::list_body::ListBodyParentData"

class "rendering::list_body::RenderListBody" {
  -AxisDirection _axisDirection
  +AxisDirection axisDirection
  +Axis mainAxis
  +void setupParentData()
  +Size computeDryLayout()
  -bool _debugCheckConstraints()
  +void performLayout()
  +void debugFillProperties()
  -double _getIntrinsicCrossAxis()
  -double _getIntrinsicMainAxis()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double? computeDistanceToActualBaseline()
  +void paint()
  +bool hitTestChildren()
}

"rendering::list_body::RenderListBody" o-- "painting::basic_types::AxisDirection"
"rendering::list_body::RenderListBody" o-- "painting::basic_types::Axis"
"rendering::box::RenderBox" <|-- "rendering::list_body::RenderListBody"
"rendering::object::ContainerRenderObjectMixin" <|-- "rendering::list_body::RenderListBody"
"rendering::box::RenderBoxContainerDefaultsMixin" <|-- "rendering::list_body::RenderListBody"

class "rendering::tweens::FractionalOffsetTween" {
  +FractionalOffset? lerp()
}

"animation::tween::Tween" <|-- "rendering::tweens::FractionalOffsetTween"

class "rendering::tweens::AlignmentTween" {
  +Alignment lerp()
}

"animation::tween::Tween" <|-- "rendering::tweens::AlignmentTween"

class "rendering::tweens::AlignmentGeometryTween" {
  +AlignmentGeometry? lerp()
}

"animation::tween::Tween" <|-- "rendering::tweens::AlignmentGeometryTween"

class "rendering::layer::AnnotationEntry" {
  +T annotation
  +Offset localPosition
  +String toString()
}

"rendering::layer::AnnotationEntry" o-- "dart::ui::Offset"

class "rendering::layer::AnnotationResult" {
  -List<AnnotationEntry<T>> _entries
  +Iterable<AnnotationEntry<T>> entries
  +Iterable<T> annotations
  +void add()
}

abstract class "rendering::layer::Layer" {
  -Map<int, void Function()> _callbacks
  {static} -int _nextCallbackId
  -int _compositionCallbackCount
  -bool _debugMutationsLocked
  -bool _debugDisposed
  -LayerHandle<Layer> _parentHandle
  -int _refCount
  -ContainerLayer? _parent
  -bool _needsAddToScene
  -EngineLayer? _engineLayer
  -Object? _owner
  -int _depth
  -Layer? _nextSibling
  -Layer? _previousSibling
  +Object? debugCreator
  +bool subtreeHasCompositionCallbacks
  +bool debugDisposed
  +int debugHandleCount
  +ContainerLayer? parent
  +bool alwaysNeedsAddToScene
  +bool? debugSubtreeNeedsAddToScene
  +EngineLayer? engineLayer
  +Object? owner
  +bool attached
  +int depth
  +Layer? nextSibling
  +Layer? previousSibling
  -void _updateSubtreeCompositionObserverCount()
  -void _fireCompositionCallbacks()
  +bool supportsRasterization()
  +Rect? describeClipBounds()
  +void Function() addCompositionCallback()
  -void _unref()
  #void dispose()
  #void markNeedsAddToScene()
  +void debugMarkClean()
  #void updateSubtreeNeedsAddToScene()
  +void attach()
  +void detach()
  #void redepthChildren()
  +void remove()
  #bool findAnnotations()
  +S? find()
  +AnnotationResult<S> findAllAnnotations()
  #void addToScene()
  -void _addToSceneWithRetainedRendering()
  +String toStringShort()
  +void debugFillProperties()
}

"rendering::layer::Layer" o-- "rendering::layer::LayerHandle<Layer>"
"rendering::layer::Layer" o-- "rendering::layer::ContainerLayer"
"rendering::layer::Layer" o-- "dart::ui::EngineLayer"
"rendering::layer::Layer" o-- "rendering::layer::Layer"
"foundation::diagnostics::DiagnosticableTreeMixin" <|-- "rendering::layer::Layer"

class "rendering::layer::LayerHandle" {
  -T? _layer
  +T? layer
  +String toString()
}

class "rendering::layer::PictureLayer" {
  +Rect canvasBounds
  -Picture? _picture
  -bool _isComplexHint
  -bool _willChangeHint
  +Picture? picture
  +bool isComplexHint
  +bool willChangeHint
  +void dispose()
  +void addToScene()
  +void debugFillProperties()
  +bool findAnnotations()
}

"rendering::layer::PictureLayer" o-- "dart::ui::Rect"
"rendering::layer::PictureLayer" o-- "dart::ui::Picture"
"rendering::layer::Layer" <|-- "rendering::layer::PictureLayer"

class "rendering::layer::TextureLayer" {
  +Rect rect
  +int textureId
  +bool freeze
  +FilterQuality filterQuality
  +void addToScene()
  +bool findAnnotations()
}

"rendering::layer::TextureLayer" o-- "dart::ui::Rect"
"rendering::layer::TextureLayer" o-- "dart::ui::FilterQuality"
"rendering::layer::Layer" <|-- "rendering::layer::TextureLayer"

class "rendering::layer::PlatformViewLayer" {
  +Rect rect
  +int viewId
  +bool supportsRasterization()
  +void addToScene()
}

"rendering::layer::PlatformViewLayer" o-- "dart::ui::Rect"
"rendering::layer::Layer" <|-- "rendering::layer::PlatformViewLayer"

class "rendering::layer::PerformanceOverlayLayer" {
  -Rect _overlayRect
  +int optionsMask
  +int rasterizerThreshold
  +bool checkerboardRasterCacheImages
  +bool checkerboardOffscreenLayers
  +Rect overlayRect
  +void addToScene()
  +bool findAnnotations()
}

"rendering::layer::PerformanceOverlayLayer" o-- "dart::ui::Rect"
"rendering::layer::Layer" <|-- "rendering::layer::PerformanceOverlayLayer"

class "rendering::layer::ContainerLayer" {
  -Layer? _firstChild
  -Layer? _lastChild
  +Layer? firstChild
  +Layer? lastChild
  +bool hasChildren
  -void _fireCompositionCallbacks()
  +bool supportsRasterization()
  +Scene buildScene()
  -bool _debugUltimatePreviousSiblingOf()
  -bool _debugUltimateNextSiblingOf()
  +void dispose()
  +void updateSubtreeNeedsAddToScene()
  +bool findAnnotations()
  +void attach()
  +void detach()
  +void append()
  -void _adoptChild()
  +void redepthChildren()
  #void redepthChild()
  -void _removeChild()
  -void _dropChild()
  +void removeAllChildren()
  +void addToScene()
  +void addChildrenToScene()
  +void applyTransform()
  +List<Layer> depthFirstIterateChildren()
  +List<DiagnosticsNode> debugDescribeChildren()
}

"rendering::layer::ContainerLayer" o-- "rendering::layer::Layer"
"rendering::layer::Layer" <|-- "rendering::layer::ContainerLayer"

class "rendering::layer::OffsetLayer" {
  -Offset _offset
  +Offset offset
  +bool findAnnotations()
  +void applyTransform()
  +void addToScene()
  +void debugFillProperties()
  -Scene _createSceneForImage()
  +Future<Image> toImage()
  +Image toImageSync()
}

"rendering::layer::OffsetLayer" o-- "dart::ui::Offset"
"rendering::layer::ContainerLayer" <|-- "rendering::layer::OffsetLayer"

class "rendering::layer::ClipRectLayer" {
  -Rect? _clipRect
  -Clip _clipBehavior
  +Rect? clipRect
  +Clip clipBehavior
  +Rect? describeClipBounds()
  +bool findAnnotations()
  +void addToScene()
  +void debugFillProperties()
}

"rendering::layer::ClipRectLayer" o-- "dart::ui::Rect"
"rendering::layer::ClipRectLayer" o-- "dart::ui::Clip"
"rendering::layer::ContainerLayer" <|-- "rendering::layer::ClipRectLayer"

class "rendering::layer::ClipRRectLayer" {
  -RRect? _clipRRect
  -Clip _clipBehavior
  +RRect? clipRRect
  +Clip clipBehavior
  +Rect? describeClipBounds()
  +bool findAnnotations()
  +void addToScene()
  +void debugFillProperties()
}

"rendering::layer::ClipRRectLayer" o-- "dart::ui::RRect"
"rendering::layer::ClipRRectLayer" o-- "dart::ui::Clip"
"rendering::layer::ContainerLayer" <|-- "rendering::layer::ClipRRectLayer"

class "rendering::layer::ClipPathLayer" {
  -Path? _clipPath
  -Clip _clipBehavior
  +Path? clipPath
  +Clip clipBehavior
  +Rect? describeClipBounds()
  +bool findAnnotations()
  +void addToScene()
  +void debugFillProperties()
}

"rendering::layer::ClipPathLayer" o-- "dart::ui::Path"
"rendering::layer::ClipPathLayer" o-- "dart::ui::Clip"
"rendering::layer::ContainerLayer" <|-- "rendering::layer::ClipPathLayer"

class "rendering::layer::ColorFilterLayer" {
  -ColorFilter? _colorFilter
  +ColorFilter? colorFilter
  +void addToScene()
  +void debugFillProperties()
}

"rendering::layer::ColorFilterLayer" o-- "dart::ui::ColorFilter"
"rendering::layer::ContainerLayer" <|-- "rendering::layer::ColorFilterLayer"

class "rendering::layer::ImageFilterLayer" {
  -ImageFilter? _imageFilter
  +ImageFilter? imageFilter
  +void addToScene()
  +void debugFillProperties()
}

"rendering::layer::ImageFilterLayer" o-- "dart::ui::ImageFilter"
"rendering::layer::OffsetLayer" <|-- "rendering::layer::ImageFilterLayer"

class "rendering::layer::TransformLayer" {
  -Matrix4? _transform
  -Matrix4? _lastEffectiveTransform
  -Matrix4? _invertedTransform
  -bool _inverseDirty
  +Matrix4? transform
  +void addToScene()
  -Offset? _transformOffset()
  +bool findAnnotations()
  +void applyTransform()
  +void debugFillProperties()
}

"rendering::layer::TransformLayer" o-- "vector_math::vector_math_64::Matrix4"
"rendering::layer::OffsetLayer" <|-- "rendering::layer::TransformLayer"

class "rendering::layer::OpacityLayer" {
  -int? _alpha
  +int? alpha
  +void addToScene()
  +void debugFillProperties()
}

"rendering::layer::OffsetLayer" <|-- "rendering::layer::OpacityLayer"

class "rendering::layer::ShaderMaskLayer" {
  -Shader? _shader
  -Rect? _maskRect
  -BlendMode? _blendMode
  +Shader? shader
  +Rect? maskRect
  +BlendMode? blendMode
  +void addToScene()
  +void debugFillProperties()
}

"rendering::layer::ShaderMaskLayer" o-- "dart::ui::Shader"
"rendering::layer::ShaderMaskLayer" o-- "dart::ui::Rect"
"rendering::layer::ShaderMaskLayer" o-- "dart::ui::BlendMode"
"rendering::layer::ContainerLayer" <|-- "rendering::layer::ShaderMaskLayer"

class "rendering::layer::BackdropFilterLayer" {
  -ImageFilter? _filter
  -BlendMode _blendMode
  +ImageFilter? filter
  +BlendMode blendMode
  +void addToScene()
  +void debugFillProperties()
}

"rendering::layer::BackdropFilterLayer" o-- "dart::ui::ImageFilter"
"rendering::layer::BackdropFilterLayer" o-- "dart::ui::BlendMode"
"rendering::layer::ContainerLayer" <|-- "rendering::layer::BackdropFilterLayer"

class "rendering::layer::LayerLink" {
  -LeaderLayer? _leader
  -Set<LeaderLayer>? _debugPreviousLeaders
  -bool _debugLeaderCheckScheduled
  +Size? leaderSize
  +LeaderLayer? leader
  -void _registerLeader()
  -void _unregisterLeader()
  -void _debugScheduleLeadersCleanUpCheck()
  +String toString()
}

"rendering::layer::LayerLink" o-- "rendering::layer::LeaderLayer"
"rendering::layer::LayerLink" o-- "dart::ui::Size"

class "rendering::layer::LeaderLayer" {
  -LayerLink _link
  -Offset _offset
  +LayerLink link
  +Offset offset
  +void attach()
  +void detach()
  +bool findAnnotations()
  +void addToScene()
  +void applyTransform()
  +void debugFillProperties()
}

"rendering::layer::LeaderLayer" o-- "rendering::layer::LayerLink"
"rendering::layer::LeaderLayer" o-- "dart::ui::Offset"
"rendering::layer::ContainerLayer" <|-- "rendering::layer::LeaderLayer"

class "rendering::layer::FollowerLayer" {
  +LayerLink link
  +bool? showWhenUnlinked
  +Offset? unlinkedOffset
  +Offset? linkedOffset
  -Offset? _lastOffset
  -Matrix4? _lastTransform
  -Matrix4? _invertedTransform
  -bool _inverseDirty
  +bool alwaysNeedsAddToScene
  -Offset? _transformOffset()
  +bool findAnnotations()
  +Matrix4? getLastTransform()
  {static} -Matrix4 _collectTransformForLayerChain()
  {static} -Layer? _pathsToCommonAncestor()
  -bool _debugCheckLeaderBeforeFollower()
  -void _establishTransform()
  +void addToScene()
  +void applyTransform()
  +void debugFillProperties()
}

"rendering::layer::FollowerLayer" o-- "rendering::layer::LayerLink"
"rendering::layer::FollowerLayer" o-- "dart::ui::Offset"
"rendering::layer::FollowerLayer" o-- "vector_math::vector_math_64::Matrix4"
"rendering::layer::ContainerLayer" <|-- "rendering::layer::FollowerLayer"

class "rendering::layer::AnnotatedRegionLayer" {
  +T value
  +Size? size
  +Offset offset
  +bool opaque
  +bool findAnnotations()
  +void debugFillProperties()
}

"rendering::layer::AnnotatedRegionLayer" o-- "dart::ui::Size"
"rendering::layer::AnnotatedRegionLayer" o-- "dart::ui::Offset"
"rendering::layer::ContainerLayer" <|-- "rendering::layer::AnnotatedRegionLayer"

class "rendering::platform_view::RenderAndroidView" {
  -_PlatformViewState _state
  -Size? _currentTextureSize
  -bool _isDisposed
  -AndroidViewController _viewController
  -Clip _clipBehavior
  -LayerHandle<ClipRectLayer> _clipRectLayer
  +AndroidViewController controller
  +Clip clipBehavior
  +bool sizedByParent
  +bool alwaysNeedsCompositing
  +bool isRepaintBoundary
  -void _onPlatformViewCreated()
  +Size computeDryLayout()
  +void performResize()
  -Future<void> _sizePlatformView()
  -void _setOffset()
  +void paint()
  +void dispose()
  -void _paintTexture()
  +void describeSemanticsConfiguration()
}

"rendering::platform_view::RenderAndroidView" o-- "rendering::platform_view::_PlatformViewState"
"rendering::platform_view::RenderAndroidView" o-- "dart::ui::Size"
"rendering::platform_view::RenderAndroidView" o-- "services::platform_views::AndroidViewController"
"rendering::platform_view::RenderAndroidView" o-- "dart::ui::Clip"
"rendering::platform_view::RenderAndroidView" o-- "rendering::layer::LayerHandle<ClipRectLayer>"
"rendering::platform_view::PlatformViewRenderBox" <|-- "rendering::platform_view::RenderAndroidView"

abstract class "rendering::platform_view::RenderDarwinPlatformView" {
  -T _viewController
  +PlatformViewHitTestBehavior hitTestBehavior
  -PointerEvent? _lastPointerDownEvent
  -_UiKitViewGestureRecognizer? _gestureRecognizer
  +T viewController
  +bool sizedByParent
  +bool alwaysNeedsCompositing
  +bool isRepaintBoundary
  +Size computeDryLayout()
  +void paint()
  +bool hitTest()
  +bool hitTestSelf()
  -void _handleGlobalPointerEvent()
  +void describeSemanticsConfiguration()
  +void attach()
  +void detach()
  +void updateGestureRecognizers()
}

"rendering::platform_view::RenderDarwinPlatformView" o-- "rendering::platform_view::PlatformViewHitTestBehavior"
"rendering::platform_view::RenderDarwinPlatformView" o-- "gestures::events::PointerEvent"
"rendering::platform_view::RenderDarwinPlatformView" o-- "rendering::platform_view::_UiKitViewGestureRecognizer"
"rendering::box::RenderBox" <|-- "rendering::platform_view::RenderDarwinPlatformView"

class "rendering::platform_view::RenderUiKitView" {
  +void updateGestureRecognizers()
  +void handleEvent()
  +void detach()
}

"rendering::platform_view::RenderDarwinPlatformView" <|-- "rendering::platform_view::RenderUiKitView"

class "rendering::platform_view::RenderAppKitView" {
  +void updateGestureRecognizers()
}

"rendering::platform_view::RenderDarwinPlatformView" <|-- "rendering::platform_view::RenderAppKitView"

class "rendering::platform_view::_UiKitViewGestureRecognizer" {
  +Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizerFactories
  -Set<OneSequenceGestureRecognizer> _gestureRecognizers
  +UiKitViewController controller
  +String debugDescription
  +void addAllowedPointer()
  +void didStopTrackingLastPointer()
  +void handleEvent()
  +void acceptGesture()
  +void rejectGesture()
  +void reset()
}

"rendering::platform_view::_UiKitViewGestureRecognizer" o-- "services::platform_views::UiKitViewController"
"gestures::recognizer::OneSequenceGestureRecognizer" <|-- "rendering::platform_view::_UiKitViewGestureRecognizer"

class "rendering::platform_view::_PlatformViewGestureRecognizer" {
  -Future<void> Function(PointerEvent) _handlePointerEvent
  +Map<int, List<PointerEvent>> cachedEvents
  +Set<int> forwardedPointers
  +Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizerFactories
  -Set<OneSequenceGestureRecognizer> _gestureRecognizers
  +String debugDescription
  +void addAllowedPointer()
  +void didStopTrackingLastPointer()
  +void handleEvent()
  +void acceptGesture()
  +void rejectGesture()
  -void _cacheEvent()
  -void _flushPointerCache()
  +void stopTrackingPointer()
  +void reset()
}

"rendering::platform_view::_PlatformViewGestureRecognizer" o-- "rendering::platform_view::Future<void> Function(PointerEvent)"
"gestures::recognizer::OneSequenceGestureRecognizer" <|-- "rendering::platform_view::_PlatformViewGestureRecognizer"

class "rendering::platform_view::PlatformViewRenderBox" {
  -PlatformViewController _controller
  +PlatformViewController controller
  +bool sizedByParent
  +bool alwaysNeedsCompositing
  +bool isRepaintBoundary
  +void updateGestureRecognizers()
  +Size computeDryLayout()
  +void paint()
  +void describeSemanticsConfiguration()
}

"rendering::platform_view::PlatformViewRenderBox" o-- "services::platform_views::PlatformViewController"
"rendering::box::RenderBox" <|-- "rendering::platform_view::PlatformViewRenderBox"
"rendering::platform_view::_PlatformViewGestureMixin" <|-- "rendering::platform_view::PlatformViewRenderBox"

class "rendering::platform_view::PlatformViewHitTestBehavior" {
  +int index
  {static} +List<PlatformViewHitTestBehavior> values
  {static} +PlatformViewHitTestBehavior opaque
  {static} +PlatformViewHitTestBehavior translucent
  {static} +PlatformViewHitTestBehavior transparent
}

"rendering::platform_view::PlatformViewHitTestBehavior" o-- "rendering::platform_view::PlatformViewHitTestBehavior"
"dart::core::Enum" <|-- "rendering::platform_view::PlatformViewHitTestBehavior"

class "rendering::platform_view::_PlatformViewState" {
  +int index
  {static} +List<_PlatformViewState> values
  {static} +_PlatformViewState uninitialized
  {static} +_PlatformViewState resizing
  {static} +_PlatformViewState ready
}

"rendering::platform_view::_PlatformViewState" o-- "rendering::platform_view::_PlatformViewState"
"dart::core::Enum" <|-- "rendering::platform_view::_PlatformViewState"

abstract class "rendering::platform_view::_PlatformViewGestureMixin" {
  -PlatformViewHitTestBehavior? _hitTestBehavior
  -Future<void> Function(PointerEvent)? _handlePointerEvent
  -_PlatformViewGestureRecognizer? _gestureRecognizer
  +PlatformViewHitTestBehavior hitTestBehavior
  +void Function(PointerEnterEvent)? onEnter
  +void Function(PointerExitEvent)? onExit
  +MouseCursor cursor
  +bool validForMouseTracker
  -void _updateGestureRecognizersWithCallBack()
  +bool hitTest()
  +bool hitTestSelf()
  +void handleEvent()
  +void detach()
}

"rendering::platform_view::_PlatformViewGestureMixin" o-- "rendering::platform_view::PlatformViewHitTestBehavior"
"rendering::platform_view::_PlatformViewGestureMixin" o-- "rendering::platform_view::Future<void> Function(PointerEvent)"
"rendering::platform_view::_PlatformViewGestureMixin" o-- "rendering::platform_view::_PlatformViewGestureRecognizer"
"rendering::platform_view::_PlatformViewGestureMixin" o-- "services::mouse_tracking::void Function(PointerEnterEvent)"
"rendering::platform_view::_PlatformViewGestureMixin" o-- "services::mouse_tracking::void Function(PointerExitEvent)"
"rendering::platform_view::_PlatformViewGestureMixin" o-- "services::mouse_cursor::MouseCursor"
"services::mouse_tracking::MouseTrackerAnnotation" <|-- "rendering::platform_view::_PlatformViewGestureMixin"

class "rendering::service_extensions::RenderingServiceExtensions" {
  +int index
  {static} +List<RenderingServiceExtensions> values
  {static} +RenderingServiceExtensions invertOversizedImages
  {static} +RenderingServiceExtensions debugPaint
  {static} +RenderingServiceExtensions debugPaintBaselinesEnabled
  {static} +RenderingServiceExtensions repaintRainbow
  {static} +RenderingServiceExtensions debugDumpLayerTree
  {static} +RenderingServiceExtensions debugDisableClipLayers
  {static} +RenderingServiceExtensions debugDisablePhysicalShapeLayers
  {static} +RenderingServiceExtensions debugDisableOpacityLayers
  {static} +RenderingServiceExtensions debugDumpRenderTree
  {static} +RenderingServiceExtensions debugDumpSemanticsTreeInTraversalOrder
  {static} +RenderingServiceExtensions debugDumpSemanticsTreeInInverseHitTestOrder
  {static} +RenderingServiceExtensions profileRenderObjectPaints
  {static} +RenderingServiceExtensions profileRenderObjectLayouts
}

"rendering::service_extensions::RenderingServiceExtensions" o-- "rendering::service_extensions::RenderingServiceExtensions"
"dart::core::Enum" <|-- "rendering::service_extensions::RenderingServiceExtensions"

class "rendering::editable::TextSelectionPoint" {
  +Offset point
  +TextDirection? direction
  +int hashCode
  +bool ==()
  +String toString()
}

"rendering::editable::TextSelectionPoint" o-- "dart::ui::Offset"
"rendering::editable::TextSelectionPoint" o-- "dart::ui::TextDirection"

class "rendering::editable::VerticalCaretMovementRun" {
  -Offset _currentOffset
  -int _currentLine
  -TextPosition _currentTextPosition
  -List<LineMetrics> _lineMetrics
  -RenderEditable _editable
  -bool _isValid
  -Map<int, MapEntry<Offset, TextPosition>> _positionCache
  +bool isValid
  +TextPosition current
  -MapEntry<Offset, TextPosition> _getTextPositionForLine()
  +bool moveNext()
  +bool movePrevious()
  +bool moveByOffset()
}

"rendering::editable::VerticalCaretMovementRun" o-- "dart::ui::Offset"
"rendering::editable::VerticalCaretMovementRun" o-- "dart::ui::TextPosition"
"rendering::editable::VerticalCaretMovementRun" o-- "rendering::editable::RenderEditable"
"dart::core::Iterator" <|-- "rendering::editable::VerticalCaretMovementRun"

class "rendering::editable::RenderEditable" {
  -_RenderEditableCustomPaint? _foregroundRenderObject
  -_RenderEditableCustomPaint? _backgroundRenderObject
  -RenderEditablePainter? _foregroundPainter
  -RenderEditablePainter? _painter
  -_CaretPainter _caretPainter
  -_TextHighlightPainter _selectionPainter
  -_TextHighlightPainter _autocorrectHighlightPainter
  -_CompositeRenderEditablePainter? _cachedBuiltInForegroundPainters
  -_CompositeRenderEditablePainter? _cachedBuiltInPainters
  -double? _textLayoutLastMaxWidth
  -double? _textLayoutLastMinWidth
  +bool ignorePointer
  -double _devicePixelRatio
  -String _obscuringCharacter
  -bool _obscureText
  +TextSelectionDelegate textSelectionDelegate
  -ValueNotifier<bool> _selectionStartInViewport
  -ValueNotifier<bool> _selectionEndInViewport
  -TextPainter _textPainter
  -AttributedString? _cachedAttributedValue
  -List<InlineSpanSemanticsInformation>? _cachedCombinedSemanticsInfos
  -ValueNotifier<bool> _showCursor
  -bool _hasFocus
  -bool _forceLine
  -bool _readOnly
  -int? _maxLines
  -int? _minLines
  -bool _expands
  -TextSelection? _selection
  -ViewportOffset _offset
  -double _cursorWidth
  -double? _cursorHeight
  -bool _paintCursorOnTop
  -LayerLink _startHandleLayerLink
  -LayerLink _endHandleLayerLink
  +EdgeInsets floatingCursorAddedMargin
  -bool _floatingCursorOn
  -TextPosition _floatingCursorTextPosition
  -bool? _enableInteractiveSelection
  -double _maxScrollExtent
  -Clip _clipBehavior
  -List<InlineSpanSemanticsInformation>? _semanticsInfo
  -LinkedHashMap<Key, SemanticsNode>? _cachedChildNodes
  -int? _cachedLineBreakCount
  -TapGestureRecognizer _tap
  -LongPressGestureRecognizer _longPress
  -Offset? _lastTapDownPosition
  -Offset? _lastSecondaryTapDownPosition
  -List<PlaceholderDimensions>? _placeholderDimensions
  -Rect _caretPrototype
  -bool? _canComputeIntrinsicsCached
  -Offset _relativeOrigin
  -Offset? _previousOffset
  -bool _resetOriginOnLeft
  -bool _resetOriginOnRight
  -bool _resetOriginOnTop
  -bool _resetOriginOnBottom
  -double? _resetFloatingCursorAnimationValue
  -LayerHandle<ClipRectLayer> _clipRectLayer
  +RenderEditablePainter? foregroundPainter
  +RenderEditablePainter? painter
  -_CompositeRenderEditablePainter _builtInForegroundPainters
  -_CompositeRenderEditablePainter _builtInPainters
  +TextHeightBehavior? textHeightBehavior
  +TextWidthBasis textWidthBasis
  +double devicePixelRatio
  +String obscuringCharacter
  +bool obscureText
  +BoxHeightStyle selectionHeightStyle
  +BoxWidthStyle selectionWidthStyle
  +ValueListenable<bool> selectionStartInViewport
  +ValueListenable<bool> selectionEndInViewport
  +String plainText
  +InlineSpan? text
  +TextAlign textAlign
  +TextDirection textDirection
  +Locale? locale
  +StrutStyle? strutStyle
  +Color? cursorColor
  +Color? backgroundCursorColor
  +ValueNotifier<bool> showCursor
  +bool hasFocus
  +bool forceLine
  +bool readOnly
  +int? maxLines
  +int? minLines
  +bool expands
  +Color? selectionColor
  +double textScaleFactor
  +dynamic textScaler
  +TextSelection? selection
  +ViewportOffset offset
  +double cursorWidth
  +double cursorHeight
  +bool paintCursorAboveText
  +Offset cursorOffset
  +Radius? cursorRadius
  +LayerLink startHandleLayerLink
  +LayerLink endHandleLayerLink
  +bool? enableInteractiveSelection
  +bool selectionEnabled
  +Color? promptRectColor
  +double maxScrollExtent
  -double _caretMargin
  +Clip clipBehavior
  -bool _isMultiline
  -Axis _viewportAxis
  -Offset _paintOffset
  -double _viewportExtent
  -bool _hasVisualOverflow
  +double preferredLineHeight
  +Offset? lastSecondaryTapDownPosition
  +dynamic wordBoundaries
  -bool _canComputeIntrinsics
  +void dispose()
  -void _updateForegroundPainter()
  -void _updatePainter()
  -_CompositeRenderEditablePainter _createBuiltInForegroundPainters()
  -_CompositeRenderEditablePainter _createBuiltInPainters()
  +void debugAssertLayoutUpToDate()
  -TextPosition _getTextPositionVertical()
  +TextSelection getLineAtOffset()
  +TextRange getWordBoundary()
  +TextPosition getTextPositionAbove()
  +TextPosition getTextPositionBelow()
  -void _updateSelectionExtentsVisibility()
  -void _setTextEditingValue()
  -void _setSelection()
  +void markNeedsPaint()
  #void markNeedsTextLayout()
  +void systemFontsDidChange()
  -void _showHideCursor()
  +void setPromptRectRange()
  +List<TextBox> getBoxesForSelection()
  +void describeSemanticsConfiguration()
  -void _handleSetText()
  +void assembleSemanticsNode()
  -void Function()? _createShowOnScreenFor()
  -void _handleSetSelection()
  -void _handleMoveCursorForwardByCharacter()
  -void _handleMoveCursorBackwardByCharacter()
  -void _handleMoveCursorForwardByWord()
  -void _handleMoveCursorBackwardByWord()
  -TextRange? _getNextWord()
  -TextRange? _getPreviousWord()
  -bool _onlyWhitespace()
  +void attach()
  +void detach()
  +void redepthChildren()
  +void visitChildren()
  -double _getMaxScrollExtent()
  +List<TextSelectionPoint> getEndpointsForSelection()
  +Rect? getRectForComposingRange()
  +TextPosition getPositionForPoint()
  +Rect getLocalRectForCaret()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  -int _countHardLineBreaks()
  -double _preferredHeight()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double computeDistanceToActualBaseline()
  +bool hitTestSelf()
  #bool hitTestChildren()
  +void handleEvent()
  +void handleSecondaryTapDown()
  +void handleTapDown()
  -void _handleTapDown()
  +void handleTap()
  -void _handleTap()
  +void handleDoubleTap()
  +void handleLongPress()
  -void _handleLongPress()
  +void selectPosition()
  +void selectPositionAt()
  +void selectWord()
  +void selectWordsInRange()
  +void selectWordEdge()
  +TextSelection getWordAtOffset()
  -void _layoutText()
  -void _computeTextMetricsIfNeeded()
  -void _computeCaretPrototype()
  -Offset _snapToPhysicalPixel()
  -bool _canComputeDryLayoutForInlineWidgets()
  +Size computeDryLayout()
  +void performLayout()
  +Offset calculateBoundedFloatingCursorOffset()
  +void setFloatingCursor()
  -MapEntry<int, Offset> _lineNumberFor()
  +VerticalCaretMovementRun startVerticalCaretMovement()
  -void _paintContents()
  -void _paintHandleLayers()
  +void applyPaintTransform()
  +void paint()
  +Rect? describeApproximatePaintClip()
  +void debugFillProperties()
  +List<DiagnosticsNode> debugDescribeChildren()
}

"rendering::editable::RenderEditable" o-- "rendering::editable::_RenderEditableCustomPaint"
"rendering::editable::RenderEditable" o-- "rendering::editable::RenderEditablePainter"
"rendering::editable::RenderEditable" o-- "rendering::editable::_CaretPainter"
"rendering::editable::RenderEditable" o-- "rendering::editable::_TextHighlightPainter"
"rendering::editable::RenderEditable" o-- "rendering::editable::_CompositeRenderEditablePainter"
"rendering::editable::RenderEditable" o-- "services::text_input::TextSelectionDelegate"
"rendering::editable::RenderEditable" o-- "foundation::change_notifier::ValueNotifier<bool>"
"rendering::editable::RenderEditable" o-- "painting::text_painter::TextPainter"
"rendering::editable::RenderEditable" o-- "semantics::semantics::AttributedString"
"rendering::editable::RenderEditable" o-- "services::text_editing::TextSelection"
"rendering::editable::RenderEditable" o-- "rendering::viewport_offset::ViewportOffset"
"rendering::editable::RenderEditable" o-- "rendering::layer::LayerLink"
"rendering::editable::RenderEditable" o-- "painting::edge_insets::EdgeInsets"
"rendering::editable::RenderEditable" o-- "dart::ui::TextPosition"
"rendering::editable::RenderEditable" o-- "dart::ui::Clip"
"rendering::editable::RenderEditable" o-- "dart::collection::LinkedHashMap<Key, SemanticsNode>"
"rendering::editable::RenderEditable" o-- "gestures::tap::TapGestureRecognizer"
"rendering::editable::RenderEditable" o-- "gestures::long_press::LongPressGestureRecognizer"
"rendering::editable::RenderEditable" o-- "dart::ui::Offset"
"rendering::editable::RenderEditable" o-- "dart::ui::Rect"
"rendering::editable::RenderEditable" o-- "rendering::layer::LayerHandle<ClipRectLayer>"
"rendering::editable::RenderEditable" o-- "dart::ui::TextHeightBehavior"
"rendering::editable::RenderEditable" o-- "painting::text_painter::TextWidthBasis"
"rendering::editable::RenderEditable" o-- "dart::ui::BoxHeightStyle"
"rendering::editable::RenderEditable" o-- "dart::ui::BoxWidthStyle"
"rendering::editable::RenderEditable" o-- "foundation::change_notifier::ValueListenable<bool>"
"rendering::editable::RenderEditable" o-- "painting::inline_span::InlineSpan"
"rendering::editable::RenderEditable" o-- "dart::ui::TextAlign"
"rendering::editable::RenderEditable" o-- "dart::ui::TextDirection"
"rendering::editable::RenderEditable" o-- "dart::ui::Locale"
"rendering::editable::RenderEditable" o-- "painting::strut_style::StrutStyle"
"rendering::editable::RenderEditable" o-- "dart::ui::Color"
"rendering::editable::RenderEditable" o-- "dart::ui::Radius"
"rendering::editable::RenderEditable" o-- "painting::basic_types::Axis"
"rendering::box::RenderBox" <|-- "rendering::editable::RenderEditable"
"rendering::object::RelayoutWhenSystemFontsChangeMixin" <|-- "rendering::editable::RenderEditable"
"rendering::object::ContainerRenderObjectMixin" <|-- "rendering::editable::RenderEditable"
"rendering::paragraph::RenderInlineChildrenContainerDefaults" <|-- "rendering::editable::RenderEditable"
"services::text_layout_metrics::TextLayoutMetrics" <|-- "rendering::editable::RenderEditable"

class "rendering::editable::_RenderEditableCustomPaint" {
  -RenderEditablePainter? _painter
  +RenderEditable? parent
  +bool isRepaintBoundary
  +bool sizedByParent
  +RenderEditablePainter? painter
  +void paint()
  +void attach()
  +void detach()
  +Size computeDryLayout()
}

"rendering::editable::_RenderEditableCustomPaint" o-- "rendering::editable::RenderEditablePainter"
"rendering::editable::_RenderEditableCustomPaint" o-- "rendering::editable::RenderEditable"
"rendering::box::RenderBox" <|-- "rendering::editable::_RenderEditableCustomPaint"

abstract class "rendering::editable::RenderEditablePainter" {
  +bool shouldRepaint()
  +void paint()
}

"foundation::change_notifier::ChangeNotifier" <|-- "rendering::editable::RenderEditablePainter"

class "rendering::editable::_TextHighlightPainter" {
  +Paint highlightPaint
  -Color? _highlightColor
  -TextRange? _highlightedRange
  -BoxHeightStyle _selectionHeightStyle
  -BoxWidthStyle _selectionWidthStyle
  +Color? highlightColor
  +TextRange? highlightedRange
  +BoxHeightStyle selectionHeightStyle
  +BoxWidthStyle selectionWidthStyle
  +void paint()
  +bool shouldRepaint()
}

"rendering::editable::_TextHighlightPainter" o-- "dart::ui::Paint"
"rendering::editable::_TextHighlightPainter" o-- "dart::ui::Color"
"rendering::editable::_TextHighlightPainter" o-- "dart::ui::TextRange"
"rendering::editable::_TextHighlightPainter" o-- "dart::ui::BoxHeightStyle"
"rendering::editable::_TextHighlightPainter" o-- "dart::ui::BoxWidthStyle"
"rendering::editable::RenderEditablePainter" <|-- "rendering::editable::_TextHighlightPainter"

class "rendering::editable::_CaretPainter" {
  -bool _shouldPaint
  +bool showRegularCaret
  +Paint caretPaint
  +Paint floatingCursorPaint
  -Color? _caretColor
  -Radius? _cursorRadius
  -Offset _cursorOffset
  -Color? _backgroundCursorColor
  -Rect? _floatingCursorRect
  +bool shouldPaint
  +Color? caretColor
  +Radius? cursorRadius
  +Offset cursorOffset
  +Color? backgroundCursorColor
  +Rect? floatingCursorRect
  +void paintRegularCursor()
  +void paint()
  +bool shouldRepaint()
}

"rendering::editable::_CaretPainter" o-- "dart::ui::Paint"
"rendering::editable::_CaretPainter" o-- "dart::ui::Color"
"rendering::editable::_CaretPainter" o-- "dart::ui::Radius"
"rendering::editable::_CaretPainter" o-- "dart::ui::Offset"
"rendering::editable::_CaretPainter" o-- "dart::ui::Rect"
"rendering::editable::RenderEditablePainter" <|-- "rendering::editable::_CaretPainter"

class "rendering::editable::_CompositeRenderEditablePainter" {
  +List<RenderEditablePainter> painters
  +void addListener()
  +void removeListener()
  +void paint()
  +bool shouldRepaint()
}

"rendering::editable::RenderEditablePainter" <|-- "rendering::editable::_CompositeRenderEditablePainter"

class "rendering::paragraph::PlaceholderSpanIndexSemanticsTag" {
  +int index
  +int hashCode
  +bool ==()
}

"semantics::semantics::SemanticsTag" <|-- "rendering::paragraph::PlaceholderSpanIndexSemanticsTag"

class "rendering::paragraph::TextParentData" {
  -Offset? _offset
  +PlaceholderSpan? span
  +Offset? offset
  +void detach()
  +String toString()
}

"rendering::paragraph::TextParentData" o-- "dart::ui::Offset"
"rendering::paragraph::TextParentData" o-- "painting::placeholder_span::PlaceholderSpan"
"rendering::object::ParentData" <|-- "rendering::paragraph::TextParentData"
"rendering::object::ContainerParentDataMixin" <|-- "rendering::paragraph::TextParentData"

class "rendering::paragraph::RenderParagraph" {
  {static} -String _placeholderCharacter
  -TextPainter _textPainter
  -List<AttributedString>? _cachedAttributedLabels
  -List<InlineSpanSemanticsInformation>? _cachedCombinedSemanticsInfos
  -List<_SelectableFragment>? _lastSelectableFragments
  -SelectionRegistrar? _registrar
  -bool _softWrap
  -TextOverflow _overflow
  -Color? _selectionColor
  -bool? _canComputeIntrinsicsCached
  -bool _needsClipping
  -Shader? _overflowShader
  -List<PlaceholderDimensions>? _placeholderDimensions
  -List<InlineSpanSemanticsInformation>? _semanticsInfo
  -LinkedHashMap<Key, SemanticsNode>? _cachedChildNodes
  +InlineSpan text
  +List<TextSelection> selections
  +SelectionRegistrar? registrar
  +bool alwaysNeedsCompositing
  +TextAlign textAlign
  +TextDirection textDirection
  +bool softWrap
  +TextOverflow overflow
  +double textScaleFactor
  +dynamic textScaler
  +int? maxLines
  +Locale? locale
  +StrutStyle? strutStyle
  +TextWidthBasis textWidthBasis
  +TextHeightBehavior? textHeightBehavior
  +Color? selectionColor
  +bool debugHasOverflowShader
  +Size textSize
  -void _updateSelectionRegistrarSubscription()
  -void _removeSelectionRegistrarSubscription()
  -List<_SelectableFragment> _getSelectableFragments()
  -void _disposeSelectableFragments()
  +void markNeedsLayout()
  +void dispose()
  -Offset _getOffsetForPosition()
  -List<LineMetrics> _computeLineMetrics()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  -double _computeIntrinsicHeight()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double computeDistanceToActualBaseline()
  -bool _canComputeDryLayoutForInlineWidgets()
  -bool _canComputeIntrinsics()
  +bool hitTestSelf()
  +bool hitTestChildren()
  -void _layoutText()
  +void systemFontsDidChange()
  -void _layoutTextWithConstraints()
  +Size computeDryLayout()
  +void performLayout()
  +void applyPaintTransform()
  +void paint()
  +Offset getOffsetForCaret()
  +double? getFullHeightForCaret()
  +List<TextBox> getBoxesForSelection()
  +TextPosition getPositionForOffset()
  +TextRange getWordBoundary()
  -TextRange _getLineAtOffset()
  -TextPosition _getTextPositionAbove()
  -TextPosition _getTextPositionBelow()
  -TextPosition _getTextPositionVertical()
  +void describeSemanticsConfiguration()
  -dynamic _childSemanticsConfigurationsDelegate()
  -SemanticsConfiguration _createSemanticsConfigForTextInfo()
  +void assembleSemanticsNode()
  -void Function()? _createShowOnScreenFor()
  +void clearSemantics()
  +List<DiagnosticsNode> debugDescribeChildren()
  +void debugFillProperties()
}

"rendering::paragraph::RenderParagraph" o-- "painting::text_painter::TextPainter"
"rendering::paragraph::RenderParagraph" o-- "rendering::selection::SelectionRegistrar"
"rendering::paragraph::RenderParagraph" o-- "painting::text_painter::TextOverflow"
"rendering::paragraph::RenderParagraph" o-- "dart::ui::Color"
"rendering::paragraph::RenderParagraph" o-- "dart::ui::Shader"
"rendering::paragraph::RenderParagraph" o-- "dart::collection::LinkedHashMap<Key, SemanticsNode>"
"rendering::paragraph::RenderParagraph" o-- "painting::inline_span::InlineSpan"
"rendering::paragraph::RenderParagraph" o-- "dart::ui::TextAlign"
"rendering::paragraph::RenderParagraph" o-- "dart::ui::TextDirection"
"rendering::paragraph::RenderParagraph" o-- "dart::ui::Locale"
"rendering::paragraph::RenderParagraph" o-- "painting::strut_style::StrutStyle"
"rendering::paragraph::RenderParagraph" o-- "painting::text_painter::TextWidthBasis"
"rendering::paragraph::RenderParagraph" o-- "dart::ui::TextHeightBehavior"
"rendering::paragraph::RenderParagraph" o-- "dart::ui::Size"
"rendering::box::RenderBox" <|-- "rendering::paragraph::RenderParagraph"
"rendering::object::ContainerRenderObjectMixin" <|-- "rendering::paragraph::RenderParagraph"
"rendering::paragraph::RenderInlineChildrenContainerDefaults" <|-- "rendering::paragraph::RenderParagraph"
"rendering::object::RelayoutWhenSystemFontsChangeMixin" <|-- "rendering::paragraph::RenderParagraph"

class "rendering::paragraph::_SelectableFragment" {
  +TextRange range
  +RenderParagraph paragraph
  +String fullText
  -TextPosition? _textSelectionStart
  -TextPosition? _textSelectionEnd
  -bool _selectableContainsOriginWord
  -LayerLink? _startHandleLayerLink
  -LayerLink? _endHandleLayerLink
  -SelectionGeometry _selectionGeometry
  -Rect? _cachedRect
  +SelectionGeometry value
  -Rect _rect
  +Size size
  -void _updateSelectionGeometry()
  -SelectionGeometry _getSelectionGeometry()
  +SelectionResult dispatchSelectionEvent()
  +SelectedContent? getSelectedContent()
  -void _didChangeSelection()
  -SelectionResult _updateSelectionEdge()
  -TextPosition _closestWordBoundary()
  -TextPosition _updateSelectionStartEdgeByWord()
  -TextPosition _updateSelectionEndEdgeByWord()
  -SelectionResult _updateSelectionEdgeByWord()
  -TextPosition _clampTextPosition()
  -void _setSelectionPosition()
  -SelectionResult _handleClearSelection()
  -SelectionResult _handleSelectAll()
  -SelectionResult _handleSelectWord()
  -dynamic Function({TextPosition wordEnd, TextPosition wordStart}) _getWordBoundaryAtPosition()
  -SelectionResult _handleDirectionallyExtendSelection()
  -SelectionResult _handleGranularlyExtendSelection()
  -TextPosition _moveBeyondTextBoundaryAtDirection()
  -TextPosition _moveToTextBoundaryAtDirection()
  -MapEntry<TextPosition, SelectionResult> _handleVerticalMovement()
  -bool _positionIsWithinCurrentSelection()
  {static} -int _compareTextPositions()
  +Matrix4 getTransformToParagraph()
  +Matrix4 getTransformTo()
  +void pushHandleLayers()
  +void didChangeParagraphLayout()
  +void paint()
  +TextSelection getLineAtOffset()
  +TextPosition getTextPositionAbove()
  +TextPosition getTextPositionBelow()
  +TextRange getWordBoundary()
}

"rendering::paragraph::_SelectableFragment" o-- "dart::ui::TextRange"
"rendering::paragraph::_SelectableFragment" o-- "rendering::paragraph::RenderParagraph"
"rendering::paragraph::_SelectableFragment" o-- "dart::ui::TextPosition"
"rendering::paragraph::_SelectableFragment" o-- "rendering::layer::LayerLink"
"rendering::paragraph::_SelectableFragment" o-- "rendering::selection::SelectionGeometry"
"rendering::paragraph::_SelectableFragment" o-- "dart::ui::Rect"
"rendering::paragraph::_SelectableFragment" o-- "dart::ui::Size"
"rendering::selection::Selectable" <|-- "rendering::paragraph::_SelectableFragment"
"foundation::change_notifier::ChangeNotifier" <|-- "rendering::paragraph::_SelectableFragment"
"services::text_layout_metrics::TextLayoutMetrics" <|-- "rendering::paragraph::_SelectableFragment"

abstract class "rendering::paragraph::RenderInlineChildrenContainerDefaults" {
  +void setupParentData()
  {static} -PlaceholderDimensions _layoutChild()
  #List<PlaceholderDimensions> layoutInlineChildren()
  #void positionInlineChildren()
  #void defaultApplyPaintTransform()
  #void paintInlineChildren()
  #bool hitTestInlineChildren()
}

class "rendering::sliver_fill::RenderSliverFillViewport" {
  -double _viewportFraction
  +double itemExtent
  +double viewportFraction
}

"rendering::sliver_fixed_extent_list::RenderSliverFixedExtentBoxAdaptor" <|-- "rendering::sliver_fill::RenderSliverFillViewport"

class "rendering::sliver_fill::RenderSliverFillRemainingWithScrollable" {
  +void performLayout()
}

"rendering::sliver::RenderSliverSingleBoxAdapter" <|-- "rendering::sliver_fill::RenderSliverFillRemainingWithScrollable"

class "rendering::sliver_fill::RenderSliverFillRemaining" {
  +void performLayout()
}

"rendering::sliver::RenderSliverSingleBoxAdapter" <|-- "rendering::sliver_fill::RenderSliverFillRemaining"

class "rendering::sliver_fill::RenderSliverFillRemainingAndOverscroll" {
  +void performLayout()
}

"rendering::sliver::RenderSliverSingleBoxAdapter" <|-- "rendering::sliver_fill::RenderSliverFillRemainingAndOverscroll"

class "rendering::animated_size::RenderAnimatedSize" {
  -AnimationController _controller
  -CurvedAnimation _animation
  -SizeTween _sizeTween
  -bool _hasVisualOverflow
  -double? _lastValue
  -RenderAnimatedSizeState _state
  -Clip _clipBehavior
  -TickerProvider _vsync
  -LayerHandle<ClipRectLayer> _clipRectLayer
  +AnimationController? debugController
  +CurvedAnimation? debugAnimation
  +RenderAnimatedSizeState state
  +Duration duration
  +Duration? reverseDuration
  +Curve curve
  +Clip clipBehavior
  +bool isAnimating
  +TickerProvider vsync
  -Size? _animatedSize
  +void attach()
  +void detach()
  +void performLayout()
  +Size computeDryLayout()
  -void _restartAnimation()
  -void _layoutStart()
  -void _layoutStable()
  -void _layoutChanged()
  -void _layoutUnstable()
  +void paint()
  +void dispose()
}

"rendering::animated_size::RenderAnimatedSize" o-- "animation::animation_controller::AnimationController"
"rendering::animated_size::RenderAnimatedSize" o-- "animation::animations::CurvedAnimation"
"rendering::animated_size::RenderAnimatedSize" o-- "animation::tween::SizeTween"
"rendering::animated_size::RenderAnimatedSize" o-- "rendering::animated_size::RenderAnimatedSizeState"
"rendering::animated_size::RenderAnimatedSize" o-- "dart::ui::Clip"
"rendering::animated_size::RenderAnimatedSize" o-- "scheduler::ticker::TickerProvider"
"rendering::animated_size::RenderAnimatedSize" o-- "rendering::layer::LayerHandle<ClipRectLayer>"
"rendering::animated_size::RenderAnimatedSize" o-- "animation::curves::Curve"
"rendering::animated_size::RenderAnimatedSize" o-- "dart::ui::Size"
"rendering::shifted_box::RenderAligningShiftedBox" <|-- "rendering::animated_size::RenderAnimatedSize"

class "rendering::animated_size::RenderAnimatedSizeState" {
  +int index
  {static} +List<RenderAnimatedSizeState> values
  {static} +RenderAnimatedSizeState start
  {static} +RenderAnimatedSizeState stable
  {static} +RenderAnimatedSizeState changed
  {static} +RenderAnimatedSizeState unstable
}

"rendering::animated_size::RenderAnimatedSizeState" o-- "rendering::animated_size::RenderAnimatedSizeState"
"dart::core::Enum" <|-- "rendering::animated_size::RenderAnimatedSizeState"

class "rendering::binding::RenderingFlutterBinding" {
  {static} +RendererBinding ensureInitialized()
}

"scheduler::binding::SchedulerBinding" <|-- "rendering::binding::RenderingFlutterBinding"
"services::binding::ServicesBinding" <|-- "rendering::binding::RenderingFlutterBinding"
"semantics::binding::SemanticsBinding" <|-- "rendering::binding::RenderingFlutterBinding"
"painting::binding::PaintingBinding" <|-- "rendering::binding::RenderingFlutterBinding"
"rendering::binding::RendererBinding" <|-- "rendering::binding::RenderingFlutterBinding"

class "rendering::binding::_BindingPipelineManifold" {
  -RendererBinding _binding
  +bool semanticsEnabled
  +void requestVisualUpdate()
  +void dispose()
}

"rendering::binding::_BindingPipelineManifold" o-- "rendering::binding::RendererBinding"
"foundation::change_notifier::ChangeNotifier" <|-- "rendering::binding::_BindingPipelineManifold"
"rendering::object::PipelineManifold" <|-- "rendering::binding::_BindingPipelineManifold"

class "rendering::binding::_DefaultRootPipelineOwner" {
  +RenderObject? rootNode
  {static} -void _onSemanticsUpdate()
}

"rendering::binding::_DefaultRootPipelineOwner" o-- "rendering::object::RenderObject"
"rendering::object::PipelineOwner" <|-- "rendering::binding::_DefaultRootPipelineOwner"

class "rendering::binding::_ReusableRenderView" {
  -bool _initialFramePrepared
  +void prepareInitialFrame()
  +void scheduleInitialSemantics()
  +void dispose()
}

"rendering::view::RenderView" <|-- "rendering::binding::_ReusableRenderView"

abstract class "rendering::binding::RendererBinding" {
  {static} -RendererBinding? _instance
  -PipelineManifold _manifold
  -MouseTracker? _mouseTracker
  +PipelineOwner pipelineOwner
  +RenderView renderView
  -PipelineOwner _rootPipelineOwner
  -Map<Object, RenderView> _viewIdToRenderView
  -bool _debugMouseTrackerUpdateScheduled
  -int _firstFrameDeferredCount
  -bool _firstFrameSent
  {static} +RendererBinding instance
  +MouseTracker mouseTracker
  +PipelineOwner rootPipelineOwner
  +Iterable<RenderView> renderViews
  +bool sendFramesToEngine
  +void initInstances()
  +void initServiceExtensions()
  +PipelineOwner createRootPipelineOwner()
  +void addRenderView()
  +void removeRenderView()
  #ViewConfiguration createViewConfigurationFor()
  #void handleMetricsChanged()
  #void handleTextScaleFactorChanged()
  #void handlePlatformBrightnessChanged()
  +void initMouseTracker()
  +void dispatchEvent()
  +void performSemanticsAction()
  -void _handleWebFirstFrame()
  -void _handlePersistentFrameCallback()
  -void _scheduleMouseTrackerUpdate()
  +void deferFirstFrame()
  +void allowFirstFrame()
  +void resetFirstFrameSent()
  #void drawFrame()
  +Future<void> performReassemble()
  +void hitTestInView()
  -Future<void> _forceRepaint()
}

"rendering::binding::RendererBinding" o-- "rendering::binding::RendererBinding"
"rendering::binding::RendererBinding" o-- "rendering::object::PipelineManifold"
"rendering::binding::RendererBinding" o-- "rendering::mouse_tracker::MouseTracker"
"rendering::binding::RendererBinding" o-- "rendering::object::PipelineOwner"
"rendering::binding::RendererBinding" o-- "rendering::view::RenderView"

class "rendering::custom_layout::MultiChildLayoutParentData" {
  +Object? id
  +String toString()
}

"rendering::box::ContainerBoxParentData" <|-- "rendering::custom_layout::MultiChildLayoutParentData"

abstract class "rendering::custom_layout::MultiChildLayoutDelegate" {
  -Listenable? _relayout
  -Map<Object, RenderBox>? _idToChild
  -Set<RenderBox>? _debugChildrenNeedingLayout
  +bool hasChild()
  +Size layoutChild()
  +void positionChild()
  -DiagnosticsNode _debugDescribeChild()
  -void _callPerformLayout()
  +Size getSize()
  +void performLayout()
  +bool shouldRelayout()
  +String toString()
}

"rendering::custom_layout::MultiChildLayoutDelegate" o-- "foundation::change_notifier::Listenable"

class "rendering::custom_layout::RenderCustomMultiChildLayoutBox" {
  -MultiChildLayoutDelegate _delegate
  +MultiChildLayoutDelegate delegate
  +void setupParentData()
  +void attach()
  +void detach()
  -Size _getSize()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +Size computeDryLayout()
  +void performLayout()
  +void paint()
  +bool hitTestChildren()
}

"rendering::custom_layout::RenderCustomMultiChildLayoutBox" o-- "rendering::custom_layout::MultiChildLayoutDelegate"
"rendering::box::RenderBox" <|-- "rendering::custom_layout::RenderCustomMultiChildLayoutBox"
"rendering::object::ContainerRenderObjectMixin" <|-- "rendering::custom_layout::RenderCustomMultiChildLayoutBox"
"rendering::box::RenderBoxContainerDefaultsMixin" <|-- "rendering::custom_layout::RenderCustomMultiChildLayoutBox"

class "rendering::box::_DebugSize" {
  -RenderBox _owner
  -bool _canBeUsedByParent
}

"rendering::box::_DebugSize" o-- "rendering::box::RenderBox"
"dart::ui::Size" <|-- "rendering::box::_DebugSize"

class "rendering::box::BoxConstraints" {
  +double minWidth
  +double maxWidth
  +double minHeight
  +double maxHeight
  +BoxConstraints flipped
  +Size biggest
  +Size smallest
  +bool hasTightWidth
  +bool hasTightHeight
  +bool isTight
  +bool hasBoundedWidth
  +bool hasBoundedHeight
  +bool hasInfiniteWidth
  +bool hasInfiniteHeight
  +bool isNormalized
  +int hashCode
  +BoxConstraints copyWith()
  +BoxConstraints deflate()
  +BoxConstraints loosen()
  +BoxConstraints enforce()
  +BoxConstraints tighten()
  +BoxConstraints widthConstraints()
  +BoxConstraints heightConstraints()
  +double constrainWidth()
  +double constrainHeight()
  -Size _debugPropagateDebugSize()
  +Size constrain()
  +Size constrainDimensions()
  +Size constrainSizeAndAttemptToPreserveAspectRatio()
  +bool isSatisfiedBy()
  +BoxConstraints *()
  +BoxConstraints /()
  +BoxConstraints ~/()
  +BoxConstraints %()
  {static} +BoxConstraints? lerp()
  +bool debugAssertIsValid()
  +BoxConstraints normalize()
  +bool ==()
  +String toString()
}

"rendering::box::BoxConstraints" o-- "rendering::box::BoxConstraints"
"rendering::box::BoxConstraints" o-- "dart::ui::Size"
"rendering::object::Constraints" <|-- "rendering::box::BoxConstraints"

class "rendering::box::BoxHitTestResult" {
  +bool addWithPaintTransform()
  +bool addWithPaintOffset()
  +bool addWithRawTransform()
  +bool addWithOutOfBandPosition()
}

"gestures::hit_test::HitTestResult" <|-- "rendering::box::BoxHitTestResult"

class "rendering::box::BoxHitTestEntry" {
  +Offset localPosition
  +String toString()
}

"rendering::box::BoxHitTestEntry" o-- "dart::ui::Offset"
"gestures::hit_test::HitTestEntry" <|-- "rendering::box::BoxHitTestEntry"

class "rendering::box::BoxParentData" {
  +Offset offset
  +String toString()
}

"rendering::box::BoxParentData" o-- "dart::ui::Offset"
"rendering::object::ParentData" <|-- "rendering::box::BoxParentData"

abstract class "rendering::box::ContainerBoxParentData" {
}

"rendering::box::BoxParentData" <|-- "rendering::box::ContainerBoxParentData"
"rendering::object::ContainerParentDataMixin" <|-- "rendering::box::ContainerBoxParentData"

class "rendering::box::_IntrinsicDimensionsCacheEntry" {
  +_IntrinsicDimension dimension
  +double argument
  +int hashCode
  +bool ==()
}

"rendering::box::_IntrinsicDimensionsCacheEntry" o-- "rendering::box::_IntrinsicDimension"

abstract class "rendering::box::RenderBox" {
  -Map<_IntrinsicDimensionsCacheEntry, double>? _cachedIntrinsicDimensions
  {static} -int _debugIntrinsicsDepth
  -Map<BoxConstraints, Size>? _cachedDryLayoutSizes
  -bool _computingThisDryLayout
  {static} -bool _dryLayoutCalculationValid
  -Size? _size
  -Map<TextBaseline, double?>? _cachedBaselines
  {static} -bool _debugDoingBaseline
  -int _debugActivePointers
  +bool hasSize
  +Size size
  +Rect semanticBounds
  +BoxConstraints constraints
  +Rect paintBounds
  +void setupParentData()
  -double _computeIntrinsicDimension()
  +double getMinIntrinsicWidth()
  #double computeMinIntrinsicWidth()
  +double getMaxIntrinsicWidth()
  #double computeMaxIntrinsicWidth()
  +double getMinIntrinsicHeight()
  #double computeMinIntrinsicHeight()
  +double getMaxIntrinsicHeight()
  #double computeMaxIntrinsicHeight()
  +Size getDryLayout()
  -Size _computeDryLayout()
  #Size computeDryLayout()
  +bool debugCannotComputeDryLayout()
  +Size debugAdoptSize()
  +void debugResetSize()
  {static} -bool _debugSetDoingBaseline()
  +double? getDistanceToBaseline()
  #double? getDistanceToActualBaseline()
  #double? computeDistanceToActualBaseline()
  +void debugAssertDoesMeetConstraints()
  -bool _clearCachedData()
  +void markNeedsLayout()
  +void layout()
  +void performResize()
  +void performLayout()
  +bool hitTest()
  #bool hitTestSelf()
  #bool hitTestChildren()
  +void applyPaintTransform()
  +Offset globalToLocal()
  +Offset localToGlobal()
  +void handleEvent()
  +bool debugHandleEvent()
  +void debugPaint()
  #void debugPaintSize()
  #void debugPaintBaselines()
  #void debugPaintPointers()
  +void debugFillProperties()
}

"rendering::box::RenderBox" o-- "dart::ui::Size"
"rendering::box::RenderBox" o-- "dart::ui::Rect"
"rendering::box::RenderBox" o-- "rendering::box::BoxConstraints"
"rendering::object::RenderObject" <|-- "rendering::box::RenderBox"

class "rendering::box::_IntrinsicDimension" {
  +int index
  {static} +List<_IntrinsicDimension> values
  {static} +_IntrinsicDimension minWidth
  {static} +_IntrinsicDimension maxWidth
  {static} +_IntrinsicDimension minHeight
  {static} +_IntrinsicDimension maxHeight
}

"rendering::box::_IntrinsicDimension" o-- "rendering::box::_IntrinsicDimension"
"dart::core::Enum" <|-- "rendering::box::_IntrinsicDimension"

abstract class "rendering::box::RenderBoxContainerDefaultsMixin" {
  +double? defaultComputeDistanceToFirstActualBaseline()
  +double? defaultComputeDistanceToHighestActualBaseline()
  +bool defaultHitTestChildren()
  +void defaultPaint()
  +List<ChildType> getChildrenAsList()
}

"rendering::object::ContainerRenderObjectMixin" <|-- "rendering::box::RenderBoxContainerDefaultsMixin"

abstract class "physics::simulation::Simulation" {
  +Tolerance tolerance
  +double x()
  +double dx()
  +bool isDone()
  +String toString()
}

"physics::simulation::Simulation" o-- "physics::tolerance::Tolerance"

class "physics::gravity_simulation::GravitySimulation" {
  -double _x
  -double _v
  -double _a
  -double _end
  +double x()
  +double dx()
  +bool isDone()
  +String toString()
}

"physics::simulation::Simulation" <|-- "physics::gravity_simulation::GravitySimulation"

class "physics::spring_simulation::SpringDescription" {
  +double mass
  +double stiffness
  +double damping
  +String toString()
}

class "physics::spring_simulation::SpringSimulation" {
  -double _endPosition
  -_SpringSolution _solution
  +SpringType type
  +double x()
  +double dx()
  +bool isDone()
  +String toString()
}

"physics::spring_simulation::SpringSimulation" o-- "physics::spring_simulation::_SpringSolution"
"physics::spring_simulation::SpringSimulation" o-- "physics::spring_simulation::SpringType"
"physics::simulation::Simulation" <|-- "physics::spring_simulation::SpringSimulation"

class "physics::spring_simulation::ScrollSpringSimulation" {
  +double x()
}

"physics::spring_simulation::SpringSimulation" <|-- "physics::spring_simulation::ScrollSpringSimulation"

abstract class "physics::spring_simulation::_SpringSolution" {
  +SpringType type
  +double x()
  +double dx()
}

"physics::spring_simulation::_SpringSolution" o-- "physics::spring_simulation::SpringType"

class "physics::spring_simulation::_CriticalSolution" {
  -double _r
  -double _c1
  -double _c2
  +SpringType type
  +double x()
  +double dx()
}

"physics::spring_simulation::_CriticalSolution" o-- "physics::spring_simulation::SpringType"
"physics::spring_simulation::_SpringSolution" <|-- "physics::spring_simulation::_CriticalSolution"

class "physics::spring_simulation::_OverdampedSolution" {
  -double _r1
  -double _r2
  -double _c1
  -double _c2
  +SpringType type
  +double x()
  +double dx()
}

"physics::spring_simulation::_OverdampedSolution" o-- "physics::spring_simulation::SpringType"
"physics::spring_simulation::_SpringSolution" <|-- "physics::spring_simulation::_OverdampedSolution"

class "physics::spring_simulation::_UnderdampedSolution" {
  -double _w
  -double _r
  -double _c1
  -double _c2
  +SpringType type
  +double x()
  +double dx()
}

"physics::spring_simulation::_UnderdampedSolution" o-- "physics::spring_simulation::SpringType"
"physics::spring_simulation::_SpringSolution" <|-- "physics::spring_simulation::_UnderdampedSolution"

class "physics::spring_simulation::SpringType" {
  +int index
  {static} +List<SpringType> values
  {static} +SpringType criticallyDamped
  {static} +SpringType underDamped
  {static} +SpringType overDamped
}

"physics::spring_simulation::SpringType" o-- "physics::spring_simulation::SpringType"
"dart::core::Enum" <|-- "physics::spring_simulation::SpringType"

class "physics::friction_simulation::FrictionSimulation" {
  -double _drag
  -double _dragLog
  -double _x
  -double _v
  -double _constantDeceleration
  -double _finalTime
  +double finalX
  {static} -double _dragFor()
  +double x()
  +double dx()
  +double timeAtX()
  +bool isDone()
  +String toString()
}

"physics::simulation::Simulation" <|-- "physics::friction_simulation::FrictionSimulation"

class "physics::friction_simulation::BoundedFrictionSimulation" {
  -double _minX
  -double _maxX
  +double x()
  +bool isDone()
  +String toString()
}

"physics::friction_simulation::FrictionSimulation" <|-- "physics::friction_simulation::BoundedFrictionSimulation"

class "physics::clamped_simulation::ClampedSimulation" {
  +Simulation simulation
  +double xMin
  +double xMax
  +double dxMin
  +double dxMax
  +double x()
  +double dx()
  +bool isDone()
  +String toString()
}

"physics::clamped_simulation::ClampedSimulation" o-- "physics::simulation::Simulation"
"physics::simulation::Simulation" <|-- "physics::clamped_simulation::ClampedSimulation"

class "physics::tolerance::Tolerance" {
  {static} -double _epsilonDefault
  {static} +Tolerance defaultTolerance
  +double distance
  +double time
  +double velocity
  +String toString()
}

"physics::tolerance::Tolerance" o-- "physics::tolerance::Tolerance"

class "cupertino::tab_view::CupertinoTabView" {
  +Widget Function(BuildContext)? builder
  +GlobalKey<NavigatorState>? navigatorKey
  +String? defaultTitle
  +Map<String, Widget Function(BuildContext)>? routes
  +Route<dynamic>? Function(RouteSettings)? onGenerateRoute
  +Route<dynamic>? Function(RouteSettings)? onUnknownRoute
  +List<NavigatorObserver> navigatorObservers
  +String? restorationScopeId
  +State<CupertinoTabView> createState()
}

"cupertino::tab_view::CupertinoTabView" o-- "widgets::framework::Widget Function(BuildContext)"
"cupertino::tab_view::CupertinoTabView" o-- "widgets::framework::GlobalKey<NavigatorState>"
"cupertino::tab_view::CupertinoTabView" o-- "widgets::navigator::Route<dynamic> Function(RouteSettings)"
"widgets::framework::StatefulWidget" <|-- "cupertino::tab_view::CupertinoTabView"

class "cupertino::tab_view::_CupertinoTabViewState" {
  -HeroController _heroController
  -List<NavigatorObserver> _navigatorObservers
  -GlobalKey<NavigatorState>? _ownedNavigatorKey
  -GlobalKey<NavigatorState> _navigatorKey
  -bool _isActive
  +void initState()
  +void didUpdateWidget()
  -void _updateObservers()
  +Widget build()
  -Route<dynamic>? _onGenerateRoute()
  -Route<dynamic>? _onUnknownRoute()
}

"cupertino::tab_view::_CupertinoTabViewState" o-- "widgets::heroes::HeroController"
"cupertino::tab_view::_CupertinoTabViewState" o-- "widgets::framework::GlobalKey<NavigatorState>"
"widgets::framework::State" <|-- "cupertino::tab_view::_CupertinoTabViewState"

class "cupertino::text_theme::CupertinoTextThemeData" {
  -_TextThemeDefaultsBuilder _defaults
  -Color? _primaryColor
  -TextStyle? _textStyle
  -TextStyle? _actionTextStyle
  -TextStyle? _tabLabelTextStyle
  -TextStyle? _navTitleTextStyle
  -TextStyle? _navLargeTitleTextStyle
  -TextStyle? _navActionTextStyle
  -TextStyle? _pickerTextStyle
  -TextStyle? _dateTimePickerTextStyle
  +TextStyle textStyle
  +TextStyle actionTextStyle
  +TextStyle tabLabelTextStyle
  +TextStyle navTitleTextStyle
  +TextStyle navLargeTitleTextStyle
  +TextStyle navActionTextStyle
  +TextStyle pickerTextStyle
  +TextStyle dateTimePickerTextStyle
  +int hashCode
  +CupertinoTextThemeData resolveFrom()
  +CupertinoTextThemeData copyWith()
  +void debugFillProperties()
  +bool ==()
}

"cupertino::text_theme::CupertinoTextThemeData" o-- "cupertino::text_theme::_TextThemeDefaultsBuilder"
"cupertino::text_theme::CupertinoTextThemeData" o-- "dart::ui::Color"
"cupertino::text_theme::CupertinoTextThemeData" o-- "painting::text_style::TextStyle"
"foundation::diagnostics::Diagnosticable" <|-- "cupertino::text_theme::CupertinoTextThemeData"

class "cupertino::text_theme::_TextThemeDefaultsBuilder" {
  +Color labelColor
  +Color inactiveGrayColor
  +TextStyle textStyle
  +TextStyle tabLabelTextStyle
  +TextStyle navTitleTextStyle
  +TextStyle navLargeTitleTextStyle
  +TextStyle pickerTextStyle
  +TextStyle dateTimePickerTextStyle
  +int hashCode
  {static} -TextStyle _applyLabelColor()
  +TextStyle actionTextStyle()
  +TextStyle navActionTextStyle()
  +_TextThemeDefaultsBuilder resolveFrom()
  +bool ==()
}

"cupertino::text_theme::_TextThemeDefaultsBuilder" o-- "dart::ui::Color"
"cupertino::text_theme::_TextThemeDefaultsBuilder" o-- "painting::text_style::TextStyle"

class "cupertino::text_field::_CupertinoTextFieldSelectionGestureDetectorBuilder" {
  -_CupertinoTextFieldState _state
  +void onSingleTapUp()
  +void onDragSelectionEnd()
}

"cupertino::text_field::_CupertinoTextFieldSelectionGestureDetectorBuilder" o-- "cupertino::text_field::_CupertinoTextFieldState"
"widgets::text_selection::TextSelectionGestureDetectorBuilder" <|-- "cupertino::text_field::_CupertinoTextFieldSelectionGestureDetectorBuilder"

class "cupertino::text_field::CupertinoTextField" {
  +TextEditingController? controller
  +FocusNode? focusNode
  +BoxDecoration? decoration
  +EdgeInsetsGeometry padding
  +String? placeholder
  +TextStyle? placeholderStyle
  +Widget? prefix
  +OverlayVisibilityMode prefixMode
  +Widget? suffix
  +OverlayVisibilityMode suffixMode
  +OverlayVisibilityMode clearButtonMode
  +TextInputType keyboardType
  +TextInputAction? textInputAction
  +TextCapitalization textCapitalization
  +TextStyle? style
  +StrutStyle? strutStyle
  +TextAlign textAlign
  +ToolbarOptions? toolbarOptions
  +TextAlignVertical? textAlignVertical
  +TextDirection? textDirection
  +bool readOnly
  +bool? showCursor
  +bool autofocus
  +String obscuringCharacter
  +bool obscureText
  +bool autocorrect
  +SmartDashesType smartDashesType
  +SmartQuotesType smartQuotesType
  +bool enableSuggestions
  +int? maxLines
  +int? minLines
  +bool expands
  +int? maxLength
  +MaxLengthEnforcement? maxLengthEnforcement
  +void Function(String)? onChanged
  +void Function()? onEditingComplete
  +void Function(String)? onSubmitted
  +dynamic onTapOutside
  +List<TextInputFormatter>? inputFormatters
  +bool enabled
  +double cursorWidth
  +double? cursorHeight
  +Radius cursorRadius
  +bool cursorOpacityAnimates
  +Color? cursorColor
  +BoxHeightStyle selectionHeightStyle
  +BoxWidthStyle selectionWidthStyle
  +Brightness? keyboardAppearance
  +EdgeInsets scrollPadding
  +bool enableInteractiveSelection
  +TextSelectionControls? selectionControls
  +DragStartBehavior dragStartBehavior
  +ScrollController? scrollController
  +ScrollPhysics? scrollPhysics
  +void Function()? onTap
  +Iterable<String>? autofillHints
  +Clip clipBehavior
  +String? restorationId
  +bool scribbleEnabled
  +bool enableIMEPersonalizedLearning
  +dynamic contentInsertionConfiguration
  +dynamic contextMenuBuilder
  +dynamic magnifierConfiguration
  +dynamic spellCheckConfiguration
  {static} +TextStyle cupertinoMisspelledTextStyle
  {static} +Color kMisspelledSelectionColor
  +dynamic undoController
  {static} -dynamic _iosMagnifierConfiguration
  +bool selectionEnabled
  {static} -Widget _defaultContextMenuBuilder()
  {static} +Widget defaultSpellCheckSuggestionsToolbarBuilder()
  +State<CupertinoTextField> createState()
  +void debugFillProperties()
  {static} +dynamic inferIOSSpellCheckConfiguration()
}

"cupertino::text_field::CupertinoTextField" o-- "widgets::editable_text::TextEditingController"
"cupertino::text_field::CupertinoTextField" o-- "widgets::focus_manager::FocusNode"
"cupertino::text_field::CupertinoTextField" o-- "painting::box_decoration::BoxDecoration"
"cupertino::text_field::CupertinoTextField" o-- "painting::edge_insets::EdgeInsetsGeometry"
"cupertino::text_field::CupertinoTextField" o-- "painting::text_style::TextStyle"
"cupertino::text_field::CupertinoTextField" o-- "widgets::framework::Widget"
"cupertino::text_field::CupertinoTextField" o-- "cupertino::text_field::OverlayVisibilityMode"
"cupertino::text_field::CupertinoTextField" o-- "services::text_input::TextInputType"
"cupertino::text_field::CupertinoTextField" o-- "services::text_input::TextInputAction"
"cupertino::text_field::CupertinoTextField" o-- "services::text_input::TextCapitalization"
"cupertino::text_field::CupertinoTextField" o-- "painting::strut_style::StrutStyle"
"cupertino::text_field::CupertinoTextField" o-- "dart::ui::TextAlign"
"cupertino::text_field::CupertinoTextField" o-- "widgets::editable_text::ToolbarOptions"
"cupertino::text_field::CupertinoTextField" o-- "painting::alignment::TextAlignVertical"
"cupertino::text_field::CupertinoTextField" o-- "dart::ui::TextDirection"
"cupertino::text_field::CupertinoTextField" o-- "services::text_input::SmartDashesType"
"cupertino::text_field::CupertinoTextField" o-- "services::text_input::SmartQuotesType"
"cupertino::text_field::CupertinoTextField" o-- "services::text_formatter::MaxLengthEnforcement"
"cupertino::text_field::CupertinoTextField" o-- "foundation::basic_types::void Function(String)"
"cupertino::text_field::CupertinoTextField" o-- "dart::ui::void Function()"
"cupertino::text_field::CupertinoTextField" o-- "dart::ui::Radius"
"cupertino::text_field::CupertinoTextField" o-- "dart::ui::Color"
"cupertino::text_field::CupertinoTextField" o-- "dart::ui::BoxHeightStyle"
"cupertino::text_field::CupertinoTextField" o-- "dart::ui::BoxWidthStyle"
"cupertino::text_field::CupertinoTextField" o-- "dart::ui::Brightness"
"cupertino::text_field::CupertinoTextField" o-- "painting::edge_insets::EdgeInsets"
"cupertino::text_field::CupertinoTextField" o-- "widgets::text_selection::TextSelectionControls"
"cupertino::text_field::CupertinoTextField" o-- "gestures::recognizer::DragStartBehavior"
"cupertino::text_field::CupertinoTextField" o-- "widgets::scroll_controller::ScrollController"
"cupertino::text_field::CupertinoTextField" o-- "widgets::scroll_physics::ScrollPhysics"
"cupertino::text_field::CupertinoTextField" o-- "gestures::tap::void Function()"
"cupertino::text_field::CupertinoTextField" o-- "dart::ui::Clip"
"widgets::framework::StatefulWidget" <|-- "cupertino::text_field::CupertinoTextField"

class "cupertino::text_field::_CupertinoTextFieldState" {
  -GlobalKey<State<StatefulWidget>> _clearGlobalKey
  -RestorableTextEditingController? _controller
  -FocusNode? _focusNode
  -bool _showSelectionHandles
  -_CupertinoTextFieldSelectionGestureDetectorBuilder _selectionGestureDetectorBuilder
  +GlobalKey<EditableTextState> editableTextKey
  -TextEditingController _effectiveController
  -FocusNode _effectiveFocusNode
  -MaxLengthEnforcement _effectiveMaxLengthEnforcement
  +bool forcePressEnabled
  +bool selectionEnabled
  +String? restorationId
  -EditableTextState _editableText
  +bool wantKeepAlive
  -bool _hasDecoration
  -TextAlignVertical _textAlignVertical
  +String autofillId
  +TextInputConfiguration textInputConfiguration
  +void initState()
  +void didUpdateWidget()
  +void restoreState()
  -void _registerController()
  -void _createLocalController()
  +void dispose()
  -void _requestKeyboard()
  -void _handleFocusChanged()
  -bool _shouldShowSelectionHandles()
  -void _handleSelectionChanged()
  {static} -bool _shouldShowAttachment()
  -void _onClearButtonTapped()
  -Widget _buildClearButton()
  -Widget _addTextDependentAttachments()
  +void autofill()
  +Widget build()
}

"cupertino::text_field::_CupertinoTextFieldState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"cupertino::text_field::_CupertinoTextFieldState" o-- "widgets::restoration_properties::RestorableTextEditingController"
"cupertino::text_field::_CupertinoTextFieldState" o-- "widgets::focus_manager::FocusNode"
"cupertino::text_field::_CupertinoTextFieldState" o-- "cupertino::text_field::_CupertinoTextFieldSelectionGestureDetectorBuilder"
"cupertino::text_field::_CupertinoTextFieldState" o-- "widgets::framework::GlobalKey<EditableTextState>"
"cupertino::text_field::_CupertinoTextFieldState" o-- "widgets::editable_text::TextEditingController"
"cupertino::text_field::_CupertinoTextFieldState" o-- "services::text_formatter::MaxLengthEnforcement"
"cupertino::text_field::_CupertinoTextFieldState" o-- "widgets::editable_text::EditableTextState"
"cupertino::text_field::_CupertinoTextFieldState" o-- "painting::alignment::TextAlignVertical"
"cupertino::text_field::_CupertinoTextFieldState" o-- "services::text_input::TextInputConfiguration"
"widgets::framework::State" <|-- "cupertino::text_field::_CupertinoTextFieldState"
"widgets::restoration::RestorationMixin" <|-- "cupertino::text_field::_CupertinoTextFieldState"
"widgets::automatic_keep_alive::AutomaticKeepAliveClientMixin" <|-- "cupertino::text_field::_CupertinoTextFieldState"
"widgets::text_selection::TextSelectionGestureDetectorBuilderDelegate" <|-- "cupertino::text_field::_CupertinoTextFieldState"
"services::autofill::AutofillClient" <|-- "cupertino::text_field::_CupertinoTextFieldState"

class "cupertino::text_field::OverlayVisibilityMode" {
  +int index
  {static} +List<OverlayVisibilityMode> values
  {static} +OverlayVisibilityMode never
  {static} +OverlayVisibilityMode editing
  {static} +OverlayVisibilityMode notEditing
  {static} +OverlayVisibilityMode always
}

"cupertino::text_field::OverlayVisibilityMode" o-- "cupertino::text_field::OverlayVisibilityMode"
"dart::core::Enum" <|-- "cupertino::text_field::OverlayVisibilityMode"

class "cupertino::form_row::CupertinoFormRow" {
  +Widget? prefix
  +EdgeInsetsGeometry? padding
  +Widget? helper
  +Widget? error
  +Widget child
  +Widget build()
}

"cupertino::form_row::CupertinoFormRow" o-- "widgets::framework::Widget"
"cupertino::form_row::CupertinoFormRow" o-- "painting::edge_insets::EdgeInsetsGeometry"
"widgets::framework::StatelessWidget" <|-- "cupertino::form_row::CupertinoFormRow"

class "cupertino::text_selection_toolbar::CupertinoTextSelectionToolbar" {
  +Offset anchorAbove
  +Offset anchorBelow
  +List<Widget> children
  +Widget Function(BuildContext, Offset, Offset, Widget) toolbarBuilder
  {static} +double kToolbarScreenPadding
  {static} -Widget _defaultToolbarBuilder()
  +Widget build()
}

"cupertino::text_selection_toolbar::CupertinoTextSelectionToolbar" o-- "dart::ui::Offset"
"cupertino::text_selection_toolbar::CupertinoTextSelectionToolbar" o-- "cupertino::text_selection_toolbar::Widget Function(BuildContext, Offset, Offset, Widget)"
"widgets::framework::StatelessWidget" <|-- "cupertino::text_selection_toolbar::CupertinoTextSelectionToolbar"

class "cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarShape" {
  -Offset _anchorAbove
  -Offset _anchorBelow
  -Color? _shadowColor
  +_RenderCupertinoTextSelectionToolbarShape createRenderObject()
  +void updateRenderObject()
}

"cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarShape" o-- "dart::ui::Offset"
"cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarShape" o-- "dart::ui::Color"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarShape"

class "cupertino::text_selection_toolbar::_RenderCupertinoTextSelectionToolbarShape" {
  -Offset _anchorAbove
  -Offset _anchorBelow
  -Color? _shadowColor
  -LayerHandle<ClipPathLayer> _clipPathLayer
  -Paint? _debugPaint
  +bool isRepaintBoundary
  +Offset anchorAbove
  +Offset anchorBelow
  +Color? shadowColor
  +bool isAbove
  +void performLayout()
  -RRect _shapeRRect()
  {static} -Path _addRRectToPath()
  -Path _clipPath()
  +void paint()
  +void dispose()
  +void debugPaintSize()
  +bool hitTestChildren()
}

"cupertino::text_selection_toolbar::_RenderCupertinoTextSelectionToolbarShape" o-- "dart::ui::Offset"
"cupertino::text_selection_toolbar::_RenderCupertinoTextSelectionToolbarShape" o-- "dart::ui::Color"
"cupertino::text_selection_toolbar::_RenderCupertinoTextSelectionToolbarShape" o-- "rendering::layer::LayerHandle<ClipPathLayer>"
"cupertino::text_selection_toolbar::_RenderCupertinoTextSelectionToolbarShape" o-- "dart::ui::Paint"
"rendering::shifted_box::RenderShiftedBox" <|-- "cupertino::text_selection_toolbar::_RenderCupertinoTextSelectionToolbarShape"

class "cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarContent" {
  +Offset anchorAbove
  +Offset anchorBelow
  +List<Widget> children
  +Widget Function(BuildContext, Offset, Offset, Widget) toolbarBuilder
  +_CupertinoTextSelectionToolbarContentState createState()
}

"cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarContent" o-- "dart::ui::Offset"
"cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarContent" o-- "cupertino::text_selection_toolbar::Widget Function(BuildContext, Offset, Offset, Widget)"
"widgets::framework::StatefulWidget" <|-- "cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarContent"

class "cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarContentState" {
  -AnimationController _controller
  -int? _nextPage
  -int _page
  -GlobalKey<State<StatefulWidget>> _toolbarItemsKey
  -void _onHorizontalDragEnd()
  -void _handleNextPage()
  -void _handlePreviousPage()
  -void _statusListener()
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarContentState" o-- "animation::animation_controller::AnimationController"
"cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarContentState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::framework::State" <|-- "cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarContentState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarContentState"

class "cupertino::text_selection_toolbar::_LeftCupertinoChevronPainter" {
}

"cupertino::text_selection_toolbar::_CupertinoChevronPainter" <|-- "cupertino::text_selection_toolbar::_LeftCupertinoChevronPainter"

class "cupertino::text_selection_toolbar::_RightCupertinoChevronPainter" {
}

"cupertino::text_selection_toolbar::_CupertinoChevronPainter" <|-- "cupertino::text_selection_toolbar::_RightCupertinoChevronPainter"

abstract class "cupertino::text_selection_toolbar::_CupertinoChevronPainter" {
  +Color color
  +bool isLeft
  +void paint()
  +bool shouldRepaint()
}

"cupertino::text_selection_toolbar::_CupertinoChevronPainter" o-- "dart::ui::Color"
"rendering::custom_paint::CustomPainter" <|-- "cupertino::text_selection_toolbar::_CupertinoChevronPainter"

class "cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarItems" {
  +Widget backButton
  +List<Widget> children
  +Color dividerColor
  +double dividerWidth
  +Widget nextButton
  +int page
  +_RenderCupertinoTextSelectionToolbarItems createRenderObject()
  +void updateRenderObject()
  +_CupertinoTextSelectionToolbarItemsElement createElement()
}

"cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarItems" o-- "widgets::framework::Widget"
"cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarItems" o-- "dart::ui::Color"
"widgets::framework::RenderObjectWidget" <|-- "cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarItems"

class "cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarItemsElement" {
  -List<Element> _children
  +Map<_CupertinoTextSelectionToolbarItemsSlot, Element> slotToChild
  -Set<Element> _forgottenChildren
  +_RenderCupertinoTextSelectionToolbarItems renderObject
  -void _updateRenderObject()
  +void insertRenderObjectChild()
  +void moveRenderObjectChild()
  {static} -bool _shouldPaint()
  +void removeRenderObjectChild()
  +void visitChildren()
  +void forgetChild()
  -void _mountChild()
  +void mount()
  +void debugVisitOnstageChildren()
  +void update()
}

"cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarItemsElement" o-- "cupertino::text_selection_toolbar::_RenderCupertinoTextSelectionToolbarItems"
"widgets::framework::RenderObjectElement" <|-- "cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarItemsElement"

class "cupertino::text_selection_toolbar::_RenderCupertinoTextSelectionToolbarItems" {
  +Map<_CupertinoTextSelectionToolbarItemsSlot, RenderBox> slottedChildren
  +bool hasNextPage
  +bool hasPreviousPage
  -int _page
  -Color _dividerColor
  -double _dividerWidth
  -RenderBox? _backButton
  -RenderBox? _nextButton
  +int page
  +Color dividerColor
  +double dividerWidth
  +RenderBox? backButton
  +RenderBox? nextButton
  -RenderBox? _updateChild()
  +void performLayout()
  +void paint()
  +void setupParentData()
  {static} +bool hitTestChild()
  +bool hitTestChildren()
  +void attach()
  +void detach()
  +void redepthChildren()
  +void visitChildren()
  +void visitChildrenForSemantics()
  +List<DiagnosticsNode> debugDescribeChildren()
}

"cupertino::text_selection_toolbar::_RenderCupertinoTextSelectionToolbarItems" o-- "dart::ui::Color"
"cupertino::text_selection_toolbar::_RenderCupertinoTextSelectionToolbarItems" o-- "rendering::box::RenderBox"
"rendering::box::RenderBox" <|-- "cupertino::text_selection_toolbar::_RenderCupertinoTextSelectionToolbarItems"
"rendering::object::ContainerRenderObjectMixin" <|-- "cupertino::text_selection_toolbar::_RenderCupertinoTextSelectionToolbarItems"
"rendering::box::RenderBoxContainerDefaultsMixin" <|-- "cupertino::text_selection_toolbar::_RenderCupertinoTextSelectionToolbarItems"

class "cupertino::text_selection_toolbar::_NullElement" {
  {static} +_NullElement instance
  +bool debugDoingBuild
}

"cupertino::text_selection_toolbar::_NullElement" o-- "cupertino::text_selection_toolbar::_NullElement"
"widgets::framework::Element" <|-- "cupertino::text_selection_toolbar::_NullElement"

class "cupertino::text_selection_toolbar::_NullWidget" {
  +Element createElement()
}

"widgets::framework::Widget" <|-- "cupertino::text_selection_toolbar::_NullWidget"

class "cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarItemsSlot" {
  +int index
  {static} +List<_CupertinoTextSelectionToolbarItemsSlot> values
  {static} +_CupertinoTextSelectionToolbarItemsSlot backButton
  {static} +_CupertinoTextSelectionToolbarItemsSlot nextButton
}

"cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarItemsSlot" o-- "cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarItemsSlot"
"dart::core::Enum" <|-- "cupertino::text_selection_toolbar::_CupertinoTextSelectionToolbarItemsSlot"

class "cupertino::text_selection_toolbar_button::CupertinoTextSelectionToolbarButton" {
  +Widget? child
  +void Function()? onPressed
  +dynamic buttonItem
  +String? text
  {static} +String getButtonLabel()
  +State<StatefulWidget> createState()
}

"cupertino::text_selection_toolbar_button::CupertinoTextSelectionToolbarButton" o-- "widgets::framework::Widget"
"cupertino::text_selection_toolbar_button::CupertinoTextSelectionToolbarButton" o-- "dart::ui::void Function()"
"widgets::framework::StatefulWidget" <|-- "cupertino::text_selection_toolbar_button::CupertinoTextSelectionToolbarButton"

class "cupertino::text_selection_toolbar_button::_CupertinoTextSelectionToolbarButtonState" {
  +bool isPressed
  -void _onTapDown()
  -void _onTapUp()
  -void _onTapCancel()
  +Widget build()
  -Widget _getContentWidget()
}

"widgets::framework::State" <|-- "cupertino::text_selection_toolbar_button::_CupertinoTextSelectionToolbarButtonState"

class "cupertino::text_selection_toolbar_button::_LiveTextIconPainter" {
  +Color color
  -Paint _painter
  +void paint()
  +bool shouldRepaint()
}

"cupertino::text_selection_toolbar_button::_LiveTextIconPainter" o-- "dart::ui::Color"
"cupertino::text_selection_toolbar_button::_LiveTextIconPainter" o-- "dart::ui::Paint"
"rendering::custom_paint::CustomPainter" <|-- "cupertino::text_selection_toolbar_button::_LiveTextIconPainter"

class "cupertino::spell_check_suggestions_toolbar::CupertinoSpellCheckSuggestionsToolbar" {
  +dynamic anchors
  +List<dynamic> buttonItems
  {static} +List<dynamic>? buildButtonItems()
  {static} -void _replaceText()
  -List<Widget> _buildToolbarButtons()
  +Widget build()
}

"widgets::framework::StatelessWidget" <|-- "cupertino::spell_check_suggestions_toolbar::CupertinoSpellCheckSuggestionsToolbar"

class "cupertino::segmented_control::CupertinoSegmentedControl" {
  +Map<T, Widget> children
  +T? groupValue
  +void Function(T) onValueChanged
  +Color? unselectedColor
  +Color? selectedColor
  +Color? borderColor
  +Color? pressedColor
  +EdgeInsetsGeometry? padding
  +State<CupertinoSegmentedControl<T>> createState()
}

"cupertino::segmented_control::CupertinoSegmentedControl" o-- "foundation::basic_types::void Function(T)"
"cupertino::segmented_control::CupertinoSegmentedControl" o-- "dart::ui::Color"
"cupertino::segmented_control::CupertinoSegmentedControl" o-- "painting::edge_insets::EdgeInsetsGeometry"
"widgets::framework::StatefulWidget" <|-- "cupertino::segmented_control::CupertinoSegmentedControl"

class "cupertino::segmented_control::_SegmentedControlState" {
  -T? _pressedKey
  -List<AnimationController> _selectionControllers
  -List<ColorTween> _childTweens
  -ColorTween _forwardBackgroundColorTween
  -ColorTween _reverseBackgroundColorTween
  -ColorTween _textColorTween
  -Color? _selectedColor
  -Color? _unselectedColor
  -Color? _borderColor
  -Color? _pressedColor
  +AnimationController createAnimationController()
  -bool _updateColors()
  -void _updateAnimationControllers()
  +void didChangeDependencies()
  +void didUpdateWidget()
  +void dispose()
  -void _onTapDown()
  -void _onTapCancel()
  -void _onTap()
  +Color? getTextColor()
  +Color? getBackgroundColor()
  +Widget build()
}

"cupertino::segmented_control::_SegmentedControlState" o-- "animation::tween::ColorTween"
"cupertino::segmented_control::_SegmentedControlState" o-- "dart::ui::Color"
"widgets::framework::State" <|-- "cupertino::segmented_control::_SegmentedControlState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "cupertino::segmented_control::_SegmentedControlState"

class "cupertino::segmented_control::_SegmentedControlRenderWidget" {
  +int? selectedIndex
  +int? pressedIndex
  +List<Color> backgroundColors
  +Color borderColor
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"cupertino::segmented_control::_SegmentedControlRenderWidget" o-- "dart::ui::Color"
"widgets::framework::MultiChildRenderObjectWidget" <|-- "cupertino::segmented_control::_SegmentedControlRenderWidget"

class "cupertino::segmented_control::_SegmentedControlContainerBoxParentData" {
  +RRect? surroundingRect
}

"cupertino::segmented_control::_SegmentedControlContainerBoxParentData" o-- "dart::ui::RRect"
"rendering::box::ContainerBoxParentData" <|-- "cupertino::segmented_control::_SegmentedControlContainerBoxParentData"

class "cupertino::segmented_control::_RenderSegmentedControl" {
  -int? _selectedIndex
  -int? _pressedIndex
  -TextDirection _textDirection
  -List<Color> _backgroundColors
  -Color _borderColor
  +int? selectedIndex
  +int? pressedIndex
  +TextDirection textDirection
  +List<Color> backgroundColors
  +Color borderColor
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double? computeDistanceToActualBaseline()
  +void setupParentData()
  -void _layoutRects()
  -Size _calculateChildSize()
  -Size _computeOverallSizeFromChildSize()
  +Size computeDryLayout()
  +void performLayout()
  +void paint()
  -void _paintChild()
  +bool hitTestChildren()
}

"cupertino::segmented_control::_RenderSegmentedControl" o-- "dart::ui::TextDirection"
"cupertino::segmented_control::_RenderSegmentedControl" o-- "dart::ui::Color"
"rendering::box::RenderBox" <|-- "cupertino::segmented_control::_RenderSegmentedControl"
"rendering::object::ContainerRenderObjectMixin" <|-- "cupertino::segmented_control::_RenderSegmentedControl"
"rendering::box::RenderBoxContainerDefaultsMixin" <|-- "cupertino::segmented_control::_RenderSegmentedControl"

class "cupertino::icon_theme_data::CupertinoIconThemeData" {
  +IconThemeData resolve()
  +CupertinoIconThemeData copyWith()
  +void debugFillProperties()
}

"widgets::icon_theme_data::IconThemeData" <|-- "cupertino::icon_theme_data::CupertinoIconThemeData"
"foundation::diagnostics::Diagnosticable" <|-- "cupertino::icon_theme_data::CupertinoIconThemeData"

abstract class "cupertino::colors::CupertinoColors" {
  {static} +CupertinoDynamicColor activeBlue
  {static} +CupertinoDynamicColor activeGreen
  {static} +CupertinoDynamicColor activeOrange
  {static} +Color white
  {static} +Color black
  {static} +Color lightBackgroundGray
  {static} +Color extraLightBackgroundGray
  {static} +Color darkBackgroundGray
  {static} +CupertinoDynamicColor inactiveGray
  {static} +Color destructiveRed
  {static} +CupertinoDynamicColor systemBlue
  {static} +CupertinoDynamicColor systemGreen
  {static} +CupertinoDynamicColor systemMint
  {static} +CupertinoDynamicColor systemIndigo
  {static} +CupertinoDynamicColor systemOrange
  {static} +CupertinoDynamicColor systemPink
  {static} +CupertinoDynamicColor systemBrown
  {static} +CupertinoDynamicColor systemPurple
  {static} +CupertinoDynamicColor systemRed
  {static} +CupertinoDynamicColor systemTeal
  {static} +CupertinoDynamicColor systemCyan
  {static} +CupertinoDynamicColor systemYellow
  {static} +CupertinoDynamicColor systemGrey
  {static} +CupertinoDynamicColor systemGrey2
  {static} +CupertinoDynamicColor systemGrey3
  {static} +CupertinoDynamicColor systemGrey4
  {static} +CupertinoDynamicColor systemGrey5
  {static} +CupertinoDynamicColor systemGrey6
  {static} +CupertinoDynamicColor label
  {static} +CupertinoDynamicColor secondaryLabel
  {static} +CupertinoDynamicColor tertiaryLabel
  {static} +CupertinoDynamicColor quaternaryLabel
  {static} +CupertinoDynamicColor systemFill
  {static} +CupertinoDynamicColor secondarySystemFill
  {static} +CupertinoDynamicColor tertiarySystemFill
  {static} +CupertinoDynamicColor quaternarySystemFill
  {static} +CupertinoDynamicColor placeholderText
  {static} +CupertinoDynamicColor systemBackground
  {static} +CupertinoDynamicColor secondarySystemBackground
  {static} +CupertinoDynamicColor tertiarySystemBackground
  {static} +CupertinoDynamicColor systemGroupedBackground
  {static} +CupertinoDynamicColor secondarySystemGroupedBackground
  {static} +CupertinoDynamicColor tertiarySystemGroupedBackground
  {static} +CupertinoDynamicColor separator
  {static} +CupertinoDynamicColor opaqueSeparator
  {static} +CupertinoDynamicColor link
}

"cupertino::colors::CupertinoColors" o-- "cupertino::colors::CupertinoDynamicColor"
"cupertino::colors::CupertinoColors" o-- "dart::ui::Color"

class "cupertino::colors::CupertinoDynamicColor" {
  -Color _effectiveColor
  -String? _debugLabel
  -Element? _debugResolveContext
  +Color color
  +Color darkColor
  +Color highContrastColor
  +Color darkHighContrastColor
  +Color elevatedColor
  +Color darkElevatedColor
  +Color highContrastElevatedColor
  +Color darkHighContrastElevatedColor
  +int value
  -bool _isPlatformBrightnessDependent
  -bool _isHighContrastDependent
  -bool _isInterfaceElevationDependent
  +int hashCode
  {static} +Color resolve()
  {static} +Color? maybeResolve()
  +CupertinoDynamicColor resolveFrom()
  +bool ==()
  +String toString()
  +void debugFillProperties()
}

"cupertino::colors::CupertinoDynamicColor" o-- "dart::ui::Color"
"cupertino::colors::CupertinoDynamicColor" o-- "widgets::framework::Element"
"dart::ui::Color" <|-- "cupertino::colors::CupertinoDynamicColor"

class "cupertino::desktop_text_selection_toolbar::CupertinoDesktopTextSelectionToolbar" {
  +Offset anchor
  +List<Widget> children
  {static} -List<double> _matrixWithSaturation()
  {static} -Widget _defaultToolbarBuilder()
  +Widget build()
}

"cupertino::desktop_text_selection_toolbar::CupertinoDesktopTextSelectionToolbar" o-- "dart::ui::Offset"
"widgets::framework::StatelessWidget" <|-- "cupertino::desktop_text_selection_toolbar::CupertinoDesktopTextSelectionToolbar"

class "cupertino::sliding_segmented_control::_Segment" {
  +Widget child
  +bool pressed
  +bool highlighted
  +bool isDragging
  +bool shouldFadeoutContent
  +bool shouldScaleContent
  +_SegmentState<T> createState()
}

"cupertino::sliding_segmented_control::_Segment" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "cupertino::sliding_segmented_control::_Segment"

class "cupertino::sliding_segmented_control::_SegmentState" {
  +AnimationController highlightPressScaleController
  +Animation<double> highlightPressScaleAnimation
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"cupertino::sliding_segmented_control::_SegmentState" o-- "animation::animation_controller::AnimationController"
"cupertino::sliding_segmented_control::_SegmentState" o-- "animation::animation::Animation<double>"
"widgets::framework::State" <|-- "cupertino::sliding_segmented_control::_SegmentState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "cupertino::sliding_segmented_control::_SegmentState"

class "cupertino::sliding_segmented_control::_SegmentSeparator" {
  +bool highlighted
  +_SegmentSeparatorState createState()
}

"widgets::framework::StatefulWidget" <|-- "cupertino::sliding_segmented_control::_SegmentSeparator"

class "cupertino::sliding_segmented_control::_SegmentSeparatorState" {
  +AnimationController separatorOpacityController
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"cupertino::sliding_segmented_control::_SegmentSeparatorState" o-- "animation::animation_controller::AnimationController"
"widgets::framework::State" <|-- "cupertino::sliding_segmented_control::_SegmentSeparatorState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "cupertino::sliding_segmented_control::_SegmentSeparatorState"

class "cupertino::sliding_segmented_control::CupertinoSlidingSegmentedControl" {
  +Map<T, Widget> children
  +T? groupValue
  +void Function(T?) onValueChanged
  +Color backgroundColor
  +Color thumbColor
  +EdgeInsetsGeometry padding
  +State<CupertinoSlidingSegmentedControl<T>> createState()
}

"cupertino::sliding_segmented_control::CupertinoSlidingSegmentedControl" o-- "foundation::basic_types::void Function(T)"
"cupertino::sliding_segmented_control::CupertinoSlidingSegmentedControl" o-- "dart::ui::Color"
"cupertino::sliding_segmented_control::CupertinoSlidingSegmentedControl" o-- "painting::edge_insets::EdgeInsetsGeometry"
"widgets::framework::StatefulWidget" <|-- "cupertino::sliding_segmented_control::CupertinoSlidingSegmentedControl"

class "cupertino::sliding_segmented_control::_SegmentedControlState" {
  +AnimationController thumbController
  +Animatable<Rect?>? thumbAnimatable
  +AnimationController thumbScaleController
  +Animation<double> thumbScaleAnimation
  +TapGestureRecognizer tap
  +HorizontalDragGestureRecognizer drag
  +LongPressGestureRecognizer longPress
  -bool? _startedOnSelectedSegment
  +T? highlighted
  +T? pressed
  +bool isThumbDragging
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +T segmentForXPosition()
  -bool _hasDraggedTooFar()
  -void _playThumbScaleAnimation()
  +void onHighlightChangedByGesture()
  +void onPressedChangedByGesture()
  +void onTapUp()
  +void onDown()
  +void onUpdate()
  +void onEnd()
  +void onCancel()
  +Widget build()
}

"cupertino::sliding_segmented_control::_SegmentedControlState" o-- "animation::animation_controller::AnimationController"
"cupertino::sliding_segmented_control::_SegmentedControlState" o-- "animation::tween::Animatable<Rect>"
"cupertino::sliding_segmented_control::_SegmentedControlState" o-- "animation::animation::Animation<double>"
"cupertino::sliding_segmented_control::_SegmentedControlState" o-- "gestures::tap::TapGestureRecognizer"
"cupertino::sliding_segmented_control::_SegmentedControlState" o-- "gestures::monodrag::HorizontalDragGestureRecognizer"
"cupertino::sliding_segmented_control::_SegmentedControlState" o-- "gestures::long_press::LongPressGestureRecognizer"
"widgets::framework::State" <|-- "cupertino::sliding_segmented_control::_SegmentedControlState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "cupertino::sliding_segmented_control::_SegmentedControlState"

class "cupertino::sliding_segmented_control::_SegmentedControlRenderWidget" {
  +int? highlightedIndex
  +Color thumbColor
  +double thumbScale
  +_SegmentedControlState<T> state
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"cupertino::sliding_segmented_control::_SegmentedControlRenderWidget" o-- "dart::ui::Color"
"cupertino::sliding_segmented_control::_SegmentedControlRenderWidget" o-- "cupertino::sliding_segmented_control::_SegmentedControlState<T>"
"widgets::framework::MultiChildRenderObjectWidget" <|-- "cupertino::sliding_segmented_control::_SegmentedControlRenderWidget"

class "cupertino::sliding_segmented_control::_SegmentedControlContainerBoxParentData" {
}

"rendering::box::ContainerBoxParentData" <|-- "cupertino::sliding_segmented_control::_SegmentedControlContainerBoxParentData"

class "cupertino::sliding_segmented_control::_RenderSegmentedControl" {
  +_SegmentedControlState<T> state
  +Rect? currentThumbRect
  -double _thumbScale
  -int? _highlightedIndex
  -Color _thumbColor
  +Paint separatorPaint
  +double thumbScale
  +int? highlightedIndex
  +Color thumbColor
  +double totalSeparatorWidth
  +void attach()
  +void detach()
  +void handleEvent()
  +RenderBox? nonSeparatorChildAfter()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double? computeDistanceToActualBaseline()
  +void setupParentData()
  -Size _calculateChildSize()
  -Size _computeOverallSizeFromChildSize()
  +Size computeDryLayout()
  +void performLayout()
  +Rect? moveThumbRectInBound()
  +void paint()
  -void _paintSeparator()
  -void _paintChild()
  -void _paintThumb()
  +bool hitTestChildren()
}

"cupertino::sliding_segmented_control::_RenderSegmentedControl" o-- "cupertino::sliding_segmented_control::_SegmentedControlState<T>"
"cupertino::sliding_segmented_control::_RenderSegmentedControl" o-- "dart::ui::Rect"
"cupertino::sliding_segmented_control::_RenderSegmentedControl" o-- "dart::ui::Color"
"cupertino::sliding_segmented_control::_RenderSegmentedControl" o-- "dart::ui::Paint"
"rendering::box::RenderBox" <|-- "cupertino::sliding_segmented_control::_RenderSegmentedControl"
"rendering::object::ContainerRenderObjectMixin" <|-- "cupertino::sliding_segmented_control::_RenderSegmentedControl"
"rendering::box::RenderBoxContainerDefaultsMixin" <|-- "cupertino::sliding_segmented_control::_RenderSegmentedControl"

class "cupertino::search_field::CupertinoSearchTextField" {
  +TextEditingController? controller
  +void Function(String)? onChanged
  +void Function(String)? onSubmitted
  +TextStyle? style
  +String? placeholder
  +TextStyle? placeholderStyle
  +BoxDecoration? decoration
  +Color? backgroundColor
  +BorderRadius? borderRadius
  +TextInputType? keyboardType
  +EdgeInsetsGeometry padding
  +Color itemColor
  +double itemSize
  +EdgeInsetsGeometry prefixInsets
  +Widget prefixIcon
  +EdgeInsetsGeometry suffixInsets
  +Icon suffixIcon
  +OverlayVisibilityMode suffixMode
  +void Function()? onSuffixTap
  +String? restorationId
  +FocusNode? focusNode
  +bool autofocus
  +void Function()? onTap
  +bool autocorrect
  +SmartQuotesType? smartQuotesType
  +SmartDashesType? smartDashesType
  +bool enableIMEPersonalizedLearning
  +bool? enabled
  +State<StatefulWidget> createState()
}

"cupertino::search_field::CupertinoSearchTextField" o-- "widgets::editable_text::TextEditingController"
"cupertino::search_field::CupertinoSearchTextField" o-- "foundation::basic_types::void Function(String)"
"cupertino::search_field::CupertinoSearchTextField" o-- "painting::text_style::TextStyle"
"cupertino::search_field::CupertinoSearchTextField" o-- "painting::box_decoration::BoxDecoration"
"cupertino::search_field::CupertinoSearchTextField" o-- "dart::ui::Color"
"cupertino::search_field::CupertinoSearchTextField" o-- "painting::border_radius::BorderRadius"
"cupertino::search_field::CupertinoSearchTextField" o-- "services::text_input::TextInputType"
"cupertino::search_field::CupertinoSearchTextField" o-- "painting::edge_insets::EdgeInsetsGeometry"
"cupertino::search_field::CupertinoSearchTextField" o-- "widgets::framework::Widget"
"cupertino::search_field::CupertinoSearchTextField" o-- "widgets::icon::Icon"
"cupertino::search_field::CupertinoSearchTextField" o-- "cupertino::text_field::OverlayVisibilityMode"
"cupertino::search_field::CupertinoSearchTextField" o-- "dart::ui::void Function()"
"cupertino::search_field::CupertinoSearchTextField" o-- "widgets::focus_manager::FocusNode"
"cupertino::search_field::CupertinoSearchTextField" o-- "services::text_input::SmartQuotesType"
"cupertino::search_field::CupertinoSearchTextField" o-- "services::text_input::SmartDashesType"
"widgets::framework::StatefulWidget" <|-- "cupertino::search_field::CupertinoSearchTextField"

class "cupertino::search_field::_CupertinoSearchTextFieldState" {
  -BorderRadius _kDefaultBorderRadius
  -RestorableTextEditingController? _controller
  -TextEditingController _effectiveController
  +String? restorationId
  +void initState()
  +void didUpdateWidget()
  +void restoreState()
  -void _registerController()
  -void _createLocalController()
  -void _defaultOnSuffixTap()
  +Widget build()
}

"cupertino::search_field::_CupertinoSearchTextFieldState" o-- "painting::border_radius::BorderRadius"
"cupertino::search_field::_CupertinoSearchTextFieldState" o-- "widgets::restoration_properties::RestorableTextEditingController"
"cupertino::search_field::_CupertinoSearchTextFieldState" o-- "widgets::editable_text::TextEditingController"
"widgets::framework::State" <|-- "cupertino::search_field::_CupertinoSearchTextFieldState"
"widgets::restoration::RestorationMixin" <|-- "cupertino::search_field::_CupertinoSearchTextFieldState"

class "cupertino::button::CupertinoButton" {
  +Widget child
  +EdgeInsetsGeometry? padding
  +Color? color
  +Color disabledColor
  +void Function()? onPressed
  +double? minSize
  +double? pressedOpacity
  +BorderRadius? borderRadius
  +AlignmentGeometry alignment
  -bool _filled
  +bool enabled
  +State<CupertinoButton> createState()
  +void debugFillProperties()
}

"cupertino::button::CupertinoButton" o-- "widgets::framework::Widget"
"cupertino::button::CupertinoButton" o-- "painting::edge_insets::EdgeInsetsGeometry"
"cupertino::button::CupertinoButton" o-- "dart::ui::Color"
"cupertino::button::CupertinoButton" o-- "dart::ui::void Function()"
"cupertino::button::CupertinoButton" o-- "painting::border_radius::BorderRadius"
"cupertino::button::CupertinoButton" o-- "painting::alignment::AlignmentGeometry"
"widgets::framework::StatefulWidget" <|-- "cupertino::button::CupertinoButton"

class "cupertino::button::_CupertinoButtonState" {
  {static} +Duration kFadeOutDuration
  {static} +Duration kFadeInDuration
  -Tween<double> _opacityTween
  -AnimationController _animationController
  -Animation<double> _opacityAnimation
  -bool _buttonHeldDown
  +void initState()
  +void didUpdateWidget()
  -void _setTween()
  +void dispose()
  -void _handleTapDown()
  -void _handleTapUp()
  -void _handleTapCancel()
  -void _animate()
  +Widget build()
}

"cupertino::button::_CupertinoButtonState" o-- "animation::tween::Tween<double>"
"cupertino::button::_CupertinoButtonState" o-- "animation::animation_controller::AnimationController"
"cupertino::button::_CupertinoButtonState" o-- "animation::animation::Animation<double>"
"widgets::framework::State" <|-- "cupertino::button::_CupertinoButtonState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "cupertino::button::_CupertinoButtonState"

class "cupertino::tab_scaffold::CupertinoTabController" {
  -bool _isDisposed
  -int _index
  +int index
  +void dispose()
}

"foundation::change_notifier::ChangeNotifier" <|-- "cupertino::tab_scaffold::CupertinoTabController"

class "cupertino::tab_scaffold::CupertinoTabScaffold" {
  +CupertinoTabBar tabBar
  +CupertinoTabController? controller
  +Widget Function(BuildContext, int) tabBuilder
  +Color? backgroundColor
  +bool resizeToAvoidBottomInset
  +String? restorationId
  +State<CupertinoTabScaffold> createState()
}

"cupertino::tab_scaffold::CupertinoTabScaffold" o-- "cupertino::bottom_tab_bar::CupertinoTabBar"
"cupertino::tab_scaffold::CupertinoTabScaffold" o-- "cupertino::tab_scaffold::CupertinoTabController"
"cupertino::tab_scaffold::CupertinoTabScaffold" o-- "widgets::framework::Widget Function(BuildContext, int)"
"cupertino::tab_scaffold::CupertinoTabScaffold" o-- "dart::ui::Color"
"widgets::framework::StatefulWidget" <|-- "cupertino::tab_scaffold::CupertinoTabScaffold"

class "cupertino::tab_scaffold::_CupertinoTabScaffoldState" {
  -RestorableCupertinoTabController? _internalController
  -CupertinoTabController _controller
  +String? restorationId
  +void restoreState()
  -void _restoreInternalController()
  +void initState()
  -void _updateTabController()
  -void _onCurrentIndexChange()
  +void didUpdateWidget()
  +Widget build()
  +void dispose()
}

"cupertino::tab_scaffold::_CupertinoTabScaffoldState" o-- "cupertino::tab_scaffold::RestorableCupertinoTabController"
"cupertino::tab_scaffold::_CupertinoTabScaffoldState" o-- "cupertino::tab_scaffold::CupertinoTabController"
"widgets::framework::State" <|-- "cupertino::tab_scaffold::_CupertinoTabScaffoldState"
"widgets::restoration::RestorationMixin" <|-- "cupertino::tab_scaffold::_CupertinoTabScaffoldState"

class "cupertino::tab_scaffold::_TabSwitchingView" {
  +int currentTabIndex
  +int tabCount
  +Widget Function(BuildContext, int) tabBuilder
  +_TabSwitchingViewState createState()
}

"cupertino::tab_scaffold::_TabSwitchingView" o-- "widgets::framework::Widget Function(BuildContext, int)"
"widgets::framework::StatefulWidget" <|-- "cupertino::tab_scaffold::_TabSwitchingView"

class "cupertino::tab_scaffold::_TabSwitchingViewState" {
  +List<bool> shouldBuildTab
  +List<FocusScopeNode> tabFocusNodes
  +List<FocusScopeNode> discardedNodes
  +void initState()
  +void didChangeDependencies()
  +void didUpdateWidget()
  -void _focusActiveTab()
  +void dispose()
  +Widget build()
}

"widgets::framework::State" <|-- "cupertino::tab_scaffold::_TabSwitchingViewState"

class "cupertino::tab_scaffold::RestorableCupertinoTabController" {
  -int _initialIndex
  +CupertinoTabController createDefaultValue()
  +CupertinoTabController fromPrimitives()
  +Object? toPrimitives()
}

"widgets::restoration_properties::RestorableChangeNotifier" <|-- "cupertino::tab_scaffold::RestorableCupertinoTabController"

class "cupertino::dialog::CupertinoAlertDialog" {
  +Widget? title
  +Widget? content
  +List<Widget> actions
  +ScrollController? scrollController
  +ScrollController? actionScrollController
  +Duration insetAnimationDuration
  +Curve insetAnimationCurve
  +State<CupertinoAlertDialog> createState()
}

"cupertino::dialog::CupertinoAlertDialog" o-- "widgets::framework::Widget"
"cupertino::dialog::CupertinoAlertDialog" o-- "widgets::scroll_controller::ScrollController"
"cupertino::dialog::CupertinoAlertDialog" o-- "animation::curves::Curve"
"widgets::framework::StatefulWidget" <|-- "cupertino::dialog::CupertinoAlertDialog"

class "cupertino::dialog::_CupertinoAlertDialogState" {
  -ScrollController? _backupScrollController
  -ScrollController? _backupActionScrollController
  -ScrollController _effectiveScrollController
  -ScrollController _effectiveActionScrollController
  -Widget _buildContent()
  -Widget _buildActions()
  +Widget build()
  +void dispose()
}

"cupertino::dialog::_CupertinoAlertDialogState" o-- "widgets::scroll_controller::ScrollController"
"widgets::framework::State" <|-- "cupertino::dialog::_CupertinoAlertDialogState"

class "cupertino::dialog::CupertinoPopupSurface" {
  +bool isSurfacePainted
  +Widget? child
  +Widget build()
}

"cupertino::dialog::CupertinoPopupSurface" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "cupertino::dialog::CupertinoPopupSurface"

class "cupertino::dialog::CupertinoActionSheet" {
  +Widget? title
  +Widget? message
  +List<Widget>? actions
  +ScrollController? messageScrollController
  +ScrollController? actionScrollController
  +Widget? cancelButton
  +State<CupertinoActionSheet> createState()
}

"cupertino::dialog::CupertinoActionSheet" o-- "widgets::framework::Widget"
"cupertino::dialog::CupertinoActionSheet" o-- "widgets::scroll_controller::ScrollController"
"widgets::framework::StatefulWidget" <|-- "cupertino::dialog::CupertinoActionSheet"

class "cupertino::dialog::_CupertinoActionSheetState" {
  -ScrollController? _backupMessageScrollController
  -ScrollController? _backupActionScrollController
  -ScrollController _effectiveMessageScrollController
  -ScrollController _effectiveActionScrollController
  +void dispose()
  -Widget _buildContent()
  -Widget _buildActions()
  -Widget _buildCancelButton()
  +Widget build()
}

"cupertino::dialog::_CupertinoActionSheetState" o-- "widgets::scroll_controller::ScrollController"
"widgets::framework::State" <|-- "cupertino::dialog::_CupertinoActionSheetState"

class "cupertino::dialog::CupertinoActionSheetAction" {
  +void Function() onPressed
  +bool isDefaultAction
  +bool isDestructiveAction
  +Widget child
  +Widget build()
}

"cupertino::dialog::CupertinoActionSheetAction" o-- "dart::ui::void Function()"
"cupertino::dialog::CupertinoActionSheetAction" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "cupertino::dialog::CupertinoActionSheetAction"

class "cupertino::dialog::_CupertinoActionSheetCancelButton" {
  +Widget? child
  +_CupertinoActionSheetCancelButtonState createState()
}

"cupertino::dialog::_CupertinoActionSheetCancelButton" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "cupertino::dialog::_CupertinoActionSheetCancelButton"

class "cupertino::dialog::_CupertinoActionSheetCancelButtonState" {
  +bool isBeingPressed
  -void _onTapDown()
  -void _onTapUp()
  -void _onTapCancel()
  +Widget build()
}

"widgets::framework::State" <|-- "cupertino::dialog::_CupertinoActionSheetCancelButtonState"

class "cupertino::dialog::_CupertinoDialogRenderWidget" {
  +Widget contentSection
  +Widget actionsSection
  +Color dividerColor
  +bool isActionSheet
  +RenderObject createRenderObject()
  +void updateRenderObject()
  +RenderObjectElement createElement()
}

"cupertino::dialog::_CupertinoDialogRenderWidget" o-- "widgets::framework::Widget"
"cupertino::dialog::_CupertinoDialogRenderWidget" o-- "dart::ui::Color"
"widgets::framework::RenderObjectWidget" <|-- "cupertino::dialog::_CupertinoDialogRenderWidget"

class "cupertino::dialog::_CupertinoDialogRenderElement" {
  +bool allowMoveRenderObjectChild
  -Element? _contentElement
  -Element? _actionsElement
  +_RenderCupertinoDialog renderObject
  +void visitChildren()
  +void mount()
  +void insertRenderObjectChild()
  +void moveRenderObjectChild()
  +void update()
  +void forgetChild()
  +void removeRenderObjectChild()
  -void _placeChildInSlot()
}

"cupertino::dialog::_CupertinoDialogRenderElement" o-- "widgets::framework::Element"
"cupertino::dialog::_CupertinoDialogRenderElement" o-- "cupertino::dialog::_RenderCupertinoDialog"
"widgets::framework::RenderObjectElement" <|-- "cupertino::dialog::_CupertinoDialogRenderElement"

class "cupertino::dialog::_RenderCupertinoDialog" {
  -RenderBox? _contentSection
  -RenderBox? _actionsSection
  -bool _isInAccessibilityMode
  -bool _isActionSheet
  -double _dividerThickness
  -Paint _dividerPaint
  +RenderBox? contentSection
  +RenderBox? actionsSection
  +bool isInAccessibilityMode
  +bool isActionSheet
  -double _dialogWidth
  +Color dividerColor
  +void attach()
  +void detach()
  +void redepthChildren()
  +void setupParentData()
  +void visitChildren()
  +List<DiagnosticsNode> debugDescribeChildren()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +Size computeDryLayout()
  +void performLayout()
  -_AlertDialogSizes _performLayout()
  +_AlertDialogSizes performRegularLayout()
  +_AlertDialogSizes performAccessibilityLayout()
  +void paint()
  -void _paintDividerBetweenContentAndActions()
  +bool hitTestChildren()
}

"cupertino::dialog::_RenderCupertinoDialog" o-- "rendering::box::RenderBox"
"cupertino::dialog::_RenderCupertinoDialog" o-- "dart::ui::Paint"
"cupertino::dialog::_RenderCupertinoDialog" o-- "dart::ui::Color"
"rendering::box::RenderBox" <|-- "cupertino::dialog::_RenderCupertinoDialog"

class "cupertino::dialog::_AlertDialogSizes" {
  +Size size
  +double contentHeight
  +double dividerThickness
}

"cupertino::dialog::_AlertDialogSizes" o-- "dart::ui::Size"

class "cupertino::dialog::_CupertinoAlertContentSection" {
  +Widget? title
  +Widget? message
  +ScrollController? scrollController
  +EdgeInsets? titlePadding
  +EdgeInsets? messagePadding
  +EdgeInsets? additionalPaddingBetweenTitleAndMessage
  +TextStyle? titleTextStyle
  +TextStyle? messageTextStyle
  +Widget build()
}

"cupertino::dialog::_CupertinoAlertContentSection" o-- "widgets::framework::Widget"
"cupertino::dialog::_CupertinoAlertContentSection" o-- "widgets::scroll_controller::ScrollController"
"cupertino::dialog::_CupertinoAlertContentSection" o-- "painting::edge_insets::EdgeInsets"
"cupertino::dialog::_CupertinoAlertContentSection" o-- "painting::text_style::TextStyle"
"widgets::framework::StatelessWidget" <|-- "cupertino::dialog::_CupertinoAlertContentSection"

class "cupertino::dialog::_CupertinoAlertActionSection" {
  +List<Widget> children
  +ScrollController? scrollController
  +bool hasCancelButton
  +bool isActionSheet
  +Widget build()
}

"cupertino::dialog::_CupertinoAlertActionSection" o-- "widgets::scroll_controller::ScrollController"
"widgets::framework::StatelessWidget" <|-- "cupertino::dialog::_CupertinoAlertActionSection"

class "cupertino::dialog::_PressableActionButton" {
  +Widget child
  +_PressableActionButtonState createState()
}

"cupertino::dialog::_PressableActionButton" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "cupertino::dialog::_PressableActionButton"

class "cupertino::dialog::_PressableActionButtonState" {
  -bool _isPressed
  +Widget build()
}

"widgets::framework::State" <|-- "cupertino::dialog::_PressableActionButtonState"

class "cupertino::dialog::_ActionButtonParentDataWidget" {
  +bool isPressed
  +Type debugTypicalAncestorWidgetClass
  +void applyParentData()
}

"widgets::framework::ParentDataWidget" <|-- "cupertino::dialog::_ActionButtonParentDataWidget"

class "cupertino::dialog::_ActionButtonParentData" {
  +bool isPressed
}

"rendering::custom_layout::MultiChildLayoutParentData" <|-- "cupertino::dialog::_ActionButtonParentData"

class "cupertino::dialog::CupertinoDialogAction" {
  +void Function()? onPressed
  +bool isDefaultAction
  +bool isDestructiveAction
  +TextStyle? textStyle
  +Widget child
  +bool enabled
  -double _calculatePadding()
  -Widget _buildContentWithRegularSizingPolicy()
  -Widget _buildContentWithAccessibilitySizingPolicy()
  +Widget build()
}

"cupertino::dialog::CupertinoDialogAction" o-- "dart::ui::void Function()"
"cupertino::dialog::CupertinoDialogAction" o-- "painting::text_style::TextStyle"
"cupertino::dialog::CupertinoDialogAction" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "cupertino::dialog::CupertinoDialogAction"

class "cupertino::dialog::_CupertinoDialogActionsRenderWidget" {
  -double _dividerThickness
  -bool _hasCancelButton
  -bool _isActionSheet
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"widgets::framework::MultiChildRenderObjectWidget" <|-- "cupertino::dialog::_CupertinoDialogActionsRenderWidget"

class "cupertino::dialog::_RenderCupertinoDialogActions" {
  -double? _dialogWidth
  -double _dividerThickness
  -bool _hasCancelButton
  -Paint _buttonBackgroundPaint
  -Paint _pressedButtonBackgroundPaint
  -Paint _dividerPaint
  -bool _isActionSheet
  +double? dialogWidth
  +double dividerThickness
  +bool hasCancelButton
  +Color dialogColor
  +Color dialogPressedColor
  +Color dividerColor
  +bool isActionSheet
  -Iterable<RenderBox> _pressedButtons
  -bool _isButtonPressed
  +void setupParentData()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  -double _computeMinIntrinsicHeightWithCancel()
  -double _computeMinIntrinsicHeightSideBySide()
  -double _computeMinIntrinsicHeightStacked()
  +double computeMaxIntrinsicHeight()
  -double _computeMaxIntrinsicHeightStacked()
  -bool _isSingleButtonRow()
  +Size computeDryLayout()
  +void performLayout()
  -Size _performLayout()
  +void paint()
  -void _drawButtonBackgroundsAndDividersSingleRow()
  -void _drawButtonBackgroundsAndDividersStacked()
  -void _drawButtons()
  +bool hitTestChildren()
}

"cupertino::dialog::_RenderCupertinoDialogActions" o-- "dart::ui::Paint"
"cupertino::dialog::_RenderCupertinoDialogActions" o-- "dart::ui::Color"
"rendering::box::RenderBox" <|-- "cupertino::dialog::_RenderCupertinoDialogActions"
"rendering::object::ContainerRenderObjectMixin" <|-- "cupertino::dialog::_RenderCupertinoDialogActions"
"rendering::box::RenderBoxContainerDefaultsMixin" <|-- "cupertino::dialog::_RenderCupertinoDialogActions"

class "cupertino::dialog::_AlertDialogSections" {
  +int index
  {static} +List<_AlertDialogSections> values
  {static} +_AlertDialogSections contentSection
  {static} +_AlertDialogSections actionsSection
}

"cupertino::dialog::_AlertDialogSections" o-- "cupertino::dialog::_AlertDialogSections"
"dart::core::Enum" <|-- "cupertino::dialog::_AlertDialogSections"

class "cupertino::checkbox::CupertinoCheckbox" {
  +bool? value
  +void Function(bool?)? onChanged
  +Color? activeColor
  +Color? inactiveColor
  +Color? checkColor
  +bool tristate
  +Color? focusColor
  +FocusNode? focusNode
  +bool autofocus
  +BorderSide? side
  +OutlinedBorder? shape
  {static} +double width
  +State<CupertinoCheckbox> createState()
}

"cupertino::checkbox::CupertinoCheckbox" o-- "foundation::basic_types::void Function(bool)"
"cupertino::checkbox::CupertinoCheckbox" o-- "dart::ui::Color"
"cupertino::checkbox::CupertinoCheckbox" o-- "widgets::focus_manager::FocusNode"
"cupertino::checkbox::CupertinoCheckbox" o-- "painting::borders::BorderSide"
"cupertino::checkbox::CupertinoCheckbox" o-- "painting::borders::OutlinedBorder"
"widgets::framework::StatefulWidget" <|-- "cupertino::checkbox::CupertinoCheckbox"

class "cupertino::checkbox::_CupertinoCheckboxState" {
  -_CheckboxPainter _painter
  -bool? _previousValue
  +bool focused
  +void Function(bool?)? onChanged
  +bool tristate
  +bool? value
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +void onFocusChange()
  +Widget build()
}

"cupertino::checkbox::_CupertinoCheckboxState" o-- "cupertino::checkbox::_CheckboxPainter"
"cupertino::checkbox::_CupertinoCheckboxState" o-- "foundation::basic_types::void Function(bool)"
"widgets::framework::State" <|-- "cupertino::checkbox::_CupertinoCheckboxState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "cupertino::checkbox::_CupertinoCheckboxState"
"cupertino::toggleable::ToggleableStateMixin" <|-- "cupertino::checkbox::_CupertinoCheckboxState"

class "cupertino::checkbox::_CheckboxPainter" {
  -Color? _checkColor
  -bool? _value
  -bool? _previousValue
  -OutlinedBorder? _shape
  -BorderSide? _side
  +Color checkColor
  +bool? value
  +bool? previousValue
  +OutlinedBorder shape
  +BorderSide? side
  -Rect _outerRectAt()
  -Color _colorAt()
  -Paint _createStrokePaint()
  -void _drawBox()
  -void _drawCheck()
  -void _drawDash()
  +void paint()
}

"cupertino::checkbox::_CheckboxPainter" o-- "dart::ui::Color"
"cupertino::checkbox::_CheckboxPainter" o-- "painting::borders::OutlinedBorder"
"cupertino::checkbox::_CheckboxPainter" o-- "painting::borders::BorderSide"
"cupertino::toggleable::ToggleablePainter" <|-- "cupertino::checkbox::_CheckboxPainter"

class "cupertino::bottom_tab_bar::CupertinoTabBar" {
  +List<BottomNavigationBarItem> items
  +void Function(int)? onTap
  +int currentIndex
  +Color? backgroundColor
  +Color? activeColor
  +Color inactiveColor
  +double iconSize
  +double height
  +Border? border
  +Size preferredSize
  +bool opaque()
  +Widget build()
  -List<Widget> _buildTabItems()
  -List<Widget> _buildSingleTabItem()
  -Widget _wrapActiveItem()
  +CupertinoTabBar copyWith()
}

"cupertino::bottom_tab_bar::CupertinoTabBar" o-- "foundation::basic_types::void Function(int)"
"cupertino::bottom_tab_bar::CupertinoTabBar" o-- "dart::ui::Color"
"cupertino::bottom_tab_bar::CupertinoTabBar" o-- "painting::box_border::Border"
"cupertino::bottom_tab_bar::CupertinoTabBar" o-- "dart::ui::Size"
"widgets::framework::StatelessWidget" <|-- "cupertino::bottom_tab_bar::CupertinoTabBar"
"widgets::preferred_size::PreferredSizeWidget" <|-- "cupertino::bottom_tab_bar::CupertinoTabBar"

class "cupertino::radio::CupertinoRadio" {
  +T value
  +T? groupValue
  +void Function(T?)? onChanged
  +bool toggleable
  +bool useCheckmarkStyle
  +Color? activeColor
  +Color? inactiveColor
  +Color? fillColor
  +Color? focusColor
  +FocusNode? focusNode
  +bool autofocus
  -bool _selected
  +State<CupertinoRadio<T>> createState()
}

"cupertino::radio::CupertinoRadio" o-- "foundation::basic_types::void Function(T)"
"cupertino::radio::CupertinoRadio" o-- "dart::ui::Color"
"cupertino::radio::CupertinoRadio" o-- "widgets::focus_manager::FocusNode"
"widgets::framework::StatefulWidget" <|-- "cupertino::radio::CupertinoRadio"

class "cupertino::radio::_CupertinoRadioState" {
  -_RadioPainter _painter
  +bool focused
  +void Function(bool?)? onChanged
  +bool tristate
  +bool? value
  -void _handleChanged()
  +void dispose()
  +void onFocusChange()
  +Widget build()
}

"cupertino::radio::_CupertinoRadioState" o-- "cupertino::radio::_RadioPainter"
"cupertino::radio::_CupertinoRadioState" o-- "foundation::basic_types::void Function(bool)"
"widgets::framework::State" <|-- "cupertino::radio::_CupertinoRadioState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "cupertino::radio::_CupertinoRadioState"
"cupertino::toggleable::ToggleableStateMixin" <|-- "cupertino::radio::_CupertinoRadioState"

class "cupertino::radio::_RadioPainter" {
  -bool? _value
  -Color? _fillColor
  -bool _checkmarkStyle
  +bool? value
  +Color fillColor
  +bool checkmarkStyle
  +void paint()
}

"cupertino::radio::_RadioPainter" o-- "dart::ui::Color"
"cupertino::toggleable::ToggleablePainter" <|-- "cupertino::radio::_RadioPainter"

class "cupertino::date_picker::_DatePickerLayoutDelegate" {
  +List<double> columnWidths
  +int textDirectionFactor
  +double maxWidth
  +void performLayout()
  +bool shouldRelayout()
}

"rendering::custom_layout::MultiChildLayoutDelegate" <|-- "cupertino::date_picker::_DatePickerLayoutDelegate"

class "cupertino::date_picker::CupertinoDatePicker" {
  +CupertinoDatePickerMode mode
  +DateTime initialDateTime
  +DateTime? minimumDate
  +DateTime? maximumDate
  +int minimumYear
  +int? maximumYear
  +int minuteInterval
  +bool use24hFormat
  +DatePickerDateOrder? dateOrder
  +void Function(DateTime) onDateTimeChanged
  +Color? backgroundColor
  +bool showDayOfWeek
  +double itemExtent
  +State<StatefulWidget> createState()
  {static} -double _getColumnWidth()
}

"cupertino::date_picker::CupertinoDatePicker" o-- "cupertino::date_picker::CupertinoDatePickerMode"
"cupertino::date_picker::CupertinoDatePicker" o-- "cupertino::localizations::DatePickerDateOrder"
"cupertino::date_picker::CupertinoDatePicker" o-- "foundation::basic_types::void Function(DateTime)"
"cupertino::date_picker::CupertinoDatePicker" o-- "dart::ui::Color"
"widgets::framework::StatefulWidget" <|-- "cupertino::date_picker::CupertinoDatePicker"

class "cupertino::date_picker::_CupertinoDatePickerDateTimeState" {
  {static} -double _kMaximumOffAxisFraction
  +int textDirectionFactor
  +CupertinoLocalizations localizations
  +Alignment alignCenterLeft
  +Alignment alignCenterRight
  +DateTime initialDateTime
  +FixedExtentScrollController dateController
  +FixedExtentScrollController hourController
  +FixedExtentScrollController minuteController
  +int selectedAmPm
  +int meridiemRegion
  +FixedExtentScrollController meridiemController
  +bool isDatePickerScrolling
  +bool isHourPickerScrolling
  +bool isMinutePickerScrolling
  +bool isMeridiemPickerScrolling
  +Map<int, double> estimatedColumnWidths
  +int selectedDayFromInitial
  +int selectedHour
  -int _selectedHourIndex
  +int selectedMinute
  +bool isHourRegionFlipped
  +bool isScrolling
  +DateTime selectedDateTime
  -int _selectedHour()
  -bool _isHourRegionFlipped()
  +void initState()
  -void _handleSystemFontsChange()
  +void dispose()
  +void didUpdateWidget()
  +void didChangeDependencies()
  -double _getEstimatedColumnWidth()
  -void _onSelectedItemChange()
  -Widget _buildMediumDatePicker()
  -bool _isValidHour()
  -Widget _buildHourPicker()
  -Widget _buildMinutePicker()
  -Widget _buildAmPmPicker()
  -void _pickerDidStopScrolling()
  -void _scrollToDate()
  +Widget build()
}

"cupertino::date_picker::_CupertinoDatePickerDateTimeState" o-- "cupertino::localizations::CupertinoLocalizations"
"cupertino::date_picker::_CupertinoDatePickerDateTimeState" o-- "painting::alignment::Alignment"
"cupertino::date_picker::_CupertinoDatePickerDateTimeState" o-- "widgets::list_wheel_scroll_view::FixedExtentScrollController"
"widgets::framework::State" <|-- "cupertino::date_picker::_CupertinoDatePickerDateTimeState"

class "cupertino::date_picker::_CupertinoDatePickerDateState" {
  +DatePickerDateOrder? dateOrder
  +int textDirectionFactor
  +CupertinoLocalizations localizations
  +Alignment alignCenterLeft
  +Alignment alignCenterRight
  +int selectedDay
  +int selectedMonth
  +int selectedYear
  +FixedExtentScrollController dayController
  +FixedExtentScrollController monthController
  +FixedExtentScrollController yearController
  +bool isDayPickerScrolling
  +bool isMonthPickerScrolling
  +bool isYearPickerScrolling
  +Map<int, double> estimatedColumnWidths
  +bool isScrolling
  -bool _isCurrentDateValid
  +void initState()
  -void _handleSystemFontsChange()
  +void dispose()
  +void didChangeDependencies()
  -void _refreshEstimatedColumnWidths()
  -DateTime _lastDayInMonth()
  -Widget _buildDayPicker()
  -Widget _buildMonthPicker()
  -Widget _buildYearPicker()
  -void _pickerDidStopScrolling()
  -void _scrollToDate()
  +Widget build()
}

"cupertino::date_picker::_CupertinoDatePickerDateState" o-- "cupertino::localizations::DatePickerDateOrder"
"cupertino::date_picker::_CupertinoDatePickerDateState" o-- "cupertino::localizations::CupertinoLocalizations"
"cupertino::date_picker::_CupertinoDatePickerDateState" o-- "painting::alignment::Alignment"
"cupertino::date_picker::_CupertinoDatePickerDateState" o-- "widgets::list_wheel_scroll_view::FixedExtentScrollController"
"widgets::framework::State" <|-- "cupertino::date_picker::_CupertinoDatePickerDateState"

class "cupertino::date_picker::_CupertinoDatePickerMonthYearState" {
  +DatePickerDateOrder? dateOrder
  +int textDirectionFactor
  +CupertinoLocalizations localizations
  +Alignment alignCenterLeft
  +Alignment alignCenterRight
  +int selectedYear
  +int selectedMonth
  +FixedExtentScrollController monthController
  +FixedExtentScrollController yearController
  +bool isMonthPickerScrolling
  +bool isYearPickerScrolling
  +Map<int, double> estimatedColumnWidths
  +bool isScrolling
  -bool _isCurrentDateValid
  +void initState()
  -void _handleSystemFontsChange()
  +void dispose()
  +void didChangeDependencies()
  -void _refreshEstimatedColumnWidths()
  -Widget _buildMonthPicker()
  -Widget _buildYearPicker()
  -void _pickerDidStopScrolling()
  -void _scrollToDate()
  +Widget build()
}

"cupertino::date_picker::_CupertinoDatePickerMonthYearState" o-- "cupertino::localizations::DatePickerDateOrder"
"cupertino::date_picker::_CupertinoDatePickerMonthYearState" o-- "cupertino::localizations::CupertinoLocalizations"
"cupertino::date_picker::_CupertinoDatePickerMonthYearState" o-- "painting::alignment::Alignment"
"cupertino::date_picker::_CupertinoDatePickerMonthYearState" o-- "widgets::list_wheel_scroll_view::FixedExtentScrollController"
"widgets::framework::State" <|-- "cupertino::date_picker::_CupertinoDatePickerMonthYearState"

class "cupertino::date_picker::CupertinoTimerPicker" {
  +CupertinoTimerPickerMode mode
  +Duration initialTimerDuration
  +int minuteInterval
  +int secondInterval
  +void Function(Duration) onTimerDurationChanged
  +AlignmentGeometry alignment
  +Color? backgroundColor
  +double itemExtent
  +State<StatefulWidget> createState()
}

"cupertino::date_picker::CupertinoTimerPicker" o-- "cupertino::date_picker::CupertinoTimerPickerMode"
"cupertino::date_picker::CupertinoTimerPicker" o-- "foundation::basic_types::void Function(Duration)"
"cupertino::date_picker::CupertinoTimerPicker" o-- "painting::alignment::AlignmentGeometry"
"cupertino::date_picker::CupertinoTimerPicker" o-- "dart::ui::Color"
"widgets::framework::StatefulWidget" <|-- "cupertino::date_picker::CupertinoTimerPicker"

class "cupertino::date_picker::_CupertinoTimerPickerState" {
  +TextDirection textDirection
  +CupertinoLocalizations localizations
  +int? selectedHour
  +int selectedMinute
  +int? selectedSecond
  +int? lastSelectedHour
  +int? lastSelectedMinute
  +int? lastSelectedSecond
  +TextPainter textPainter
  +List<String> numbers
  +double numberLabelWidth
  +double numberLabelHeight
  +double numberLabelBaseline
  +double hourLabelWidth
  +double minuteLabelWidth
  +double secondLabelWidth
  +double totalWidth
  +double pickerColumnWidth
  +int textDirectionFactor
  +void initState()
  -void _handleSystemFontsChange()
  +void dispose()
  +void didUpdateWidget()
  +void didChangeDependencies()
  -void _measureLabelMetrics()
  -double _measureLabelsMaxWidth()
  -Widget _buildLabel()
  -Widget _buildPickerNumberLabel()
  -Widget _buildHourPicker()
  -Widget _buildHourColumn()
  -Widget _buildMinutePicker()
  -Widget _buildMinuteColumn()
  -Widget _buildSecondPicker()
  -Widget _buildSecondColumn()
  -TextStyle _textStyleFrom()
  -double _calculateOffAxisFraction()
  +Widget build()
}

"cupertino::date_picker::_CupertinoTimerPickerState" o-- "dart::ui::TextDirection"
"cupertino::date_picker::_CupertinoTimerPickerState" o-- "cupertino::localizations::CupertinoLocalizations"
"cupertino::date_picker::_CupertinoTimerPickerState" o-- "painting::text_painter::TextPainter"
"widgets::framework::State" <|-- "cupertino::date_picker::_CupertinoTimerPickerState"

class "cupertino::date_picker::CupertinoDatePickerMode" {
  +int index
  {static} +List<CupertinoDatePickerMode> values
  {static} +CupertinoDatePickerMode time
  {static} +CupertinoDatePickerMode date
  {static} +CupertinoDatePickerMode dateAndTime
  {static} +CupertinoDatePickerMode monthYear
}

"cupertino::date_picker::CupertinoDatePickerMode" o-- "cupertino::date_picker::CupertinoDatePickerMode"
"dart::core::Enum" <|-- "cupertino::date_picker::CupertinoDatePickerMode"

class "cupertino::date_picker::_PickerColumnType" {
  +int index
  {static} +List<_PickerColumnType> values
  {static} +_PickerColumnType dayOfMonth
  {static} +_PickerColumnType month
  {static} +_PickerColumnType year
  {static} +_PickerColumnType date
  {static} +_PickerColumnType hour
  {static} +_PickerColumnType minute
  {static} +_PickerColumnType dayPeriod
}

"cupertino::date_picker::_PickerColumnType" o-- "cupertino::date_picker::_PickerColumnType"
"dart::core::Enum" <|-- "cupertino::date_picker::_PickerColumnType"

class "cupertino::date_picker::CupertinoTimerPickerMode" {
  +int index
  {static} +List<CupertinoTimerPickerMode> values
  {static} +CupertinoTimerPickerMode hm
  {static} +CupertinoTimerPickerMode ms
  {static} +CupertinoTimerPickerMode hms
}

"cupertino::date_picker::CupertinoTimerPickerMode" o-- "cupertino::date_picker::CupertinoTimerPickerMode"
"dart::core::Enum" <|-- "cupertino::date_picker::CupertinoTimerPickerMode"

class "cupertino::refresh::_CupertinoSliverRefresh" {
  +double refreshIndicatorLayoutExtent
  +bool hasLayoutExtent
  +_RenderCupertinoSliverRefresh createRenderObject()
  +void updateRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "cupertino::refresh::_CupertinoSliverRefresh"

class "cupertino::refresh::_RenderCupertinoSliverRefresh" {
  -double _refreshIndicatorExtent
  -bool _hasLayoutExtent
  +double layoutExtentOffsetCompensation
  +double refreshIndicatorLayoutExtent
  +bool hasLayoutExtent
  +void performLayout()
  +void paint()
  +void applyPaintTransform()
}

"rendering::sliver::RenderSliver" <|-- "cupertino::refresh::_RenderCupertinoSliverRefresh"
"rendering::object::RenderObjectWithChildMixin" <|-- "cupertino::refresh::_RenderCupertinoSliverRefresh"

class "cupertino::refresh::CupertinoSliverRefreshControl" {
  +double refreshTriggerPullDistance
  +double refreshIndicatorExtent
  +Widget Function(BuildContext, RefreshIndicatorMode, double, double, double)? builder
  +Future<void> Function()? onRefresh
  {static} -double _defaultRefreshTriggerPullDistance
  {static} -double _defaultRefreshIndicatorExtent
  {static} +RefreshIndicatorMode state()
  {static} +Widget buildRefreshIndicator()
  {static} -Widget _buildIndicatorForRefreshState()
  +State<CupertinoSliverRefreshControl> createState()
}

"cupertino::refresh::CupertinoSliverRefreshControl" o-- "cupertino::refresh::Widget Function(BuildContext, RefreshIndicatorMode, double, double, double)"
"cupertino::refresh::CupertinoSliverRefreshControl" o-- "cupertino::refresh::Future<void> Function()"
"widgets::framework::StatefulWidget" <|-- "cupertino::refresh::CupertinoSliverRefreshControl"

class "cupertino::refresh::_CupertinoSliverRefreshControlState" {
  {static} -double _inactiveResetOverscrollFraction
  +RefreshIndicatorMode refreshState
  +Future<void>? refreshTask
  +double latestIndicatorBoxExtent
  +bool hasSliverLayoutExtent
  +void initState()
  +RefreshIndicatorMode transitionNextState()
  +Widget build()
}

"cupertino::refresh::_CupertinoSliverRefreshControlState" o-- "cupertino::refresh::RefreshIndicatorMode"
"widgets::framework::State" <|-- "cupertino::refresh::_CupertinoSliverRefreshControlState"

class "cupertino::refresh::RefreshIndicatorMode" {
  +int index
  {static} +List<RefreshIndicatorMode> values
  {static} +RefreshIndicatorMode inactive
  {static} +RefreshIndicatorMode drag
  {static} +RefreshIndicatorMode armed
  {static} +RefreshIndicatorMode refresh
  {static} +RefreshIndicatorMode done
}

"cupertino::refresh::RefreshIndicatorMode" o-- "cupertino::refresh::RefreshIndicatorMode"
"dart::core::Enum" <|-- "cupertino::refresh::RefreshIndicatorMode"

class "cupertino::picker::CupertinoPicker" {
  +double diameterRatio
  +Color? backgroundColor
  +double offAxisFraction
  +bool useMagnifier
  +double magnification
  +FixedExtentScrollController? scrollController
  +double itemExtent
  +double squeeze
  +void Function(int)? onSelectedItemChanged
  +ListWheelChildDelegate childDelegate
  +Widget? selectionOverlay
  +State<StatefulWidget> createState()
}

"cupertino::picker::CupertinoPicker" o-- "dart::ui::Color"
"cupertino::picker::CupertinoPicker" o-- "widgets::list_wheel_scroll_view::FixedExtentScrollController"
"cupertino::picker::CupertinoPicker" o-- "foundation::basic_types::void Function(int)"
"cupertino::picker::CupertinoPicker" o-- "widgets::list_wheel_scroll_view::ListWheelChildDelegate"
"cupertino::picker::CupertinoPicker" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "cupertino::picker::CupertinoPicker"

class "cupertino::picker::_CupertinoPickerState" {
  -int? _lastHapticIndex
  -FixedExtentScrollController? _controller
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  -void _handleSelectedItemChanged()
  -Widget _buildSelectionOverlay()
  +Widget build()
}

"cupertino::picker::_CupertinoPickerState" o-- "widgets::list_wheel_scroll_view::FixedExtentScrollController"
"widgets::framework::State" <|-- "cupertino::picker::_CupertinoPickerState"

class "cupertino::picker::CupertinoPickerDefaultSelectionOverlay" {
  +bool capStartEdge
  +bool capEndEdge
  +Color background
  {static} -double _defaultSelectionOverlayHorizontalMargin
  {static} -double _defaultSelectionOverlayRadius
  +Widget build()
}

"cupertino::picker::CupertinoPickerDefaultSelectionOverlay" o-- "dart::ui::Color"
"widgets::framework::StatelessWidget" <|-- "cupertino::picker::CupertinoPickerDefaultSelectionOverlay"

class "cupertino::picker::_CupertinoPickerSemantics" {
  +FixedExtentScrollController scrollController
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"cupertino::picker::_CupertinoPickerSemantics" o-- "widgets::list_wheel_scroll_view::FixedExtentScrollController"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "cupertino::picker::_CupertinoPickerSemantics"

class "cupertino::picker::_RenderCupertinoPickerSemantics" {
  -FixedExtentScrollController _controller
  -TextDirection _textDirection
  -int _currentIndex
  +FixedExtentScrollController controller
  +TextDirection textDirection
  -void _updateController()
  -void _handleIncrease()
  -void _handleDecrease()
  -void _handleScrollUpdate()
  +void describeSemanticsConfiguration()
  +void assembleSemanticsNode()
  +void dispose()
}

"cupertino::picker::_RenderCupertinoPickerSemantics" o-- "widgets::list_wheel_scroll_view::FixedExtentScrollController"
"cupertino::picker::_RenderCupertinoPickerSemantics" o-- "dart::ui::TextDirection"
"rendering::proxy_box::RenderProxyBox" <|-- "cupertino::picker::_RenderCupertinoPickerSemantics"

class "cupertino::context_menu::CupertinoContextMenu" {
  {static} +double kOpenBorderRadius
  {static} +List<BoxShadow> kEndBoxShadow
  {static} +double animationOpensAt
  +Widget Function(BuildContext, Animation<double>) builder
  +Widget? child
  +List<Widget> actions
  +bool enableHapticFeedback
  +Widget Function(BuildContext, Animation<double>, Widget)? previewBuilder
  {static} -Widget _defaultPreviewBuilder()
  +State<CupertinoContextMenu> createState()
}

"cupertino::context_menu::CupertinoContextMenu" o-- "cupertino::context_menu::Widget Function(BuildContext, Animation<double>)"
"cupertino::context_menu::CupertinoContextMenu" o-- "widgets::framework::Widget"
"cupertino::context_menu::CupertinoContextMenu" o-- "cupertino::context_menu::Widget Function(BuildContext, Animation<double>, Widget)"
"widgets::framework::StatefulWidget" <|-- "cupertino::context_menu::CupertinoContextMenu"

class "cupertino::context_menu::_CupertinoContextMenuState" {
  -GlobalKey<State<StatefulWidget>> _childGlobalKey
  -bool _childHidden
  -AnimationController _openController
  -Rect? _decoyChildEndRect
  -OverlayEntry? _lastOverlayEntry
  -_ContextMenuRoute<void>? _route
  -double _midpoint
  -TapGestureRecognizer _tapGestureRecognizer
  -_ContextMenuLocation _contextMenuLocation
  +void initState()
  -void _listenerCallback()
  -void _openContextMenu()
  -void _onDecoyAnimationStatusChange()
  -void _routeAnimationStatusListener()
  -void _onTap()
  -void _onTapCancel()
  -void _onTapUp()
  -void _onTapDown()
  +Widget build()
  +void dispose()
}

"cupertino::context_menu::_CupertinoContextMenuState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"cupertino::context_menu::_CupertinoContextMenuState" o-- "animation::animation_controller::AnimationController"
"cupertino::context_menu::_CupertinoContextMenuState" o-- "dart::ui::Rect"
"cupertino::context_menu::_CupertinoContextMenuState" o-- "widgets::overlay::OverlayEntry"
"cupertino::context_menu::_CupertinoContextMenuState" o-- "cupertino::context_menu::_ContextMenuRoute<void>"
"cupertino::context_menu::_CupertinoContextMenuState" o-- "gestures::tap::TapGestureRecognizer"
"cupertino::context_menu::_CupertinoContextMenuState" o-- "cupertino::context_menu::_ContextMenuLocation"
"widgets::framework::State" <|-- "cupertino::context_menu::_CupertinoContextMenuState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "cupertino::context_menu::_CupertinoContextMenuState"

class "cupertino::context_menu::_DecoyChild" {
  +Rect? beginRect
  +AnimationController controller
  +Rect? endRect
  +Widget? child
  +Widget Function(BuildContext, Animation<double>)? builder
  +_DecoyChildState createState()
}

"cupertino::context_menu::_DecoyChild" o-- "dart::ui::Rect"
"cupertino::context_menu::_DecoyChild" o-- "animation::animation_controller::AnimationController"
"cupertino::context_menu::_DecoyChild" o-- "widgets::framework::Widget"
"cupertino::context_menu::_DecoyChild" o-- "cupertino::context_menu::Widget Function(BuildContext, Animation<double>)"
"widgets::framework::StatefulWidget" <|-- "cupertino::context_menu::_DecoyChild"

class "cupertino::context_menu::_DecoyChildState" {
  -Animation<Rect?> _rect
  -Animation<Decoration> _boxDecoration
  +void initState()
  -Widget _buildAnimation()
  -Widget _buildBuilder()
  +Widget build()
}

"cupertino::context_menu::_DecoyChildState" o-- "animation::animation::Animation<Rect>"
"cupertino::context_menu::_DecoyChildState" o-- "animation::animation::Animation<Decoration>"
"widgets::framework::State" <|-- "cupertino::context_menu::_DecoyChildState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "cupertino::context_menu::_DecoyChildState"

class "cupertino::context_menu::_ContextMenuRoute" {
  {static} -Color _kModalBarrierColor
  -List<Widget> _actions
  -Widget Function(BuildContext, Animation<double>)? _builder
  -GlobalKey<State<StatefulWidget>> _childGlobalKey
  -_ContextMenuLocation _contextMenuLocation
  -bool _externalOffstage
  -bool _internalOffstage
  -Orientation? _lastOrientation
  -Rect _previousChildRect
  -double? _scale
  -GlobalKey<State<StatefulWidget>> _sheetGlobalKey
  {static} -CurveTween _curve
  {static} -CurveTween _curveReverse
  {static} -RectTween _rectTween
  {static} -Animatable<Rect?> _rectAnimatable
  {static} -RectTween _rectTweenReverse
  {static} -Animatable<Rect?> _rectAnimatableReverse
  {static} -RectTween _sheetRectTween
  -Animatable<Rect?> _sheetRectAnimatable
  -Animatable<Rect?> _sheetRectAnimatableReverse
  {static} -Tween<double> _sheetScaleTween
  {static} -Animatable<double> _sheetScaleAnimatable
  {static} -Animatable<double> _sheetScaleAnimatableReverse
  -Tween<double> _opacityTween
  -Animation<double> _sheetOpacity
  +String? barrierLabel
  +Color barrierColor
  +bool barrierDismissible
  +bool semanticsDismissible
  +Duration transitionDuration
  +bool offstage
  {static} -Rect _getScaledRect()
  {static} +AlignmentDirectional getSheetAlignment()
  {static} -Rect _getSheetRectBegin()
  -void _onDismiss()
  -void _updateTweenRects()
  -void _setOffstageInternally()
  +bool didPop()
  +TickerFuture didPush()
  +Animation<double> createAnimation()
  +Widget buildPage()
  +Widget buildTransitions()
}

"cupertino::context_menu::_ContextMenuRoute" o-- "dart::ui::Color"
"cupertino::context_menu::_ContextMenuRoute" o-- "cupertino::context_menu::Widget Function(BuildContext, Animation<double>)"
"cupertino::context_menu::_ContextMenuRoute" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"cupertino::context_menu::_ContextMenuRoute" o-- "cupertino::context_menu::_ContextMenuLocation"
"cupertino::context_menu::_ContextMenuRoute" o-- "widgets::media_query::Orientation"
"cupertino::context_menu::_ContextMenuRoute" o-- "dart::ui::Rect"
"cupertino::context_menu::_ContextMenuRoute" o-- "animation::tween::CurveTween"
"cupertino::context_menu::_ContextMenuRoute" o-- "animation::tween::RectTween"
"cupertino::context_menu::_ContextMenuRoute" o-- "animation::tween::Animatable<Rect>"
"cupertino::context_menu::_ContextMenuRoute" o-- "animation::tween::Tween<double>"
"cupertino::context_menu::_ContextMenuRoute" o-- "animation::tween::Animatable<double>"
"cupertino::context_menu::_ContextMenuRoute" o-- "animation::animation::Animation<double>"
"widgets::routes::PopupRoute" <|-- "cupertino::context_menu::_ContextMenuRoute"

class "cupertino::context_menu::_ContextMenuRouteStatic" {
  +List<Widget>? actions
  +Widget child
  +GlobalKey<State<StatefulWidget>>? childGlobalKey
  +_ContextMenuLocation contextMenuLocation
  +void Function(BuildContext, double, double)? onDismiss
  +Orientation orientation
  +GlobalKey<State<StatefulWidget>>? sheetGlobalKey
  +_ContextMenuRouteStaticState createState()
}

"cupertino::context_menu::_ContextMenuRouteStatic" o-- "widgets::framework::Widget"
"cupertino::context_menu::_ContextMenuRouteStatic" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"cupertino::context_menu::_ContextMenuRouteStatic" o-- "cupertino::context_menu::_ContextMenuLocation"
"cupertino::context_menu::_ContextMenuRouteStatic" o-- "cupertino::context_menu::void Function(BuildContext, double, double)"
"cupertino::context_menu::_ContextMenuRouteStatic" o-- "widgets::media_query::Orientation"
"widgets::framework::StatefulWidget" <|-- "cupertino::context_menu::_ContextMenuRouteStatic"

class "cupertino::context_menu::_ContextMenuRouteStaticState" {
  {static} -double _kMinScale
  {static} -double _kSheetScaleThreshold
  {static} -double _kPadding
  {static} -double _kDamping
  {static} -Duration _kMoveControllerDuration
  -Offset _dragOffset
  -double _lastScale
  -AnimationController _moveController
  -AnimationController _sheetController
  -Animation<Offset> _moveAnimation
  -Animation<double> _sheetScaleAnimation
  -Animation<double> _sheetOpacityAnimation
  {static} -double _getScale()
  -void _onPanStart()
  -void _onPanUpdate()
  -void _onPanEnd()
  -void _moveListener()
  -void _flingStatusListener()
  -Alignment _getChildAlignment()
  -void _setDragOffset()
  -List<Widget> _getChildren()
  -Widget _buildSheetAnimation()
  -Widget _buildChildAnimation()
  -Widget _buildAnimation()
  +void initState()
  +void dispose()
  +Widget build()
}

"cupertino::context_menu::_ContextMenuRouteStaticState" o-- "dart::ui::Offset"
"cupertino::context_menu::_ContextMenuRouteStaticState" o-- "animation::animation_controller::AnimationController"
"cupertino::context_menu::_ContextMenuRouteStaticState" o-- "animation::animation::Animation<Offset>"
"cupertino::context_menu::_ContextMenuRouteStaticState" o-- "animation::animation::Animation<double>"
"widgets::framework::State" <|-- "cupertino::context_menu::_ContextMenuRouteStaticState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "cupertino::context_menu::_ContextMenuRouteStaticState"

class "cupertino::context_menu::_ContextMenuSheet" {
  +List<Widget> actions
  -_ContextMenuLocation _contextMenuLocation
  -Orientation _orientation
  {static} -double _kMenuWidth
  +List<Widget> getChildren()
  +Widget build()
}

"cupertino::context_menu::_ContextMenuSheet" o-- "cupertino::context_menu::_ContextMenuLocation"
"cupertino::context_menu::_ContextMenuSheet" o-- "widgets::media_query::Orientation"
"widgets::framework::StatelessWidget" <|-- "cupertino::context_menu::_ContextMenuSheet"

class "cupertino::context_menu::_ContextMenuLocation" {
  +int index
  {static} +List<_ContextMenuLocation> values
  {static} +_ContextMenuLocation center
  {static} +_ContextMenuLocation left
  {static} +_ContextMenuLocation right
}

"cupertino::context_menu::_ContextMenuLocation" o-- "cupertino::context_menu::_ContextMenuLocation"
"dart::core::Enum" <|-- "cupertino::context_menu::_ContextMenuLocation"

class "cupertino::route::CupertinoPageRoute" {
  +Widget Function(BuildContext) builder
  +String? title
  +bool maintainState
  +String debugLabel
  +Widget buildContent()
}

"cupertino::route::CupertinoPageRoute" o-- "widgets::framework::Widget Function(BuildContext)"
"widgets::pages::PageRoute" <|-- "cupertino::route::CupertinoPageRoute"
"cupertino::route::CupertinoRouteTransitionMixin" <|-- "cupertino::route::CupertinoPageRoute"

class "cupertino::route::_PageBasedCupertinoPageRoute" {
  -CupertinoPage<T> _page
  +String? title
  +bool maintainState
  +bool fullscreenDialog
  +String debugLabel
  +Widget buildContent()
}

"cupertino::route::_PageBasedCupertinoPageRoute" o-- "cupertino::route::CupertinoPage<T>"
"widgets::pages::PageRoute" <|-- "cupertino::route::_PageBasedCupertinoPageRoute"
"cupertino::route::CupertinoRouteTransitionMixin" <|-- "cupertino::route::_PageBasedCupertinoPageRoute"

class "cupertino::route::CupertinoPage" {
  +Widget child
  +String? title
  +bool maintainState
  +bool fullscreenDialog
  +bool allowSnapshotting
  +Route<T> createRoute()
}

"cupertino::route::CupertinoPage" o-- "widgets::framework::Widget"
"widgets::navigator::Page" <|-- "cupertino::route::CupertinoPage"

class "cupertino::route::CupertinoPageTransition" {
  -Animation<Offset> _primaryPositionAnimation
  -Animation<Offset> _secondaryPositionAnimation
  -Animation<Decoration> _primaryShadowAnimation
  +Widget child
  +Widget build()
}

"cupertino::route::CupertinoPageTransition" o-- "animation::animation::Animation<Offset>"
"cupertino::route::CupertinoPageTransition" o-- "animation::animation::Animation<Decoration>"
"cupertino::route::CupertinoPageTransition" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "cupertino::route::CupertinoPageTransition"

class "cupertino::route::CupertinoFullscreenDialogTransition" {
  -Animation<Offset> _positionAnimation
  -Animation<Offset> _secondaryPositionAnimation
  +Widget child
  +Widget build()
}

"cupertino::route::CupertinoFullscreenDialogTransition" o-- "animation::animation::Animation<Offset>"
"cupertino::route::CupertinoFullscreenDialogTransition" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "cupertino::route::CupertinoFullscreenDialogTransition"

class "cupertino::route::_CupertinoBackGestureDetector" {
  +Widget child
  +bool Function() enabledCallback
  +_CupertinoBackGestureController<T> Function() onStartPopGesture
  +_CupertinoBackGestureDetectorState<T> createState()
}

"cupertino::route::_CupertinoBackGestureDetector" o-- "widgets::framework::Widget"
"cupertino::route::_CupertinoBackGestureDetector" o-- "foundation::basic_types::bool Function()"
"cupertino::route::_CupertinoBackGestureDetector" o-- "foundation::basic_types::_CupertinoBackGestureController<T> Function()"
"widgets::framework::StatefulWidget" <|-- "cupertino::route::_CupertinoBackGestureDetector"

class "cupertino::route::_CupertinoBackGestureDetectorState" {
  -_CupertinoBackGestureController<T>? _backGestureController
  -HorizontalDragGestureRecognizer _recognizer
  +void initState()
  +void dispose()
  -void _handleDragStart()
  -void _handleDragUpdate()
  -void _handleDragEnd()
  -void _handleDragCancel()
  -void _handlePointerDown()
  -double _convertToLogical()
  +Widget build()
}

"cupertino::route::_CupertinoBackGestureDetectorState" o-- "cupertino::route::_CupertinoBackGestureController<T>"
"cupertino::route::_CupertinoBackGestureDetectorState" o-- "gestures::monodrag::HorizontalDragGestureRecognizer"
"widgets::framework::State" <|-- "cupertino::route::_CupertinoBackGestureDetectorState"

class "cupertino::route::_CupertinoBackGestureController" {
  +AnimationController controller
  +NavigatorState navigator
  +void dragUpdate()
  +void dragEnd()
}

"cupertino::route::_CupertinoBackGestureController" o-- "animation::animation_controller::AnimationController"
"cupertino::route::_CupertinoBackGestureController" o-- "widgets::navigator::NavigatorState"

class "cupertino::route::_CupertinoEdgeShadowDecoration" {
  {static} +DecorationTween kTween
  -List<Color>? _colors
  +int hashCode
  {static} +_CupertinoEdgeShadowDecoration? lerp()
  +_CupertinoEdgeShadowDecoration lerpFrom()
  +_CupertinoEdgeShadowDecoration lerpTo()
  +_CupertinoEdgeShadowPainter createBoxPainter()
  +bool ==()
  +void debugFillProperties()
}

"cupertino::route::_CupertinoEdgeShadowDecoration" o-- "widgets::implicit_animations::DecorationTween"
"painting::decoration::Decoration" <|-- "cupertino::route::_CupertinoEdgeShadowDecoration"

class "cupertino::route::_CupertinoEdgeShadowPainter" {
  -_CupertinoEdgeShadowDecoration _decoration
  +void paint()
}

"cupertino::route::_CupertinoEdgeShadowPainter" o-- "cupertino::route::_CupertinoEdgeShadowDecoration"
"painting::decoration::BoxPainter" <|-- "cupertino::route::_CupertinoEdgeShadowPainter"

class "cupertino::route::CupertinoModalPopupRoute" {
  +Widget Function(BuildContext) builder
  -bool _barrierDismissible
  -bool _semanticsDismissible
  +String barrierLabel
  +Color? barrierColor
  -Animation<double>? _animation
  -Tween<Offset> _offsetTween
  +Offset? anchorPoint
  +bool barrierDismissible
  +bool semanticsDismissible
  +Duration transitionDuration
  +Animation<double> createAnimation()
  +Widget buildPage()
  +Widget buildTransitions()
}

"cupertino::route::CupertinoModalPopupRoute" o-- "widgets::framework::Widget Function(BuildContext)"
"cupertino::route::CupertinoModalPopupRoute" o-- "dart::ui::Color"
"cupertino::route::CupertinoModalPopupRoute" o-- "animation::animation::Animation<double>"
"cupertino::route::CupertinoModalPopupRoute" o-- "animation::tween::Tween<Offset>"
"cupertino::route::CupertinoModalPopupRoute" o-- "dart::ui::Offset"
"widgets::routes::PopupRoute" <|-- "cupertino::route::CupertinoModalPopupRoute"

class "cupertino::route::CupertinoDialogRoute" {
}

"widgets::routes::RawDialogRoute" <|-- "cupertino::route::CupertinoDialogRoute"

abstract class "cupertino::route::CupertinoRouteTransitionMixin" {
  -ValueNotifier<String?>? _previousTitle
  +String? title
  +ValueListenable<String?> previousTitle
  +Duration transitionDuration
  +Color? barrierColor
  +String? barrierLabel
  +bool popGestureInProgress
  +bool popGestureEnabled
  #Widget buildContent()
  +void dispose()
  +void didChangePrevious()
  +bool canTransitionTo()
  {static} +bool isPopGestureInProgress()
  {static} -bool _isPopGestureEnabled()
  +Widget buildPage()
  {static} -_CupertinoBackGestureController<T> _startPopGesture()
  {static} +Widget buildPageTransitions()
  +Widget buildTransitions()
}

"cupertino::route::CupertinoRouteTransitionMixin" o-- "foundation::change_notifier::ValueNotifier<String>"
"cupertino::route::CupertinoRouteTransitionMixin" o-- "foundation::change_notifier::ValueListenable<String>"
"cupertino::route::CupertinoRouteTransitionMixin" o-- "dart::ui::Color"

class "cupertino::thumb_painter::CupertinoThumbPainter" {
  +Color color
  +List<BoxShadow> shadows
  {static} +double radius
  {static} +double extension
  +void paint()
}

"cupertino::thumb_painter::CupertinoThumbPainter" o-- "dart::ui::Color"

class "cupertino::activity_indicator::CupertinoActivityIndicator" {
  +Color? color
  +bool animating
  +double radius
  +double progress
  +State<CupertinoActivityIndicator> createState()
}

"cupertino::activity_indicator::CupertinoActivityIndicator" o-- "dart::ui::Color"
"widgets::framework::StatefulWidget" <|-- "cupertino::activity_indicator::CupertinoActivityIndicator"

class "cupertino::activity_indicator::_CupertinoActivityIndicatorState" {
  -AnimationController _controller
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"cupertino::activity_indicator::_CupertinoActivityIndicatorState" o-- "animation::animation_controller::AnimationController"
"widgets::framework::State" <|-- "cupertino::activity_indicator::_CupertinoActivityIndicatorState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "cupertino::activity_indicator::_CupertinoActivityIndicatorState"

class "cupertino::activity_indicator::_CupertinoActivityIndicatorPainter" {
  +Animation<double> position
  +Color activeColor
  +double radius
  +double progress
  +RRect tickFundamentalRRect
  +void paint()
  +bool shouldRepaint()
}

"cupertino::activity_indicator::_CupertinoActivityIndicatorPainter" o-- "animation::animation::Animation<double>"
"cupertino::activity_indicator::_CupertinoActivityIndicatorPainter" o-- "dart::ui::Color"
"cupertino::activity_indicator::_CupertinoActivityIndicatorPainter" o-- "dart::ui::RRect"
"rendering::custom_paint::CustomPainter" <|-- "cupertino::activity_indicator::_CupertinoActivityIndicatorPainter"

class "cupertino::slider::CupertinoSlider" {
  +double value
  +void Function(double)? onChanged
  +void Function(double)? onChangeStart
  +void Function(double)? onChangeEnd
  +double min
  +double max
  +int? divisions
  +Color? activeColor
  +Color thumbColor
  +State<CupertinoSlider> createState()
  +void debugFillProperties()
}

"cupertino::slider::CupertinoSlider" o-- "foundation::basic_types::void Function(double)"
"cupertino::slider::CupertinoSlider" o-- "dart::ui::Color"
"widgets::framework::StatefulWidget" <|-- "cupertino::slider::CupertinoSlider"

class "cupertino::slider::_CupertinoSliderState" {
  -void _handleChanged()
  -void _handleDragStart()
  -void _handleDragEnd()
  +Widget build()
}

"widgets::framework::State" <|-- "cupertino::slider::_CupertinoSliderState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "cupertino::slider::_CupertinoSliderState"

class "cupertino::slider::_CupertinoSliderRenderObjectWidget" {
  +double value
  +int? divisions
  +Color activeColor
  +Color thumbColor
  +void Function(double)? onChanged
  +void Function(double)? onChangeStart
  +void Function(double)? onChangeEnd
  +TickerProvider vsync
  +_RenderCupertinoSlider createRenderObject()
  +void updateRenderObject()
}

"cupertino::slider::_CupertinoSliderRenderObjectWidget" o-- "dart::ui::Color"
"cupertino::slider::_CupertinoSliderRenderObjectWidget" o-- "foundation::basic_types::void Function(double)"
"cupertino::slider::_CupertinoSliderRenderObjectWidget" o-- "scheduler::ticker::TickerProvider"
"widgets::framework::LeafRenderObjectWidget" <|-- "cupertino::slider::_CupertinoSliderRenderObjectWidget"

class "cupertino::slider::_RenderCupertinoSlider" {
  -double _value
  -int? _divisions
  -Color _activeColor
  -Color _thumbColor
  -Color _trackColor
  -void Function(double)? _onChanged
  +void Function(double)? onChangeStart
  +void Function(double)? onChangeEnd
  -TextDirection _textDirection
  -AnimationController _position
  -HorizontalDragGestureRecognizer _drag
  -double _currentDragValue
  -MouseCursor _cursor
  +void Function(PointerEnterEvent)? onEnter
  +void Function(PointerHoverEvent)? onHover
  +void Function(PointerExitEvent)? onExit
  +double value
  +int? divisions
  +Color activeColor
  +Color thumbColor
  +Color trackColor
  +void Function(double)? onChanged
  +TextDirection textDirection
  -double _discretizedCurrentDragValue
  -double _trackLeft
  -double _trackRight
  -double _thumbCenter
  +bool isInteractive
  -double _semanticActionUnit
  +MouseCursor cursor
  +bool validForMouseTracker
  -void _handleDragStart()
  -void _handleDragUpdate()
  -void _handleDragEnd()
  -void _startInteraction()
  -void _endInteraction()
  +bool hitTestSelf()
  +void handleEvent()
  +void paint()
  +void describeSemanticsConfiguration()
  -void _increaseAction()
  -void _decreaseAction()
}

"cupertino::slider::_RenderCupertinoSlider" o-- "dart::ui::Color"
"cupertino::slider::_RenderCupertinoSlider" o-- "foundation::basic_types::void Function(double)"
"cupertino::slider::_RenderCupertinoSlider" o-- "dart::ui::TextDirection"
"cupertino::slider::_RenderCupertinoSlider" o-- "animation::animation_controller::AnimationController"
"cupertino::slider::_RenderCupertinoSlider" o-- "gestures::monodrag::HorizontalDragGestureRecognizer"
"cupertino::slider::_RenderCupertinoSlider" o-- "services::mouse_cursor::MouseCursor"
"cupertino::slider::_RenderCupertinoSlider" o-- "services::mouse_tracking::void Function(PointerEnterEvent)"
"cupertino::slider::_RenderCupertinoSlider" o-- "services::mouse_tracking::void Function(PointerHoverEvent)"
"cupertino::slider::_RenderCupertinoSlider" o-- "services::mouse_tracking::void Function(PointerExitEvent)"
"rendering::proxy_box::RenderConstrainedBox" <|-- "cupertino::slider::_RenderCupertinoSlider"
"services::mouse_tracking::MouseTrackerAnnotation" <|-- "cupertino::slider::_RenderCupertinoSlider"

class "cupertino::page_scaffold::CupertinoPageScaffold" {
  +ObstructingPreferredSizeWidget? navigationBar
  +Widget child
  +Color? backgroundColor
  +bool resizeToAvoidBottomInset
  +State<CupertinoPageScaffold> createState()
}

"cupertino::page_scaffold::CupertinoPageScaffold" o-- "cupertino::page_scaffold::ObstructingPreferredSizeWidget"
"cupertino::page_scaffold::CupertinoPageScaffold" o-- "widgets::framework::Widget"
"cupertino::page_scaffold::CupertinoPageScaffold" o-- "dart::ui::Color"
"widgets::framework::StatefulWidget" <|-- "cupertino::page_scaffold::CupertinoPageScaffold"

class "cupertino::page_scaffold::_CupertinoPageScaffoldState" {
  -void _handleStatusBarTap()
  +Widget build()
}

"widgets::framework::State" <|-- "cupertino::page_scaffold::_CupertinoPageScaffoldState"

abstract class "cupertino::page_scaffold::ObstructingPreferredSizeWidget" {
  +bool shouldFullyObstruct()
}

"widgets::preferred_size::PreferredSizeWidget" <|-- "cupertino::page_scaffold::ObstructingPreferredSizeWidget"

class "cupertino::list_tile::CupertinoListTile" {
  -_CupertinoListTileType _type
  +Widget title
  +Widget? subtitle
  +Widget? additionalInfo
  +Widget? leading
  +Widget? trailing
  +FutureOr<void> Function()? onTap
  +Color? backgroundColor
  +Color? backgroundColorActivated
  +EdgeInsetsGeometry? padding
  +double leadingSize
  +double leadingToTitle
  +State<CupertinoListTile> createState()
}

"cupertino::list_tile::CupertinoListTile" o-- "cupertino::list_tile::_CupertinoListTileType"
"cupertino::list_tile::CupertinoListTile" o-- "widgets::framework::Widget"
"cupertino::list_tile::CupertinoListTile" o-- "null::FutureOr<void> Function()"
"cupertino::list_tile::CupertinoListTile" o-- "dart::ui::Color"
"cupertino::list_tile::CupertinoListTile" o-- "painting::edge_insets::EdgeInsetsGeometry"
"widgets::framework::StatefulWidget" <|-- "cupertino::list_tile::CupertinoListTile"

class "cupertino::list_tile::_CupertinoListTileState" {
  -bool _tapped
  +Widget build()
}

"widgets::framework::State" <|-- "cupertino::list_tile::_CupertinoListTileState"

class "cupertino::list_tile::CupertinoListTileChevron" {
  +Widget build()
}

"widgets::framework::StatelessWidget" <|-- "cupertino::list_tile::CupertinoListTileChevron"

class "cupertino::list_tile::_CupertinoListTileType" {
  +int index
  {static} +List<_CupertinoListTileType> values
  {static} +_CupertinoListTileType base
  {static} +_CupertinoListTileType notched
}

"cupertino::list_tile::_CupertinoListTileType" o-- "cupertino::list_tile::_CupertinoListTileType"
"dart::core::Enum" <|-- "cupertino::list_tile::_CupertinoListTileType"

class "cupertino::text_selection::_TextSelectionHandlePainter" {
  +Color color
  +void paint()
  +bool shouldRepaint()
}

"cupertino::text_selection::_TextSelectionHandlePainter" o-- "dart::ui::Color"
"rendering::custom_paint::CustomPainter" <|-- "cupertino::text_selection::_TextSelectionHandlePainter"

class "cupertino::text_selection::CupertinoTextSelectionHandleControls" {
}

"cupertino::text_selection::CupertinoTextSelectionControls" <|-- "cupertino::text_selection::CupertinoTextSelectionHandleControls"

class "cupertino::text_selection::CupertinoTextSelectionControls" {
  +Size getHandleSize()
  +Widget buildToolbar()
  +Widget buildHandle()
  +Offset getHandleAnchor()
}

"widgets::text_selection::TextSelectionControls" <|-- "cupertino::text_selection::CupertinoTextSelectionControls"

class "cupertino::text_selection::_CupertinoTextSelectionControlsToolbar" {
  +ValueListenable<ClipboardStatus>? clipboardStatus
  +List<dynamic> endpoints
  +Rect globalEditableRegion
  +void Function()? handleCopy
  +void Function()? handleCut
  +void Function()? handlePaste
  +void Function()? handleSelectAll
  +Offset selectionMidpoint
  +double textLineHeight
  +_CupertinoTextSelectionControlsToolbarState createState()
}

"cupertino::text_selection::_CupertinoTextSelectionControlsToolbar" o-- "foundation::change_notifier::ValueListenable<ClipboardStatus>"
"cupertino::text_selection::_CupertinoTextSelectionControlsToolbar" o-- "dart::ui::Rect"
"cupertino::text_selection::_CupertinoTextSelectionControlsToolbar" o-- "dart::ui::void Function()"
"cupertino::text_selection::_CupertinoTextSelectionControlsToolbar" o-- "dart::ui::Offset"
"widgets::framework::StatefulWidget" <|-- "cupertino::text_selection::_CupertinoTextSelectionControlsToolbar"

class "cupertino::text_selection::_CupertinoTextSelectionControlsToolbarState" {
  -void _onChangedClipboardStatus()
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"widgets::framework::State" <|-- "cupertino::text_selection::_CupertinoTextSelectionControlsToolbarState"

class "cupertino::list_section::CupertinoListSection" {
  +CupertinoListSectionType type
  +Widget? header
  +Widget? footer
  +EdgeInsetsGeometry margin
  +List<Widget>? children
  +BoxDecoration? decoration
  +Color backgroundColor
  +Clip clipBehavior
  +double dividerMargin
  +double additionalDividerMargin
  +double? topMargin
  +Color? separatorColor
  +Widget build()
}

"cupertino::list_section::CupertinoListSection" o-- "cupertino::list_section::CupertinoListSectionType"
"cupertino::list_section::CupertinoListSection" o-- "widgets::framework::Widget"
"cupertino::list_section::CupertinoListSection" o-- "painting::edge_insets::EdgeInsetsGeometry"
"cupertino::list_section::CupertinoListSection" o-- "painting::box_decoration::BoxDecoration"
"cupertino::list_section::CupertinoListSection" o-- "dart::ui::Color"
"cupertino::list_section::CupertinoListSection" o-- "dart::ui::Clip"
"widgets::framework::StatelessWidget" <|-- "cupertino::list_section::CupertinoListSection"

class "cupertino::list_section::CupertinoListSectionType" {
  +int index
  {static} +List<CupertinoListSectionType> values
  {static} +CupertinoListSectionType base
  {static} +CupertinoListSectionType insetGrouped
}

"cupertino::list_section::CupertinoListSectionType" o-- "cupertino::list_section::CupertinoListSectionType"
"dart::core::Enum" <|-- "cupertino::list_section::CupertinoListSectionType"

class "cupertino::adaptive_text_selection_toolbar::CupertinoAdaptiveTextSelectionToolbar" {
  +dynamic anchors
  +List<Widget>? children
  +List<dynamic>? buttonItems
  {static} +Iterable<Widget> getAdaptiveButtons()
  +Widget build()
}

"widgets::framework::StatelessWidget" <|-- "cupertino::adaptive_text_selection_toolbar::CupertinoAdaptiveTextSelectionToolbar"

class "cupertino::interface_level::CupertinoUserInterfaceLevel" {
  -CupertinoUserInterfaceLevelData _data
  +bool updateShouldNotify()
  {static} +CupertinoUserInterfaceLevelData of()
  {static} +CupertinoUserInterfaceLevelData? maybeOf()
  +void debugFillProperties()
}

"cupertino::interface_level::CupertinoUserInterfaceLevel" o-- "cupertino::interface_level::CupertinoUserInterfaceLevelData"
"widgets::framework::InheritedWidget" <|-- "cupertino::interface_level::CupertinoUserInterfaceLevel"

class "cupertino::interface_level::CupertinoUserInterfaceLevelData" {
  +int index
  {static} +List<CupertinoUserInterfaceLevelData> values
  {static} +CupertinoUserInterfaceLevelData base
  {static} +CupertinoUserInterfaceLevelData elevated
}

"cupertino::interface_level::CupertinoUserInterfaceLevelData" o-- "cupertino::interface_level::CupertinoUserInterfaceLevelData"
"dart::core::Enum" <|-- "cupertino::interface_level::CupertinoUserInterfaceLevelData"

class "cupertino::form_section::CupertinoFormSection" {
  -CupertinoListSectionType _type
  +Widget? header
  +Widget? footer
  +EdgeInsetsGeometry margin
  +List<Widget> children
  +BoxDecoration? decoration
  +Color backgroundColor
  +Clip clipBehavior
  +Widget build()
}

"cupertino::form_section::CupertinoFormSection" o-- "cupertino::list_section::CupertinoListSectionType"
"cupertino::form_section::CupertinoFormSection" o-- "widgets::framework::Widget"
"cupertino::form_section::CupertinoFormSection" o-- "painting::edge_insets::EdgeInsetsGeometry"
"cupertino::form_section::CupertinoFormSection" o-- "painting::box_decoration::BoxDecoration"
"cupertino::form_section::CupertinoFormSection" o-- "dart::ui::Color"
"cupertino::form_section::CupertinoFormSection" o-- "dart::ui::Clip"
"widgets::framework::StatelessWidget" <|-- "cupertino::form_section::CupertinoFormSection"

class "cupertino::desktop_text_selection::_CupertinoDesktopTextSelectionHandleControls" {
}

"cupertino::desktop_text_selection::CupertinoDesktopTextSelectionControls" <|-- "cupertino::desktop_text_selection::_CupertinoDesktopTextSelectionHandleControls"

class "cupertino::desktop_text_selection::CupertinoDesktopTextSelectionControls" {
  +Size getHandleSize()
  +Widget buildToolbar()
  +Widget buildHandle()
  +Offset getHandleAnchor()
  +void handleSelectAll()
}

"widgets::text_selection::TextSelectionControls" <|-- "cupertino::desktop_text_selection::CupertinoDesktopTextSelectionControls"

class "cupertino::desktop_text_selection::_CupertinoDesktopTextSelectionControlsToolbar" {
  +ValueListenable<ClipboardStatus>? clipboardStatus
  +List<dynamic> endpoints
  +Rect globalEditableRegion
  +void Function()? handleCopy
  +void Function()? handleCut
  +void Function()? handlePaste
  +void Function()? handleSelectAll
  +Offset? lastSecondaryTapDownPosition
  +Offset selectionMidpoint
  +double textLineHeight
  +_CupertinoDesktopTextSelectionControlsToolbarState createState()
}

"cupertino::desktop_text_selection::_CupertinoDesktopTextSelectionControlsToolbar" o-- "foundation::change_notifier::ValueListenable<ClipboardStatus>"
"cupertino::desktop_text_selection::_CupertinoDesktopTextSelectionControlsToolbar" o-- "dart::ui::Rect"
"cupertino::desktop_text_selection::_CupertinoDesktopTextSelectionControlsToolbar" o-- "dart::ui::void Function()"
"cupertino::desktop_text_selection::_CupertinoDesktopTextSelectionControlsToolbar" o-- "dart::ui::Offset"
"widgets::framework::StatefulWidget" <|-- "cupertino::desktop_text_selection::_CupertinoDesktopTextSelectionControlsToolbar"

class "cupertino::desktop_text_selection::_CupertinoDesktopTextSelectionControlsToolbarState" {
  -void _onChangedClipboardStatus()
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"widgets::framework::State" <|-- "cupertino::desktop_text_selection::_CupertinoDesktopTextSelectionControlsToolbarState"

class "cupertino::text_form_field_row::CupertinoTextFormFieldRow" {
  +Widget? prefix
  +EdgeInsetsGeometry? padding
  +TextEditingController? controller
  +void Function(String)? onChanged
  {static} -Widget _defaultContextMenuBuilder()
  +FormFieldState<String> createState()
}

"cupertino::text_form_field_row::CupertinoTextFormFieldRow" o-- "widgets::framework::Widget"
"cupertino::text_form_field_row::CupertinoTextFormFieldRow" o-- "painting::edge_insets::EdgeInsetsGeometry"
"cupertino::text_form_field_row::CupertinoTextFormFieldRow" o-- "widgets::editable_text::TextEditingController"
"cupertino::text_form_field_row::CupertinoTextFormFieldRow" o-- "foundation::basic_types::void Function(String)"
"widgets::form::FormField" <|-- "cupertino::text_form_field_row::CupertinoTextFormFieldRow"

class "cupertino::text_form_field_row::_CupertinoTextFormFieldRowState" {
  -TextEditingController? _controller
  -TextEditingController? _effectiveController
  -CupertinoTextFormFieldRow _cupertinoTextFormFieldRow
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +void didChange()
  +void reset()
  -void _handleControllerChanged()
}

"cupertino::text_form_field_row::_CupertinoTextFormFieldRowState" o-- "widgets::editable_text::TextEditingController"
"cupertino::text_form_field_row::_CupertinoTextFormFieldRowState" o-- "cupertino::text_form_field_row::CupertinoTextFormFieldRow"
"widgets::form::FormFieldState" <|-- "cupertino::text_form_field_row::_CupertinoTextFormFieldRowState"

class "cupertino::magnifier::CupertinoTextMagnifier" {
  +Curve animationCurve
  +dynamic controller
  +double dragResistance
  +double hideBelowThreshold
  +double horizontalScreenEdgePadding
  +ValueNotifier<dynamic> magnifierInfo
  {static} -Duration _kDragAnimationDuration
  +State<CupertinoTextMagnifier> createState()
}

"cupertino::magnifier::CupertinoTextMagnifier" o-- "animation::curves::Curve"
"cupertino::magnifier::CupertinoTextMagnifier" o-- "foundation::change_notifier::ValueNotifier<dynamic>"
"widgets::framework::StatefulWidget" <|-- "cupertino::magnifier::CupertinoTextMagnifier"

class "cupertino::magnifier::_CupertinoTextMagnifierState" {
  -Offset _currentAdjustedMagnifierPosition
  -double _verticalFocalPointAdjustment
  -AnimationController _ioAnimationController
  -Animation<double> _ioAnimation
  +void initState()
  +void dispose()
  +void didUpdateWidget()
  +void didChangeDependencies()
  -void _determineMagnifierPositionAndFocalPoint()
  +Widget build()
}

"cupertino::magnifier::_CupertinoTextMagnifierState" o-- "dart::ui::Offset"
"cupertino::magnifier::_CupertinoTextMagnifierState" o-- "animation::animation_controller::AnimationController"
"cupertino::magnifier::_CupertinoTextMagnifierState" o-- "animation::animation::Animation<double>"
"widgets::framework::State" <|-- "cupertino::magnifier::_CupertinoTextMagnifierState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "cupertino::magnifier::_CupertinoTextMagnifierState"

class "cupertino::magnifier::CupertinoMagnifier" {
  +List<BoxShadow> shadows
  +BorderSide borderSide
  {static} +double kMagnifierAboveFocalPoint
  {static} +Size kDefaultSize
  {static} -Duration _kInOutAnimationDuration
  +Size size
  +BorderRadius borderRadius
  +Animation<double>? inOutAnimation
  +Offset additionalFocalPointOffset
  +Widget build()
}

"cupertino::magnifier::CupertinoMagnifier" o-- "painting::borders::BorderSide"
"cupertino::magnifier::CupertinoMagnifier" o-- "dart::ui::Size"
"cupertino::magnifier::CupertinoMagnifier" o-- "painting::border_radius::BorderRadius"
"cupertino::magnifier::CupertinoMagnifier" o-- "animation::animation::Animation<double>"
"cupertino::magnifier::CupertinoMagnifier" o-- "dart::ui::Offset"
"widgets::framework::StatelessWidget" <|-- "cupertino::magnifier::CupertinoMagnifier"

class "cupertino::context_menu_action::CupertinoContextMenuAction" {
  +Widget child
  +bool isDefaultAction
  +bool isDestructiveAction
  +void Function()? onPressed
  +IconData? trailingIcon
  +State<CupertinoContextMenuAction> createState()
}

"cupertino::context_menu_action::CupertinoContextMenuAction" o-- "widgets::framework::Widget"
"cupertino::context_menu_action::CupertinoContextMenuAction" o-- "dart::ui::void Function()"
"cupertino::context_menu_action::CupertinoContextMenuAction" o-- "widgets::icon_data::IconData"
"widgets::framework::StatefulWidget" <|-- "cupertino::context_menu_action::CupertinoContextMenuAction"

class "cupertino::context_menu_action::_CupertinoContextMenuActionState" {
  {static} -Color _kBackgroundColor
  {static} -Color _kBackgroundColorPressed
  {static} -double _kButtonHeight
  {static} -TextStyle _kActionSheetActionStyle
  -GlobalKey<State<StatefulWidget>> _globalKey
  -bool _isPressed
  -TextStyle _textStyle
  +void onTapDown()
  +void onTapUp()
  +void onTapCancel()
  +Widget build()
}

"cupertino::context_menu_action::_CupertinoContextMenuActionState" o-- "dart::ui::Color"
"cupertino::context_menu_action::_CupertinoContextMenuActionState" o-- "painting::text_style::TextStyle"
"cupertino::context_menu_action::_CupertinoContextMenuActionState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::framework::State" <|-- "cupertino::context_menu_action::_CupertinoContextMenuActionState"

class "cupertino::switch::CupertinoSwitch" {
  +bool value
  +void Function(bool)? onChanged
  +Color? activeColor
  +Color? trackColor
  +Color? thumbColor
  +Color? focusColor
  +Color? onLabelColor
  +Color? offLabelColor
  +FocusNode? focusNode
  +void Function(bool)? onFocusChange
  +bool autofocus
  +bool? applyTheme
  +DragStartBehavior dragStartBehavior
  +State<CupertinoSwitch> createState()
  +void debugFillProperties()
}

"cupertino::switch::CupertinoSwitch" o-- "foundation::basic_types::void Function(bool)"
"cupertino::switch::CupertinoSwitch" o-- "dart::ui::Color"
"cupertino::switch::CupertinoSwitch" o-- "widgets::focus_manager::FocusNode"
"cupertino::switch::CupertinoSwitch" o-- "gestures::recognizer::DragStartBehavior"
"widgets::framework::StatefulWidget" <|-- "cupertino::switch::CupertinoSwitch"

class "cupertino::switch::_CupertinoSwitchState" {
  -TapGestureRecognizer _tap
  -HorizontalDragGestureRecognizer _drag
  -AnimationController _positionController
  +CurvedAnimation position
  -AnimationController _reactionController
  -Animation<double> _reaction
  +bool isFocused
  -Map<Type, Action<Intent>> _actionMap
  +bool needsPositionAnimation
  +bool isInteractive
  +void initState()
  +void didUpdateWidget()
  -void _resumePositionAnimation()
  -void _handleTapDown()
  -void _handleTap()
  -void _handleTapUp()
  -void _handleTapCancel()
  -void _handleDragStart()
  -void _handleDragUpdate()
  -void _handleDragEnd()
  -void _emitVibration()
  -void _onShowFocusHighlight()
  +Widget build()
  +void dispose()
}

"cupertino::switch::_CupertinoSwitchState" o-- "gestures::tap::TapGestureRecognizer"
"cupertino::switch::_CupertinoSwitchState" o-- "gestures::monodrag::HorizontalDragGestureRecognizer"
"cupertino::switch::_CupertinoSwitchState" o-- "animation::animation_controller::AnimationController"
"cupertino::switch::_CupertinoSwitchState" o-- "animation::animations::CurvedAnimation"
"cupertino::switch::_CupertinoSwitchState" o-- "animation::animation::Animation<double>"
"widgets::framework::State" <|-- "cupertino::switch::_CupertinoSwitchState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "cupertino::switch::_CupertinoSwitchState"

class "cupertino::switch::_CupertinoSwitchRenderObjectWidget" {
  +bool value
  +Color activeColor
  +Color trackColor
  +Color thumbColor
  +Color focusColor
  +void Function(bool)? onChanged
  +_CupertinoSwitchState state
  +TextDirection textDirection
  +bool isFocused
  +dynamic onOffLabelColors
  +dynamic ()
  +dynamic ?()
  +_RenderCupertinoSwitch createRenderObject()
  +void updateRenderObject()
}

"cupertino::switch::_CupertinoSwitchRenderObjectWidget" o-- "dart::ui::Color"
"cupertino::switch::_CupertinoSwitchRenderObjectWidget" o-- "foundation::basic_types::void Function(bool)"
"cupertino::switch::_CupertinoSwitchRenderObjectWidget" o-- "cupertino::switch::_CupertinoSwitchState"
"cupertino::switch::_CupertinoSwitchRenderObjectWidget" o-- "dart::ui::TextDirection"
"widgets::framework::LeafRenderObjectWidget" <|-- "cupertino::switch::_CupertinoSwitchRenderObjectWidget"

class "cupertino::switch::_RenderCupertinoSwitch" {
  -_CupertinoSwitchState _state
  -bool _value
  -Color _activeColor
  -Color _trackColor
  -CupertinoThumbPainter _thumbPainter
  -Color _focusColor
  -void Function(bool)? _onChanged
  -TextDirection _textDirection
  -bool _isFocused
  -dynamic _onOffLabelColors
  -LayerHandle<ClipRRectLayer> _clipRRectLayer
  +bool value
  +Color activeColor
  +Color trackColor
  +Color thumbColor
  +Color focusColor
  +void Function(bool)? onChanged
  +TextDirection textDirection
  +bool isFocused
  +dynamic onOffLabelColors
  +bool isInteractive
  +dynamic ()
  +dynamic ?()
  +dynamic ()
  +dynamic ?()
  +bool hitTestSelf()
  +void handleEvent()
  +void describeSemanticsConfiguration()
  +void paint()
  +void dispose()
  +void debugFillProperties()
}

"cupertino::switch::_RenderCupertinoSwitch" o-- "cupertino::switch::_CupertinoSwitchState"
"cupertino::switch::_RenderCupertinoSwitch" o-- "dart::ui::Color"
"cupertino::switch::_RenderCupertinoSwitch" o-- "cupertino::thumb_painter::CupertinoThumbPainter"
"cupertino::switch::_RenderCupertinoSwitch" o-- "foundation::basic_types::void Function(bool)"
"cupertino::switch::_RenderCupertinoSwitch" o-- "dart::ui::TextDirection"
"cupertino::switch::_RenderCupertinoSwitch" o-- "rendering::layer::LayerHandle<ClipRRectLayer>"
"rendering::proxy_box::RenderConstrainedBox" <|-- "cupertino::switch::_RenderCupertinoSwitch"

class "cupertino::scrollbar::CupertinoScrollbar" {
  {static} +double defaultThickness
  {static} +double defaultThicknessWhileDragging
  {static} +Radius defaultRadius
  {static} +Radius defaultRadiusWhileDragging
  +double thicknessWhileDragging
  +Radius radiusWhileDragging
  +RawScrollbarState<CupertinoScrollbar> createState()
}

"cupertino::scrollbar::CupertinoScrollbar" o-- "dart::ui::Radius"
"widgets::scrollbar::RawScrollbar" <|-- "cupertino::scrollbar::CupertinoScrollbar"

class "cupertino::scrollbar::_CupertinoScrollbarState" {
  -AnimationController _thicknessAnimationController
  -double _pressStartAxisPosition
  -double _thickness
  -Radius _radius
  +void initState()
  +void updateScrollbarPainter()
  +void handleThumbPressStart()
  +void handleThumbPress()
  +void handleThumbPressEnd()
  +void dispose()
}

"cupertino::scrollbar::_CupertinoScrollbarState" o-- "animation::animation_controller::AnimationController"
"cupertino::scrollbar::_CupertinoScrollbarState" o-- "dart::ui::Radius"
"widgets::scrollbar::RawScrollbarState" <|-- "cupertino::scrollbar::_CupertinoScrollbarState"

class "cupertino::app::CupertinoApp" {
  +GlobalKey<NavigatorState>? navigatorKey
  +Widget? home
  +CupertinoThemeData? theme
  +Map<String, Widget Function(BuildContext)>? routes
  +String? initialRoute
  +Route<dynamic>? Function(RouteSettings)? onGenerateRoute
  +List<Route<dynamic>> Function(String)? onGenerateInitialRoutes
  +Route<dynamic>? Function(RouteSettings)? onUnknownRoute
  +bool Function(dynamic)? onNavigationNotification
  +List<NavigatorObserver>? navigatorObservers
  +RouteInformationProvider? routeInformationProvider
  +RouteInformationParser<Object>? routeInformationParser
  +RouterDelegate<Object>? routerDelegate
  +BackButtonDispatcher? backButtonDispatcher
  +RouterConfig<Object>? routerConfig
  +Widget Function(BuildContext, Widget?)? builder
  +String title
  +String Function(BuildContext)? onGenerateTitle
  +Color? color
  +Locale? locale
  +Iterable<LocalizationsDelegate<dynamic>>? localizationsDelegates
  +Locale? Function(List<Locale>?, Iterable<Locale>)? localeListResolutionCallback
  +Locale? Function(Locale?, Iterable<Locale>)? localeResolutionCallback
  +Iterable<Locale> supportedLocales
  +bool showPerformanceOverlay
  +bool checkerboardRasterCacheImages
  +bool checkerboardOffscreenLayers
  +bool showSemanticsDebugger
  +bool debugShowCheckedModeBanner
  +Map<ShortcutActivator, Intent>? shortcuts
  +Map<Type, Action<Intent>>? actions
  +String? restorationScopeId
  +ScrollBehavior? scrollBehavior
  +bool useInheritedMediaQuery
  +State<CupertinoApp> createState()
  {static} +HeroController createCupertinoHeroController()
}

"cupertino::app::CupertinoApp" o-- "widgets::framework::GlobalKey<NavigatorState>"
"cupertino::app::CupertinoApp" o-- "widgets::framework::Widget"
"cupertino::app::CupertinoApp" o-- "cupertino::theme::CupertinoThemeData"
"cupertino::app::CupertinoApp" o-- "widgets::navigator::Route<dynamic> Function(RouteSettings)"
"cupertino::app::CupertinoApp" o-- "widgets::app::List<Route<dynamic>> Function(String)"
"cupertino::app::CupertinoApp" o-- "widgets::notification_listener::bool Function(dynamic)"
"cupertino::app::CupertinoApp" o-- "widgets::router::RouteInformationProvider"
"cupertino::app::CupertinoApp" o-- "widgets::router::RouteInformationParser<Object>"
"cupertino::app::CupertinoApp" o-- "widgets::router::RouterDelegate<Object>"
"cupertino::app::CupertinoApp" o-- "widgets::router::BackButtonDispatcher"
"cupertino::app::CupertinoApp" o-- "widgets::router::RouterConfig<Object>"
"cupertino::app::CupertinoApp" o-- "widgets::framework::Widget Function(BuildContext, Widget)"
"cupertino::app::CupertinoApp" o-- "widgets::app::String Function(BuildContext)"
"cupertino::app::CupertinoApp" o-- "dart::ui::Color"
"cupertino::app::CupertinoApp" o-- "dart::ui::Locale"
"cupertino::app::CupertinoApp" o-- "widgets::app::Locale Function(List<Locale>, Iterable<Locale>)"
"cupertino::app::CupertinoApp" o-- "widgets::app::Locale Function(Locale, Iterable<Locale>)"
"cupertino::app::CupertinoApp" o-- "widgets::scroll_configuration::ScrollBehavior"
"widgets::framework::StatefulWidget" <|-- "cupertino::app::CupertinoApp"

class "cupertino::app::CupertinoScrollBehavior" {
  +Widget buildScrollbar()
  +Widget buildOverscrollIndicator()
  +ScrollPhysics getScrollPhysics()
}

"widgets::scroll_configuration::ScrollBehavior" <|-- "cupertino::app::CupertinoScrollBehavior"

class "cupertino::app::_CupertinoAppState" {
  -HeroController _heroController
  -bool _usesRouter
  -Iterable<LocalizationsDelegate<dynamic>> _localizationsDelegates
  +void initState()
  +void dispose()
  -Widget _inspectorSelectButtonBuilder()
  -WidgetsApp _buildWidgetApp()
  +Widget build()
}

"cupertino::app::_CupertinoAppState" o-- "widgets::heroes::HeroController"
"widgets::framework::State" <|-- "cupertino::app::_CupertinoAppState"

abstract class "cupertino::icons::CupertinoIcons" {
  {static} +String iconFont
  {static} +String iconFontPackage
  {static} +IconData left_chevron
  {static} +IconData right_chevron
  {static} +IconData share
  {static} +IconData share_solid
  {static} +IconData book
  {static} +IconData book_solid
  {static} +IconData bookmark
  {static} +IconData bookmark_solid
  {static} +IconData info
  {static} +IconData reply
  {static} +IconData conversation_bubble
  {static} +IconData profile_circled
  {static} +IconData plus_circled
  {static} +IconData minus_circled
  {static} +IconData flag
  {static} +IconData search
  {static} +IconData check_mark
  {static} +IconData check_mark_circled
  {static} +IconData check_mark_circled_solid
  {static} +IconData circle
  {static} +IconData circle_filled
  {static} +IconData back
  {static} +IconData forward
  {static} +IconData home
  {static} +IconData shopping_cart
  {static} +IconData ellipsis
  {static} +IconData phone
  {static} +IconData phone_solid
  {static} +IconData down_arrow
  {static} +IconData up_arrow
  {static} +IconData battery_charging
  {static} +IconData battery_empty
  {static} +IconData battery_full
  {static} +IconData battery_75_percent
  {static} +IconData battery_25_percent
  {static} +IconData bluetooth
  {static} +IconData restart
  {static} +IconData reply_all
  {static} +IconData reply_thick_solid
  {static} +IconData share_up
  {static} +IconData shuffle
  {static} +IconData shuffle_medium
  {static} +IconData shuffle_thick
  {static} +IconData photo_camera
  {static} +IconData photo_camera_solid
  {static} +IconData video_camera
  {static} +IconData video_camera_solid
  {static} +IconData switch_camera
  {static} +IconData switch_camera_solid
  {static} +IconData collections
  {static} +IconData collections_solid
  {static} +IconData folder
  {static} +IconData folder_solid
  {static} +IconData folder_open
  {static} +IconData delete
  {static} +IconData delete_solid
  {static} +IconData delete_simple
  {static} +IconData pen
  {static} +IconData pencil
  {static} +IconData create
  {static} +IconData create_solid
  {static} +IconData refresh
  {static} +IconData refresh_circled
  {static} +IconData refresh_circled_solid
  {static} +IconData refresh_thin
  {static} +IconData refresh_thick
  {static} +IconData refresh_bold
  {static} +IconData clear_thick
  {static} +IconData clear_thick_circled
  {static} +IconData clear
  {static} +IconData clear_circled
  {static} +IconData clear_circled_solid
  {static} +IconData add
  {static} +IconData add_circled
  {static} +IconData add_circled_solid
  {static} +IconData gear
  {static} +IconData gear_solid
  {static} +IconData gear_big
  {static} +IconData settings
  {static} +IconData settings_solid
  {static} +IconData music_note
  {static} +IconData double_music_note
  {static} +IconData play_arrow
  {static} +IconData play_arrow_solid
  {static} +IconData pause
  {static} +IconData pause_solid
  {static} +IconData loop
  {static} +IconData loop_thick
  {static} +IconData volume_down
  {static} +IconData volume_mute
  {static} +IconData volume_off
  {static} +IconData volume_up
  {static} +IconData fullscreen
  {static} +IconData fullscreen_exit
  {static} +IconData mic_off
  {static} +IconData mic
  {static} +IconData mic_solid
  {static} +IconData clock
  {static} +IconData clock_solid
  {static} +IconData time
  {static} +IconData time_solid
  {static} +IconData padlock
  {static} +IconData padlock_solid
  {static} +IconData eye
  {static} +IconData eye_solid
  {static} +IconData person
  {static} +IconData person_solid
  {static} +IconData person_add
  {static} +IconData person_add_solid
  {static} +IconData group
  {static} +IconData group_solid
  {static} +IconData mail
  {static} +IconData mail_solid
  {static} +IconData location
  {static} +IconData location_solid
  {static} +IconData tag
  {static} +IconData tag_solid
  {static} +IconData tags
  {static} +IconData tags_solid
  {static} +IconData bus
  {static} +IconData car
  {static} +IconData car_detailed
  {static} +IconData train_style_one
  {static} +IconData train_style_two
  {static} +IconData paw
  {static} +IconData paw_solid
  {static} +IconData game_controller
  {static} +IconData game_controller_solid
  {static} +IconData lab_flask
  {static} +IconData lab_flask_solid
  {static} +IconData heart
  {static} +IconData heart_solid
  {static} +IconData bell
  {static} +IconData bell_solid
  {static} +IconData news
  {static} +IconData news_solid
  {static} +IconData brightness
  {static} +IconData brightness_solid
  {static} +IconData airplane
  {static} +IconData alarm
  {static} +IconData alarm_fill
  {static} +IconData alt
  {static} +IconData ant
  {static} +IconData ant_circle
  {static} +IconData ant_circle_fill
  {static} +IconData ant_fill
  {static} +IconData antenna_radiowaves_left_right
  {static} +IconData app
  {static} +IconData app_badge
  {static} +IconData app_badge_fill
  {static} +IconData app_fill
  {static} +IconData archivebox
  {static} +IconData archivebox_fill
  {static} +IconData arrow_2_circlepath
  {static} +IconData arrow_2_circlepath_circle
  {static} +IconData arrow_2_circlepath_circle_fill
  {static} +IconData arrow_2_squarepath
  {static} +IconData arrow_3_trianglepath
  {static} +IconData arrow_branch
  {static} +IconData arrow_clockwise
  {static} +IconData arrow_clockwise_circle
  {static} +IconData arrow_clockwise_circle_fill
  {static} +IconData arrow_counterclockwise
  {static} +IconData arrow_counterclockwise_circle
  {static} +IconData arrow_counterclockwise_circle_fill
  {static} +IconData arrow_down
  {static} +IconData arrow_down_circle
  {static} +IconData arrow_down_circle_fill
  {static} +IconData arrow_down_doc
  {static} +IconData arrow_down_doc_fill
  {static} +IconData arrow_down_left
  {static} +IconData arrow_down_left_circle
  {static} +IconData arrow_down_left_circle_fill
  {static} +IconData arrow_down_left_square
  {static} +IconData arrow_down_left_square_fill
  {static} +IconData arrow_down_right
  {static} +IconData arrow_down_right_arrow_up_left
  {static} +IconData arrow_down_right_circle
  {static} +IconData arrow_down_right_circle_fill
  {static} +IconData arrow_down_right_square
  {static} +IconData arrow_down_right_square_fill
  {static} +IconData arrow_down_square
  {static} +IconData arrow_down_square_fill
  {static} +IconData arrow_down_to_line
  {static} +IconData arrow_down_to_line_alt
  {static} +IconData arrow_left
  {static} +IconData arrow_left_circle
  {static} +IconData arrow_left_circle_fill
  {static} +IconData arrow_left_right
  {static} +IconData arrow_left_right_circle
  {static} +IconData arrow_left_right_circle_fill
  {static} +IconData arrow_left_right_square
  {static} +IconData arrow_left_right_square_fill
  {static} +IconData arrow_left_square
  {static} +IconData arrow_left_square_fill
  {static} +IconData arrow_left_to_line
  {static} +IconData arrow_left_to_line_alt
  {static} +IconData arrow_merge
  {static} +IconData arrow_right
  {static} +IconData arrow_right_arrow_left
  {static} +IconData arrow_right_arrow_left_circle
  {static} +IconData arrow_right_arrow_left_circle_fill
  {static} +IconData arrow_right_arrow_left_square
  {static} +IconData arrow_right_arrow_left_square_fill
  {static} +IconData arrow_right_circle
  {static} +IconData arrow_right_circle_fill
  {static} +IconData arrow_right_square
  {static} +IconData arrow_right_square_fill
  {static} +IconData arrow_right_to_line
  {static} +IconData arrow_right_to_line_alt
  {static} +IconData arrow_swap
  {static} +IconData arrow_turn_down_left
  {static} +IconData arrow_turn_down_right
  {static} +IconData arrow_turn_left_down
  {static} +IconData arrow_turn_left_up
  {static} +IconData arrow_turn_right_down
  {static} +IconData arrow_turn_right_up
  {static} +IconData arrow_turn_up_left
  {static} +IconData arrow_turn_up_right
  {static} +IconData arrow_up
  {static} +IconData arrow_up_arrow_down
  {static} +IconData arrow_up_arrow_down_circle
  {static} +IconData arrow_up_arrow_down_circle_fill
  {static} +IconData arrow_up_arrow_down_square
  {static} +IconData arrow_up_arrow_down_square_fill
  {static} +IconData arrow_up_bin
  {static} +IconData arrow_up_bin_fill
  {static} +IconData arrow_up_circle
  {static} +IconData arrow_up_circle_fill
  {static} +IconData arrow_up_doc
  {static} +IconData arrow_up_doc_fill
  {static} +IconData arrow_up_down
  {static} +IconData arrow_up_down_circle
  {static} +IconData arrow_up_down_circle_fill
  {static} +IconData arrow_up_down_square
  {static} +IconData arrow_up_down_square_fill
  {static} +IconData arrow_up_left
  {static} +IconData arrow_up_left_arrow_down_right
  {static} +IconData arrow_up_left_circle
  {static} +IconData arrow_up_left_circle_fill
  {static} +IconData arrow_up_left_square
  {static} +IconData arrow_up_left_square_fill
  {static} +IconData arrow_up_right
  {static} +IconData arrow_up_right_circle
  {static} +IconData arrow_up_right_circle_fill
  {static} +IconData arrow_up_right_diamond
  {static} +IconData arrow_up_right_diamond_fill
  {static} +IconData arrow_up_right_square
  {static} +IconData arrow_up_right_square_fill
  {static} +IconData arrow_up_square
  {static} +IconData arrow_up_square_fill
  {static} +IconData arrow_up_to_line
  {static} +IconData arrow_up_to_line_alt
  {static} +IconData arrow_uturn_down
  {static} +IconData arrow_uturn_down_circle
  {static} +IconData arrow_uturn_down_circle_fill
  {static} +IconData arrow_uturn_down_square
  {static} +IconData arrow_uturn_down_square_fill
  {static} +IconData arrow_uturn_left
  {static} +IconData arrow_uturn_left_circle
  {static} +IconData arrow_uturn_left_circle_fill
  {static} +IconData arrow_uturn_left_square
  {static} +IconData arrow_uturn_left_square_fill
  {static} +IconData arrow_uturn_right
  {static} +IconData arrow_uturn_right_circle
  {static} +IconData arrow_uturn_right_circle_fill
  {static} +IconData arrow_uturn_right_square
  {static} +IconData arrow_uturn_right_square_fill
  {static} +IconData arrow_uturn_up
  {static} +IconData arrow_uturn_up_circle
  {static} +IconData arrow_uturn_up_circle_fill
  {static} +IconData arrow_uturn_up_square
  {static} +IconData arrow_uturn_up_square_fill
  {static} +IconData arrowshape_turn_up_left
  {static} +IconData arrowshape_turn_up_left_2
  {static} +IconData arrowshape_turn_up_left_2_fill
  {static} +IconData arrowshape_turn_up_left_circle
  {static} +IconData arrowshape_turn_up_left_circle_fill
  {static} +IconData arrowshape_turn_up_left_fill
  {static} +IconData arrowshape_turn_up_right
  {static} +IconData arrowshape_turn_up_right_circle
  {static} +IconData arrowshape_turn_up_right_circle_fill
  {static} +IconData arrowshape_turn_up_right_fill
  {static} +IconData arrowtriangle_down
  {static} +IconData arrowtriangle_down_circle
  {static} +IconData arrowtriangle_down_circle_fill
  {static} +IconData arrowtriangle_down_fill
  {static} +IconData arrowtriangle_down_square
  {static} +IconData arrowtriangle_down_square_fill
  {static} +IconData arrowtriangle_left
  {static} +IconData arrowtriangle_left_circle
  {static} +IconData arrowtriangle_left_circle_fill
  {static} +IconData arrowtriangle_left_fill
  {static} +IconData arrowtriangle_left_square
  {static} +IconData arrowtriangle_left_square_fill
  {static} +IconData arrowtriangle_right
  {static} +IconData arrowtriangle_right_circle
  {static} +IconData arrowtriangle_right_circle_fill
  {static} +IconData arrowtriangle_right_fill
  {static} +IconData arrowtriangle_right_square
  {static} +IconData arrowtriangle_right_square_fill
  {static} +IconData arrowtriangle_up
  {static} +IconData arrowtriangle_up_circle
  {static} +IconData arrowtriangle_up_circle_fill
  {static} +IconData arrowtriangle_up_fill
  {static} +IconData arrowtriangle_up_square
  {static} +IconData arrowtriangle_up_square_fill
  {static} +IconData asterisk_circle
  {static} +IconData asterisk_circle_fill
  {static} +IconData at
  {static} +IconData at_badge_minus
  {static} +IconData at_badge_plus
  {static} +IconData at_circle
  {static} +IconData at_circle_fill
  {static} +IconData backward
  {static} +IconData backward_end
  {static} +IconData backward_end_alt
  {static} +IconData backward_end_alt_fill
  {static} +IconData backward_end_fill
  {static} +IconData backward_fill
  {static} +IconData badge_plus_radiowaves_right
  {static} +IconData bag
  {static} +IconData bag_badge_minus
  {static} +IconData bag_badge_plus
  {static} +IconData bag_fill
  {static} +IconData bag_fill_badge_minus
  {static} +IconData bag_fill_badge_plus
  {static} +IconData bandage
  {static} +IconData bandage_fill
  {static} +IconData barcode
  {static} +IconData barcode_viewfinder
  {static} +IconData bars
  {static} +IconData battery_0
  {static} +IconData battery_100
  {static} +IconData battery_25
  {static} +IconData bed_double
  {static} +IconData bed_double_fill
  {static} +IconData bell_circle
  {static} +IconData bell_circle_fill
  {static} +IconData bell_fill
  {static} +IconData bell_slash
  {static} +IconData bell_slash_fill
  {static} +IconData bin_xmark
  {static} +IconData bin_xmark_fill
  {static} +IconData bitcoin
  {static} +IconData bitcoin_circle
  {static} +IconData bitcoin_circle_fill
  {static} +IconData bold
  {static} +IconData bold_italic_underline
  {static} +IconData bold_underline
  {static} +IconData bolt
  {static} +IconData bolt_badge_a
  {static} +IconData bolt_badge_a_fill
  {static} +IconData bolt_circle
  {static} +IconData bolt_circle_fill
  {static} +IconData bolt_fill
  {static} +IconData bolt_horizontal
  {static} +IconData bolt_horizontal_circle
  {static} +IconData bolt_horizontal_circle_fill
  {static} +IconData bolt_horizontal_fill
  {static} +IconData bolt_slash
  {static} +IconData bolt_slash_fill
  {static} +IconData book_circle
  {static} +IconData book_circle_fill
  {static} +IconData book_fill
  {static} +IconData bookmark_fill
  {static} +IconData briefcase
  {static} +IconData briefcase_fill
  {static} +IconData bubble_left
  {static} +IconData bubble_left_bubble_right
  {static} +IconData bubble_left_bubble_right_fill
  {static} +IconData bubble_left_fill
  {static} +IconData bubble_middle_bottom
  {static} +IconData bubble_middle_bottom_fill
  {static} +IconData bubble_middle_top
  {static} +IconData bubble_middle_top_fill
  {static} +IconData bubble_right
  {static} +IconData bubble_right_fill
  {static} +IconData building_2_fill
  {static} +IconData burn
  {static} +IconData burst
  {static} +IconData burst_fill
  {static} +IconData calendar
  {static} +IconData calendar_badge_minus
  {static} +IconData calendar_badge_plus
  {static} +IconData calendar_circle
  {static} +IconData calendar_circle_fill
  {static} +IconData calendar_today
  {static} +IconData camera
  {static} +IconData camera_circle
  {static} +IconData camera_circle_fill
  {static} +IconData camera_fill
  {static} +IconData camera_on_rectangle
  {static} +IconData camera_on_rectangle_fill
  {static} +IconData camera_rotate
  {static} +IconData camera_rotate_fill
  {static} +IconData camera_viewfinder
  {static} +IconData capslock
  {static} +IconData capslock_fill
  {static} +IconData capsule
  {static} +IconData capsule_fill
  {static} +IconData captions_bubble
  {static} +IconData captions_bubble_fill
  {static} +IconData car_fill
  {static} +IconData cart
  {static} +IconData cart_badge_minus
  {static} +IconData cart_badge_plus
  {static} +IconData cart_fill
  {static} +IconData cart_fill_badge_minus
  {static} +IconData cart_fill_badge_plus
  {static} +IconData chart_bar
  {static} +IconData chart_bar_alt_fill
  {static} +IconData chart_bar_circle
  {static} +IconData chart_bar_circle_fill
  {static} +IconData chart_bar_fill
  {static} +IconData chart_bar_square
  {static} +IconData chart_bar_square_fill
  {static} +IconData chart_pie
  {static} +IconData chart_pie_fill
  {static} +IconData chat_bubble
  {static} +IconData chat_bubble_2
  {static} +IconData chat_bubble_2_fill
  {static} +IconData chat_bubble_fill
  {static} +IconData chat_bubble_text
  {static} +IconData chat_bubble_text_fill
  {static} +IconData checkmark
  {static} +IconData checkmark_alt
  {static} +IconData checkmark_alt_circle
  {static} +IconData checkmark_alt_circle_fill
  {static} +IconData checkmark_circle
  {static} +IconData checkmark_circle_fill
  {static} +IconData checkmark_rectangle
  {static} +IconData checkmark_rectangle_fill
  {static} +IconData checkmark_seal
  {static} +IconData checkmark_seal_fill
  {static} +IconData checkmark_shield
  {static} +IconData checkmark_shield_fill
  {static} +IconData checkmark_square
  {static} +IconData checkmark_square_fill
  {static} +IconData chevron_back
  {static} +IconData chevron_compact_down
  {static} +IconData chevron_compact_left
  {static} +IconData chevron_compact_right
  {static} +IconData chevron_compact_up
  {static} +IconData chevron_down
  {static} +IconData chevron_down_circle
  {static} +IconData chevron_down_circle_fill
  {static} +IconData chevron_down_square
  {static} +IconData chevron_down_square_fill
  {static} +IconData chevron_forward
  {static} +IconData chevron_left
  {static} +IconData chevron_left_2
  {static} +IconData chevron_left_circle
  {static} +IconData chevron_left_circle_fill
  {static} +IconData chevron_left_slash_chevron_right
  {static} +IconData chevron_left_square
  {static} +IconData chevron_left_square_fill
  {static} +IconData chevron_right
  {static} +IconData chevron_right_2
  {static} +IconData chevron_right_circle
  {static} +IconData chevron_right_circle_fill
  {static} +IconData chevron_right_square
  {static} +IconData chevron_right_square_fill
  {static} +IconData chevron_up
  {static} +IconData chevron_up_chevron_down
  {static} +IconData chevron_up_circle
  {static} +IconData chevron_up_circle_fill
  {static} +IconData chevron_up_square
  {static} +IconData chevron_up_square_fill
  {static} +IconData circle_bottomthird_split
  {static} +IconData circle_fill
  {static} +IconData circle_grid_3x3
  {static} +IconData circle_grid_3x3_fill
  {static} +IconData circle_grid_hex
  {static} +IconData circle_grid_hex_fill
  {static} +IconData circle_lefthalf_fill
  {static} +IconData circle_righthalf_fill
  {static} +IconData clear_fill
  {static} +IconData clock_fill
  {static} +IconData cloud
  {static} +IconData cloud_bolt
  {static} +IconData cloud_bolt_fill
  {static} +IconData cloud_bolt_rain
  {static} +IconData cloud_bolt_rain_fill
  {static} +IconData cloud_download
  {static} +IconData cloud_download_fill
  {static} +IconData cloud_drizzle
  {static} +IconData cloud_drizzle_fill
  {static} +IconData cloud_fill
  {static} +IconData cloud_fog
  {static} +IconData cloud_fog_fill
  {static} +IconData cloud_hail
  {static} +IconData cloud_hail_fill
  {static} +IconData cloud_heavyrain
  {static} +IconData cloud_heavyrain_fill
  {static} +IconData cloud_moon
  {static} +IconData cloud_moon_bolt
  {static} +IconData cloud_moon_bolt_fill
  {static} +IconData cloud_moon_fill
  {static} +IconData cloud_moon_rain
  {static} +IconData cloud_moon_rain_fill
  {static} +IconData cloud_rain
  {static} +IconData cloud_rain_fill
  {static} +IconData cloud_sleet
  {static} +IconData cloud_sleet_fill
  {static} +IconData cloud_snow
  {static} +IconData cloud_snow_fill
  {static} +IconData cloud_sun
  {static} +IconData cloud_sun_bolt
  {static} +IconData cloud_sun_bolt_fill
  {static} +IconData cloud_sun_fill
  {static} +IconData cloud_sun_rain
  {static} +IconData cloud_sun_rain_fill
  {static} +IconData cloud_upload
  {static} +IconData cloud_upload_fill
  {static} +IconData color_filter
  {static} +IconData color_filter_fill
  {static} +IconData command
  {static} +IconData compass
  {static} +IconData compass_fill
  {static} +IconData control
  {static} +IconData creditcard
  {static} +IconData creditcard_fill
  {static} +IconData crop
  {static} +IconData crop_rotate
  {static} +IconData cube
  {static} +IconData cube_box
  {static} +IconData cube_box_fill
  {static} +IconData cube_fill
  {static} +IconData cursor_rays
  {static} +IconData decrease_indent
  {static} +IconData decrease_quotelevel
  {static} +IconData delete_left
  {static} +IconData delete_left_fill
  {static} +IconData delete_right
  {static} +IconData delete_right_fill
  {static} +IconData desktopcomputer
  {static} +IconData device_desktop
  {static} +IconData device_laptop
  {static} +IconData device_phone_landscape
  {static} +IconData device_phone_portrait
  {static} +IconData dial
  {static} +IconData dial_fill
  {static} +IconData divide
  {static} +IconData divide_circle
  {static} +IconData divide_circle_fill
  {static} +IconData divide_square
  {static} +IconData divide_square_fill
  {static} +IconData doc
  {static} +IconData doc_append
  {static} +IconData doc_chart
  {static} +IconData doc_chart_fill
  {static} +IconData doc_checkmark
  {static} +IconData doc_checkmark_fill
  {static} +IconData doc_circle
  {static} +IconData doc_circle_fill
  {static} +IconData doc_fill
  {static} +IconData doc_on_clipboard
  {static} +IconData doc_on_clipboard_fill
  {static} +IconData doc_on_doc
  {static} +IconData doc_on_doc_fill
  {static} +IconData doc_person
  {static} +IconData doc_person_fill
  {static} +IconData doc_plaintext
  {static} +IconData doc_richtext
  {static} +IconData doc_text
  {static} +IconData doc_text_fill
  {static} +IconData doc_text_search
  {static} +IconData doc_text_viewfinder
  {static} +IconData dot_radiowaves_left_right
  {static} +IconData dot_radiowaves_right
  {static} +IconData dot_square
  {static} +IconData dot_square_fill
  {static} +IconData download_circle
  {static} +IconData download_circle_fill
  {static} +IconData drop
  {static} +IconData drop_fill
  {static} +IconData drop_triangle
  {static} +IconData drop_triangle_fill
  {static} +IconData ear
  {static} +IconData eject
  {static} +IconData eject_fill
  {static} +IconData ellipses_bubble
  {static} +IconData ellipses_bubble_fill
  {static} +IconData ellipsis_circle
  {static} +IconData ellipsis_circle_fill
  {static} +IconData ellipsis_vertical
  {static} +IconData ellipsis_vertical_circle
  {static} +IconData ellipsis_vertical_circle_fill
  {static} +IconData envelope
  {static} +IconData envelope_badge
  {static} +IconData envelope_badge_fill
  {static} +IconData envelope_circle
  {static} +IconData envelope_circle_fill
  {static} +IconData envelope_fill
  {static} +IconData envelope_open
  {static} +IconData envelope_open_fill
  {static} +IconData equal
  {static} +IconData equal_circle
  {static} +IconData equal_circle_fill
  {static} +IconData equal_square
  {static} +IconData equal_square_fill
  {static} +IconData escape
  {static} +IconData exclamationmark
  {static} +IconData exclamationmark_bubble
  {static} +IconData exclamationmark_bubble_fill
  {static} +IconData exclamationmark_circle
  {static} +IconData exclamationmark_circle_fill
  {static} +IconData exclamationmark_octagon
  {static} +IconData exclamationmark_octagon_fill
  {static} +IconData exclamationmark_shield
  {static} +IconData exclamationmark_shield_fill
  {static} +IconData exclamationmark_square
  {static} +IconData exclamationmark_square_fill
  {static} +IconData exclamationmark_triangle
  {static} +IconData exclamationmark_triangle_fill
  {static} +IconData eye_fill
  {static} +IconData eye_slash
  {static} +IconData eye_slash_fill
  {static} +IconData eyedropper
  {static} +IconData eyedropper_full
  {static} +IconData eyedropper_halffull
  {static} +IconData eyeglasses
  {static} +IconData f_cursive
  {static} +IconData f_cursive_circle
  {static} +IconData f_cursive_circle_fill
  {static} +IconData film
  {static} +IconData film_fill
  {static} +IconData flag_circle
  {static} +IconData flag_circle_fill
  {static} +IconData flag_fill
  {static} +IconData flag_slash
  {static} +IconData flag_slash_fill
  {static} +IconData flame
  {static} +IconData flame_fill
  {static} +IconData floppy_disk
  {static} +IconData flowchart
  {static} +IconData flowchart_fill
  {static} +IconData folder_badge_minus
  {static} +IconData folder_badge_person_crop
  {static} +IconData folder_badge_plus
  {static} +IconData folder_circle
  {static} +IconData folder_circle_fill
  {static} +IconData folder_fill
  {static} +IconData folder_fill_badge_minus
  {static} +IconData folder_fill_badge_person_crop
  {static} +IconData folder_fill_badge_plus
  {static} +IconData forward_end
  {static} +IconData forward_end_alt
  {static} +IconData forward_end_alt_fill
  {static} +IconData forward_end_fill
  {static} +IconData forward_fill
  {static} +IconData function
  {static} +IconData fx
  {static} +IconData gamecontroller
  {static} +IconData gamecontroller_alt_fill
  {static} +IconData gamecontroller_fill
  {static} +IconData gauge
  {static} +IconData gauge_badge_minus
  {static} +IconData gauge_badge_plus
  {static} +IconData gear_alt
  {static} +IconData gear_alt_fill
  {static} +IconData gift
  {static} +IconData gift_alt
  {static} +IconData gift_alt_fill
  {static} +IconData gift_fill
  {static} +IconData globe
  {static} +IconData gobackward
  {static} +IconData gobackward_10
  {static} +IconData gobackward_15
  {static} +IconData gobackward_30
  {static} +IconData gobackward_45
  {static} +IconData gobackward_60
  {static} +IconData gobackward_75
  {static} +IconData gobackward_90
  {static} +IconData gobackward_minus
  {static} +IconData goforward
  {static} +IconData goforward_10
  {static} +IconData goforward_15
  {static} +IconData goforward_30
  {static} +IconData goforward_45
  {static} +IconData goforward_60
  {static} +IconData goforward_75
  {static} +IconData goforward_90
  {static} +IconData goforward_plus
  {static} +IconData graph_circle
  {static} +IconData graph_circle_fill
  {static} +IconData graph_square
  {static} +IconData graph_square_fill
  {static} +IconData greaterthan
  {static} +IconData greaterthan_circle
  {static} +IconData greaterthan_circle_fill
  {static} +IconData greaterthan_square
  {static} +IconData greaterthan_square_fill
  {static} +IconData grid
  {static} +IconData grid_circle
  {static} +IconData grid_circle_fill
  {static} +IconData guitars
  {static} +IconData hammer
  {static} +IconData hammer_fill
  {static} +IconData hand_draw
  {static} +IconData hand_draw_fill
  {static} +IconData hand_point_left
  {static} +IconData hand_point_left_fill
  {static} +IconData hand_point_right
  {static} +IconData hand_point_right_fill
  {static} +IconData hand_raised
  {static} +IconData hand_raised_fill
  {static} +IconData hand_raised_slash
  {static} +IconData hand_raised_slash_fill
  {static} +IconData hand_thumbsdown
  {static} +IconData hand_thumbsdown_fill
  {static} +IconData hand_thumbsup
  {static} +IconData hand_thumbsup_fill
  {static} +IconData hare
  {static} +IconData hare_fill
  {static} +IconData headphones
  {static} +IconData heart_circle
  {static} +IconData heart_circle_fill
  {static} +IconData heart_fill
  {static} +IconData heart_slash
  {static} +IconData heart_slash_circle
  {static} +IconData heart_slash_circle_fill
  {static} +IconData heart_slash_fill
  {static} +IconData helm
  {static} +IconData hexagon
  {static} +IconData hexagon_fill
  {static} +IconData hifispeaker
  {static} +IconData hifispeaker_fill
  {static} +IconData hourglass
  {static} +IconData hourglass_bottomhalf_fill
  {static} +IconData hourglass_tophalf_fill
  {static} +IconData house
  {static} +IconData house_alt
  {static} +IconData house_alt_fill
  {static} +IconData house_fill
  {static} +IconData hurricane
  {static} +IconData increase_indent
  {static} +IconData increase_quotelevel
  {static} +IconData infinite
  {static} +IconData info_circle
  {static} +IconData info_circle_fill
  {static} +IconData italic
  {static} +IconData keyboard
  {static} +IconData keyboard_chevron_compact_down
  {static} +IconData largecircle_fill_circle
  {static} +IconData lasso
  {static} +IconData layers
  {static} +IconData layers_alt
  {static} +IconData layers_alt_fill
  {static} +IconData layers_fill
  {static} +IconData leaf_arrow_circlepath
  {static} +IconData lessthan
  {static} +IconData lessthan_circle
  {static} +IconData lessthan_circle_fill
  {static} +IconData lessthan_square
  {static} +IconData lessthan_square_fill
  {static} +IconData light_max
  {static} +IconData light_min
  {static} +IconData lightbulb
  {static} +IconData lightbulb_fill
  {static} +IconData lightbulb_slash
  {static} +IconData lightbulb_slash_fill
  {static} +IconData line_horizontal_3
  {static} +IconData line_horizontal_3_decrease
  {static} +IconData line_horizontal_3_decrease_circle
  {static} +IconData line_horizontal_3_decrease_circle_fill
  {static} +IconData link
  {static} +IconData link_circle
  {static} +IconData link_circle_fill
  {static} +IconData list_bullet
  {static} +IconData list_bullet_below_rectangle
  {static} +IconData list_bullet_indent
  {static} +IconData list_dash
  {static} +IconData list_number
  {static} +IconData list_number_rtl
  {static} +IconData location_circle
  {static} +IconData location_circle_fill
  {static} +IconData location_fill
  {static} +IconData location_north
  {static} +IconData location_north_fill
  {static} +IconData location_north_line
  {static} +IconData location_north_line_fill
  {static} +IconData location_slash
  {static} +IconData location_slash_fill
  {static} +IconData lock
  {static} +IconData lock_circle
  {static} +IconData lock_circle_fill
  {static} +IconData lock_fill
  {static} +IconData lock_open
  {static} +IconData lock_open_fill
  {static} +IconData lock_rotation
  {static} +IconData lock_rotation_open
  {static} +IconData lock_shield
  {static} +IconData lock_shield_fill
  {static} +IconData lock_slash
  {static} +IconData lock_slash_fill
  {static} +IconData macwindow
  {static} +IconData map
  {static} +IconData map_fill
  {static} +IconData map_pin
  {static} +IconData map_pin_ellipse
  {static} +IconData map_pin_slash
  {static} +IconData memories
  {static} +IconData memories_badge_minus
  {static} +IconData memories_badge_plus
  {static} +IconData metronome
  {static} +IconData mic_circle
  {static} +IconData mic_circle_fill
  {static} +IconData mic_fill
  {static} +IconData mic_slash
  {static} +IconData mic_slash_fill
  {static} +IconData minus
  {static} +IconData minus_circle
  {static} +IconData minus_circle_fill
  {static} +IconData minus_rectangle
  {static} +IconData minus_rectangle_fill
  {static} +IconData minus_slash_plus
  {static} +IconData minus_square
  {static} +IconData minus_square_fill
  {static} +IconData money_dollar
  {static} +IconData money_dollar_circle
  {static} +IconData money_dollar_circle_fill
  {static} +IconData money_euro
  {static} +IconData money_euro_circle
  {static} +IconData money_euro_circle_fill
  {static} +IconData money_pound
  {static} +IconData money_pound_circle
  {static} +IconData money_pound_circle_fill
  {static} +IconData money_rubl
  {static} +IconData money_rubl_circle
  {static} +IconData money_rubl_circle_fill
  {static} +IconData money_yen
  {static} +IconData money_yen_circle
  {static} +IconData money_yen_circle_fill
  {static} +IconData moon
  {static} +IconData moon_circle
  {static} +IconData moon_circle_fill
  {static} +IconData moon_fill
  {static} +IconData moon_stars
  {static} +IconData moon_stars_fill
  {static} +IconData moon_zzz
  {static} +IconData moon_zzz_fill
  {static} +IconData move
  {static} +IconData multiply
  {static} +IconData multiply_circle
  {static} +IconData multiply_circle_fill
  {static} +IconData multiply_square
  {static} +IconData multiply_square_fill
  {static} +IconData music_albums
  {static} +IconData music_albums_fill
  {static} +IconData music_house
  {static} +IconData music_house_fill
  {static} +IconData music_mic
  {static} +IconData music_note_2
  {static} +IconData music_note_list
  {static} +IconData nosign
  {static} +IconData number
  {static} +IconData number_circle
  {static} +IconData number_circle_fill
  {static} +IconData number_square
  {static} +IconData number_square_fill
  {static} +IconData option
  {static} +IconData paintbrush
  {static} +IconData paintbrush_fill
  {static} +IconData pano
  {static} +IconData pano_fill
  {static} +IconData paperclip
  {static} +IconData paperplane
  {static} +IconData paperplane_fill
  {static} +IconData paragraph
  {static} +IconData pause_circle
  {static} +IconData pause_circle_fill
  {static} +IconData pause_fill
  {static} +IconData pause_rectangle
  {static} +IconData pause_rectangle_fill
  {static} +IconData pencil_circle
  {static} +IconData pencil_circle_fill
  {static} +IconData pencil_ellipsis_rectangle
  {static} +IconData pencil_outline
  {static} +IconData pencil_slash
  {static} +IconData percent
  {static} +IconData person_2
  {static} +IconData person_2_alt
  {static} +IconData person_2_fill
  {static} +IconData person_2_square_stack
  {static} +IconData person_2_square_stack_fill
  {static} +IconData person_3
  {static} +IconData person_3_fill
  {static} +IconData person_alt
  {static} +IconData person_alt_circle
  {static} +IconData person_alt_circle_fill
  {static} +IconData person_badge_minus
  {static} +IconData person_badge_minus_fill
  {static} +IconData person_badge_plus
  {static} +IconData person_badge_plus_fill
  {static} +IconData person_circle
  {static} +IconData person_circle_fill
  {static} +IconData person_crop_circle
  {static} +IconData person_crop_circle_badge_checkmark
  {static} +IconData person_crop_circle_badge_exclam
  {static} +IconData person_crop_circle_badge_minus
  {static} +IconData person_crop_circle_badge_plus
  {static} +IconData person_crop_circle_badge_xmark
  {static} +IconData person_crop_circle_fill
  {static} +IconData person_crop_circle_fill_badge_checkmark
  {static} +IconData person_crop_circle_fill_badge_exclam
  {static} +IconData person_crop_circle_fill_badge_minus
  {static} +IconData person_crop_circle_fill_badge_plus
  {static} +IconData person_crop_circle_fill_badge_xmark
  {static} +IconData person_crop_rectangle
  {static} +IconData person_crop_rectangle_fill
  {static} +IconData person_crop_square
  {static} +IconData person_crop_square_fill
  {static} +IconData person_fill
  {static} +IconData personalhotspot
  {static} +IconData perspective
  {static} +IconData phone_arrow_down_left
  {static} +IconData phone_arrow_right
  {static} +IconData phone_arrow_up_right
  {static} +IconData phone_badge_plus
  {static} +IconData phone_circle
  {static} +IconData phone_circle_fill
  {static} +IconData phone_down
  {static} +IconData phone_down_circle
  {static} +IconData phone_down_circle_fill
  {static} +IconData phone_down_fill
  {static} +IconData phone_fill
  {static} +IconData phone_fill_arrow_down_left
  {static} +IconData phone_fill_arrow_right
  {static} +IconData phone_fill_arrow_up_right
  {static} +IconData phone_fill_badge_plus
  {static} +IconData photo
  {static} +IconData photo_fill
  {static} +IconData photo_fill_on_rectangle_fill
  {static} +IconData photo_on_rectangle
  {static} +IconData piano
  {static} +IconData pin
  {static} +IconData pin_fill
  {static} +IconData pin_slash
  {static} +IconData pin_slash_fill
  {static} +IconData placemark
  {static} +IconData placemark_fill
  {static} +IconData play
  {static} +IconData play_circle
  {static} +IconData play_circle_fill
  {static} +IconData play_fill
  {static} +IconData play_rectangle
  {static} +IconData play_rectangle_fill
  {static} +IconData playpause
  {static} +IconData playpause_fill
  {static} +IconData plus
  {static} +IconData plus_app
  {static} +IconData plus_app_fill
  {static} +IconData plus_bubble
  {static} +IconData plus_bubble_fill
  {static} +IconData plus_circle
  {static} +IconData plus_circle_fill
  {static} +IconData plus_rectangle
  {static} +IconData plus_rectangle_fill
  {static} +IconData plus_rectangle_fill_on_rectangle_fill
  {static} +IconData plus_rectangle_on_rectangle
  {static} +IconData plus_slash_minus
  {static} +IconData plus_square
  {static} +IconData plus_square_fill
  {static} +IconData plus_square_fill_on_square_fill
  {static} +IconData plus_square_on_square
  {static} +IconData plusminus
  {static} +IconData plusminus_circle
  {static} +IconData plusminus_circle_fill
  {static} +IconData power
  {static} +IconData printer
  {static} +IconData printer_fill
  {static} +IconData projective
  {static} +IconData purchased
  {static} +IconData purchased_circle
  {static} +IconData purchased_circle_fill
  {static} +IconData qrcode
  {static} +IconData qrcode_viewfinder
  {static} +IconData question
  {static} +IconData question_circle
  {static} +IconData question_circle_fill
  {static} +IconData question_diamond
  {static} +IconData question_diamond_fill
  {static} +IconData question_square
  {static} +IconData question_square_fill
  {static} +IconData quote_bubble
  {static} +IconData quote_bubble_fill
  {static} +IconData radiowaves_left
  {static} +IconData radiowaves_right
  {static} +IconData rays
  {static} +IconData recordingtape
  {static} +IconData rectangle
  {static} +IconData rectangle_3_offgrid
  {static} +IconData rectangle_3_offgrid_fill
  {static} +IconData rectangle_arrow_up_right_arrow_down_left
  {static} +IconData rectangle_arrow_up_right_arrow_down_left_slash
  {static} +IconData rectangle_badge_checkmark
  {static} +IconData rectangle_badge_xmark
  {static} +IconData rectangle_compress_vertical
  {static} +IconData rectangle_dock
  {static} +IconData rectangle_expand_vertical
  {static} +IconData rectangle_fill
  {static} +IconData rectangle_fill_badge_checkmark
  {static} +IconData rectangle_fill_badge_xmark
  {static} +IconData rectangle_fill_on_rectangle_angled_fill
  {static} +IconData rectangle_fill_on_rectangle_fill
  {static} +IconData rectangle_grid_1x2
  {static} +IconData rectangle_grid_1x2_fill
  {static} +IconData rectangle_grid_2x2
  {static} +IconData rectangle_grid_2x2_fill
  {static} +IconData rectangle_grid_3x2
  {static} +IconData rectangle_grid_3x2_fill
  {static} +IconData rectangle_on_rectangle
  {static} +IconData rectangle_on_rectangle_angled
  {static} +IconData rectangle_paperclip
  {static} +IconData rectangle_split_3x1
  {static} +IconData rectangle_split_3x1_fill
  {static} +IconData rectangle_split_3x3
  {static} +IconData rectangle_split_3x3_fill
  {static} +IconData rectangle_stack
  {static} +IconData rectangle_stack_badge_minus
  {static} +IconData rectangle_stack_badge_person_crop
  {static} +IconData rectangle_stack_badge_plus
  {static} +IconData rectangle_stack_fill
  {static} +IconData rectangle_stack_fill_badge_minus
  {static} +IconData rectangle_stack_fill_badge_person_crop
  {static} +IconData rectangle_stack_fill_badge_plus
  {static} +IconData rectangle_stack_person_crop
  {static} +IconData rectangle_stack_person_crop_fill
  {static} +IconData repeat
  {static} +IconData repeat_1
  {static} +IconData resize
  {static} +IconData resize_h
  {static} +IconData resize_v
  {static} +IconData return_icon
  {static} +IconData rhombus
  {static} +IconData rhombus_fill
  {static} +IconData rocket
  {static} +IconData rocket_fill
  {static} +IconData rosette
  {static} +IconData rotate_left
  {static} +IconData rotate_left_fill
  {static} +IconData rotate_right
  {static} +IconData rotate_right_fill
  {static} +IconData scissors
  {static} +IconData scissors_alt
  {static} +IconData scope
  {static} +IconData scribble
  {static} +IconData search_circle
  {static} +IconData search_circle_fill
  {static} +IconData selection_pin_in_out
  {static} +IconData shield
  {static} +IconData shield_fill
  {static} +IconData shield_lefthalf_fill
  {static} +IconData shield_slash
  {static} +IconData shield_slash_fill
  {static} +IconData shift
  {static} +IconData shift_fill
  {static} +IconData sidebar_left
  {static} +IconData sidebar_right
  {static} +IconData signature
  {static} +IconData skew
  {static} +IconData slash_circle
  {static} +IconData slash_circle_fill
  {static} +IconData slider_horizontal_3
  {static} +IconData slider_horizontal_below_rectangle
  {static} +IconData slowmo
  {static} +IconData smallcircle_circle
  {static} +IconData smallcircle_circle_fill
  {static} +IconData smallcircle_fill_circle
  {static} +IconData smallcircle_fill_circle_fill
  {static} +IconData smiley
  {static} +IconData smiley_fill
  {static} +IconData smoke
  {static} +IconData smoke_fill
  {static} +IconData snow
  {static} +IconData sort_down
  {static} +IconData sort_down_circle
  {static} +IconData sort_down_circle_fill
  {static} +IconData sort_up
  {static} +IconData sort_up_circle
  {static} +IconData sort_up_circle_fill
  {static} +IconData sparkles
  {static} +IconData speaker
  {static} +IconData speaker_1
  {static} +IconData speaker_1_fill
  {static} +IconData speaker_2
  {static} +IconData speaker_2_fill
  {static} +IconData speaker_3
  {static} +IconData speaker_3_fill
  {static} +IconData speaker_fill
  {static} +IconData speaker_slash
  {static} +IconData speaker_slash_fill
  {static} +IconData speaker_slash_fill_rtl
  {static} +IconData speaker_slash_rtl
  {static} +IconData speaker_zzz
  {static} +IconData speaker_zzz_fill
  {static} +IconData speaker_zzz_fill_rtl
  {static} +IconData speaker_zzz_rtl
  {static} +IconData speedometer
  {static} +IconData sportscourt
  {static} +IconData sportscourt_fill
  {static} +IconData square
  {static} +IconData square_arrow_down
  {static} +IconData square_arrow_down_fill
  {static} +IconData square_arrow_down_on_square
  {static} +IconData square_arrow_down_on_square_fill
  {static} +IconData square_arrow_left
  {static} +IconData square_arrow_left_fill
  {static} +IconData square_arrow_right
  {static} +IconData square_arrow_right_fill
  {static} +IconData square_arrow_up
  {static} +IconData square_arrow_up_fill
  {static} +IconData square_arrow_up_on_square
  {static} +IconData square_arrow_up_on_square_fill
  {static} +IconData square_favorites
  {static} +IconData square_favorites_alt
  {static} +IconData square_favorites_alt_fill
  {static} +IconData square_favorites_fill
  {static} +IconData square_fill
  {static} +IconData square_fill_line_vertical_square
  {static} +IconData square_fill_line_vertical_square_fill
  {static} +IconData square_fill_on_circle_fill
  {static} +IconData square_fill_on_square_fill
  {static} +IconData square_grid_2x2
  {static} +IconData square_grid_2x2_fill
  {static} +IconData square_grid_3x2
  {static} +IconData square_grid_3x2_fill
  {static} +IconData square_grid_4x3_fill
  {static} +IconData square_lefthalf_fill
  {static} +IconData square_line_vertical_square
  {static} +IconData square_line_vertical_square_fill
  {static} +IconData square_list
  {static} +IconData square_list_fill
  {static} +IconData square_on_circle
  {static} +IconData square_on_square
  {static} +IconData square_pencil
  {static} +IconData square_pencil_fill
  {static} +IconData square_righthalf_fill
  {static} +IconData square_split_1x2
  {static} +IconData square_split_1x2_fill
  {static} +IconData square_split_2x1
  {static} +IconData square_split_2x1_fill
  {static} +IconData square_split_2x2
  {static} +IconData square_split_2x2_fill
  {static} +IconData square_stack
  {static} +IconData square_stack_3d_down_dottedline
  {static} +IconData square_stack_3d_down_right
  {static} +IconData square_stack_3d_down_right_fill
  {static} +IconData square_stack_3d_up
  {static} +IconData square_stack_3d_up_fill
  {static} +IconData square_stack_3d_up_slash
  {static} +IconData square_stack_3d_up_slash_fill
  {static} +IconData square_stack_fill
  {static} +IconData squares_below_rectangle
  {static} +IconData star
  {static} +IconData star_circle
  {static} +IconData star_circle_fill
  {static} +IconData star_fill
  {static} +IconData star_lefthalf_fill
  {static} +IconData star_slash
  {static} +IconData star_slash_fill
  {static} +IconData staroflife
  {static} +IconData staroflife_fill
  {static} +IconData stop
  {static} +IconData stop_circle
  {static} +IconData stop_circle_fill
  {static} +IconData stop_fill
  {static} +IconData stopwatch
  {static} +IconData stopwatch_fill
  {static} +IconData strikethrough
  {static} +IconData suit_club
  {static} +IconData suit_club_fill
  {static} +IconData suit_diamond
  {static} +IconData suit_diamond_fill
  {static} +IconData suit_heart
  {static} +IconData suit_heart_fill
  {static} +IconData suit_spade
  {static} +IconData suit_spade_fill
  {static} +IconData sum
  {static} +IconData sun_dust
  {static} +IconData sun_dust_fill
  {static} +IconData sun_haze
  {static} +IconData sun_haze_fill
  {static} +IconData sun_max
  {static} +IconData sun_max_fill
  {static} +IconData sun_min
  {static} +IconData sun_min_fill
  {static} +IconData sunrise
  {static} +IconData sunrise_fill
  {static} +IconData sunset
  {static} +IconData sunset_fill
  {static} +IconData t_bubble
  {static} +IconData t_bubble_fill
  {static} +IconData table
  {static} +IconData table_badge_more
  {static} +IconData table_badge_more_fill
  {static} +IconData table_fill
  {static} +IconData tag_circle
  {static} +IconData tag_circle_fill
  {static} +IconData tag_fill
  {static} +IconData text_aligncenter
  {static} +IconData text_alignleft
  {static} +IconData text_alignright
  {static} +IconData text_append
  {static} +IconData text_badge_checkmark
  {static} +IconData text_badge_minus
  {static} +IconData text_badge_plus
  {static} +IconData text_badge_star
  {static} +IconData text_badge_xmark
  {static} +IconData text_bubble
  {static} +IconData text_bubble_fill
  {static} +IconData text_cursor
  {static} +IconData text_insert
  {static} +IconData text_justify
  {static} +IconData text_justifyleft
  {static} +IconData text_justifyright
  {static} +IconData text_quote
  {static} +IconData textbox
  {static} +IconData textformat
  {static} +IconData textformat_123
  {static} +IconData textformat_abc
  {static} +IconData textformat_abc_dottedunderline
  {static} +IconData textformat_alt
  {static} +IconData textformat_size
  {static} +IconData textformat_subscript
  {static} +IconData textformat_superscript
  {static} +IconData thermometer
  {static} +IconData thermometer_snowflake
  {static} +IconData thermometer_sun
  {static} +IconData ticket
  {static} +IconData ticket_fill
  {static} +IconData tickets
  {static} +IconData tickets_fill
  {static} +IconData timelapse
  {static} +IconData timer
  {static} +IconData timer_fill
  {static} +IconData today
  {static} +IconData today_fill
  {static} +IconData tornado
  {static} +IconData tortoise
  {static} +IconData tortoise_fill
  {static} +IconData tram_fill
  {static} +IconData trash
  {static} +IconData trash_circle
  {static} +IconData trash_circle_fill
  {static} +IconData trash_fill
  {static} +IconData trash_slash
  {static} +IconData trash_slash_fill
  {static} +IconData tray
  {static} +IconData tray_2
  {static} +IconData tray_2_fill
  {static} +IconData tray_arrow_down
  {static} +IconData tray_arrow_down_fill
  {static} +IconData tray_arrow_up
  {static} +IconData tray_arrow_up_fill
  {static} +IconData tray_fill
  {static} +IconData tray_full
  {static} +IconData tray_full_fill
  {static} +IconData tree
  {static} +IconData triangle
  {static} +IconData triangle_fill
  {static} +IconData triangle_lefthalf_fill
  {static} +IconData triangle_righthalf_fill
  {static} +IconData tropicalstorm
  {static} +IconData tuningfork
  {static} +IconData tv
  {static} +IconData tv_circle
  {static} +IconData tv_circle_fill
  {static} +IconData tv_fill
  {static} +IconData tv_music_note
  {static} +IconData tv_music_note_fill
  {static} +IconData uiwindow_split_2x1
  {static} +IconData umbrella
  {static} +IconData umbrella_fill
  {static} +IconData underline
  {static} +IconData upload_circle
  {static} +IconData upload_circle_fill
  {static} +IconData videocam
  {static} +IconData videocam_circle
  {static} +IconData videocam_circle_fill
  {static} +IconData videocam_fill
  {static} +IconData view_2d
  {static} +IconData view_3d
  {static} +IconData viewfinder
  {static} +IconData viewfinder_circle
  {static} +IconData viewfinder_circle_fill
  {static} +IconData wand_rays
  {static} +IconData wand_rays_inverse
  {static} +IconData wand_stars
  {static} +IconData wand_stars_inverse
  {static} +IconData waveform
  {static} +IconData waveform_circle
  {static} +IconData waveform_circle_fill
  {static} +IconData waveform_path
  {static} +IconData waveform_path_badge_minus
  {static} +IconData waveform_path_badge_plus
  {static} +IconData waveform_path_ecg
  {static} +IconData wifi
  {static} +IconData wifi_exclamationmark
  {static} +IconData wifi_slash
  {static} +IconData wind
  {static} +IconData wind_snow
  {static} +IconData wrench
  {static} +IconData wrench_fill
  {static} +IconData xmark
  {static} +IconData xmark_circle
  {static} +IconData xmark_circle_fill
  {static} +IconData xmark_octagon
  {static} +IconData xmark_octagon_fill
  {static} +IconData xmark_rectangle
  {static} +IconData xmark_rectangle_fill
  {static} +IconData xmark_seal
  {static} +IconData xmark_seal_fill
  {static} +IconData xmark_shield
  {static} +IconData xmark_shield_fill
  {static} +IconData xmark_square
  {static} +IconData xmark_square_fill
  {static} +IconData zoom_in
  {static} +IconData zoom_out
  {static} +IconData zzz
}

"cupertino::icons::CupertinoIcons" o-- "widgets::icon_data::IconData"

class "cupertino::nav_bar::_HeroTag" {
  +NavigatorState? navigator
  +int hashCode
  +String toString()
  +bool ==()
}

"cupertino::nav_bar::_HeroTag" o-- "widgets::navigator::NavigatorState"

class "cupertino::nav_bar::_FixedSizeSlidingTransition" {
  +bool isLTR
  +Size size
  +Animation<Offset> offsetAnimation
  +Widget child
  +Widget build()
}

"cupertino::nav_bar::_FixedSizeSlidingTransition" o-- "dart::ui::Size"
"cupertino::nav_bar::_FixedSizeSlidingTransition" o-- "animation::animation::Animation<Offset>"
"cupertino::nav_bar::_FixedSizeSlidingTransition" o-- "widgets::framework::Widget"
"widgets::transitions::AnimatedWidget" <|-- "cupertino::nav_bar::_FixedSizeSlidingTransition"

class "cupertino::nav_bar::CupertinoNavigationBar" {
  +Widget? leading
  +bool automaticallyImplyLeading
  +bool automaticallyImplyMiddle
  +String? previousPageTitle
  +Widget? middle
  +Widget? trailing
  +Color? backgroundColor
  +Brightness? brightness
  +EdgeInsetsDirectional? padding
  +Border? border
  +bool transitionBetweenRoutes
  +Object heroTag
  +Size preferredSize
  +bool shouldFullyObstruct()
  +State<CupertinoNavigationBar> createState()
}

"cupertino::nav_bar::CupertinoNavigationBar" o-- "widgets::framework::Widget"
"cupertino::nav_bar::CupertinoNavigationBar" o-- "dart::ui::Color"
"cupertino::nav_bar::CupertinoNavigationBar" o-- "dart::ui::Brightness"
"cupertino::nav_bar::CupertinoNavigationBar" o-- "painting::edge_insets::EdgeInsetsDirectional"
"cupertino::nav_bar::CupertinoNavigationBar" o-- "painting::box_border::Border"
"cupertino::nav_bar::CupertinoNavigationBar" o-- "dart::ui::Size"
"widgets::framework::StatefulWidget" <|-- "cupertino::nav_bar::CupertinoNavigationBar"
"cupertino::page_scaffold::ObstructingPreferredSizeWidget" <|-- "cupertino::nav_bar::CupertinoNavigationBar"

class "cupertino::nav_bar::_CupertinoNavigationBarState" {
  +_NavigationBarStaticComponentsKeys keys
  +void initState()
  +Widget build()
}

"cupertino::nav_bar::_CupertinoNavigationBarState" o-- "cupertino::nav_bar::_NavigationBarStaticComponentsKeys"
"widgets::framework::State" <|-- "cupertino::nav_bar::_CupertinoNavigationBarState"

class "cupertino::nav_bar::CupertinoSliverNavigationBar" {
  +Widget? largeTitle
  +Widget? leading
  +bool automaticallyImplyLeading
  +bool automaticallyImplyTitle
  +bool alwaysShowMiddle
  +String? previousPageTitle
  +Widget? middle
  +Widget? trailing
  +Color? backgroundColor
  +Brightness? brightness
  +EdgeInsetsDirectional? padding
  +Border? border
  +bool transitionBetweenRoutes
  +Object heroTag
  +bool stretch
  +bool opaque
  +State<CupertinoSliverNavigationBar> createState()
}

"cupertino::nav_bar::CupertinoSliverNavigationBar" o-- "widgets::framework::Widget"
"cupertino::nav_bar::CupertinoSliverNavigationBar" o-- "dart::ui::Color"
"cupertino::nav_bar::CupertinoSliverNavigationBar" o-- "dart::ui::Brightness"
"cupertino::nav_bar::CupertinoSliverNavigationBar" o-- "painting::edge_insets::EdgeInsetsDirectional"
"cupertino::nav_bar::CupertinoSliverNavigationBar" o-- "painting::box_border::Border"
"widgets::framework::StatefulWidget" <|-- "cupertino::nav_bar::CupertinoSliverNavigationBar"

class "cupertino::nav_bar::_CupertinoSliverNavigationBarState" {
  +_NavigationBarStaticComponentsKeys keys
  +void initState()
  +Widget build()
}

"cupertino::nav_bar::_CupertinoSliverNavigationBarState" o-- "cupertino::nav_bar::_NavigationBarStaticComponentsKeys"
"widgets::framework::State" <|-- "cupertino::nav_bar::_CupertinoSliverNavigationBarState"

class "cupertino::nav_bar::_LargeTitleNavigationBarSliverDelegate" {
  +_NavigationBarStaticComponentsKeys keys
  +_NavigationBarStaticComponents components
  +Widget? userMiddle
  +Color backgroundColor
  +Brightness? brightness
  +Border? border
  +EdgeInsetsDirectional? padding
  +Color actionsForegroundColor
  +bool transitionBetweenRoutes
  +Object heroTag
  +double persistentHeight
  +bool alwaysShowMiddle
  +OverScrollHeaderStretchConfiguration? stretchConfiguration
  +double minExtent
  +double maxExtent
  +Widget build()
  +bool shouldRebuild()
}

"cupertino::nav_bar::_LargeTitleNavigationBarSliverDelegate" o-- "cupertino::nav_bar::_NavigationBarStaticComponentsKeys"
"cupertino::nav_bar::_LargeTitleNavigationBarSliverDelegate" o-- "cupertino::nav_bar::_NavigationBarStaticComponents"
"cupertino::nav_bar::_LargeTitleNavigationBarSliverDelegate" o-- "widgets::framework::Widget"
"cupertino::nav_bar::_LargeTitleNavigationBarSliverDelegate" o-- "dart::ui::Color"
"cupertino::nav_bar::_LargeTitleNavigationBarSliverDelegate" o-- "dart::ui::Brightness"
"cupertino::nav_bar::_LargeTitleNavigationBarSliverDelegate" o-- "painting::box_border::Border"
"cupertino::nav_bar::_LargeTitleNavigationBarSliverDelegate" o-- "painting::edge_insets::EdgeInsetsDirectional"
"cupertino::nav_bar::_LargeTitleNavigationBarSliverDelegate" o-- "rendering::sliver_persistent_header::OverScrollHeaderStretchConfiguration"
"widgets::sliver_persistent_header::SliverPersistentHeaderDelegate" <|-- "cupertino::nav_bar::_LargeTitleNavigationBarSliverDelegate"
"foundation::diagnostics::DiagnosticableTreeMixin" <|-- "cupertino::nav_bar::_LargeTitleNavigationBarSliverDelegate"

class "cupertino::nav_bar::_LargeTitle" {
  +_RenderLargeTitle createRenderObject()
  +void updateRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "cupertino::nav_bar::_LargeTitle"

class "cupertino::nav_bar::_RenderLargeTitle" {
  -Alignment _alignment
  -double _scale
  +Alignment alignment
  +void performLayout()
  +void applyPaintTransform()
  +void paint()
  +bool hitTestChildren()
}

"cupertino::nav_bar::_RenderLargeTitle" o-- "painting::alignment::Alignment"
"rendering::shifted_box::RenderShiftedBox" <|-- "cupertino::nav_bar::_RenderLargeTitle"

class "cupertino::nav_bar::_PersistentNavigationBar" {
  +_NavigationBarStaticComponents components
  +EdgeInsetsDirectional? padding
  +bool? middleVisible
  +Widget build()
}

"cupertino::nav_bar::_PersistentNavigationBar" o-- "cupertino::nav_bar::_NavigationBarStaticComponents"
"cupertino::nav_bar::_PersistentNavigationBar" o-- "painting::edge_insets::EdgeInsetsDirectional"
"widgets::framework::StatelessWidget" <|-- "cupertino::nav_bar::_PersistentNavigationBar"

class "cupertino::nav_bar::_NavigationBarStaticComponentsKeys" {
  +GlobalKey<State<StatefulWidget>> navBarBoxKey
  +GlobalKey<State<StatefulWidget>> leadingKey
  +GlobalKey<State<StatefulWidget>> backChevronKey
  +GlobalKey<State<StatefulWidget>> backLabelKey
  +GlobalKey<State<StatefulWidget>> middleKey
  +GlobalKey<State<StatefulWidget>> trailingKey
  +GlobalKey<State<StatefulWidget>> largeTitleKey
}

"cupertino::nav_bar::_NavigationBarStaticComponentsKeys" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"

class "cupertino::nav_bar::_NavigationBarStaticComponents" {
  +KeyedSubtree? leading
  +KeyedSubtree? backChevron
  +KeyedSubtree? backLabel
  +KeyedSubtree? middle
  +KeyedSubtree? trailing
  +KeyedSubtree? largeTitle
  {static} -Widget? _derivedTitle()
  {static} +KeyedSubtree? createLeading()
  {static} +KeyedSubtree? createBackChevron()
  {static} +KeyedSubtree? createBackLabel()
  {static} +KeyedSubtree? createMiddle()
  {static} +KeyedSubtree? createTrailing()
  {static} +KeyedSubtree? createLargeTitle()
}

"cupertino::nav_bar::_NavigationBarStaticComponents" o-- "widgets::basic::KeyedSubtree"

class "cupertino::nav_bar::CupertinoNavigationBarBackButton" {
  +Color? color
  +String? previousPageTitle
  +void Function()? onPressed
  -Widget? _backChevron
  -Widget? _backLabel
  +Widget build()
}

"cupertino::nav_bar::CupertinoNavigationBarBackButton" o-- "dart::ui::Color"
"cupertino::nav_bar::CupertinoNavigationBarBackButton" o-- "dart::ui::void Function()"
"cupertino::nav_bar::CupertinoNavigationBarBackButton" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "cupertino::nav_bar::CupertinoNavigationBarBackButton"

class "cupertino::nav_bar::_BackChevron" {
  +Widget build()
}

"widgets::framework::StatelessWidget" <|-- "cupertino::nav_bar::_BackChevron"

class "cupertino::nav_bar::_BackLabel" {
  +String? specifiedPreviousTitle
  +ModalRoute<dynamic>? route
  -Widget _buildPreviousTitleWidget()
  +Widget build()
}

"cupertino::nav_bar::_BackLabel" o-- "widgets::routes::ModalRoute<dynamic>"
"widgets::framework::StatelessWidget" <|-- "cupertino::nav_bar::_BackLabel"

class "cupertino::nav_bar::_TransitionableNavigationBar" {
  +_NavigationBarStaticComponentsKeys componentsKeys
  +Color? backgroundColor
  +TextStyle backButtonTextStyle
  +TextStyle titleTextStyle
  +TextStyle? largeTitleTextStyle
  +Border? border
  +bool hasUserMiddle
  +bool largeExpanded
  +Widget child
  +RenderBox renderBox
  +Widget build()
}

"cupertino::nav_bar::_TransitionableNavigationBar" o-- "cupertino::nav_bar::_NavigationBarStaticComponentsKeys"
"cupertino::nav_bar::_TransitionableNavigationBar" o-- "dart::ui::Color"
"cupertino::nav_bar::_TransitionableNavigationBar" o-- "painting::text_style::TextStyle"
"cupertino::nav_bar::_TransitionableNavigationBar" o-- "painting::box_border::Border"
"cupertino::nav_bar::_TransitionableNavigationBar" o-- "widgets::framework::Widget"
"cupertino::nav_bar::_TransitionableNavigationBar" o-- "rendering::box::RenderBox"
"widgets::framework::StatelessWidget" <|-- "cupertino::nav_bar::_TransitionableNavigationBar"

class "cupertino::nav_bar::_NavigationBarTransition" {
  +Animation<double> animation
  +_TransitionableNavigationBar topNavBar
  +_TransitionableNavigationBar bottomNavBar
  +Tween<double> heightTween
  +ColorTween backgroundTween
  +BorderTween borderTween
  +Widget build()
}

"cupertino::nav_bar::_NavigationBarTransition" o-- "animation::animation::Animation<double>"
"cupertino::nav_bar::_NavigationBarTransition" o-- "cupertino::nav_bar::_TransitionableNavigationBar"
"cupertino::nav_bar::_NavigationBarTransition" o-- "animation::tween::Tween<double>"
"cupertino::nav_bar::_NavigationBarTransition" o-- "animation::tween::ColorTween"
"cupertino::nav_bar::_NavigationBarTransition" o-- "widgets::implicit_animations::BorderTween"
"widgets::framework::StatelessWidget" <|-- "cupertino::nav_bar::_NavigationBarTransition"

class "cupertino::nav_bar::_NavigationBarComponentsTransition" {
  {static} +Animatable<double> fadeOut
  {static} +Animatable<double> fadeIn
  +Animation<double> animation
  +_NavigationBarStaticComponentsKeys bottomComponents
  +_NavigationBarStaticComponentsKeys topComponents
  +RenderBox bottomNavBarBox
  +RenderBox topNavBarBox
  +TextStyle bottomBackButtonTextStyle
  +TextStyle topBackButtonTextStyle
  +TextStyle bottomTitleTextStyle
  +TextStyle topTitleTextStyle
  +TextStyle? bottomLargeTitleTextStyle
  +TextStyle? topLargeTitleTextStyle
  +bool bottomHasUserMiddle
  +bool topHasUserMiddle
  +bool bottomLargeExpanded
  +bool topLargeExpanded
  +Rect transitionBox
  +double forwardDirection
  +Widget? bottomLeading
  +Widget? bottomBackChevron
  +Widget? bottomBackLabel
  +Widget? bottomMiddle
  +Widget? bottomLargeTitle
  +Widget? bottomTrailing
  +Widget? topLeading
  +Widget? topBackChevron
  +Widget? topBackLabel
  +Widget? topMiddle
  +Widget? topTrailing
  +Widget? topLargeTitle
  +RelativeRect positionInTransitionBox()
  +_FixedSizeSlidingTransition slideFromLeadingEdge()
  +Animation<double> fadeInFrom()
  +Animation<double> fadeOutBy()
}

"cupertino::nav_bar::_NavigationBarComponentsTransition" o-- "animation::tween::Animatable<double>"
"cupertino::nav_bar::_NavigationBarComponentsTransition" o-- "animation::animation::Animation<double>"
"cupertino::nav_bar::_NavigationBarComponentsTransition" o-- "cupertino::nav_bar::_NavigationBarStaticComponentsKeys"
"cupertino::nav_bar::_NavigationBarComponentsTransition" o-- "rendering::box::RenderBox"
"cupertino::nav_bar::_NavigationBarComponentsTransition" o-- "painting::text_style::TextStyle"
"cupertino::nav_bar::_NavigationBarComponentsTransition" o-- "dart::ui::Rect"
"cupertino::nav_bar::_NavigationBarComponentsTransition" o-- "widgets::framework::Widget"

abstract class "cupertino::toggleable::ToggleablePainter" {
  -Color? _activeColor
  -Color? _inactiveColor
  -Color? _focusColor
  -Offset? _downPosition
  -bool? _isFocused
  -bool? _isActive
  +Color activeColor
  +Color inactiveColor
  +Color focusColor
  +Offset? downPosition
  +bool isFocused
  +bool isActive
  +List<CustomPainterSemantics> Function(Size)? semanticsBuilder
  +bool shouldRepaint()
  +bool? hitTest()
  +bool shouldRebuildSemantics()
  +String toString()
}

"cupertino::toggleable::ToggleablePainter" o-- "dart::ui::Color"
"cupertino::toggleable::ToggleablePainter" o-- "dart::ui::Offset"
"cupertino::toggleable::ToggleablePainter" o-- "rendering::custom_paint::List<CustomPainterSemantics> Function(Size)"
"foundation::change_notifier::ChangeNotifier" <|-- "cupertino::toggleable::ToggleablePainter"
"rendering::custom_paint::CustomPainter" <|-- "cupertino::toggleable::ToggleablePainter"

abstract class "cupertino::toggleable::ToggleableStateMixin" {
  -Offset? _downPosition
  -bool _focused
  -Map<Type, Action<Intent>> _actionMap
  +bool isInteractive
  +void Function(bool?)? onChanged
  +bool? value
  +bool tristate
  +Offset? downPosition
  -void _handleTapDown()
  -void _handleTap()
  -void _handleTapEnd()
  -void _handleFocusHighlightChanged()
  +Widget buildToggleable()
}

"cupertino::toggleable::ToggleableStateMixin" o-- "dart::ui::Offset"
"cupertino::toggleable::ToggleableStateMixin" o-- "foundation::basic_types::void Function(bool)"

class "cupertino::theme::CupertinoTheme" {
  +CupertinoThemeData data
  +Widget child
  {static} +CupertinoThemeData of()
  {static} +Brightness brightnessOf()
  {static} +Brightness? maybeBrightnessOf()
  +Widget build()
  +void debugFillProperties()
}

"cupertino::theme::CupertinoTheme" o-- "cupertino::theme::CupertinoThemeData"
"cupertino::theme::CupertinoTheme" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "cupertino::theme::CupertinoTheme"

class "cupertino::theme::_InheritedCupertinoTheme" {
  +CupertinoTheme theme
  +bool updateShouldNotify()
}

"cupertino::theme::_InheritedCupertinoTheme" o-- "cupertino::theme::CupertinoTheme"
"widgets::framework::InheritedWidget" <|-- "cupertino::theme::_InheritedCupertinoTheme"

class "cupertino::theme::CupertinoThemeData" {
  -_CupertinoThemeDefaults _defaults
  +Color primaryColor
  +Color primaryContrastingColor
  +CupertinoTextThemeData textTheme
  +Color barBackgroundColor
  +Color scaffoldBackgroundColor
  +bool applyThemeToAll
  +int hashCode
  +NoDefaultCupertinoThemeData noDefault()
  +CupertinoThemeData resolveFrom()
  +CupertinoThemeData copyWith()
  +void debugFillProperties()
  +bool ==()
}

"cupertino::theme::CupertinoThemeData" o-- "cupertino::theme::_CupertinoThemeDefaults"
"cupertino::theme::CupertinoThemeData" o-- "dart::ui::Color"
"cupertino::theme::CupertinoThemeData" o-- "cupertino::text_theme::CupertinoTextThemeData"
"cupertino::theme::NoDefaultCupertinoThemeData" <|-- "cupertino::theme::CupertinoThemeData"
"foundation::diagnostics::Diagnosticable" <|-- "cupertino::theme::CupertinoThemeData"

class "cupertino::theme::NoDefaultCupertinoThemeData" {
  +Brightness? brightness
  +Color? primaryColor
  +Color? primaryContrastingColor
  +CupertinoTextThemeData? textTheme
  +Color? barBackgroundColor
  +Color? scaffoldBackgroundColor
  +bool? applyThemeToAll
  +NoDefaultCupertinoThemeData noDefault()
  #NoDefaultCupertinoThemeData resolveFrom()
  +NoDefaultCupertinoThemeData copyWith()
}

"cupertino::theme::NoDefaultCupertinoThemeData" o-- "dart::ui::Brightness"
"cupertino::theme::NoDefaultCupertinoThemeData" o-- "dart::ui::Color"
"cupertino::theme::NoDefaultCupertinoThemeData" o-- "cupertino::text_theme::CupertinoTextThemeData"

class "cupertino::theme::_CupertinoThemeDefaults" {
  +Brightness? brightness
  +Color primaryColor
  +Color primaryContrastingColor
  +Color barBackgroundColor
  +Color scaffoldBackgroundColor
  +bool applyThemeToAll
  +_CupertinoTextThemeDefaults textThemeDefaults
  +_CupertinoThemeDefaults resolveFrom()
}

"cupertino::theme::_CupertinoThemeDefaults" o-- "dart::ui::Brightness"
"cupertino::theme::_CupertinoThemeDefaults" o-- "dart::ui::Color"
"cupertino::theme::_CupertinoThemeDefaults" o-- "cupertino::theme::_CupertinoTextThemeDefaults"

class "cupertino::theme::_CupertinoTextThemeDefaults" {
  +Color labelColor
  +Color inactiveGray
  +_CupertinoTextThemeDefaults resolveFrom()
  +CupertinoTextThemeData createDefaults()
}

"cupertino::theme::_CupertinoTextThemeDefaults" o-- "dart::ui::Color"

class "cupertino::theme::_DefaultCupertinoTextThemeData" {
  +Color labelColor
  +Color inactiveGray
  +TextStyle textStyle
  +TextStyle tabLabelTextStyle
  +TextStyle navTitleTextStyle
  +TextStyle navLargeTitleTextStyle
  +TextStyle pickerTextStyle
  +TextStyle dateTimePickerTextStyle
}

"cupertino::theme::_DefaultCupertinoTextThemeData" o-- "dart::ui::Color"
"cupertino::theme::_DefaultCupertinoTextThemeData" o-- "painting::text_style::TextStyle"
"cupertino::text_theme::CupertinoTextThemeData" <|-- "cupertino::theme::_DefaultCupertinoTextThemeData"

abstract class "cupertino::localizations::CupertinoLocalizations" {
  +DatePickerDateOrder datePickerDateOrder
  +DatePickerDateTimeOrder datePickerDateTimeOrder
  +String anteMeridiemAbbreviation
  +String postMeridiemAbbreviation
  +String todayLabel
  +String alertDialogLabel
  +List<String> timerPickerHourLabels
  +List<String> timerPickerMinuteLabels
  +List<String> timerPickerSecondLabels
  +String cutButtonLabel
  +String copyButtonLabel
  +String pasteButtonLabel
  +String noSpellCheckReplacementsLabel
  +String selectAllButtonLabel
  +String lookUpButtonLabel
  +String searchWebButtonLabel
  +String shareButtonLabel
  +String searchTextFieldPlaceholderLabel
  +String modalBarrierDismissLabel
  +String menuDismissLabel
  +String datePickerYear()
  +String datePickerMonth()
  +String datePickerStandaloneMonth()
  +String datePickerDayOfMonth()
  +String datePickerMediumDate()
  +String datePickerHour()
  +String? datePickerHourSemanticsLabel()
  +String datePickerMinute()
  +String? datePickerMinuteSemanticsLabel()
  +String tabSemanticsLabel()
  +String timerPickerHour()
  +String timerPickerMinute()
  +String timerPickerSecond()
  +String? timerPickerHourLabel()
  +String? timerPickerMinuteLabel()
  +String? timerPickerSecondLabel()
  {static} +CupertinoLocalizations of()
}

"cupertino::localizations::CupertinoLocalizations" o-- "cupertino::localizations::DatePickerDateOrder"
"cupertino::localizations::CupertinoLocalizations" o-- "cupertino::localizations::DatePickerDateTimeOrder"

class "cupertino::localizations::_CupertinoLocalizationsDelegate" {
  +bool isSupported()
  +Future<CupertinoLocalizations> load()
  +bool shouldReload()
  +String toString()
}

"widgets::localizations::LocalizationsDelegate" <|-- "cupertino::localizations::_CupertinoLocalizationsDelegate"

class "cupertino::localizations::DefaultCupertinoLocalizations" {
  {static} +List<String> shortWeekdays
  {static} -List<String> _shortMonths
  {static} -List<String> _months
  {static} +LocalizationsDelegate<CupertinoLocalizations> delegate
  +DatePickerDateOrder datePickerDateOrder
  +DatePickerDateTimeOrder datePickerDateTimeOrder
  +String anteMeridiemAbbreviation
  +String postMeridiemAbbreviation
  +String todayLabel
  +String alertDialogLabel
  +List<String> timerPickerHourLabels
  +List<String> timerPickerMinuteLabels
  +List<String> timerPickerSecondLabels
  +String cutButtonLabel
  +String copyButtonLabel
  +String pasteButtonLabel
  +String noSpellCheckReplacementsLabel
  +String selectAllButtonLabel
  +String lookUpButtonLabel
  +String searchWebButtonLabel
  +String shareButtonLabel
  +String searchTextFieldPlaceholderLabel
  +String modalBarrierDismissLabel
  +String menuDismissLabel
  +String datePickerYear()
  +String datePickerMonth()
  +String datePickerStandaloneMonth()
  +String datePickerDayOfMonth()
  +String datePickerHour()
  +String datePickerHourSemanticsLabel()
  +String datePickerMinute()
  +String datePickerMinuteSemanticsLabel()
  +String datePickerMediumDate()
  +String tabSemanticsLabel()
  +String timerPickerHour()
  +String timerPickerMinute()
  +String timerPickerSecond()
  +String timerPickerHourLabel()
  +String timerPickerMinuteLabel()
  +String timerPickerSecondLabel()
  {static} +Future<CupertinoLocalizations> load()
}

"cupertino::localizations::DefaultCupertinoLocalizations" o-- "widgets::localizations::LocalizationsDelegate<CupertinoLocalizations>"
"cupertino::localizations::DefaultCupertinoLocalizations" o-- "cupertino::localizations::DatePickerDateOrder"
"cupertino::localizations::DefaultCupertinoLocalizations" o-- "cupertino::localizations::DatePickerDateTimeOrder"
"cupertino::localizations::CupertinoLocalizations" <|-- "cupertino::localizations::DefaultCupertinoLocalizations"

class "cupertino::localizations::DatePickerDateTimeOrder" {
  +int index
  {static} +List<DatePickerDateTimeOrder> values
  {static} +DatePickerDateTimeOrder date_time_dayPeriod
  {static} +DatePickerDateTimeOrder date_dayPeriod_time
  {static} +DatePickerDateTimeOrder time_dayPeriod_date
  {static} +DatePickerDateTimeOrder dayPeriod_time_date
}

"cupertino::localizations::DatePickerDateTimeOrder" o-- "cupertino::localizations::DatePickerDateTimeOrder"
"dart::core::Enum" <|-- "cupertino::localizations::DatePickerDateTimeOrder"

class "cupertino::localizations::DatePickerDateOrder" {
  +int index
  {static} +List<DatePickerDateOrder> values
  {static} +DatePickerDateOrder dmy
  {static} +DatePickerDateOrder mdy
  {static} +DatePickerDateOrder ymd
  {static} +DatePickerDateOrder ydm
}

"cupertino::localizations::DatePickerDateOrder" o-- "cupertino::localizations::DatePickerDateOrder"
"dart::core::Enum" <|-- "cupertino::localizations::DatePickerDateOrder"

class "cupertino::desktop_text_selection_toolbar_button::CupertinoDesktopTextSelectionToolbarButton" {
  +void Function()? onPressed
  +Widget? child
  +dynamic buttonItem
  +String? text
  +State<CupertinoDesktopTextSelectionToolbarButton> createState()
}

"cupertino::desktop_text_selection_toolbar_button::CupertinoDesktopTextSelectionToolbarButton" o-- "dart::ui::void Function()"
"cupertino::desktop_text_selection_toolbar_button::CupertinoDesktopTextSelectionToolbarButton" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "cupertino::desktop_text_selection_toolbar_button::CupertinoDesktopTextSelectionToolbarButton"

class "cupertino::desktop_text_selection_toolbar_button::_CupertinoDesktopTextSelectionToolbarButtonState" {
  -bool _isHovered
  -void _onEnter()
  -void _onExit()
  +Widget build()
}

"widgets::framework::State" <|-- "cupertino::desktop_text_selection_toolbar_button::_CupertinoDesktopTextSelectionToolbarButtonState"

class "material::text_button_theme::TextButtonThemeData" {
  +ButtonStyle? style
  +int hashCode
  {static} +TextButtonThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::text_button_theme::TextButtonThemeData" o-- "material::button_style::ButtonStyle"
"foundation::diagnostics::Diagnosticable" <|-- "material::text_button_theme::TextButtonThemeData"

class "material::text_button_theme::TextButtonTheme" {
  +TextButtonThemeData data
  {static} +TextButtonThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::text_button_theme::TextButtonTheme" o-- "material::text_button_theme::TextButtonThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::text_button_theme::TextButtonTheme"

class "material::drawer_header::DrawerHeader" {
  +Decoration? decoration
  +EdgeInsetsGeometry padding
  +EdgeInsetsGeometry? margin
  +Duration duration
  +Curve curve
  +Widget? child
  +Widget build()
}

"material::drawer_header::DrawerHeader" o-- "painting::decoration::Decoration"
"material::drawer_header::DrawerHeader" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::drawer_header::DrawerHeader" o-- "animation::curves::Curve"
"material::drawer_header::DrawerHeader" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::drawer_header::DrawerHeader"

abstract class "material::data_table_source::DataTableSource" {
  +int rowCount
  +bool isRowCountApproximate
  +int selectedRowCount
  +DataRow? getRow()
}

"foundation::change_notifier::ChangeNotifier" <|-- "material::data_table_source::DataTableSource"

class "material::progress_indicator_theme::ProgressIndicatorThemeData" {
  +Color? color
  +Color? linearTrackColor
  +double? linearMinHeight
  +Color? circularTrackColor
  +Color? refreshBackgroundColor
  +int hashCode
  +ProgressIndicatorThemeData copyWith()
  {static} +ProgressIndicatorThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::progress_indicator_theme::ProgressIndicatorThemeData" o-- "dart::ui::Color"
"foundation::diagnostics::Diagnosticable" <|-- "material::progress_indicator_theme::ProgressIndicatorThemeData"

class "material::progress_indicator_theme::ProgressIndicatorTheme" {
  +ProgressIndicatorThemeData data
  {static} +ProgressIndicatorThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::progress_indicator_theme::ProgressIndicatorTheme" o-- "material::progress_indicator_theme::ProgressIndicatorThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::progress_indicator_theme::ProgressIndicatorTheme"

class "material::material_button::MaterialButton" {
  +void Function()? onPressed
  +void Function()? onLongPress
  +void Function(bool)? onHighlightChanged
  +MouseCursor? mouseCursor
  +ButtonTextTheme? textTheme
  +Color? textColor
  +Color? disabledTextColor
  +Color? color
  +Color? disabledColor
  +Color? splashColor
  +Color? focusColor
  +Color? hoverColor
  +Color? highlightColor
  +double? elevation
  +double? hoverElevation
  +double? focusElevation
  +double? highlightElevation
  +double? disabledElevation
  +Brightness? colorBrightness
  +Widget? child
  +EdgeInsetsGeometry? padding
  +VisualDensity? visualDensity
  +ShapeBorder? shape
  +Clip clipBehavior
  +FocusNode? focusNode
  +bool autofocus
  +Duration? animationDuration
  +MaterialTapTargetSize? materialTapTargetSize
  +double? minWidth
  +double? height
  +bool enableFeedback
  +bool enabled
  +Widget build()
  +void debugFillProperties()
}

"material::material_button::MaterialButton" o-- "dart::ui::void Function()"
"material::material_button::MaterialButton" o-- "foundation::basic_types::void Function(bool)"
"material::material_button::MaterialButton" o-- "services::mouse_cursor::MouseCursor"
"material::material_button::MaterialButton" o-- "material::button_theme::ButtonTextTheme"
"material::material_button::MaterialButton" o-- "dart::ui::Color"
"material::material_button::MaterialButton" o-- "dart::ui::Brightness"
"material::material_button::MaterialButton" o-- "widgets::framework::Widget"
"material::material_button::MaterialButton" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::material_button::MaterialButton" o-- "material::theme_data::VisualDensity"
"material::material_button::MaterialButton" o-- "painting::borders::ShapeBorder"
"material::material_button::MaterialButton" o-- "dart::ui::Clip"
"material::material_button::MaterialButton" o-- "widgets::focus_manager::FocusNode"
"material::material_button::MaterialButton" o-- "material::theme_data::MaterialTapTargetSize"
"widgets::framework::StatelessWidget" <|-- "material::material_button::MaterialButton"

class "material::grid_tile::GridTile" {
  +Widget? header
  +Widget? footer
  +Widget child
  +Widget build()
}

"material::grid_tile::GridTile" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::grid_tile::GridTile"

abstract class "material::material::MaterialInkController" {
  +Color? color
  +TickerProvider vsync
  +void addInkFeature()
  +void markNeedsPaint()
}

"material::material::MaterialInkController" o-- "dart::ui::Color"
"material::material::MaterialInkController" o-- "scheduler::ticker::TickerProvider"

class "material::material::Material" {
  +Widget? child
  +MaterialType type
  +double elevation
  +Color? color
  +Color? shadowColor
  +Color? surfaceTintColor
  +TextStyle? textStyle
  +ShapeBorder? shape
  +bool borderOnForeground
  +Clip clipBehavior
  +Duration animationDuration
  +BorderRadiusGeometry? borderRadius
  {static} +double defaultSplashRadius
  {static} +MaterialInkController? maybeOf()
  {static} +MaterialInkController of()
  +State<Material> createState()
  +void debugFillProperties()
}

"material::material::Material" o-- "widgets::framework::Widget"
"material::material::Material" o-- "material::material::MaterialType"
"material::material::Material" o-- "dart::ui::Color"
"material::material::Material" o-- "painting::text_style::TextStyle"
"material::material::Material" o-- "painting::borders::ShapeBorder"
"material::material::Material" o-- "dart::ui::Clip"
"material::material::Material" o-- "painting::border_radius::BorderRadiusGeometry"
"widgets::framework::StatefulWidget" <|-- "material::material::Material"

class "material::material::_MaterialState" {
  -GlobalKey<State<StatefulWidget>> _inkFeatureRenderer
  -Color? _getBackgroundColor()
  +Widget build()
  {static} -Widget _transparentInterior()
  -ShapeBorder _getShape()
}

"material::material::_MaterialState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::framework::State" <|-- "material::material::_MaterialState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::material::_MaterialState"

class "material::material::_RenderInkFeatures" {
  +TickerProvider vsync
  +Color? color
  +bool absorbHitTest
  -List<InkFeature>? _inkFeatures
  +List<InkFeature>? debugInkFeatures
  +void addInkFeature()
  -void _removeFeature()
  -void _didChangeLayout()
  +bool hitTestSelf()
  +void paint()
}

"material::material::_RenderInkFeatures" o-- "scheduler::ticker::TickerProvider"
"material::material::_RenderInkFeatures" o-- "dart::ui::Color"
"rendering::proxy_box::RenderProxyBox" <|-- "material::material::_RenderInkFeatures"
"material::material::MaterialInkController" <|-- "material::material::_RenderInkFeatures"

class "material::material::_InkFeatures" {
  +Color? color
  +TickerProvider vsync
  +bool absorbHitTest
  +_RenderInkFeatures createRenderObject()
  +void updateRenderObject()
}

"material::material::_InkFeatures" o-- "dart::ui::Color"
"material::material::_InkFeatures" o-- "scheduler::ticker::TickerProvider"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "material::material::_InkFeatures"

abstract class "material::material::InkFeature" {
  -_RenderInkFeatures _controller
  +RenderBox referenceBox
  +void Function()? onRemoved
  -bool _debugDisposed
  +MaterialInkController controller
  +void dispose()
  {static} -Matrix4? _getPaintTransform()
  -void _paint()
  #void paintFeature()
  +String toString()
}

"material::material::InkFeature" o-- "material::material::_RenderInkFeatures"
"material::material::InkFeature" o-- "rendering::box::RenderBox"
"material::material::InkFeature" o-- "dart::ui::void Function()"
"material::material::InkFeature" o-- "material::material::MaterialInkController"

class "material::material::ShapeBorderTween" {
  +ShapeBorder? lerp()
}

"animation::tween::Tween" <|-- "material::material::ShapeBorderTween"

class "material::material::_MaterialInterior" {
  +Widget child
  +ShapeBorder shape
  +bool borderOnForeground
  +Clip clipBehavior
  +double elevation
  +Color color
  +Color? shadowColor
  +Color? surfaceTintColor
  +_MaterialInteriorState createState()
  +void debugFillProperties()
}

"material::material::_MaterialInterior" o-- "widgets::framework::Widget"
"material::material::_MaterialInterior" o-- "painting::borders::ShapeBorder"
"material::material::_MaterialInterior" o-- "dart::ui::Clip"
"material::material::_MaterialInterior" o-- "dart::ui::Color"
"widgets::implicit_animations::ImplicitlyAnimatedWidget" <|-- "material::material::_MaterialInterior"

class "material::material::_MaterialInteriorState" {
  -Tween<double>? _elevation
  -ColorTween? _surfaceTintColor
  -ColorTween? _shadowColor
  -ShapeBorderTween? _border
  +void forEachTween()
  +Widget build()
}

"material::material::_MaterialInteriorState" o-- "animation::tween::Tween<double>"
"material::material::_MaterialInteriorState" o-- "animation::tween::ColorTween"
"material::material::_MaterialInteriorState" o-- "material::material::ShapeBorderTween"
"widgets::implicit_animations::AnimatedWidgetBaseState" <|-- "material::material::_MaterialInteriorState"

class "material::material::_ShapeBorderPaint" {
  +Widget child
  +ShapeBorder shape
  +bool borderOnForeground
  +Widget build()
}

"material::material::_ShapeBorderPaint" o-- "widgets::framework::Widget"
"material::material::_ShapeBorderPaint" o-- "painting::borders::ShapeBorder"
"widgets::framework::StatelessWidget" <|-- "material::material::_ShapeBorderPaint"

class "material::material::_ShapeBorderPainter" {
  +ShapeBorder border
  +TextDirection? textDirection
  +void paint()
  +bool shouldRepaint()
}

"material::material::_ShapeBorderPainter" o-- "painting::borders::ShapeBorder"
"material::material::_ShapeBorderPainter" o-- "dart::ui::TextDirection"
"rendering::custom_paint::CustomPainter" <|-- "material::material::_ShapeBorderPainter"

class "material::material::MaterialType" {
  +int index
  {static} +List<MaterialType> values
  {static} +MaterialType canvas
  {static} +MaterialType card
  {static} +MaterialType circle
  {static} +MaterialType button
  {static} +MaterialType transparency
}

"material::material::MaterialType" o-- "material::material::MaterialType"
"dart::core::Enum" <|-- "material::material::MaterialType"

class "material::text_theme::TextTheme" {
  +TextStyle? displayLarge
  +TextStyle? displayMedium
  +TextStyle? displaySmall
  +TextStyle? headlineLarge
  +TextStyle? headlineMedium
  +TextStyle? headlineSmall
  +TextStyle? titleLarge
  +TextStyle? titleMedium
  +TextStyle? titleSmall
  +TextStyle? bodyLarge
  +TextStyle? bodyMedium
  +TextStyle? bodySmall
  +TextStyle? labelLarge
  +TextStyle? labelMedium
  +TextStyle? labelSmall
  +TextStyle? headline1
  +TextStyle? headline2
  +TextStyle? headline3
  +TextStyle? headline4
  +TextStyle? headline5
  +TextStyle? headline6
  +TextStyle? subtitle1
  +TextStyle? subtitle2
  +TextStyle? bodyText1
  +TextStyle? bodyText2
  +TextStyle? caption
  +TextStyle? button
  +TextStyle? overline
  +int hashCode
  +TextTheme copyWith()
  +TextTheme merge()
  +TextTheme apply()
  {static} +TextTheme lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::text_theme::TextTheme" o-- "painting::text_style::TextStyle"
"foundation::diagnostics::Diagnosticable" <|-- "material::text_theme::TextTheme"

class "material::selection_area::SelectionArea" {
  +dynamic magnifierConfiguration
  +FocusNode? focusNode
  +TextSelectionControls? selectionControls
  +dynamic contextMenuBuilder
  +void Function(SelectedContent?)? onSelectionChanged
  +Widget child
  {static} -Widget _defaultContextMenuBuilder()
  +State<StatefulWidget> createState()
}

"material::selection_area::SelectionArea" o-- "widgets::focus_manager::FocusNode"
"material::selection_area::SelectionArea" o-- "widgets::text_selection::TextSelectionControls"
"material::selection_area::SelectionArea" o-- "foundation::basic_types::void Function(SelectedContent)"
"material::selection_area::SelectionArea" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "material::selection_area::SelectionArea"

class "material::selection_area::_SelectionAreaState" {
  -FocusNode? _internalNode
  -FocusNode _effectiveFocusNode
  +void dispose()
  +Widget build()
}

"material::selection_area::_SelectionAreaState" o-- "widgets::focus_manager::FocusNode"
"widgets::framework::State" <|-- "material::selection_area::_SelectionAreaState"

class "material::ink_ripple::_InkRippleFactory" {
  +InteractiveInkFeature create()
}

"material::ink_well::InteractiveInkFeatureFactory" <|-- "material::ink_ripple::_InkRippleFactory"

class "material::ink_ripple::InkRipple" {
  -Offset _position
  -BorderRadius _borderRadius
  -double _targetRadius
  -Rect Function()? _clipCallback
  -TextDirection _textDirection
  -Animation<double> _radius
  -AnimationController _radiusController
  -Animation<int> _fadeIn
  -AnimationController _fadeInController
  -Animation<int> _fadeOut
  -AnimationController _fadeOutController
  {static} +InteractiveInkFeatureFactory splashFactory
  {static} -Animatable<double> _easeCurveTween
  {static} -Animatable<double> _fadeOutIntervalTween
  +void confirm()
  +void cancel()
  -void _handleAlphaStatusChanged()
  +void dispose()
  +void paintFeature()
}

"material::ink_ripple::InkRipple" o-- "dart::ui::Offset"
"material::ink_ripple::InkRipple" o-- "painting::border_radius::BorderRadius"
"material::ink_ripple::InkRipple" o-- "material::material::Rect Function()"
"material::ink_ripple::InkRipple" o-- "dart::ui::TextDirection"
"material::ink_ripple::InkRipple" o-- "animation::animation::Animation<double>"
"material::ink_ripple::InkRipple" o-- "animation::animation_controller::AnimationController"
"material::ink_ripple::InkRipple" o-- "animation::animation::Animation<int>"
"material::ink_ripple::InkRipple" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::ink_ripple::InkRipple" o-- "animation::tween::Animatable<double>"
"material::ink_well::InteractiveInkFeature" <|-- "material::ink_ripple::InkRipple"

class "material::date_picker_theme::DatePickerThemeData" {
  +Color? backgroundColor
  +double? elevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +ShapeBorder? shape
  +Color? headerBackgroundColor
  +Color? headerForegroundColor
  +TextStyle? headerHeadlineStyle
  +TextStyle? headerHelpStyle
  +TextStyle? weekdayStyle
  +TextStyle? dayStyle
  +MaterialStateProperty<Color?>? dayForegroundColor
  +MaterialStateProperty<Color?>? dayBackgroundColor
  +MaterialStateProperty<Color?>? dayOverlayColor
  +MaterialStateProperty<Color?>? todayForegroundColor
  +MaterialStateProperty<Color?>? todayBackgroundColor
  +BorderSide? todayBorder
  +TextStyle? yearStyle
  +MaterialStateProperty<Color?>? yearForegroundColor
  +MaterialStateProperty<Color?>? yearBackgroundColor
  +MaterialStateProperty<Color?>? yearOverlayColor
  +Color? rangePickerBackgroundColor
  +double? rangePickerElevation
  +Color? rangePickerShadowColor
  +Color? rangePickerSurfaceTintColor
  +ShapeBorder? rangePickerShape
  +Color? rangePickerHeaderBackgroundColor
  +Color? rangePickerHeaderForegroundColor
  +TextStyle? rangePickerHeaderHeadlineStyle
  +TextStyle? rangePickerHeaderHelpStyle
  +Color? rangeSelectionBackgroundColor
  +MaterialStateProperty<Color?>? rangeSelectionOverlayColor
  +Color? dividerColor
  +InputDecorationTheme? inputDecorationTheme
  +ButtonStyle? cancelButtonStyle
  +ButtonStyle? confirmButtonStyle
  +int hashCode
  +DatePickerThemeData copyWith()
  {static} +DatePickerThemeData lerp()
  {static} -BorderSide? _lerpBorderSide()
  +bool ==()
  +void debugFillProperties()
}

"material::date_picker_theme::DatePickerThemeData" o-- "dart::ui::Color"
"material::date_picker_theme::DatePickerThemeData" o-- "painting::borders::ShapeBorder"
"material::date_picker_theme::DatePickerThemeData" o-- "painting::text_style::TextStyle"
"material::date_picker_theme::DatePickerThemeData" o-- "material::material_state::MaterialStateProperty<Color>"
"material::date_picker_theme::DatePickerThemeData" o-- "painting::borders::BorderSide"
"material::date_picker_theme::DatePickerThemeData" o-- "material::input_decorator::InputDecorationTheme"
"material::date_picker_theme::DatePickerThemeData" o-- "material::button_style::ButtonStyle"
"foundation::diagnostics::Diagnosticable" <|-- "material::date_picker_theme::DatePickerThemeData"

class "material::date_picker_theme::DatePickerTheme" {
  +DatePickerThemeData data
  {static} +DatePickerThemeData of()
  {static} +DatePickerThemeData? maybeOf()
  {static} +DatePickerThemeData defaults()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::date_picker_theme::DatePickerTheme" o-- "material::date_picker_theme::DatePickerThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::date_picker_theme::DatePickerTheme"

class "material::date_picker_theme::_DatePickerDefaultsM2" {
  +BuildContext context
  -ThemeData _theme
  -ColorScheme _colors
  -TextTheme _textTheme
  -bool _isDark
  +Color? headerBackgroundColor
  +ButtonStyle cancelButtonStyle
  +ButtonStyle confirmButtonStyle
  +Color? headerForegroundColor
  +TextStyle? headerHeadlineStyle
  +TextStyle? headerHelpStyle
  +TextStyle? weekdayStyle
  +TextStyle? dayStyle
  +MaterialStateProperty<Color?>? dayForegroundColor
  +MaterialStateProperty<Color?>? dayBackgroundColor
  +MaterialStateProperty<Color?>? dayOverlayColor
  +MaterialStateProperty<Color?>? todayForegroundColor
  +MaterialStateProperty<Color?>? todayBackgroundColor
  +BorderSide? todayBorder
  +TextStyle? yearStyle
  +Color? rangePickerBackgroundColor
  +Color? rangePickerShadowColor
  +Color? rangePickerSurfaceTintColor
  +Color? rangePickerHeaderBackgroundColor
  +Color? rangePickerHeaderForegroundColor
  +TextStyle? rangePickerHeaderHeadlineStyle
  +TextStyle? rangePickerHeaderHelpStyle
  +Color? rangeSelectionBackgroundColor
  +MaterialStateProperty<Color?>? rangeSelectionOverlayColor
}

"material::date_picker_theme::_DatePickerDefaultsM2" o-- "widgets::framework::BuildContext"
"material::date_picker_theme::_DatePickerDefaultsM2" o-- "material::theme_data::ThemeData"
"material::date_picker_theme::_DatePickerDefaultsM2" o-- "material::color_scheme::ColorScheme"
"material::date_picker_theme::_DatePickerDefaultsM2" o-- "material::text_theme::TextTheme"
"material::date_picker_theme::_DatePickerDefaultsM2" o-- "dart::ui::Color"
"material::date_picker_theme::_DatePickerDefaultsM2" o-- "material::button_style::ButtonStyle"
"material::date_picker_theme::_DatePickerDefaultsM2" o-- "painting::text_style::TextStyle"
"material::date_picker_theme::_DatePickerDefaultsM2" o-- "material::material_state::MaterialStateProperty<Color>"
"material::date_picker_theme::_DatePickerDefaultsM2" o-- "painting::borders::BorderSide"
"material::date_picker_theme::DatePickerThemeData" <|-- "material::date_picker_theme::_DatePickerDefaultsM2"

class "material::date_picker_theme::_DatePickerDefaultsM3" {
  +BuildContext context
  -ThemeData _theme
  -ColorScheme _colors
  -TextTheme _textTheme
  +Color? backgroundColor
  +ButtonStyle cancelButtonStyle
  +ButtonStyle confirmButtonStyle
  +Color? shadowColor
  +Color? surfaceTintColor
  +Color? headerBackgroundColor
  +Color? headerForegroundColor
  +TextStyle? headerHeadlineStyle
  +TextStyle? headerHelpStyle
  +TextStyle? weekdayStyle
  +TextStyle? dayStyle
  +MaterialStateProperty<Color?>? dayForegroundColor
  +MaterialStateProperty<Color?>? dayBackgroundColor
  +MaterialStateProperty<Color?>? dayOverlayColor
  +MaterialStateProperty<Color?>? todayForegroundColor
  +MaterialStateProperty<Color?>? todayBackgroundColor
  +BorderSide? todayBorder
  +TextStyle? yearStyle
  +MaterialStateProperty<Color?>? yearForegroundColor
  +MaterialStateProperty<Color?>? yearBackgroundColor
  +MaterialStateProperty<Color?>? yearOverlayColor
  +Color? rangePickerShadowColor
  +Color? rangePickerSurfaceTintColor
  +Color? rangeSelectionBackgroundColor
  +MaterialStateProperty<Color?>? rangeSelectionOverlayColor
  +Color? rangePickerHeaderBackgroundColor
  +Color? rangePickerHeaderForegroundColor
  +TextStyle? rangePickerHeaderHeadlineStyle
  +TextStyle? rangePickerHeaderHelpStyle
}

"material::date_picker_theme::_DatePickerDefaultsM3" o-- "widgets::framework::BuildContext"
"material::date_picker_theme::_DatePickerDefaultsM3" o-- "material::theme_data::ThemeData"
"material::date_picker_theme::_DatePickerDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::date_picker_theme::_DatePickerDefaultsM3" o-- "material::text_theme::TextTheme"
"material::date_picker_theme::_DatePickerDefaultsM3" o-- "dart::ui::Color"
"material::date_picker_theme::_DatePickerDefaultsM3" o-- "material::button_style::ButtonStyle"
"material::date_picker_theme::_DatePickerDefaultsM3" o-- "painting::text_style::TextStyle"
"material::date_picker_theme::_DatePickerDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::date_picker_theme::_DatePickerDefaultsM3" o-- "painting::borders::BorderSide"
"material::date_picker_theme::DatePickerThemeData" <|-- "material::date_picker_theme::_DatePickerDefaultsM3"

class "material::elevated_button_theme::ElevatedButtonThemeData" {
  +ButtonStyle? style
  +int hashCode
  {static} +ElevatedButtonThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::elevated_button_theme::ElevatedButtonThemeData" o-- "material::button_style::ButtonStyle"
"foundation::diagnostics::Diagnosticable" <|-- "material::elevated_button_theme::ElevatedButtonThemeData"

class "material::elevated_button_theme::ElevatedButtonTheme" {
  +ElevatedButtonThemeData data
  {static} +ElevatedButtonThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::elevated_button_theme::ElevatedButtonTheme" o-- "material::elevated_button_theme::ElevatedButtonThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::elevated_button_theme::ElevatedButtonTheme"

class "material::banner_theme::MaterialBannerThemeData" {
  +Color? backgroundColor
  +Color? surfaceTintColor
  +Color? shadowColor
  +Color? dividerColor
  +TextStyle? contentTextStyle
  +double? elevation
  +EdgeInsetsGeometry? padding
  +EdgeInsetsGeometry? leadingPadding
  +int hashCode
  +MaterialBannerThemeData copyWith()
  {static} +MaterialBannerThemeData lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::banner_theme::MaterialBannerThemeData" o-- "dart::ui::Color"
"material::banner_theme::MaterialBannerThemeData" o-- "painting::text_style::TextStyle"
"material::banner_theme::MaterialBannerThemeData" o-- "painting::edge_insets::EdgeInsetsGeometry"
"foundation::diagnostics::Diagnosticable" <|-- "material::banner_theme::MaterialBannerThemeData"

class "material::banner_theme::MaterialBannerTheme" {
  +MaterialBannerThemeData? data
  {static} +MaterialBannerThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::banner_theme::MaterialBannerTheme" o-- "material::banner_theme::MaterialBannerThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::banner_theme::MaterialBannerTheme"

class "material::scaffold::ScaffoldMessenger" {
  +Widget child
  {static} +ScaffoldMessengerState of()
  {static} +ScaffoldMessengerState? maybeOf()
  +ScaffoldMessengerState createState()
}

"material::scaffold::ScaffoldMessenger" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "material::scaffold::ScaffoldMessenger"

class "material::scaffold::ScaffoldMessengerState" {
  -LinkedHashSet<ScaffoldState> _scaffolds
  -Queue<ScaffoldFeatureController<MaterialBanner, MaterialBannerClosedReason>> _materialBanners
  -AnimationController? _materialBannerController
  -Queue<ScaffoldFeatureController<SnackBar, SnackBarClosedReason>> _snackBars
  -AnimationController? _snackBarController
  -Timer? _snackBarTimer
  -bool? _accessibleNavigation
  +void didChangeDependencies()
  -void _register()
  -void _unregister()
  -void _updateScaffolds()
  -bool _isRoot()
  +ScaffoldFeatureController<SnackBar, SnackBarClosedReason> showSnackBar()
  -void _handleSnackBarStatusChanged()
  +void removeCurrentSnackBar()
  +void hideCurrentSnackBar()
  +void clearSnackBars()
  +ScaffoldFeatureController<MaterialBanner, MaterialBannerClosedReason> showMaterialBanner()
  -void _handleMaterialBannerStatusChanged()
  +void removeCurrentMaterialBanner()
  +void hideCurrentMaterialBanner()
  +void clearMaterialBanners()
  +Widget build()
  +void dispose()
}

"material::scaffold::ScaffoldMessengerState" o-- "dart::collection::LinkedHashSet<ScaffoldState>"
"material::scaffold::ScaffoldMessengerState" o-- "dart::collection::Queue<ScaffoldFeatureController<MaterialBanner, MaterialBannerClosedReason>>"
"material::scaffold::ScaffoldMessengerState" o-- "animation::animation_controller::AnimationController"
"material::scaffold::ScaffoldMessengerState" o-- "dart::collection::Queue<ScaffoldFeatureController<SnackBar, SnackBarClosedReason>>"
"material::scaffold::ScaffoldMessengerState" o-- "dart::async::Timer"
"widgets::framework::State" <|-- "material::scaffold::ScaffoldMessengerState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::scaffold::ScaffoldMessengerState"

class "material::scaffold::_ScaffoldMessengerScope" {
  -ScaffoldMessengerState _scaffoldMessengerState
  +bool updateShouldNotify()
}

"material::scaffold::_ScaffoldMessengerScope" o-- "material::scaffold::ScaffoldMessengerState"
"widgets::framework::InheritedWidget" <|-- "material::scaffold::_ScaffoldMessengerScope"

class "material::scaffold::ScaffoldPrelayoutGeometry" {
  +Size floatingActionButtonSize
  +Size bottomSheetSize
  +double contentBottom
  +double contentTop
  +EdgeInsets minInsets
  +EdgeInsets minViewPadding
  +Size scaffoldSize
  +Size snackBarSize
  +Size materialBannerSize
  +TextDirection textDirection
}

"material::scaffold::ScaffoldPrelayoutGeometry" o-- "dart::ui::Size"
"material::scaffold::ScaffoldPrelayoutGeometry" o-- "painting::edge_insets::EdgeInsets"
"material::scaffold::ScaffoldPrelayoutGeometry" o-- "dart::ui::TextDirection"

class "material::scaffold::_TransitionSnapshotFabLocation" {
  +FloatingActionButtonLocation begin
  +FloatingActionButtonLocation end
  +FloatingActionButtonAnimator animator
  +double progress
  +Offset getOffset()
  +String toString()
}

"material::scaffold::_TransitionSnapshotFabLocation" o-- "material::floating_action_button_location::FloatingActionButtonLocation"
"material::scaffold::_TransitionSnapshotFabLocation" o-- "material::floating_action_button_location::FloatingActionButtonAnimator"
"material::floating_action_button_location::FloatingActionButtonLocation" <|-- "material::scaffold::_TransitionSnapshotFabLocation"

class "material::scaffold::ScaffoldGeometry" {
  +double? bottomNavigationBarTop
  +Rect? floatingActionButtonArea
  -ScaffoldGeometry _scaleFloatingActionButton()
  +ScaffoldGeometry copyWith()
}

"material::scaffold::ScaffoldGeometry" o-- "dart::ui::Rect"

class "material::scaffold::_ScaffoldGeometryNotifier" {
  +BuildContext context
  +double? floatingActionButtonScale
  +ScaffoldGeometry geometry
  +ScaffoldGeometry value
  -void _updateWith()
}

"material::scaffold::_ScaffoldGeometryNotifier" o-- "widgets::framework::BuildContext"
"material::scaffold::_ScaffoldGeometryNotifier" o-- "material::scaffold::ScaffoldGeometry"
"foundation::change_notifier::ChangeNotifier" <|-- "material::scaffold::_ScaffoldGeometryNotifier"
"foundation::change_notifier::ValueListenable" <|-- "material::scaffold::_ScaffoldGeometryNotifier"

class "material::scaffold::_BodyBoxConstraints" {
  +double bottomWidgetsHeight
  +double appBarHeight
  +double materialBannerHeight
  +int hashCode
  +bool ==()
}

"rendering::box::BoxConstraints" <|-- "material::scaffold::_BodyBoxConstraints"

class "material::scaffold::_BodyBuilder" {
  +Widget body
  +bool extendBody
  +bool extendBodyBehindAppBar
  +Widget build()
}

"material::scaffold::_BodyBuilder" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::scaffold::_BodyBuilder"

class "material::scaffold::_ScaffoldLayout" {
  +bool extendBody
  +bool extendBodyBehindAppBar
  +EdgeInsets minInsets
  +EdgeInsets minViewPadding
  +TextDirection textDirection
  +_ScaffoldGeometryNotifier geometryNotifier
  +FloatingActionButtonLocation previousFloatingActionButtonLocation
  +FloatingActionButtonLocation currentFloatingActionButtonLocation
  +double floatingActionButtonMoveAnimationProgress
  +FloatingActionButtonAnimator floatingActionButtonMotionAnimator
  +bool isSnackBarFloating
  +double? snackBarWidth
  +bool extendBodyBehindMaterialBanner
  +void performLayout()
  +bool shouldRelayout()
}

"material::scaffold::_ScaffoldLayout" o-- "painting::edge_insets::EdgeInsets"
"material::scaffold::_ScaffoldLayout" o-- "dart::ui::TextDirection"
"material::scaffold::_ScaffoldLayout" o-- "material::scaffold::_ScaffoldGeometryNotifier"
"material::scaffold::_ScaffoldLayout" o-- "material::floating_action_button_location::FloatingActionButtonLocation"
"material::scaffold::_ScaffoldLayout" o-- "material::floating_action_button_location::FloatingActionButtonAnimator"
"rendering::custom_layout::MultiChildLayoutDelegate" <|-- "material::scaffold::_ScaffoldLayout"

class "material::scaffold::_FloatingActionButtonTransition" {
  +Widget? child
  +Animation<double> fabMoveAnimation
  +FloatingActionButtonAnimator fabMotionAnimator
  +_ScaffoldGeometryNotifier geometryNotifier
  +AnimationController currentController
  +_FloatingActionButtonTransitionState createState()
}

"material::scaffold::_FloatingActionButtonTransition" o-- "widgets::framework::Widget"
"material::scaffold::_FloatingActionButtonTransition" o-- "animation::animation::Animation<double>"
"material::scaffold::_FloatingActionButtonTransition" o-- "material::floating_action_button_location::FloatingActionButtonAnimator"
"material::scaffold::_FloatingActionButtonTransition" o-- "material::scaffold::_ScaffoldGeometryNotifier"
"material::scaffold::_FloatingActionButtonTransition" o-- "animation::animation_controller::AnimationController"
"widgets::framework::StatefulWidget" <|-- "material::scaffold::_FloatingActionButtonTransition"

class "material::scaffold::_FloatingActionButtonTransitionState" {
  -AnimationController _previousController
  -Animation<double> _previousScaleAnimation
  -Animation<double> _previousRotationAnimation
  -Animation<double> _currentScaleAnimation
  -Animation<double> _extendedCurrentScaleAnimation
  -Animation<double> _currentRotationAnimation
  -Widget? _previousChild
  {static} -Animatable<double> _entranceTurnTween
  +void initState()
  +void dispose()
  +void didUpdateWidget()
  -void _updateAnimations()
  -void _handlePreviousAnimationStatusChanged()
  -bool _isExtendedFloatingActionButton()
  +Widget build()
  -void _onProgressChanged()
  -void _updateGeometryScale()
}

"material::scaffold::_FloatingActionButtonTransitionState" o-- "animation::animation_controller::AnimationController"
"material::scaffold::_FloatingActionButtonTransitionState" o-- "animation::animation::Animation<double>"
"material::scaffold::_FloatingActionButtonTransitionState" o-- "widgets::framework::Widget"
"material::scaffold::_FloatingActionButtonTransitionState" o-- "animation::tween::Animatable<double>"
"widgets::framework::State" <|-- "material::scaffold::_FloatingActionButtonTransitionState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::scaffold::_FloatingActionButtonTransitionState"

class "material::scaffold::Scaffold" {
  +bool extendBody
  +bool extendBodyBehindAppBar
  +PreferredSizeWidget? appBar
  +Widget? body
  +Widget? floatingActionButton
  +FloatingActionButtonLocation? floatingActionButtonLocation
  +FloatingActionButtonAnimator? floatingActionButtonAnimator
  +List<Widget>? persistentFooterButtons
  +AlignmentDirectional persistentFooterAlignment
  +Widget? drawer
  +void Function(bool)? onDrawerChanged
  +Widget? endDrawer
  +void Function(bool)? onEndDrawerChanged
  +Color? drawerScrimColor
  +Color? backgroundColor
  +Widget? bottomNavigationBar
  +Widget? bottomSheet
  +bool? resizeToAvoidBottomInset
  +bool primary
  +DragStartBehavior drawerDragStartBehavior
  +double? drawerEdgeDragWidth
  +bool drawerEnableOpenDragGesture
  +bool endDrawerEnableOpenDragGesture
  +String? restorationId
  {static} +ScaffoldState of()
  {static} +ScaffoldState? maybeOf()
  {static} +ValueListenable<ScaffoldGeometry> geometryOf()
  {static} +bool hasDrawer()
  +ScaffoldState createState()
}

"material::scaffold::Scaffold" o-- "widgets::preferred_size::PreferredSizeWidget"
"material::scaffold::Scaffold" o-- "widgets::framework::Widget"
"material::scaffold::Scaffold" o-- "material::floating_action_button_location::FloatingActionButtonLocation"
"material::scaffold::Scaffold" o-- "material::floating_action_button_location::FloatingActionButtonAnimator"
"material::scaffold::Scaffold" o-- "painting::alignment::AlignmentDirectional"
"material::scaffold::Scaffold" o-- "material::drawer::void Function(bool)"
"material::scaffold::Scaffold" o-- "dart::ui::Color"
"material::scaffold::Scaffold" o-- "gestures::recognizer::DragStartBehavior"
"widgets::framework::StatefulWidget" <|-- "material::scaffold::Scaffold"

class "material::scaffold::ScaffoldState" {
  -GlobalKey<DrawerControllerState> _drawerKey
  -GlobalKey<DrawerControllerState> _endDrawerKey
  -GlobalKey<State<StatefulWidget>> _bodyKey
  -double? _appBarMaxHeight
  -RestorableBool _drawerOpened
  -RestorableBool _endDrawerOpened
  -ScaffoldMessengerState? _scaffoldMessenger
  -ScaffoldFeatureController<SnackBar, SnackBarClosedReason>? _messengerSnackBar
  -ScaffoldFeatureController<MaterialBanner, MaterialBannerClosedReason>? _messengerMaterialBanner
  -List<_StandardBottomSheet> _dismissedBottomSheets
  -PersistentBottomSheetController<dynamic>? _currentBottomSheet
  -GlobalKey<State<StatefulWidget>> _currentBottomSheetKey
  -LocalHistoryEntry? _persistentSheetHistoryEntry
  -AnimationController _floatingActionButtonMoveController
  -FloatingActionButtonAnimator _floatingActionButtonAnimator
  -FloatingActionButtonLocation? _previousFloatingActionButtonLocation
  -FloatingActionButtonLocation? _floatingActionButtonLocation
  -AnimationController _floatingActionButtonVisibilityController
  -_ScaffoldGeometryNotifier _geometryNotifier
  -bool _showBodyScrim
  -Color _bodyScrimColor
  +String? restorationId
  +bool hasAppBar
  +bool hasDrawer
  +bool hasEndDrawer
  +bool hasFloatingActionButton
  +double? appBarMaxHeight
  +bool isDrawerOpen
  +bool isEndDrawerOpen
  -double _floatingActionButtonVisibilityValue
  -bool _resizeToAvoidBottomInset
  +void restoreState()
  -void _drawerOpenedCallback()
  -void _endDrawerOpenedCallback()
  +void openDrawer()
  +void openEndDrawer()
  -void _updateSnackBar()
  -void _updateMaterialBanner()
  -void _maybeBuildPersistentBottomSheet()
  -void _closeCurrentBottomSheet()
  +void closeDrawer()
  +void closeEndDrawer()
  -void _updatePersistentBottomSheet()
  -PersistentBottomSheetController<T> _buildBottomSheet()
  +PersistentBottomSheetController<T> showBottomSheet()
  -TickerFuture _showFloatingActionButton()
  -void _moveFloatingActionButton()
  -void _handleStatusBarTap()
  +void initState()
  +void didUpdateWidget()
  +void didChangeDependencies()
  +void dispose()
  -void _addIfNonNull()
  -void _buildEndDrawer()
  -void _buildDrawer()
  +void showBodyScrim()
  +Widget build()
}

"material::scaffold::ScaffoldState" o-- "widgets::framework::GlobalKey<DrawerControllerState>"
"material::scaffold::ScaffoldState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"material::scaffold::ScaffoldState" o-- "widgets::restoration_properties::RestorableBool"
"material::scaffold::ScaffoldState" o-- "material::scaffold::ScaffoldMessengerState"
"material::scaffold::ScaffoldState" o-- "material::scaffold::ScaffoldFeatureController<SnackBar, SnackBarClosedReason>"
"material::scaffold::ScaffoldState" o-- "material::scaffold::ScaffoldFeatureController<MaterialBanner, MaterialBannerClosedReason>"
"material::scaffold::ScaffoldState" o-- "material::scaffold::PersistentBottomSheetController<dynamic>"
"material::scaffold::ScaffoldState" o-- "widgets::routes::LocalHistoryEntry"
"material::scaffold::ScaffoldState" o-- "animation::animation_controller::AnimationController"
"material::scaffold::ScaffoldState" o-- "material::floating_action_button_location::FloatingActionButtonAnimator"
"material::scaffold::ScaffoldState" o-- "material::floating_action_button_location::FloatingActionButtonLocation"
"material::scaffold::ScaffoldState" o-- "material::scaffold::_ScaffoldGeometryNotifier"
"material::scaffold::ScaffoldState" o-- "dart::ui::Color"
"widgets::framework::State" <|-- "material::scaffold::ScaffoldState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::scaffold::ScaffoldState"
"widgets::restoration::RestorationMixin" <|-- "material::scaffold::ScaffoldState"

class "material::scaffold::_DismissDrawerAction" {
  +BuildContext context
  +bool isEnabled()
  +void invoke()
}

"material::scaffold::_DismissDrawerAction" o-- "widgets::framework::BuildContext"
"widgets::actions::DismissAction" <|-- "material::scaffold::_DismissDrawerAction"

class "material::scaffold::ScaffoldFeatureController" {
  -T _widget
  -Completer<U> _completer
  +void Function() close
  +void Function(void Function())? setState
  +Future<U> closed
}

"material::scaffold::ScaffoldFeatureController" o-- "dart::async::Completer<U>"
"material::scaffold::ScaffoldFeatureController" o-- "dart::ui::void Function()"
"material::scaffold::ScaffoldFeatureController" o-- "widgets::framework::void Function(void Function())"

class "material::scaffold::_BottomSheetSuspendedCurve" {
  +double startingPoint
  +Curve curve
  +double transform()
  +String toString()
}

"material::scaffold::_BottomSheetSuspendedCurve" o-- "animation::curves::Curve"
"animation::curves::ParametricCurve" <|-- "material::scaffold::_BottomSheetSuspendedCurve"

class "material::scaffold::_StandardBottomSheet" {
  +AnimationController animationController
  +bool enableDrag
  +void Function()? onClosing
  +void Function()? onDismissed
  +void Function()? onDispose
  +Widget Function(BuildContext) builder
  +bool isPersistent
  +Color? backgroundColor
  +double? elevation
  +ShapeBorder? shape
  +Clip? clipBehavior
  +BoxConstraints? constraints
  +_StandardBottomSheetState createState()
}

"material::scaffold::_StandardBottomSheet" o-- "animation::animation_controller::AnimationController"
"material::scaffold::_StandardBottomSheet" o-- "dart::ui::void Function()"
"material::scaffold::_StandardBottomSheet" o-- "widgets::framework::Widget Function(BuildContext)"
"material::scaffold::_StandardBottomSheet" o-- "dart::ui::Color"
"material::scaffold::_StandardBottomSheet" o-- "painting::borders::ShapeBorder"
"material::scaffold::_StandardBottomSheet" o-- "dart::ui::Clip"
"material::scaffold::_StandardBottomSheet" o-- "rendering::box::BoxConstraints"
"widgets::framework::StatefulWidget" <|-- "material::scaffold::_StandardBottomSheet"

class "material::scaffold::_StandardBottomSheetState" {
  +ParametricCurve<double> animationCurve
  +void initState()
  +void dispose()
  +void didUpdateWidget()
  +void close()
  -void _handleDragStart()
  -void _handleDragEnd()
  -void _handleStatusChange()
  +bool extentChanged()
  +Widget build()
}

"material::scaffold::_StandardBottomSheetState" o-- "animation::curves::ParametricCurve<double>"
"widgets::framework::State" <|-- "material::scaffold::_StandardBottomSheetState"

class "material::scaffold::PersistentBottomSheetController" {
  -bool _isLocalHistoryEntry
}

"material::scaffold::ScaffoldFeatureController" <|-- "material::scaffold::PersistentBottomSheetController"

class "material::scaffold::_ScaffoldScope" {
  +bool hasDrawer
  +_ScaffoldGeometryNotifier geometryNotifier
  +bool updateShouldNotify()
}

"material::scaffold::_ScaffoldScope" o-- "material::scaffold::_ScaffoldGeometryNotifier"
"widgets::framework::InheritedWidget" <|-- "material::scaffold::_ScaffoldScope"

class "material::scaffold::_ScaffoldSlot" {
  +int index
  {static} +List<_ScaffoldSlot> values
  {static} +_ScaffoldSlot body
  {static} +_ScaffoldSlot appBar
  {static} +_ScaffoldSlot bodyScrim
  {static} +_ScaffoldSlot bottomSheet
  {static} +_ScaffoldSlot snackBar
  {static} +_ScaffoldSlot materialBanner
  {static} +_ScaffoldSlot persistentFooter
  {static} +_ScaffoldSlot bottomNavigationBar
  {static} +_ScaffoldSlot floatingActionButton
  {static} +_ScaffoldSlot drawer
  {static} +_ScaffoldSlot endDrawer
  {static} +_ScaffoldSlot statusBar
}

"material::scaffold::_ScaffoldSlot" o-- "material::scaffold::_ScaffoldSlot"
"dart::core::Enum" <|-- "material::scaffold::_ScaffoldSlot"

abstract class "material::feedback::Feedback" {
  {static} +Future<void> forTap()
  {static} +void Function()? wrapForTap()
  {static} +Future<void> forLongPress()
  {static} +void Function()? wrapForLongPress()
  {static} -TargetPlatform _platform()
}

class "material::switch_theme::SwitchThemeData" {
  +MaterialStateProperty<Color?>? thumbColor
  +MaterialStateProperty<Color?>? trackColor
  +MaterialStateProperty<Color?>? trackOutlineColor
  +MaterialStateProperty<double?>? trackOutlineWidth
  +MaterialTapTargetSize? materialTapTargetSize
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +MaterialStateProperty<Color?>? overlayColor
  +double? splashRadius
  +MaterialStateProperty<Icon?>? thumbIcon
  +int hashCode
  +SwitchThemeData copyWith()
  {static} +SwitchThemeData lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::switch_theme::SwitchThemeData" o-- "material::material_state::MaterialStateProperty<Color>"
"material::switch_theme::SwitchThemeData" o-- "material::material_state::MaterialStateProperty<double>"
"material::switch_theme::SwitchThemeData" o-- "material::theme_data::MaterialTapTargetSize"
"material::switch_theme::SwitchThemeData" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::switch_theme::SwitchThemeData" o-- "material::material_state::MaterialStateProperty<Icon>"
"foundation::diagnostics::Diagnosticable" <|-- "material::switch_theme::SwitchThemeData"

class "material::switch_theme::SwitchTheme" {
  +SwitchThemeData data
  {static} +SwitchThemeData of()
  +bool updateShouldNotify()
}

"material::switch_theme::SwitchTheme" o-- "material::switch_theme::SwitchThemeData"
"widgets::framework::InheritedWidget" <|-- "material::switch_theme::SwitchTheme"

class "material::menu_theme::MenuThemeData" {
  +MenuStyle? style
  +int hashCode
  {static} +MenuThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::menu_theme::MenuThemeData" o-- "material::menu_style::MenuStyle"
"foundation::diagnostics::Diagnosticable" <|-- "material::menu_theme::MenuThemeData"

class "material::menu_theme::MenuTheme" {
  +MenuThemeData data
  {static} +MenuThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::menu_theme::MenuTheme" o-- "material::menu_theme::MenuThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::menu_theme::MenuTheme"

class "material::toggle_buttons_theme::ToggleButtonsThemeData" {
  +TextStyle? textStyle
  +BoxConstraints? constraints
  +Color? color
  +Color? selectedColor
  +Color? disabledColor
  +Color? fillColor
  +Color? focusColor
  +Color? highlightColor
  +Color? splashColor
  +Color? hoverColor
  +Color? borderColor
  +Color? selectedBorderColor
  +Color? disabledBorderColor
  +double? borderWidth
  +BorderRadius? borderRadius
  +int hashCode
  +ToggleButtonsThemeData copyWith()
  {static} +ToggleButtonsThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::toggle_buttons_theme::ToggleButtonsThemeData" o-- "painting::text_style::TextStyle"
"material::toggle_buttons_theme::ToggleButtonsThemeData" o-- "rendering::box::BoxConstraints"
"material::toggle_buttons_theme::ToggleButtonsThemeData" o-- "dart::ui::Color"
"material::toggle_buttons_theme::ToggleButtonsThemeData" o-- "painting::border_radius::BorderRadius"
"foundation::diagnostics::Diagnosticable" <|-- "material::toggle_buttons_theme::ToggleButtonsThemeData"

class "material::toggle_buttons_theme::ToggleButtonsTheme" {
  +ToggleButtonsThemeData data
  {static} +ToggleButtonsThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::toggle_buttons_theme::ToggleButtonsTheme" o-- "material::toggle_buttons_theme::ToggleButtonsThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::toggle_buttons_theme::ToggleButtonsTheme"

class "material::text_selection_toolbar_text_button::TextSelectionToolbarTextButton" {
  {static} -double _kMiddlePadding
  {static} -double _kEndPadding
  +Widget child
  +void Function()? onPressed
  +EdgeInsets padding
  +AlignmentGeometry? alignment
  {static} -Color _defaultForegroundColorLight
  {static} -Color _defaultForegroundColorDark
  {static} -Color _defaultBackgroundColorTransparent
  {static} +EdgeInsets getPadding()
  {static} -double _getLeftPadding()
  {static} -double _getRightPadding()
  {static} -_TextSelectionToolbarItemPosition _getPosition()
  +TextSelectionToolbarTextButton copyWith()
  {static} -Color _getForegroundColor()
  +Widget build()
}

"material::text_selection_toolbar_text_button::TextSelectionToolbarTextButton" o-- "widgets::framework::Widget"
"material::text_selection_toolbar_text_button::TextSelectionToolbarTextButton" o-- "dart::ui::void Function()"
"material::text_selection_toolbar_text_button::TextSelectionToolbarTextButton" o-- "painting::edge_insets::EdgeInsets"
"material::text_selection_toolbar_text_button::TextSelectionToolbarTextButton" o-- "painting::alignment::AlignmentGeometry"
"material::text_selection_toolbar_text_button::TextSelectionToolbarTextButton" o-- "dart::ui::Color"
"widgets::framework::StatelessWidget" <|-- "material::text_selection_toolbar_text_button::TextSelectionToolbarTextButton"

class "material::text_selection_toolbar_text_button::_TextSelectionToolbarItemPosition" {
  +int index
  {static} +List<_TextSelectionToolbarItemPosition> values
  {static} +_TextSelectionToolbarItemPosition first
  {static} +_TextSelectionToolbarItemPosition middle
  {static} +_TextSelectionToolbarItemPosition last
  {static} +_TextSelectionToolbarItemPosition only
}

"material::text_selection_toolbar_text_button::_TextSelectionToolbarItemPosition" o-- "material::text_selection_toolbar_text_button::_TextSelectionToolbarItemPosition"
"dart::core::Enum" <|-- "material::text_selection_toolbar_text_button::_TextSelectionToolbarItemPosition"

class "material::text_field::_TextFieldSelectionGestureDetectorBuilder" {
  -_TextFieldState _state
  +void onForcePressStart()
  +void onForcePressEnd()
  +void onSingleTapUp()
  +void onSingleLongTapStart()
}

"material::text_field::_TextFieldSelectionGestureDetectorBuilder" o-- "material::text_field::_TextFieldState"
"widgets::text_selection::TextSelectionGestureDetectorBuilder" <|-- "material::text_field::_TextFieldSelectionGestureDetectorBuilder"

class "material::text_field::TextField" {
  +dynamic magnifierConfiguration
  +TextEditingController? controller
  +FocusNode? focusNode
  +InputDecoration? decoration
  +TextInputType keyboardType
  +TextInputAction? textInputAction
  +TextCapitalization textCapitalization
  +TextStyle? style
  +StrutStyle? strutStyle
  +TextAlign textAlign
  +TextAlignVertical? textAlignVertical
  +TextDirection? textDirection
  +bool autofocus
  +String obscuringCharacter
  +bool obscureText
  +bool autocorrect
  +SmartDashesType smartDashesType
  +SmartQuotesType smartQuotesType
  +bool enableSuggestions
  +int? maxLines
  +int? minLines
  +bool expands
  +bool readOnly
  +ToolbarOptions? toolbarOptions
  +bool? showCursor
  {static} +int noMaxLength
  +int? maxLength
  +MaxLengthEnforcement? maxLengthEnforcement
  +void Function(String)? onChanged
  +void Function()? onEditingComplete
  +void Function(String)? onSubmitted
  +void Function(String, Map<String, dynamic>)? onAppPrivateCommand
  +List<TextInputFormatter>? inputFormatters
  +bool? enabled
  +double cursorWidth
  +double? cursorHeight
  +Radius? cursorRadius
  +bool? cursorOpacityAnimates
  +Color? cursorColor
  +BoxHeightStyle selectionHeightStyle
  +BoxWidthStyle selectionWidthStyle
  +Brightness? keyboardAppearance
  +EdgeInsets scrollPadding
  +bool enableInteractiveSelection
  +TextSelectionControls? selectionControls
  +DragStartBehavior dragStartBehavior
  +void Function()? onTap
  +dynamic onTapOutside
  +MouseCursor? mouseCursor
  +Widget? Function(BuildContext, {required int currentLength, required bool isFocused, required int? maxLength})? buildCounter
  +ScrollPhysics? scrollPhysics
  +ScrollController? scrollController
  +Iterable<String>? autofillHints
  +Clip clipBehavior
  +String? restorationId
  +bool scribbleEnabled
  +bool enableIMEPersonalizedLearning
  +dynamic contentInsertionConfiguration
  +dynamic contextMenuBuilder
  +bool canRequestFocus
  +dynamic undoController
  +dynamic spellCheckConfiguration
  {static} +TextStyle materialMisspelledTextStyle
  +bool selectionEnabled
  {static} -Widget _defaultContextMenuBuilder()
  {static} +Widget defaultSpellCheckSuggestionsToolbarBuilder()
  {static} +dynamic inferAndroidSpellCheckConfiguration()
  +State<TextField> createState()
  +void debugFillProperties()
}

"material::text_field::TextField" o-- "widgets::editable_text::TextEditingController"
"material::text_field::TextField" o-- "widgets::focus_manager::FocusNode"
"material::text_field::TextField" o-- "material::input_decorator::InputDecoration"
"material::text_field::TextField" o-- "services::text_input::TextInputType"
"material::text_field::TextField" o-- "services::text_input::TextInputAction"
"material::text_field::TextField" o-- "services::text_input::TextCapitalization"
"material::text_field::TextField" o-- "painting::text_style::TextStyle"
"material::text_field::TextField" o-- "painting::strut_style::StrutStyle"
"material::text_field::TextField" o-- "dart::ui::TextAlign"
"material::text_field::TextField" o-- "painting::alignment::TextAlignVertical"
"material::text_field::TextField" o-- "dart::ui::TextDirection"
"material::text_field::TextField" o-- "services::text_input::SmartDashesType"
"material::text_field::TextField" o-- "services::text_input::SmartQuotesType"
"material::text_field::TextField" o-- "widgets::editable_text::ToolbarOptions"
"material::text_field::TextField" o-- "services::text_formatter::MaxLengthEnforcement"
"material::text_field::TextField" o-- "foundation::basic_types::void Function(String)"
"material::text_field::TextField" o-- "dart::ui::void Function()"
"material::text_field::TextField" o-- "widgets::editable_text::void Function(String, Map<String, dynamic>)"
"material::text_field::TextField" o-- "dart::ui::Radius"
"material::text_field::TextField" o-- "dart::ui::Color"
"material::text_field::TextField" o-- "dart::ui::BoxHeightStyle"
"material::text_field::TextField" o-- "dart::ui::BoxWidthStyle"
"material::text_field::TextField" o-- "dart::ui::Brightness"
"material::text_field::TextField" o-- "painting::edge_insets::EdgeInsets"
"material::text_field::TextField" o-- "widgets::text_selection::TextSelectionControls"
"material::text_field::TextField" o-- "gestures::recognizer::DragStartBehavior"
"material::text_field::TextField" o-- "gestures::tap::void Function()"
"material::text_field::TextField" o-- "services::mouse_cursor::MouseCursor"
"material::text_field::TextField" o-- "material::text_field::Widget Function(BuildContext, {required int currentLength, required bool isFocused, required int maxLength})"
"material::text_field::TextField" o-- "widgets::scroll_physics::ScrollPhysics"
"material::text_field::TextField" o-- "widgets::scroll_controller::ScrollController"
"material::text_field::TextField" o-- "dart::ui::Clip"
"widgets::framework::StatefulWidget" <|-- "material::text_field::TextField"

class "material::text_field::_TextFieldState" {
  -RestorableTextEditingController? _controller
  -FocusNode? _focusNode
  -bool _isHovering
  -bool _showSelectionHandles
  -_TextFieldSelectionGestureDetectorBuilder _selectionGestureDetectorBuilder
  +bool forcePressEnabled
  +GlobalKey<EditableTextState> editableTextKey
  -TextEditingController _effectiveController
  -FocusNode _effectiveFocusNode
  -MaxLengthEnforcement _effectiveMaxLengthEnforcement
  +bool needsCounter
  +bool selectionEnabled
  -bool _isEnabled
  -int _currentLength
  -bool _hasIntrinsicError
  -bool _hasError
  -Color _errorColor
  -bool _canRequestFocus
  +String? restorationId
  -EditableTextState? _editableText
  +String autofillId
  +TextInputConfiguration textInputConfiguration
  -Set<MaterialState> _materialState
  -InputDecoration _getEffectiveDecoration()
  +void initState()
  +void didChangeDependencies()
  +void didUpdateWidget()
  +void restoreState()
  -void _registerController()
  -void _createLocalController()
  +void dispose()
  -void _requestKeyboard()
  -bool _shouldShowSelectionHandles()
  -void _handleFocusChanged()
  -void _handleSelectionChanged()
  -void _handleSelectionHandleTapped()
  -void _handleHover()
  +void autofill()
  -TextStyle _getInputStyleForState()
  +Widget build()
}

"material::text_field::_TextFieldState" o-- "widgets::restoration_properties::RestorableTextEditingController"
"material::text_field::_TextFieldState" o-- "widgets::focus_manager::FocusNode"
"material::text_field::_TextFieldState" o-- "material::text_field::_TextFieldSelectionGestureDetectorBuilder"
"material::text_field::_TextFieldState" o-- "widgets::framework::GlobalKey<EditableTextState>"
"material::text_field::_TextFieldState" o-- "widgets::editable_text::TextEditingController"
"material::text_field::_TextFieldState" o-- "services::text_formatter::MaxLengthEnforcement"
"material::text_field::_TextFieldState" o-- "dart::ui::Color"
"material::text_field::_TextFieldState" o-- "widgets::editable_text::EditableTextState"
"material::text_field::_TextFieldState" o-- "services::text_input::TextInputConfiguration"
"widgets::framework::State" <|-- "material::text_field::_TextFieldState"
"widgets::restoration::RestorationMixin" <|-- "material::text_field::_TextFieldState"
"widgets::text_selection::TextSelectionGestureDetectorBuilderDelegate" <|-- "material::text_field::_TextFieldState"
"services::autofill::AutofillClient" <|-- "material::text_field::_TextFieldState"

class "material::drawer_theme::DrawerThemeData" {
  +Color? backgroundColor
  +Color? scrimColor
  +double? elevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +ShapeBorder? shape
  +ShapeBorder? endShape
  +double? width
  +int hashCode
  +DrawerThemeData copyWith()
  {static} +DrawerThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::drawer_theme::DrawerThemeData" o-- "dart::ui::Color"
"material::drawer_theme::DrawerThemeData" o-- "painting::borders::ShapeBorder"
"foundation::diagnostics::Diagnosticable" <|-- "material::drawer_theme::DrawerThemeData"

class "material::drawer_theme::DrawerTheme" {
  +DrawerThemeData data
  {static} +DrawerThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::drawer_theme::DrawerTheme" o-- "material::drawer_theme::DrawerThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::drawer_theme::DrawerTheme"

class "material::action_icons_theme::ActionIconThemeData" {
  +Widget Function(BuildContext)? backButtonIconBuilder
  +Widget Function(BuildContext)? closeButtonIconBuilder
  +Widget Function(BuildContext)? drawerButtonIconBuilder
  +Widget Function(BuildContext)? endDrawerButtonIconBuilder
  +int hashCode
  +ActionIconThemeData copyWith()
  {static} +ActionIconThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::action_icons_theme::ActionIconThemeData" o-- "widgets::framework::Widget Function(BuildContext)"
"foundation::diagnostics::Diagnosticable" <|-- "material::action_icons_theme::ActionIconThemeData"

class "material::action_icons_theme::ActionIconTheme" {
  +ActionIconThemeData data
  {static} +ActionIconThemeData? of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::action_icons_theme::ActionIconTheme" o-- "material::action_icons_theme::ActionIconThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::action_icons_theme::ActionIconTheme"

class "material::navigation_bar::NavigationBar" {
  +Duration? animationDuration
  +int selectedIndex
  +List<Widget> destinations
  +void Function(int)? onDestinationSelected
  +Color? backgroundColor
  +double? elevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +Color? indicatorColor
  +ShapeBorder? indicatorShape
  +double? height
  +NavigationDestinationLabelBehavior? labelBehavior
  +MaterialStateProperty<Color?>? overlayColor
  -void Function() _handleTap()
  +Widget build()
}

"material::navigation_bar::NavigationBar" o-- "foundation::basic_types::void Function(int)"
"material::navigation_bar::NavigationBar" o-- "dart::ui::Color"
"material::navigation_bar::NavigationBar" o-- "painting::borders::ShapeBorder"
"material::navigation_bar::NavigationBar" o-- "material::navigation_bar::NavigationDestinationLabelBehavior"
"material::navigation_bar::NavigationBar" o-- "material::material_state::MaterialStateProperty<Color>"
"widgets::framework::StatelessWidget" <|-- "material::navigation_bar::NavigationBar"

class "material::navigation_bar::NavigationDestination" {
  +Widget icon
  +Widget? selectedIcon
  +String label
  +String? tooltip
  +bool enabled
  +Widget build()
}

"material::navigation_bar::NavigationDestination" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::navigation_bar::NavigationDestination"

class "material::navigation_bar::_NavigationDestinationBuilder" {
  +Widget Function(BuildContext) buildIcon
  +Widget Function(BuildContext) buildLabel
  +String label
  +String? tooltip
  +bool enabled
  +State<_NavigationDestinationBuilder> createState()
}

"material::navigation_bar::_NavigationDestinationBuilder" o-- "widgets::framework::Widget Function(BuildContext)"
"widgets::framework::StatefulWidget" <|-- "material::navigation_bar::_NavigationDestinationBuilder"

class "material::navigation_bar::_NavigationDestinationBuilderState" {
  +GlobalKey<State<StatefulWidget>> iconKey
  +Widget build()
}

"material::navigation_bar::_NavigationDestinationBuilderState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::framework::State" <|-- "material::navigation_bar::_NavigationDestinationBuilderState"

class "material::navigation_bar::_IndicatorInkWell" {
  +GlobalKey<State<StatefulWidget>> iconKey
  +NavigationDestinationLabelBehavior labelBehavior
  +Rect Function()? getRectCallback()
}

"material::navigation_bar::_IndicatorInkWell" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"material::navigation_bar::_IndicatorInkWell" o-- "material::navigation_bar::NavigationDestinationLabelBehavior"
"material::ink_well::InkResponse" <|-- "material::navigation_bar::_IndicatorInkWell"

class "material::navigation_bar::_NavigationDestinationInfo" {
  +int index
  +int selectedIndex
  +int totalNumberOfDestinations
  +Animation<double> selectedAnimation
  +NavigationDestinationLabelBehavior labelBehavior
  +Color? indicatorColor
  +ShapeBorder? indicatorShape
  +MaterialStateProperty<Color?>? overlayColor
  +void Function() onTap
  {static} +_NavigationDestinationInfo of()
  +bool updateShouldNotify()
}

"material::navigation_bar::_NavigationDestinationInfo" o-- "animation::animation::Animation<double>"
"material::navigation_bar::_NavigationDestinationInfo" o-- "material::navigation_bar::NavigationDestinationLabelBehavior"
"material::navigation_bar::_NavigationDestinationInfo" o-- "dart::ui::Color"
"material::navigation_bar::_NavigationDestinationInfo" o-- "painting::borders::ShapeBorder"
"material::navigation_bar::_NavigationDestinationInfo" o-- "material::material_state::MaterialStateProperty<Color>"
"material::navigation_bar::_NavigationDestinationInfo" o-- "dart::ui::void Function()"
"widgets::framework::InheritedWidget" <|-- "material::navigation_bar::_NavigationDestinationInfo"

class "material::navigation_bar::NavigationIndicator" {
  +Animation<double> animation
  +Color? color
  +double width
  +double height
  +BorderRadius borderRadius
  +ShapeBorder? shape
  +Widget build()
}

"material::navigation_bar::NavigationIndicator" o-- "animation::animation::Animation<double>"
"material::navigation_bar::NavigationIndicator" o-- "dart::ui::Color"
"material::navigation_bar::NavigationIndicator" o-- "painting::border_radius::BorderRadius"
"material::navigation_bar::NavigationIndicator" o-- "painting::borders::ShapeBorder"
"widgets::framework::StatelessWidget" <|-- "material::navigation_bar::NavigationIndicator"

class "material::navigation_bar::_NavigationBarDestinationLayout" {
  +Widget icon
  +GlobalKey<State<StatefulWidget>> iconKey
  +Widget label
  {static} -Key _labelKey
  +Widget build()
}

"material::navigation_bar::_NavigationBarDestinationLayout" o-- "widgets::framework::Widget"
"material::navigation_bar::_NavigationBarDestinationLayout" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"material::navigation_bar::_NavigationBarDestinationLayout" o-- "foundation::key::Key"
"widgets::framework::StatelessWidget" <|-- "material::navigation_bar::_NavigationBarDestinationLayout"

class "material::navigation_bar::_DestinationLayoutAnimationBuilder" {
  +Widget Function(BuildContext, Animation<double>) builder
  +Widget build()
}

"material::navigation_bar::_DestinationLayoutAnimationBuilder" o-- "null::Widget Function(BuildContext, Animation<double>)"
"widgets::framework::StatelessWidget" <|-- "material::navigation_bar::_DestinationLayoutAnimationBuilder"

class "material::navigation_bar::_NavigationBarDestinationSemantics" {
  +Widget child
  +Widget build()
}

"material::navigation_bar::_NavigationBarDestinationSemantics" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::navigation_bar::_NavigationBarDestinationSemantics"

class "material::navigation_bar::_NavigationBarDestinationTooltip" {
  +String message
  +Widget child
  +Widget build()
}

"material::navigation_bar::_NavigationBarDestinationTooltip" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::navigation_bar::_NavigationBarDestinationTooltip"

class "material::navigation_bar::_NavigationDestinationLayoutDelegate" {
  +Animation<double> animation
  {static} +int iconId
  {static} +int labelId
  +void performLayout()
  +bool shouldRelayout()
}

"material::navigation_bar::_NavigationDestinationLayoutDelegate" o-- "animation::animation::Animation<double>"
"rendering::custom_layout::MultiChildLayoutDelegate" <|-- "material::navigation_bar::_NavigationDestinationLayoutDelegate"

class "material::navigation_bar::_StatusTransitionWidgetBuilder" {
  +Widget Function(BuildContext, Widget?) builder
  +Widget? child
  +Widget build()
}

"material::navigation_bar::_StatusTransitionWidgetBuilder" o-- "widgets::framework::Widget Function(BuildContext, Widget)"
"material::navigation_bar::_StatusTransitionWidgetBuilder" o-- "widgets::framework::Widget"
"widgets::status_transitions::StatusTransitionWidget" <|-- "material::navigation_bar::_StatusTransitionWidgetBuilder"

class "material::navigation_bar::_SelectableAnimatedBuilder" {
  +bool isSelected
  +Duration duration
  +bool alwaysDoFullAnimation
  +Widget Function(BuildContext, Animation<double>) builder
  +_SelectableAnimatedBuilderState createState()
}

"material::navigation_bar::_SelectableAnimatedBuilder" o-- "null::Widget Function(BuildContext, Animation<double>)"
"widgets::framework::StatefulWidget" <|-- "material::navigation_bar::_SelectableAnimatedBuilder"

class "material::navigation_bar::_SelectableAnimatedBuilderState" {
  -AnimationController _controller
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"material::navigation_bar::_SelectableAnimatedBuilderState" o-- "animation::animation_controller::AnimationController"
"widgets::framework::State" <|-- "material::navigation_bar::_SelectableAnimatedBuilderState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "material::navigation_bar::_SelectableAnimatedBuilderState"

class "material::navigation_bar::_CurvedAnimationBuilder" {
  +Animation<double> animation
  +Curve curve
  +Curve reverseCurve
  +Widget Function(BuildContext, Animation<double>) builder
  +_CurvedAnimationBuilderState createState()
}

"material::navigation_bar::_CurvedAnimationBuilder" o-- "animation::animation::Animation<double>"
"material::navigation_bar::_CurvedAnimationBuilder" o-- "animation::curves::Curve"
"material::navigation_bar::_CurvedAnimationBuilder" o-- "null::Widget Function(BuildContext, Animation<double>)"
"widgets::framework::StatefulWidget" <|-- "material::navigation_bar::_CurvedAnimationBuilder"

class "material::navigation_bar::_CurvedAnimationBuilderState" {
  -AnimationStatus _animationDirection
  -AnimationStatus? _preservedDirection
  +void initState()
  +void dispose()
  -void _updateStatus()
  +Widget build()
}

"material::navigation_bar::_CurvedAnimationBuilderState" o-- "animation::animation::AnimationStatus"
"widgets::framework::State" <|-- "material::navigation_bar::_CurvedAnimationBuilderState"

class "material::navigation_bar::_NavigationBarDefaultsM2" {
  -ThemeData _theme
  -ColorScheme _colors
  +Color? backgroundColor
  +MaterialStateProperty<IconThemeData?>? iconTheme
  +Color? indicatorColor
  +MaterialStateProperty<TextStyle?>? labelTextStyle
}

"material::navigation_bar::_NavigationBarDefaultsM2" o-- "material::theme_data::ThemeData"
"material::navigation_bar::_NavigationBarDefaultsM2" o-- "material::color_scheme::ColorScheme"
"material::navigation_bar::_NavigationBarDefaultsM2" o-- "dart::ui::Color"
"material::navigation_bar::_NavigationBarDefaultsM2" o-- "material::material_state::MaterialStateProperty<IconThemeData>"
"material::navigation_bar::_NavigationBarDefaultsM2" o-- "material::material_state::MaterialStateProperty<TextStyle>"
"material::navigation_bar_theme::NavigationBarThemeData" <|-- "material::navigation_bar::_NavigationBarDefaultsM2"

class "material::navigation_bar::_NavigationBarDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  -TextTheme _textTheme
  +Color? backgroundColor
  +Color? shadowColor
  +Color? surfaceTintColor
  +MaterialStateProperty<IconThemeData?>? iconTheme
  +Color? indicatorColor
  +ShapeBorder? indicatorShape
  +MaterialStateProperty<TextStyle?>? labelTextStyle
}

"material::navigation_bar::_NavigationBarDefaultsM3" o-- "widgets::framework::BuildContext"
"material::navigation_bar::_NavigationBarDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::navigation_bar::_NavigationBarDefaultsM3" o-- "material::text_theme::TextTheme"
"material::navigation_bar::_NavigationBarDefaultsM3" o-- "dart::ui::Color"
"material::navigation_bar::_NavigationBarDefaultsM3" o-- "material::material_state::MaterialStateProperty<IconThemeData>"
"material::navigation_bar::_NavigationBarDefaultsM3" o-- "painting::borders::ShapeBorder"
"material::navigation_bar::_NavigationBarDefaultsM3" o-- "material::material_state::MaterialStateProperty<TextStyle>"
"material::navigation_bar_theme::NavigationBarThemeData" <|-- "material::navigation_bar::_NavigationBarDefaultsM3"

class "material::navigation_bar::NavigationDestinationLabelBehavior" {
  +int index
  {static} +List<NavigationDestinationLabelBehavior> values
  {static} +NavigationDestinationLabelBehavior alwaysShow
  {static} +NavigationDestinationLabelBehavior alwaysHide
  {static} +NavigationDestinationLabelBehavior onlyShowSelected
}

"material::navigation_bar::NavigationDestinationLabelBehavior" o-- "material::navigation_bar::NavigationDestinationLabelBehavior"
"dart::core::Enum" <|-- "material::navigation_bar::NavigationDestinationLabelBehavior"

class "material::navigation_rail_theme::NavigationRailThemeData" {
  +Color? backgroundColor
  +double? elevation
  +TextStyle? unselectedLabelTextStyle
  +TextStyle? selectedLabelTextStyle
  +IconThemeData? unselectedIconTheme
  +IconThemeData? selectedIconTheme
  +double? groupAlignment
  +NavigationRailLabelType? labelType
  +bool? useIndicator
  +Color? indicatorColor
  +ShapeBorder? indicatorShape
  +double? minWidth
  +double? minExtendedWidth
  +int hashCode
  +NavigationRailThemeData copyWith()
  {static} +NavigationRailThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::navigation_rail_theme::NavigationRailThemeData" o-- "dart::ui::Color"
"material::navigation_rail_theme::NavigationRailThemeData" o-- "painting::text_style::TextStyle"
"material::navigation_rail_theme::NavigationRailThemeData" o-- "widgets::icon_theme_data::IconThemeData"
"material::navigation_rail_theme::NavigationRailThemeData" o-- "material::navigation_rail::NavigationRailLabelType"
"material::navigation_rail_theme::NavigationRailThemeData" o-- "painting::borders::ShapeBorder"
"foundation::diagnostics::Diagnosticable" <|-- "material::navigation_rail_theme::NavigationRailThemeData"

class "material::navigation_rail_theme::NavigationRailTheme" {
  +NavigationRailThemeData data
  {static} +NavigationRailThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::navigation_rail_theme::NavigationRailTheme" o-- "material::navigation_rail_theme::NavigationRailThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::navigation_rail_theme::NavigationRailTheme"

class "material::search_view_theme::SearchViewThemeData" {
  +Color? backgroundColor
  +double? elevation
  +Color? surfaceTintColor
  +BorderSide? side
  +OutlinedBorder? shape
  +TextStyle? headerTextStyle
  +TextStyle? headerHintStyle
  +BoxConstraints? constraints
  +Color? dividerColor
  +int hashCode
  +SearchViewThemeData copyWith()
  {static} +SearchViewThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
  {static} -BorderSide? _lerpSides()
}

"material::search_view_theme::SearchViewThemeData" o-- "dart::ui::Color"
"material::search_view_theme::SearchViewThemeData" o-- "painting::borders::BorderSide"
"material::search_view_theme::SearchViewThemeData" o-- "painting::borders::OutlinedBorder"
"material::search_view_theme::SearchViewThemeData" o-- "painting::text_style::TextStyle"
"material::search_view_theme::SearchViewThemeData" o-- "rendering::box::BoxConstraints"
"foundation::diagnostics::Diagnosticable" <|-- "material::search_view_theme::SearchViewThemeData"

class "material::search_view_theme::SearchViewTheme" {
  +SearchViewThemeData data
  {static} +SearchViewThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::search_view_theme::SearchViewTheme" o-- "material::search_view_theme::SearchViewThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::search_view_theme::SearchViewTheme"

class "material::about::AboutListTile" {
  +Widget? icon
  +Widget? child
  +String? applicationName
  +String? applicationVersion
  +Widget? applicationIcon
  +String? applicationLegalese
  +List<Widget>? aboutBoxChildren
  +bool? dense
  +Widget build()
}

"material::about::AboutListTile" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::about::AboutListTile"

class "material::about::AboutDialog" {
  +String? applicationName
  +String? applicationVersion
  +Widget? applicationIcon
  +String? applicationLegalese
  +List<Widget>? children
  +Widget build()
}

"material::about::AboutDialog" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::about::AboutDialog"

class "material::about::LicensePage" {
  +String? applicationName
  +String? applicationVersion
  +Widget? applicationIcon
  +String? applicationLegalese
  +State<LicensePage> createState()
}

"material::about::LicensePage" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "material::about::LicensePage"

class "material::about::_LicensePageState" {
  +ValueNotifier<int?> selectedId
  +void dispose()
  +Widget build()
  -Widget _packageLicensePage()
  -Widget _packagesView()
}

"material::about::_LicensePageState" o-- "foundation::change_notifier::ValueNotifier<int>"
"widgets::framework::State" <|-- "material::about::_LicensePageState"

class "material::about::_AboutProgram" {
  +String name
  +String version
  +Widget? icon
  +String? legalese
  +Widget build()
}

"material::about::_AboutProgram" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::about::_AboutProgram"

class "material::about::_PackagesView" {
  +Widget about
  +bool isLateral
  +ValueNotifier<int?> selectedId
  +_PackagesViewState createState()
}

"material::about::_PackagesView" o-- "widgets::framework::Widget"
"material::about::_PackagesView" o-- "foundation::change_notifier::ValueNotifier<int>"
"widgets::framework::StatefulWidget" <|-- "material::about::_PackagesView"

class "material::about::_PackagesViewState" {
  +Future<_LicenseData> licenses
  +Widget build()
  -void _initDefaultDetailPage()
  -Widget _packagesList()
}

"widgets::framework::State" <|-- "material::about::_PackagesViewState"

class "material::about::_PackageListTile" {
  +String packageName
  +int? index
  +bool isSelected
  +int numberLicenses
  +void Function()? onTap
  +Widget build()
}

"material::about::_PackageListTile" o-- "gestures::tap::void Function()"
"widgets::framework::StatelessWidget" <|-- "material::about::_PackageListTile"

class "material::about::_LicenseData" {
  +List<LicenseEntry> licenses
  +Map<String, List<int>> packageLicenseBindings
  +List<String> packages
  +String? firstPackage
  +void addLicense()
  -void _addPackage()
  +void sortPackages()
}

class "material::about::_DetailArguments" {
  +String packageName
  +List<LicenseEntry> licenseEntries
  +int hashCode
  +bool ==()
}

class "material::about::_PackageLicensePage" {
  +String packageName
  +List<LicenseEntry> licenseEntries
  +ScrollController? scrollController
  +_PackageLicensePageState createState()
}

"material::about::_PackageLicensePage" o-- "widgets::scroll_controller::ScrollController"
"widgets::framework::StatefulWidget" <|-- "material::about::_PackageLicensePage"

class "material::about::_PackageLicensePageState" {
  -List<Widget> _licenses
  -bool _loaded
  +void initState()
  -Future<void> _initLicenses()
  +Widget build()
}

"widgets::framework::State" <|-- "material::about::_PackageLicensePageState"

class "material::about::_PackageLicensePageTitle" {
  +String title
  +String subtitle
  +TextTheme theme
  +TextStyle? titleTextStyle
  +Color? foregroundColor
  +Widget build()
}

"material::about::_PackageLicensePageTitle" o-- "material::text_theme::TextTheme"
"material::about::_PackageLicensePageTitle" o-- "painting::text_style::TextStyle"
"material::about::_PackageLicensePageTitle" o-- "dart::ui::Color"
"widgets::framework::StatelessWidget" <|-- "material::about::_PackageLicensePageTitle"

class "material::about::_MasterDetailFlow" {
  +Widget Function(BuildContext, bool) masterViewBuilder
  +Widget Function(BuildContext, Object?, ScrollController?) detailPageBuilder
  +double? detailPageFABlessGutterWidth
  +Widget? title
  +_MasterDetailFlowState createState()
  {static} +_MasterDetailFlowProxy of()
}

"material::about::_MasterDetailFlow" o-- "material::about::Widget Function(BuildContext, bool)"
"material::about::_MasterDetailFlow" o-- "material::about::Widget Function(BuildContext, Object, ScrollController)"
"material::about::_MasterDetailFlow" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "material::about::_MasterDetailFlow"

class "material::about::_MasterDetailFlowProxy" {
  -_PageOpener _pageOpener
  +void openDetailPage()
  +void setInitialDetailPage()
}

"material::about::_MasterDetailFlowProxy" o-- "material::about::_PageOpener"
"material::about::_PageOpener" <|-- "material::about::_MasterDetailFlowProxy"

abstract class "material::about::_PageOpener" {
  +void openDetailPage()
  +void setInitialDetailPage()
}

class "material::about::_MasterDetailFlowState" {
  +_Focus focus
  -Object? _cachedDetailArguments
  -_LayoutMode? _builtLayout
  -GlobalKey<NavigatorState> _navigatorKey
  +void openDetailPage()
  +void setInitialDetailPage()
  +Widget build()
  -Widget _nestedUI()
  -MaterialPageRoute<void> _masterPageRoute()
  -MaterialPageRoute<void> _detailPageRoute()
  -Widget _lateralUI()
}

"material::about::_MasterDetailFlowState" o-- "material::about::_Focus"
"material::about::_MasterDetailFlowState" o-- "material::about::_LayoutMode"
"material::about::_MasterDetailFlowState" o-- "widgets::framework::GlobalKey<NavigatorState>"
"widgets::framework::State" <|-- "material::about::_MasterDetailFlowState"
"material::about::_PageOpener" <|-- "material::about::_MasterDetailFlowState"

class "material::about::_MasterPage" {
  +Widget Function(BuildContext, bool)? masterViewBuilder
  +Widget? title
  +Widget? leading
  +Widget build()
}

"material::about::_MasterPage" o-- "material::about::Widget Function(BuildContext, bool)"
"material::about::_MasterPage" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::about::_MasterPage"

class "material::about::_MasterDetailScaffold" {
  +Widget Function(BuildContext, bool) masterViewBuilder
  +Widget Function(BuildContext, Object?, ScrollController?) detailPageBuilder
  +List<Widget> Function(BuildContext, _ActionLevel)? actionBuilder
  +Object? initialArguments
  +Widget? title
  +double? detailPageFABlessGutterWidth
  +_MasterDetailScaffoldState createState()
}

"material::about::_MasterDetailScaffold" o-- "material::about::Widget Function(BuildContext, bool)"
"material::about::_MasterDetailScaffold" o-- "material::about::Widget Function(BuildContext, Object, ScrollController)"
"material::about::_MasterDetailScaffold" o-- "material::about::List<Widget> Function(BuildContext, _ActionLevel)"
"material::about::_MasterDetailScaffold" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "material::about::_MasterDetailScaffold"

class "material::about::_MasterDetailScaffoldState" {
  +FloatingActionButtonLocation floatingActionButtonLocation
  +double detailPageFABGutterWidth
  +double detailPageFABlessGutterWidth
  +double masterViewWidth
  -ValueNotifier<Object?> _detailArguments
  +void initState()
  +void dispose()
  +void openDetailPage()
  +void setInitialDetailPage()
  +Widget build()
  -ConstrainedBox _masterPanel()
}

"material::about::_MasterDetailScaffoldState" o-- "material::floating_action_button_location::FloatingActionButtonLocation"
"material::about::_MasterDetailScaffoldState" o-- "foundation::change_notifier::ValueNotifier<Object>"
"widgets::framework::State" <|-- "material::about::_MasterDetailScaffoldState"
"material::about::_PageOpener" <|-- "material::about::_MasterDetailScaffoldState"

class "material::about::_DetailView" {
  -Widget Function(BuildContext, Object?, ScrollController?) _builder
  -Object? _arguments
  +Widget build()
}

"material::about::_DetailView" o-- "material::about::Widget Function(BuildContext, Object, ScrollController)"
"widgets::framework::StatelessWidget" <|-- "material::about::_DetailView"

class "material::about::_ActionLevel" {
  +int index
  {static} +List<_ActionLevel> values
  {static} +_ActionLevel top
  {static} +_ActionLevel view
}

"material::about::_ActionLevel" o-- "material::about::_ActionLevel"
"dart::core::Enum" <|-- "material::about::_ActionLevel"

class "material::about::_LayoutMode" {
  +int index
  {static} +List<_LayoutMode> values
  {static} +_LayoutMode lateral
  {static} +_LayoutMode nested
}

"material::about::_LayoutMode" o-- "material::about::_LayoutMode"
"dart::core::Enum" <|-- "material::about::_LayoutMode"

class "material::about::_Focus" {
  +int index
  {static} +List<_Focus> values
  {static} +_Focus master
  {static} +_Focus detail
}

"material::about::_Focus" o-- "material::about::_Focus"
"dart::core::Enum" <|-- "material::about::_Focus"

class "material::time_picker_theme::TimePickerThemeData" {
  +Color? backgroundColor
  +ButtonStyle? cancelButtonStyle
  +ButtonStyle? confirmButtonStyle
  +BorderSide? dayPeriodBorderSide
  +Color? dayPeriodColor
  +OutlinedBorder? dayPeriodShape
  +Color? dayPeriodTextColor
  +TextStyle? dayPeriodTextStyle
  +Color? dialBackgroundColor
  +Color? dialHandColor
  +Color? dialTextColor
  +TextStyle? dialTextStyle
  +double? elevation
  +Color? entryModeIconColor
  +TextStyle? helpTextStyle
  +Color? hourMinuteColor
  +ShapeBorder? hourMinuteShape
  +Color? hourMinuteTextColor
  +TextStyle? hourMinuteTextStyle
  +InputDecorationTheme? inputDecorationTheme
  +EdgeInsetsGeometry? padding
  +ShapeBorder? shape
  +int hashCode
  +TimePickerThemeData copyWith()
  {static} +TimePickerThemeData lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::time_picker_theme::TimePickerThemeData" o-- "dart::ui::Color"
"material::time_picker_theme::TimePickerThemeData" o-- "material::button_style::ButtonStyle"
"material::time_picker_theme::TimePickerThemeData" o-- "painting::borders::BorderSide"
"material::time_picker_theme::TimePickerThemeData" o-- "painting::borders::OutlinedBorder"
"material::time_picker_theme::TimePickerThemeData" o-- "painting::text_style::TextStyle"
"material::time_picker_theme::TimePickerThemeData" o-- "painting::borders::ShapeBorder"
"material::time_picker_theme::TimePickerThemeData" o-- "material::input_decorator::InputDecorationTheme"
"material::time_picker_theme::TimePickerThemeData" o-- "painting::edge_insets::EdgeInsetsGeometry"
"foundation::diagnostics::Diagnosticable" <|-- "material::time_picker_theme::TimePickerThemeData"

class "material::time_picker_theme::TimePickerTheme" {
  +TimePickerThemeData data
  {static} +TimePickerThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::time_picker_theme::TimePickerTheme" o-- "material::time_picker_theme::TimePickerThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::time_picker_theme::TimePickerTheme"

class "material::text_selection_toolbar::TextSelectionToolbar" {
  +Offset anchorAbove
  +Offset anchorBelow
  +List<Widget> children
  +Widget Function(BuildContext, Widget) toolbarBuilder
  {static} +double kHandleSize
  {static} +double kToolbarContentDistanceBelow
  {static} -Widget _defaultToolbarBuilder()
  +Widget build()
}

"material::text_selection_toolbar::TextSelectionToolbar" o-- "dart::ui::Offset"
"material::text_selection_toolbar::TextSelectionToolbar" o-- "widgets::text_selection::Widget Function(BuildContext, Widget)"
"widgets::framework::StatelessWidget" <|-- "material::text_selection_toolbar::TextSelectionToolbar"

class "material::text_selection_toolbar::_TextSelectionToolbarOverflowable" {
  +List<Widget> children
  +bool isAbove
  +Widget Function(BuildContext, Widget) toolbarBuilder
  +_TextSelectionToolbarOverflowableState createState()
}

"material::text_selection_toolbar::_TextSelectionToolbarOverflowable" o-- "widgets::text_selection::Widget Function(BuildContext, Widget)"
"widgets::framework::StatefulWidget" <|-- "material::text_selection_toolbar::_TextSelectionToolbarOverflowable"

class "material::text_selection_toolbar::_TextSelectionToolbarOverflowableState" {
  -bool _overflowOpen
  -UniqueKey _containerKey
  -void _reset()
  +void didUpdateWidget()
  +Widget build()
}

"material::text_selection_toolbar::_TextSelectionToolbarOverflowableState" o-- "foundation::key::UniqueKey"
"widgets::framework::State" <|-- "material::text_selection_toolbar::_TextSelectionToolbarOverflowableState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::text_selection_toolbar::_TextSelectionToolbarOverflowableState"

class "material::text_selection_toolbar::_TextSelectionToolbarTrailingEdgeAlign" {
  +bool overflowOpen
  +TextDirection textDirection
  +_TextSelectionToolbarTrailingEdgeAlignRenderBox createRenderObject()
  +void updateRenderObject()
}

"material::text_selection_toolbar::_TextSelectionToolbarTrailingEdgeAlign" o-- "dart::ui::TextDirection"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "material::text_selection_toolbar::_TextSelectionToolbarTrailingEdgeAlign"

class "material::text_selection_toolbar::_TextSelectionToolbarTrailingEdgeAlignRenderBox" {
  -double? _closedWidth
  -bool _overflowOpen
  -TextDirection _textDirection
  +bool overflowOpen
  +TextDirection textDirection
  +void performLayout()
  +void paint()
  +bool hitTestChildren()
  +void setupParentData()
  +void applyPaintTransform()
}

"material::text_selection_toolbar::_TextSelectionToolbarTrailingEdgeAlignRenderBox" o-- "dart::ui::TextDirection"
"rendering::proxy_box::RenderProxyBox" <|-- "material::text_selection_toolbar::_TextSelectionToolbarTrailingEdgeAlignRenderBox"

class "material::text_selection_toolbar::_TextSelectionToolbarItemsLayout" {
  +bool isAbove
  +bool overflowOpen
  +_RenderTextSelectionToolbarItemsLayout createRenderObject()
  +void updateRenderObject()
  +_TextSelectionToolbarItemsLayoutElement createElement()
}

"widgets::framework::MultiChildRenderObjectWidget" <|-- "material::text_selection_toolbar::_TextSelectionToolbarItemsLayout"

class "material::text_selection_toolbar::_TextSelectionToolbarItemsLayoutElement" {
  {static} -bool _shouldPaint()
  +void debugVisitOnstageChildren()
}

"widgets::framework::MultiChildRenderObjectElement" <|-- "material::text_selection_toolbar::_TextSelectionToolbarItemsLayoutElement"

class "material::text_selection_toolbar::_RenderTextSelectionToolbarItemsLayout" {
  -int _lastIndexThatFits
  -bool _isAbove
  -bool _overflowOpen
  +bool isAbove
  +bool overflowOpen
  -void _layoutChildren()
  -bool _shouldPaintChild()
  -void _placeChildren()
  +void performLayout()
  +void paint()
  +void setupParentData()
  +bool hitTestChildren()
  +void visitChildrenForSemantics()
}

"rendering::box::RenderBox" <|-- "material::text_selection_toolbar::_RenderTextSelectionToolbarItemsLayout"
"rendering::object::ContainerRenderObjectMixin" <|-- "material::text_selection_toolbar::_RenderTextSelectionToolbarItemsLayout"

class "material::text_selection_toolbar::_TextSelectionToolbarContainer" {
  +Widget child
  {static} -Color _defaultColorLight
  {static} -Color _defaultColorDark
  {static} -Color _getColor()
  +Widget build()
}

"material::text_selection_toolbar::_TextSelectionToolbarContainer" o-- "widgets::framework::Widget"
"material::text_selection_toolbar::_TextSelectionToolbarContainer" o-- "dart::ui::Color"
"widgets::framework::StatelessWidget" <|-- "material::text_selection_toolbar::_TextSelectionToolbarContainer"

class "material::text_selection_toolbar::_TextSelectionToolbarOverflowButton" {
  +Icon icon
  +void Function()? onPressed
  +String? tooltip
  +Widget build()
}

"material::text_selection_toolbar::_TextSelectionToolbarOverflowButton" o-- "widgets::icon::Icon"
"material::text_selection_toolbar::_TextSelectionToolbarOverflowButton" o-- "dart::ui::void Function()"
"widgets::framework::StatelessWidget" <|-- "material::text_selection_toolbar::_TextSelectionToolbarOverflowButton"

class "material::text_selection_theme::TextSelectionThemeData" {
  +Color? cursorColor
  +Color? selectionColor
  +Color? selectionHandleColor
  +int hashCode
  +TextSelectionThemeData copyWith()
  {static} +TextSelectionThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::text_selection_theme::TextSelectionThemeData" o-- "dart::ui::Color"
"foundation::diagnostics::Diagnosticable" <|-- "material::text_selection_theme::TextSelectionThemeData"

class "material::text_selection_theme::TextSelectionTheme" {
  +TextSelectionThemeData data
  -Widget _child
  +Widget child
  {static} +TextSelectionThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::text_selection_theme::TextSelectionTheme" o-- "material::text_selection_theme::TextSelectionThemeData"
"material::text_selection_theme::TextSelectionTheme" o-- "widgets::framework::Widget"
"widgets::inherited_theme::InheritedTheme" <|-- "material::text_selection_theme::TextSelectionTheme"

class "material::text_selection_theme::_NullWidget" {
  +Element createElement()
}

"widgets::framework::Widget" <|-- "material::text_selection_theme::_NullWidget"

class "material::spell_check_suggestions_toolbar::SpellCheckSuggestionsToolbar" {
  +Offset anchor
  +List<dynamic> buttonItems
  {static} +List<dynamic>? buildButtonItems()
  {static} -void _replaceText()
  {static} +Offset getToolbarAnchor()
  -List<Widget> _buildToolbarButtons()
  +Widget build()
}

"material::spell_check_suggestions_toolbar::SpellCheckSuggestionsToolbar" o-- "dart::ui::Offset"
"widgets::framework::StatelessWidget" <|-- "material::spell_check_suggestions_toolbar::SpellCheckSuggestionsToolbar"

class "material::spell_check_suggestions_toolbar::_SpellCheckSuggestionsToolbarContainer" {
  +double height
  +List<Widget> children
  +Widget build()
}

"widgets::framework::StatelessWidget" <|-- "material::spell_check_suggestions_toolbar::_SpellCheckSuggestionsToolbarContainer"

class "material::dropdown_menu_theme::DropdownMenuThemeData" {
  +TextStyle? textStyle
  +InputDecorationTheme? inputDecorationTheme
  +MenuStyle? menuStyle
  +int hashCode
  +DropdownMenuThemeData copyWith()
  {static} +DropdownMenuThemeData lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::dropdown_menu_theme::DropdownMenuThemeData" o-- "painting::text_style::TextStyle"
"material::dropdown_menu_theme::DropdownMenuThemeData" o-- "material::input_decorator::InputDecorationTheme"
"material::dropdown_menu_theme::DropdownMenuThemeData" o-- "material::menu_style::MenuStyle"
"foundation::diagnostics::Diagnosticable" <|-- "material::dropdown_menu_theme::DropdownMenuThemeData"

class "material::dropdown_menu_theme::DropdownMenuTheme" {
  +DropdownMenuThemeData data
  {static} +DropdownMenuThemeData of()
  {static} +DropdownMenuThemeData? maybeOf()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::dropdown_menu_theme::DropdownMenuTheme" o-- "material::dropdown_menu_theme::DropdownMenuThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::dropdown_menu_theme::DropdownMenuTheme"

class "material::radio_list_tile::RadioListTile" {
  +T value
  +T? groupValue
  +void Function(T?)? onChanged
  +MouseCursor? mouseCursor
  +bool toggleable
  +Color? activeColor
  +MaterialStateProperty<Color?>? fillColor
  +MaterialTapTargetSize? materialTapTargetSize
  +Color? hoverColor
  +MaterialStateProperty<Color?>? overlayColor
  +double? splashRadius
  +Widget? title
  +Widget? subtitle
  +Widget? secondary
  +bool isThreeLine
  +bool? dense
  +bool selected
  +ListTileControlAffinity controlAffinity
  +bool autofocus
  +EdgeInsetsGeometry? contentPadding
  +ShapeBorder? shape
  +Color? tileColor
  +Color? selectedTileColor
  +VisualDensity? visualDensity
  +FocusNode? focusNode
  +void Function(bool)? onFocusChange
  +bool? enableFeedback
  -_RadioType _radioType
  +bool useCupertinoCheckmarkStyle
  +bool checked
  +Widget build()
}

"material::radio_list_tile::RadioListTile" o-- "foundation::basic_types::void Function(T)"
"material::radio_list_tile::RadioListTile" o-- "services::mouse_cursor::MouseCursor"
"material::radio_list_tile::RadioListTile" o-- "dart::ui::Color"
"material::radio_list_tile::RadioListTile" o-- "material::material_state::MaterialStateProperty<Color>"
"material::radio_list_tile::RadioListTile" o-- "material::theme_data::MaterialTapTargetSize"
"material::radio_list_tile::RadioListTile" o-- "widgets::framework::Widget"
"material::radio_list_tile::RadioListTile" o-- "material::list_tile::ListTileControlAffinity"
"material::radio_list_tile::RadioListTile" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::radio_list_tile::RadioListTile" o-- "painting::borders::ShapeBorder"
"material::radio_list_tile::RadioListTile" o-- "material::theme_data::VisualDensity"
"material::radio_list_tile::RadioListTile" o-- "widgets::focus_manager::FocusNode"
"material::radio_list_tile::RadioListTile" o-- "foundation::basic_types::void Function(bool)"
"material::radio_list_tile::RadioListTile" o-- "material::radio_list_tile::_RadioType"
"widgets::framework::StatelessWidget" <|-- "material::radio_list_tile::RadioListTile"

class "material::radio_list_tile::_RadioType" {
  +int index
  {static} +List<_RadioType> values
  {static} +_RadioType material
  {static} +_RadioType adaptive
}

"material::radio_list_tile::_RadioType" o-- "material::radio_list_tile::_RadioType"
"dart::core::Enum" <|-- "material::radio_list_tile::_RadioType"

class "material::action_chip::ActionChip" {
  +Widget? avatar
  +Widget label
  +TextStyle? labelStyle
  +EdgeInsetsGeometry? labelPadding
  +void Function()? onPressed
  +double? pressElevation
  +String? tooltip
  +BorderSide? side
  +OutlinedBorder? shape
  +Clip clipBehavior
  +FocusNode? focusNode
  +bool autofocus
  +MaterialStateProperty<Color?>? color
  +Color? backgroundColor
  +Color? disabledColor
  +EdgeInsetsGeometry? padding
  +VisualDensity? visualDensity
  +MaterialTapTargetSize? materialTapTargetSize
  +double? elevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +IconThemeData? iconTheme
  -_ChipVariant _chipVariant
  +bool isEnabled
  +Widget build()
}

"material::action_chip::ActionChip" o-- "widgets::framework::Widget"
"material::action_chip::ActionChip" o-- "painting::text_style::TextStyle"
"material::action_chip::ActionChip" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::action_chip::ActionChip" o-- "dart::ui::void Function()"
"material::action_chip::ActionChip" o-- "painting::borders::BorderSide"
"material::action_chip::ActionChip" o-- "painting::borders::OutlinedBorder"
"material::action_chip::ActionChip" o-- "dart::ui::Clip"
"material::action_chip::ActionChip" o-- "widgets::focus_manager::FocusNode"
"material::action_chip::ActionChip" o-- "material::material_state::MaterialStateProperty<Color>"
"material::action_chip::ActionChip" o-- "dart::ui::Color"
"material::action_chip::ActionChip" o-- "material::theme_data::VisualDensity"
"material::action_chip::ActionChip" o-- "material::theme_data::MaterialTapTargetSize"
"material::action_chip::ActionChip" o-- "widgets::icon_theme_data::IconThemeData"
"material::action_chip::ActionChip" o-- "material::action_chip::_ChipVariant"
"widgets::framework::StatelessWidget" <|-- "material::action_chip::ActionChip"
"material::chip::ChipAttributes" <|-- "material::action_chip::ActionChip"
"material::chip::TappableChipAttributes" <|-- "material::action_chip::ActionChip"
"material::chip::DisabledChipAttributes" <|-- "material::action_chip::ActionChip"

class "material::action_chip::_ActionChipDefaultsM3" {
  +BuildContext context
  +bool isEnabled
  -_ChipVariant _chipVariant
  -ColorScheme _colors
  -TextTheme _textTheme
  +double? elevation
  +double? pressElevation
  +TextStyle? labelStyle
  +MaterialStateProperty<Color?>? color
  +Color? shadowColor
  +Color? surfaceTintColor
  +Color? checkmarkColor
  +Color? deleteIconColor
  +BorderSide? side
  +IconThemeData? iconTheme
  +EdgeInsetsGeometry? padding
  +EdgeInsetsGeometry? labelPadding
}

"material::action_chip::_ActionChipDefaultsM3" o-- "widgets::framework::BuildContext"
"material::action_chip::_ActionChipDefaultsM3" o-- "material::action_chip::_ChipVariant"
"material::action_chip::_ActionChipDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::action_chip::_ActionChipDefaultsM3" o-- "material::text_theme::TextTheme"
"material::action_chip::_ActionChipDefaultsM3" o-- "painting::text_style::TextStyle"
"material::action_chip::_ActionChipDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::action_chip::_ActionChipDefaultsM3" o-- "dart::ui::Color"
"material::action_chip::_ActionChipDefaultsM3" o-- "painting::borders::BorderSide"
"material::action_chip::_ActionChipDefaultsM3" o-- "widgets::icon_theme_data::IconThemeData"
"material::action_chip::_ActionChipDefaultsM3" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::chip_theme::ChipThemeData" <|-- "material::action_chip::_ActionChipDefaultsM3"

class "material::action_chip::_ChipVariant" {
  +int index
  {static} +List<_ChipVariant> values
  {static} +_ChipVariant flat
  {static} +_ChipVariant elevated
}

"material::action_chip::_ChipVariant" o-- "material::action_chip::_ChipVariant"
"dart::core::Enum" <|-- "material::action_chip::_ChipVariant"

class "material::refresh_indicator::RefreshIndicator" {
  +Widget child
  +double displacement
  +double edgeOffset
  +Future<void> Function() onRefresh
  +Color? color
  +Color? backgroundColor
  +bool Function(ScrollNotification) notificationPredicate
  +String? semanticsLabel
  +String? semanticsValue
  +double strokeWidth
  -_IndicatorType _indicatorType
  +RefreshIndicatorTriggerMode triggerMode
  +RefreshIndicatorState createState()
}

"material::refresh_indicator::RefreshIndicator" o-- "widgets::framework::Widget"
"material::refresh_indicator::RefreshIndicator" o-- "material::refresh_indicator::Future<void> Function()"
"material::refresh_indicator::RefreshIndicator" o-- "dart::ui::Color"
"material::refresh_indicator::RefreshIndicator" o-- "widgets::scroll_notification::bool Function(ScrollNotification)"
"material::refresh_indicator::RefreshIndicator" o-- "material::refresh_indicator::_IndicatorType"
"material::refresh_indicator::RefreshIndicator" o-- "material::refresh_indicator::RefreshIndicatorTriggerMode"
"widgets::framework::StatefulWidget" <|-- "material::refresh_indicator::RefreshIndicator"

class "material::refresh_indicator::RefreshIndicatorState" {
  -AnimationController _positionController
  -AnimationController _scaleController
  -Animation<double> _positionFactor
  -Animation<double> _scaleFactor
  -Animation<double> _value
  -Animation<Color?> _valueColor
  -_RefreshIndicatorMode? _mode
  -Future<void> _pendingRefreshFuture
  -bool? _isIndicatorAtTop
  -double? _dragOffset
  -Color _effectiveValueColor
  {static} -Animatable<double> _threeQuarterTween
  {static} -Animatable<double> _kDragSizeFactorLimitTween
  {static} -Animatable<double> _oneToZeroTween
  +void initState()
  +void didChangeDependencies()
  +void didUpdateWidget()
  +void dispose()
  -void _setupColorTween()
  -bool _shouldStart()
  -bool _handleScrollNotification()
  -bool _handleIndicatorNotification()
  -bool _start()
  -void _checkDragOffset()
  -Future<void> _dismiss()
  -void _show()
  +Future<void> show()
  +Widget build()
}

"material::refresh_indicator::RefreshIndicatorState" o-- "animation::animation_controller::AnimationController"
"material::refresh_indicator::RefreshIndicatorState" o-- "animation::animation::Animation<double>"
"material::refresh_indicator::RefreshIndicatorState" o-- "animation::animation::Animation<Color>"
"material::refresh_indicator::RefreshIndicatorState" o-- "material::refresh_indicator::_RefreshIndicatorMode"
"material::refresh_indicator::RefreshIndicatorState" o-- "dart::ui::Color"
"material::refresh_indicator::RefreshIndicatorState" o-- "animation::tween::Animatable<double>"
"widgets::framework::State" <|-- "material::refresh_indicator::RefreshIndicatorState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::refresh_indicator::RefreshIndicatorState"

class "material::refresh_indicator::_RefreshIndicatorMode" {
  +int index
  {static} +List<_RefreshIndicatorMode> values
  {static} +_RefreshIndicatorMode drag
  {static} +_RefreshIndicatorMode armed
  {static} +_RefreshIndicatorMode snap
  {static} +_RefreshIndicatorMode refresh
  {static} +_RefreshIndicatorMode done
  {static} +_RefreshIndicatorMode canceled
}

"material::refresh_indicator::_RefreshIndicatorMode" o-- "material::refresh_indicator::_RefreshIndicatorMode"
"dart::core::Enum" <|-- "material::refresh_indicator::_RefreshIndicatorMode"

class "material::refresh_indicator::RefreshIndicatorTriggerMode" {
  +int index
  {static} +List<RefreshIndicatorTriggerMode> values
  {static} +RefreshIndicatorTriggerMode anywhere
  {static} +RefreshIndicatorTriggerMode onEdge
}

"material::refresh_indicator::RefreshIndicatorTriggerMode" o-- "material::refresh_indicator::RefreshIndicatorTriggerMode"
"dart::core::Enum" <|-- "material::refresh_indicator::RefreshIndicatorTriggerMode"

class "material::refresh_indicator::_IndicatorType" {
  +int index
  {static} +List<_IndicatorType> values
  {static} +_IndicatorType material
  {static} +_IndicatorType adaptive
}

"material::refresh_indicator::_IndicatorType" o-- "material::refresh_indicator::_IndicatorType"
"dart::core::Enum" <|-- "material::refresh_indicator::_IndicatorType"

class "material::input_date_picker_form_field::InputDatePickerFormField" {
  +DateTime? initialDate
  +DateTime firstDate
  +DateTime lastDate
  +void Function(DateTime)? onDateSubmitted
  +void Function(DateTime)? onDateSaved
  +bool Function(DateTime)? selectableDayPredicate
  +String? errorFormatText
  +String? errorInvalidText
  +String? fieldHintText
  +String? fieldLabelText
  +TextInputType? keyboardType
  +bool autofocus
  +bool acceptEmptyDate
  +State<InputDatePickerFormField> createState()
}

"material::input_date_picker_form_field::InputDatePickerFormField" o-- "foundation::basic_types::void Function(DateTime)"
"material::input_date_picker_form_field::InputDatePickerFormField" o-- "material::date::bool Function(DateTime)"
"material::input_date_picker_form_field::InputDatePickerFormField" o-- "services::text_input::TextInputType"
"widgets::framework::StatefulWidget" <|-- "material::input_date_picker_form_field::InputDatePickerFormField"

class "material::input_date_picker_form_field::_InputDatePickerFormFieldState" {
  -TextEditingController _controller
  -DateTime? _selectedDate
  -String? _inputText
  -bool _autoSelected
  +void initState()
  +void dispose()
  +void didChangeDependencies()
  +void didUpdateWidget()
  -void _updateValueForSelectedDate()
  -DateTime? _parseDate()
  -bool _isValidAcceptableDate()
  -String? _validateDate()
  -void _updateDate()
  -void _handleSaved()
  -void _handleSubmitted()
  +Widget build()
}

"material::input_date_picker_form_field::_InputDatePickerFormFieldState" o-- "widgets::editable_text::TextEditingController"
"widgets::framework::State" <|-- "material::input_date_picker_form_field::_InputDatePickerFormFieldState"

class "material::bottom_app_bar_theme::BottomAppBarTheme" {
  +Color? color
  +double? elevation
  +NotchedShape? shape
  +double? height
  +Color? surfaceTintColor
  +Color? shadowColor
  +EdgeInsetsGeometry? padding
  +int hashCode
  +BottomAppBarTheme copyWith()
  {static} +BottomAppBarTheme of()
  {static} +BottomAppBarTheme lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::bottom_app_bar_theme::BottomAppBarTheme" o-- "dart::ui::Color"
"material::bottom_app_bar_theme::BottomAppBarTheme" o-- "painting::notched_shapes::NotchedShape"
"material::bottom_app_bar_theme::BottomAppBarTheme" o-- "painting::edge_insets::EdgeInsetsGeometry"
"foundation::diagnostics::Diagnosticable" <|-- "material::bottom_app_bar_theme::BottomAppBarTheme"

abstract class "material::material_state_mixin::MaterialStateMixin" {
  #Set<MaterialState> materialStates
  +bool isDisabled
  +bool isDragged
  +bool isErrored
  +bool isFocused
  +bool isHovered
  +bool isPressed
  +bool isScrolledUnder
  +bool isSelected
  #void Function(bool) updateMaterialState()
  #void setMaterialState()
  #void addMaterialState()
  #void removeMaterialState()
  +void debugFillProperties()
}

class "material::tab_bar_theme::TabBarTheme" {
  +Decoration? indicator
  +Color? indicatorColor
  +TabBarIndicatorSize? indicatorSize
  +Color? dividerColor
  +double? dividerHeight
  +Color? labelColor
  +EdgeInsetsGeometry? labelPadding
  +TextStyle? labelStyle
  +Color? unselectedLabelColor
  +TextStyle? unselectedLabelStyle
  +MaterialStateProperty<Color?>? overlayColor
  +InteractiveInkFeatureFactory? splashFactory
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +TabAlignment? tabAlignment
  +int hashCode
  +TabBarTheme copyWith()
  {static} +TabBarTheme of()
  {static} +TabBarTheme lerp()
  +bool ==()
}

"material::tab_bar_theme::TabBarTheme" o-- "painting::decoration::Decoration"
"material::tab_bar_theme::TabBarTheme" o-- "dart::ui::Color"
"material::tab_bar_theme::TabBarTheme" o-- "material::tabs::TabBarIndicatorSize"
"material::tab_bar_theme::TabBarTheme" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::tab_bar_theme::TabBarTheme" o-- "painting::text_style::TextStyle"
"material::tab_bar_theme::TabBarTheme" o-- "material::material_state::MaterialStateProperty<Color>"
"material::tab_bar_theme::TabBarTheme" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::tab_bar_theme::TabBarTheme" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::tab_bar_theme::TabBarTheme" o-- "material::tabs::TabAlignment"
"foundation::diagnostics::Diagnosticable" <|-- "material::tab_bar_theme::TabBarTheme"

class "material::outlined_button_theme::OutlinedButtonThemeData" {
  +ButtonStyle? style
  +int hashCode
  {static} +OutlinedButtonThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::outlined_button_theme::OutlinedButtonThemeData" o-- "material::button_style::ButtonStyle"
"foundation::diagnostics::Diagnosticable" <|-- "material::outlined_button_theme::OutlinedButtonThemeData"

class "material::outlined_button_theme::OutlinedButtonTheme" {
  +OutlinedButtonThemeData data
  {static} +OutlinedButtonThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::outlined_button_theme::OutlinedButtonTheme" o-- "material::outlined_button_theme::OutlinedButtonThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::outlined_button_theme::OutlinedButtonTheme"

class "material::grid_tile_bar::GridTileBar" {
  +Color? backgroundColor
  +Widget? leading
  +Widget? title
  +Widget? subtitle
  +Widget? trailing
  +Widget build()
}

"material::grid_tile_bar::GridTileBar" o-- "dart::ui::Color"
"material::grid_tile_bar::GridTileBar" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::grid_tile_bar::GridTileBar"

abstract class "material::elevation_overlay::ElevationOverlay" {
  {static} +Color applySurfaceTint()
  {static} -double _surfaceTintOpacityForElevation()
  {static} +Color applyOverlay()
  {static} +Color overlayColor()
  {static} +Color colorWithOverlay()
  {static} -Color _overlayColor()
}

class "material::elevation_overlay::_ElevationOpacity" {
  +double elevation
  +double opacity
}

class "material::list_tile_theme::ListTileThemeData" {
  +bool? dense
  +ShapeBorder? shape
  +ListTileStyle? style
  +Color? selectedColor
  +Color? iconColor
  +Color? textColor
  +TextStyle? titleTextStyle
  +TextStyle? subtitleTextStyle
  +TextStyle? leadingAndTrailingTextStyle
  +EdgeInsetsGeometry? contentPadding
  +Color? tileColor
  +Color? selectedTileColor
  +double? horizontalTitleGap
  +double? minVerticalPadding
  +double? minLeadingWidth
  +bool? enableFeedback
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +VisualDensity? visualDensity
  +ListTileTitleAlignment? titleAlignment
  +int hashCode
  +ListTileThemeData copyWith()
  {static} +ListTileThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::list_tile_theme::ListTileThemeData" o-- "painting::borders::ShapeBorder"
"material::list_tile_theme::ListTileThemeData" o-- "material::list_tile::ListTileStyle"
"material::list_tile_theme::ListTileThemeData" o-- "dart::ui::Color"
"material::list_tile_theme::ListTileThemeData" o-- "painting::text_style::TextStyle"
"material::list_tile_theme::ListTileThemeData" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::list_tile_theme::ListTileThemeData" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::list_tile_theme::ListTileThemeData" o-- "material::theme_data::VisualDensity"
"material::list_tile_theme::ListTileThemeData" o-- "material::list_tile::ListTileTitleAlignment"
"foundation::diagnostics::Diagnosticable" <|-- "material::list_tile_theme::ListTileThemeData"

class "material::list_tile_theme::ListTileTheme" {
  -ListTileThemeData? _data
  -bool? _dense
  -ShapeBorder? _shape
  -ListTileStyle? _style
  -Color? _selectedColor
  -Color? _iconColor
  -Color? _textColor
  -EdgeInsetsGeometry? _contentPadding
  -Color? _tileColor
  -Color? _selectedTileColor
  -double? _horizontalTitleGap
  -double? _minVerticalPadding
  -double? _minLeadingWidth
  -bool? _enableFeedback
  -MaterialStateProperty<MouseCursor?>? _mouseCursor
  +ListTileThemeData data
  +bool? dense
  +ShapeBorder? shape
  +ListTileStyle? style
  +Color? selectedColor
  +Color? iconColor
  +Color? textColor
  +EdgeInsetsGeometry? contentPadding
  +Color? tileColor
  +Color? selectedTileColor
  +double? horizontalTitleGap
  +double? minVerticalPadding
  +double? minLeadingWidth
  +bool? enableFeedback
  {static} +ListTileThemeData of()
  {static} +Widget merge()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::list_tile_theme::ListTileTheme" o-- "material::list_tile_theme::ListTileThemeData"
"material::list_tile_theme::ListTileTheme" o-- "painting::borders::ShapeBorder"
"material::list_tile_theme::ListTileTheme" o-- "material::list_tile::ListTileStyle"
"material::list_tile_theme::ListTileTheme" o-- "dart::ui::Color"
"material::list_tile_theme::ListTileTheme" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::list_tile_theme::ListTileTheme" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"widgets::inherited_theme::InheritedTheme" <|-- "material::list_tile_theme::ListTileTheme"

class "material::selectable_text::_TextSpanEditingController" {
  -TextSpan _textSpan
  +String? text
  +TextSpan buildTextSpan()
}

"material::selectable_text::_TextSpanEditingController" o-- "painting::text_span::TextSpan"
"widgets::editable_text::TextEditingController" <|-- "material::selectable_text::_TextSpanEditingController"

class "material::selectable_text::_SelectableTextSelectionGestureDetectorBuilder" {
  -_SelectableTextState _state
  +void onForcePressStart()
  +void onForcePressEnd()
  +void onSingleLongTapMoveUpdate()
  +void onSingleTapUp()
  +void onSingleLongTapStart()
}

"material::selectable_text::_SelectableTextSelectionGestureDetectorBuilder" o-- "material::selectable_text::_SelectableTextState"
"widgets::text_selection::TextSelectionGestureDetectorBuilder" <|-- "material::selectable_text::_SelectableTextSelectionGestureDetectorBuilder"

class "material::selectable_text::SelectableText" {
  +String? data
  +TextSpan? textSpan
  +FocusNode? focusNode
  +TextStyle? style
  +StrutStyle? strutStyle
  +TextAlign? textAlign
  +TextDirection? textDirection
  +double? textScaleFactor
  +dynamic textScaler
  +bool autofocus
  +int? minLines
  +int? maxLines
  +bool showCursor
  +double cursorWidth
  +double? cursorHeight
  +Radius? cursorRadius
  +Color? cursorColor
  +BoxHeightStyle selectionHeightStyle
  +BoxWidthStyle selectionWidthStyle
  +bool enableInteractiveSelection
  +TextSelectionControls? selectionControls
  +DragStartBehavior dragStartBehavior
  +ToolbarOptions? toolbarOptions
  +void Function()? onTap
  +ScrollPhysics? scrollPhysics
  +String? semanticsLabel
  +TextHeightBehavior? textHeightBehavior
  +TextWidthBasis? textWidthBasis
  +void Function(TextSelection, SelectionChangedCause?)? onSelectionChanged
  +dynamic contextMenuBuilder
  +dynamic magnifierConfiguration
  +bool selectionEnabled
  {static} -Widget _defaultContextMenuBuilder()
  +State<SelectableText> createState()
  +void debugFillProperties()
}

"material::selectable_text::SelectableText" o-- "painting::text_span::TextSpan"
"material::selectable_text::SelectableText" o-- "widgets::focus_manager::FocusNode"
"material::selectable_text::SelectableText" o-- "painting::text_style::TextStyle"
"material::selectable_text::SelectableText" o-- "painting::strut_style::StrutStyle"
"material::selectable_text::SelectableText" o-- "dart::ui::TextAlign"
"material::selectable_text::SelectableText" o-- "dart::ui::TextDirection"
"material::selectable_text::SelectableText" o-- "dart::ui::Radius"
"material::selectable_text::SelectableText" o-- "dart::ui::Color"
"material::selectable_text::SelectableText" o-- "dart::ui::BoxHeightStyle"
"material::selectable_text::SelectableText" o-- "dart::ui::BoxWidthStyle"
"material::selectable_text::SelectableText" o-- "widgets::text_selection::TextSelectionControls"
"material::selectable_text::SelectableText" o-- "gestures::recognizer::DragStartBehavior"
"material::selectable_text::SelectableText" o-- "widgets::editable_text::ToolbarOptions"
"material::selectable_text::SelectableText" o-- "gestures::tap::void Function()"
"material::selectable_text::SelectableText" o-- "widgets::scroll_physics::ScrollPhysics"
"material::selectable_text::SelectableText" o-- "dart::ui::TextHeightBehavior"
"material::selectable_text::SelectableText" o-- "painting::text_painter::TextWidthBasis"
"material::selectable_text::SelectableText" o-- "widgets::editable_text::void Function(TextSelection, SelectionChangedCause)"
"widgets::framework::StatefulWidget" <|-- "material::selectable_text::SelectableText"

class "material::selectable_text::_SelectableTextState" {
  -_TextSpanEditingController _controller
  -FocusNode? _focusNode
  -bool _showSelectionHandles
  -_SelectableTextSelectionGestureDetectorBuilder _selectionGestureDetectorBuilder
  +bool forcePressEnabled
  +GlobalKey<EditableTextState> editableTextKey
  -EditableTextState? _editableText
  -FocusNode _effectiveFocusNode
  +bool selectionEnabled
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  -void _onControllerChanged()
  -void _handleSelectionChanged()
  -void _handleSelectionHandleTapped()
  -bool _shouldShowSelectionHandles()
  +Widget build()
}

"material::selectable_text::_SelectableTextState" o-- "material::selectable_text::_TextSpanEditingController"
"material::selectable_text::_SelectableTextState" o-- "widgets::focus_manager::FocusNode"
"material::selectable_text::_SelectableTextState" o-- "material::selectable_text::_SelectableTextSelectionGestureDetectorBuilder"
"material::selectable_text::_SelectableTextState" o-- "widgets::framework::GlobalKey<EditableTextState>"
"material::selectable_text::_SelectableTextState" o-- "widgets::editable_text::EditableTextState"
"widgets::framework::State" <|-- "material::selectable_text::_SelectableTextState"
"widgets::text_selection::TextSelectionGestureDetectorBuilderDelegate" <|-- "material::selectable_text::_SelectableTextState"

class "material::circle_avatar::CircleAvatar" {
  +Widget? child
  +Color? backgroundColor
  +Color? foregroundColor
  +ImageProvider<Object>? backgroundImage
  +ImageProvider<Object>? foregroundImage
  +void Function(Object, StackTrace?)? onBackgroundImageError
  +void Function(Object, StackTrace?)? onForegroundImageError
  +double? radius
  +double? minRadius
  +double? maxRadius
  {static} -double _defaultRadius
  {static} -double _defaultMinRadius
  {static} -double _defaultMaxRadius
  -double _minDiameter
  -double _maxDiameter
  +Widget build()
}

"material::circle_avatar::CircleAvatar" o-- "widgets::framework::Widget"
"material::circle_avatar::CircleAvatar" o-- "dart::ui::Color"
"material::circle_avatar::CircleAvatar" o-- "painting::image_provider::ImageProvider<Object>"
"material::circle_avatar::CircleAvatar" o-- "painting::image_stream::void Function(Object, StackTrace)"
"widgets::framework::StatelessWidget" <|-- "material::circle_avatar::CircleAvatar"

class "material::ink_decoration::Ink" {
  +Widget? child
  +EdgeInsetsGeometry? padding
  +Decoration? decoration
  +double? width
  +double? height
  -EdgeInsetsGeometry _paddingIncludingDecoration
  +void debugFillProperties()
  +State<Ink> createState()
}

"material::ink_decoration::Ink" o-- "widgets::framework::Widget"
"material::ink_decoration::Ink" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::ink_decoration::Ink" o-- "painting::decoration::Decoration"
"widgets::framework::StatefulWidget" <|-- "material::ink_decoration::Ink"

class "material::ink_decoration::_InkState" {
  -GlobalKey<State<StatefulWidget>> _boxKey
  -InkDecoration? _ink
  -void _handleRemoved()
  +void deactivate()
  -Widget _build()
  +Widget build()
}

"material::ink_decoration::_InkState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"material::ink_decoration::_InkState" o-- "material::ink_decoration::InkDecoration"
"widgets::framework::State" <|-- "material::ink_decoration::_InkState"

class "material::ink_decoration::InkDecoration" {
  -BoxPainter? _painter
  -Decoration? _decoration
  -bool _isVisible
  -ImageConfiguration _configuration
  +Decoration? decoration
  +bool isVisible
  +ImageConfiguration configuration
  -void _handleChanged()
  +void dispose()
  +void paintFeature()
}

"material::ink_decoration::InkDecoration" o-- "painting::decoration::BoxPainter"
"material::ink_decoration::InkDecoration" o-- "painting::decoration::Decoration"
"material::ink_decoration::InkDecoration" o-- "painting::image_provider::ImageConfiguration"
"material::material::InkFeature" <|-- "material::ink_decoration::InkDecoration"

class "material::button_bar::ButtonBar" {
  +MainAxisAlignment? alignment
  +MainAxisSize? mainAxisSize
  +ButtonTextTheme? buttonTextTheme
  +double? buttonMinWidth
  +double? buttonHeight
  +EdgeInsetsGeometry? buttonPadding
  +bool? buttonAlignedDropdown
  +ButtonBarLayoutBehavior? layoutBehavior
  +VerticalDirection? overflowDirection
  +double? overflowButtonSpacing
  +List<Widget> children
  +Widget build()
}

"material::button_bar::ButtonBar" o-- "rendering::flex::MainAxisAlignment"
"material::button_bar::ButtonBar" o-- "rendering::flex::MainAxisSize"
"material::button_bar::ButtonBar" o-- "material::button_theme::ButtonTextTheme"
"material::button_bar::ButtonBar" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::button_bar::ButtonBar" o-- "material::button_theme::ButtonBarLayoutBehavior"
"material::button_bar::ButtonBar" o-- "painting::basic_types::VerticalDirection"
"widgets::framework::StatelessWidget" <|-- "material::button_bar::ButtonBar"

class "material::button_bar::_ButtonBarRow" {
  +double? overflowButtonSpacing
  +_RenderButtonBarRow createRenderObject()
  +void updateRenderObject()
}

"widgets::basic::Flex" <|-- "material::button_bar::_ButtonBarRow"

class "material::button_bar::_RenderButtonBarRow" {
  -bool _hasCheckedLayoutWidth
  +double? overflowButtonSpacing
  +BoxConstraints constraints
  +Size computeDryLayout()
  +void performLayout()
}

"material::button_bar::_RenderButtonBarRow" o-- "rendering::box::BoxConstraints"
"rendering::flex::RenderFlex" <|-- "material::button_bar::_RenderButtonBarRow"

class "material::page_transitions_theme::_FadeUpwardsPageTransition" {
  {static} -Tween<Offset> _bottomUpTween
  {static} -Animatable<double> _fastOutSlowInTween
  {static} -Animatable<double> _easeInTween
  -Animation<Offset> _positionAnimation
  -Animation<double> _opacityAnimation
  +Widget child
  +Widget build()
}

"material::page_transitions_theme::_FadeUpwardsPageTransition" o-- "animation::tween::Tween<Offset>"
"material::page_transitions_theme::_FadeUpwardsPageTransition" o-- "animation::tween::Animatable<double>"
"material::page_transitions_theme::_FadeUpwardsPageTransition" o-- "animation::animation::Animation<Offset>"
"material::page_transitions_theme::_FadeUpwardsPageTransition" o-- "animation::animation::Animation<double>"
"material::page_transitions_theme::_FadeUpwardsPageTransition" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::page_transitions_theme::_FadeUpwardsPageTransition"

class "material::page_transitions_theme::_OpenUpwardsPageTransition" {
  {static} -Tween<Offset> _primaryTranslationTween
  {static} -Tween<Offset> _secondaryTranslationTween
  {static} -Tween<double> _scrimOpacityTween
  {static} -Curve _transitionCurve
  +Animation<double> animation
  +Animation<double> secondaryAnimation
  +Widget child
  +Widget build()
}

"material::page_transitions_theme::_OpenUpwardsPageTransition" o-- "animation::tween::Tween<Offset>"
"material::page_transitions_theme::_OpenUpwardsPageTransition" o-- "animation::tween::Tween<double>"
"material::page_transitions_theme::_OpenUpwardsPageTransition" o-- "animation::curves::Curve"
"material::page_transitions_theme::_OpenUpwardsPageTransition" o-- "animation::animation::Animation<double>"
"material::page_transitions_theme::_OpenUpwardsPageTransition" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::page_transitions_theme::_OpenUpwardsPageTransition"

class "material::page_transitions_theme::_ZoomPageTransition" {
  {static} +List<TweenSequenceItem<double>> fastOutExtraSlowInTweenSequenceItems
  {static} -TweenSequence<double> _scaleCurveSequence
  +Animation<double> animation
  +Animation<double> secondaryAnimation
  +bool allowSnapshotting
  +Widget? child
  +bool allowEnterRouteSnapshotting
  +Widget build()
}

"material::page_transitions_theme::_ZoomPageTransition" o-- "animation::tween_sequence::TweenSequence<double>"
"material::page_transitions_theme::_ZoomPageTransition" o-- "animation::animation::Animation<double>"
"material::page_transitions_theme::_ZoomPageTransition" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::page_transitions_theme::_ZoomPageTransition"

class "material::page_transitions_theme::_ZoomEnterTransition" {
  +Animation<double> animation
  +Widget? child
  +bool allowSnapshotting
  +bool reverse
  +State<_ZoomEnterTransition> createState()
}

"material::page_transitions_theme::_ZoomEnterTransition" o-- "animation::animation::Animation<double>"
"material::page_transitions_theme::_ZoomEnterTransition" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "material::page_transitions_theme::_ZoomEnterTransition"

class "material::page_transitions_theme::_ZoomEnterTransitionState" {
  +_ZoomEnterTransitionPainter delegate
  {static} -Animatable<double> _fadeInTransition
  {static} -Animatable<double> _scaleDownTransition
  {static} -Animatable<double> _scaleUpTransition
  {static} -Animatable<double?> _scrimOpacityTween
  +bool useSnapshot
  -void _updateAnimations()
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"material::page_transitions_theme::_ZoomEnterTransitionState" o-- "material::page_transitions_theme::_ZoomEnterTransitionPainter"
"material::page_transitions_theme::_ZoomEnterTransitionState" o-- "animation::tween::Animatable<double>"
"widgets::framework::State" <|-- "material::page_transitions_theme::_ZoomEnterTransitionState"
"material::page_transitions_theme::_ZoomTransitionBase" <|-- "material::page_transitions_theme::_ZoomEnterTransitionState"

class "material::page_transitions_theme::_ZoomExitTransition" {
  +Animation<double> animation
  +bool allowSnapshotting
  +bool reverse
  +Widget? child
  +State<_ZoomExitTransition> createState()
}

"material::page_transitions_theme::_ZoomExitTransition" o-- "animation::animation::Animation<double>"
"material::page_transitions_theme::_ZoomExitTransition" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "material::page_transitions_theme::_ZoomExitTransition"

class "material::page_transitions_theme::_ZoomExitTransitionState" {
  +_ZoomExitTransitionPainter delegate
  {static} -Animatable<double> _fadeOutTransition
  {static} -Animatable<double> _scaleUpTransition
  {static} -Animatable<double> _scaleDownTransition
  +bool useSnapshot
  -void _updateAnimations()
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"material::page_transitions_theme::_ZoomExitTransitionState" o-- "material::page_transitions_theme::_ZoomExitTransitionPainter"
"material::page_transitions_theme::_ZoomExitTransitionState" o-- "animation::tween::Animatable<double>"
"widgets::framework::State" <|-- "material::page_transitions_theme::_ZoomExitTransitionState"
"material::page_transitions_theme::_ZoomTransitionBase" <|-- "material::page_transitions_theme::_ZoomExitTransitionState"

abstract class "material::page_transitions_theme::PageTransitionsBuilder" {
  +Widget buildTransitions()
}

class "material::page_transitions_theme::FadeUpwardsPageTransitionsBuilder" {
  +Widget buildTransitions()
}

"material::page_transitions_theme::PageTransitionsBuilder" <|-- "material::page_transitions_theme::FadeUpwardsPageTransitionsBuilder"

class "material::page_transitions_theme::OpenUpwardsPageTransitionsBuilder" {
  +Widget buildTransitions()
}

"material::page_transitions_theme::PageTransitionsBuilder" <|-- "material::page_transitions_theme::OpenUpwardsPageTransitionsBuilder"

class "material::page_transitions_theme::ZoomPageTransitionsBuilder" {
  +bool allowSnapshotting
  +bool allowEnterRouteSnapshotting
  +Widget buildTransitions()
}

"material::page_transitions_theme::PageTransitionsBuilder" <|-- "material::page_transitions_theme::ZoomPageTransitionsBuilder"

class "material::page_transitions_theme::CupertinoPageTransitionsBuilder" {
  +Widget buildTransitions()
}

"material::page_transitions_theme::PageTransitionsBuilder" <|-- "material::page_transitions_theme::CupertinoPageTransitionsBuilder"

class "material::page_transitions_theme::PageTransitionsTheme" {
  {static} -Map<TargetPlatform, PageTransitionsBuilder> _defaultBuilders
  -Map<TargetPlatform, PageTransitionsBuilder> _builders
  +Map<TargetPlatform, PageTransitionsBuilder> builders
  +int hashCode
  +Widget buildTransitions()
  -List<PageTransitionsBuilder?> _all()
  +bool ==()
  +void debugFillProperties()
}

"foundation::diagnostics::Diagnosticable" <|-- "material::page_transitions_theme::PageTransitionsTheme"

class "material::page_transitions_theme::_ZoomEnterTransitionPainter" {
  +bool reverse
  +Animation<double> animation
  +Animation<double> scale
  +Animation<double> fade
  -Matrix4 _transform
  -LayerHandle<OpacityLayer> _opacityHandle
  -LayerHandle<TransformLayer> _transformHandler
  -void _onStatusChange()
  -void _drawScrim()
  +void paint()
  +void paintSnapshot()
  +void dispose()
  +bool shouldRepaint()
}

"material::page_transitions_theme::_ZoomEnterTransitionPainter" o-- "animation::animation::Animation<double>"
"material::page_transitions_theme::_ZoomEnterTransitionPainter" o-- "vector_math::vector_math_64::Matrix4"
"material::page_transitions_theme::_ZoomEnterTransitionPainter" o-- "rendering::layer::LayerHandle<OpacityLayer>"
"material::page_transitions_theme::_ZoomEnterTransitionPainter" o-- "rendering::layer::LayerHandle<TransformLayer>"

class "material::page_transitions_theme::_ZoomExitTransitionPainter" {
  +bool reverse
  +Animation<double> scale
  +Animation<double> fade
  +Animation<double> animation
  -Matrix4 _transform
  -LayerHandle<OpacityLayer> _opacityHandle
  -LayerHandle<TransformLayer> _transformHandler
  -void _onStatusChange()
  +void paintSnapshot()
  +void paint()
  +bool shouldRepaint()
  +void dispose()
}

"material::page_transitions_theme::_ZoomExitTransitionPainter" o-- "animation::animation::Animation<double>"
"material::page_transitions_theme::_ZoomExitTransitionPainter" o-- "vector_math::vector_math_64::Matrix4"
"material::page_transitions_theme::_ZoomExitTransitionPainter" o-- "rendering::layer::LayerHandle<OpacityLayer>"
"material::page_transitions_theme::_ZoomExitTransitionPainter" o-- "rendering::layer::LayerHandle<TransformLayer>"

abstract class "material::page_transitions_theme::_ZoomTransitionBase" {
  +dynamic controller
  +Animation<double> fadeTransition
  +Animation<double> scaleTransition
  +bool useSnapshot
  +void onAnimationValueChange()
  +void onAnimationStatusChange()
  +void dispose()
}

"material::page_transitions_theme::_ZoomTransitionBase" o-- "animation::animation::Animation<double>"

class "material::app_bar_theme::AppBarTheme" {
  +Color? backgroundColor
  +Color? foregroundColor
  +double? elevation
  +double? scrolledUnderElevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +ShapeBorder? shape
  +IconThemeData? iconTheme
  +IconThemeData? actionsIconTheme
  +bool? centerTitle
  +double? titleSpacing
  +double? toolbarHeight
  +TextStyle? toolbarTextStyle
  +TextStyle? titleTextStyle
  +SystemUiOverlayStyle? systemOverlayStyle
  +int hashCode
  +AppBarTheme copyWith()
  {static} +AppBarTheme of()
  {static} +AppBarTheme lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::app_bar_theme::AppBarTheme" o-- "dart::ui::Color"
"material::app_bar_theme::AppBarTheme" o-- "painting::borders::ShapeBorder"
"material::app_bar_theme::AppBarTheme" o-- "widgets::icon_theme_data::IconThemeData"
"material::app_bar_theme::AppBarTheme" o-- "painting::text_style::TextStyle"
"material::app_bar_theme::AppBarTheme" o-- "services::system_chrome::SystemUiOverlayStyle"
"foundation::diagnostics::Diagnosticable" <|-- "material::app_bar_theme::AppBarTheme"

class "material::page::MaterialPageRoute" {
  +Widget Function(BuildContext) builder
  +bool maintainState
  +String debugLabel
  +Widget buildContent()
}

"material::page::MaterialPageRoute" o-- "widgets::framework::Widget Function(BuildContext)"
"widgets::pages::PageRoute" <|-- "material::page::MaterialPageRoute"
"material::page::MaterialRouteTransitionMixin" <|-- "material::page::MaterialPageRoute"

class "material::page::MaterialPage" {
  +Widget child
  +bool maintainState
  +bool fullscreenDialog
  +bool allowSnapshotting
  +Route<T> createRoute()
}

"material::page::MaterialPage" o-- "widgets::framework::Widget"
"widgets::navigator::Page" <|-- "material::page::MaterialPage"

class "material::page::_PageBasedMaterialPageRoute" {
  -MaterialPage<T> _page
  +bool maintainState
  +bool fullscreenDialog
  +String debugLabel
  +Widget buildContent()
}

"material::page::_PageBasedMaterialPageRoute" o-- "material::page::MaterialPage<T>"
"widgets::pages::PageRoute" <|-- "material::page::_PageBasedMaterialPageRoute"
"material::page::MaterialRouteTransitionMixin" <|-- "material::page::_PageBasedMaterialPageRoute"

abstract class "material::page::MaterialRouteTransitionMixin" {
  +Duration transitionDuration
  +Color? barrierColor
  +String? barrierLabel
  #Widget buildContent()
  +bool canTransitionTo()
  +Widget buildPage()
  +Widget buildTransitions()
}

"material::page::MaterialRouteTransitionMixin" o-- "dart::ui::Color"

class "material::colors::MaterialColor" {
  +Color shade50
  +Color shade100
  +Color shade200
  +Color shade300
  +Color shade400
  +Color shade500
  +Color shade600
  +Color shade700
  +Color shade800
  +Color shade900
}

"material::colors::MaterialColor" o-- "dart::ui::Color"
"painting::colors::ColorSwatch" <|-- "material::colors::MaterialColor"

class "material::colors::MaterialAccentColor" {
  +Color shade100
  +Color shade200
  +Color shade400
  +Color shade700
}

"material::colors::MaterialAccentColor" o-- "dart::ui::Color"
"painting::colors::ColorSwatch" <|-- "material::colors::MaterialAccentColor"

abstract class "material::colors::Colors" {
  {static} +Color transparent
  {static} +Color black
  {static} +Color black87
  {static} +Color black54
  {static} +Color black45
  {static} +Color black38
  {static} +Color black26
  {static} +Color black12
  {static} +Color white
  {static} +Color white70
  {static} +Color white60
  {static} +Color white54
  {static} +Color white38
  {static} +Color white30
  {static} +Color white24
  {static} +Color white12
  {static} +Color white10
  {static} +MaterialColor red
  {static} -int _redPrimaryValue
  {static} +MaterialAccentColor redAccent
  {static} -int _redAccentValue
  {static} +MaterialColor pink
  {static} -int _pinkPrimaryValue
  {static} +MaterialAccentColor pinkAccent
  {static} -int _pinkAccentPrimaryValue
  {static} +MaterialColor purple
  {static} -int _purplePrimaryValue
  {static} +MaterialAccentColor purpleAccent
  {static} -int _purpleAccentPrimaryValue
  {static} +MaterialColor deepPurple
  {static} -int _deepPurplePrimaryValue
  {static} +MaterialAccentColor deepPurpleAccent
  {static} -int _deepPurpleAccentPrimaryValue
  {static} +MaterialColor indigo
  {static} -int _indigoPrimaryValue
  {static} +MaterialAccentColor indigoAccent
  {static} -int _indigoAccentPrimaryValue
  {static} +MaterialColor blue
  {static} -int _bluePrimaryValue
  {static} +MaterialAccentColor blueAccent
  {static} -int _blueAccentPrimaryValue
  {static} +MaterialColor lightBlue
  {static} -int _lightBluePrimaryValue
  {static} +MaterialAccentColor lightBlueAccent
  {static} -int _lightBlueAccentPrimaryValue
  {static} +MaterialColor cyan
  {static} -int _cyanPrimaryValue
  {static} +MaterialAccentColor cyanAccent
  {static} -int _cyanAccentPrimaryValue
  {static} +MaterialColor teal
  {static} -int _tealPrimaryValue
  {static} +MaterialAccentColor tealAccent
  {static} -int _tealAccentPrimaryValue
  {static} +MaterialColor green
  {static} -int _greenPrimaryValue
  {static} +MaterialAccentColor greenAccent
  {static} -int _greenAccentPrimaryValue
  {static} +MaterialColor lightGreen
  {static} -int _lightGreenPrimaryValue
  {static} +MaterialAccentColor lightGreenAccent
  {static} -int _lightGreenAccentPrimaryValue
  {static} +MaterialColor lime
  {static} -int _limePrimaryValue
  {static} +MaterialAccentColor limeAccent
  {static} -int _limeAccentPrimaryValue
  {static} +MaterialColor yellow
  {static} -int _yellowPrimaryValue
  {static} +MaterialAccentColor yellowAccent
  {static} -int _yellowAccentPrimaryValue
  {static} +MaterialColor amber
  {static} -int _amberPrimaryValue
  {static} +MaterialAccentColor amberAccent
  {static} -int _amberAccentPrimaryValue
  {static} +MaterialColor orange
  {static} -int _orangePrimaryValue
  {static} +MaterialAccentColor orangeAccent
  {static} -int _orangeAccentPrimaryValue
  {static} +MaterialColor deepOrange
  {static} -int _deepOrangePrimaryValue
  {static} +MaterialAccentColor deepOrangeAccent
  {static} -int _deepOrangeAccentPrimaryValue
  {static} +MaterialColor brown
  {static} -int _brownPrimaryValue
  {static} +MaterialColor grey
  {static} -int _greyPrimaryValue
  {static} +MaterialColor blueGrey
  {static} -int _blueGreyPrimaryValue
  {static} +List<MaterialColor> primaries
  {static} +List<MaterialAccentColor> accents
}

"material::colors::Colors" o-- "dart::ui::Color"
"material::colors::Colors" o-- "material::colors::MaterialColor"
"material::colors::Colors" o-- "material::colors::MaterialAccentColor"

class "material::snack_bar::SnackBarAction" {
  +Color? textColor
  +Color? backgroundColor
  +Color? disabledTextColor
  +Color? disabledBackgroundColor
  +String label
  +void Function() onPressed
  +State<SnackBarAction> createState()
}

"material::snack_bar::SnackBarAction" o-- "dart::ui::Color"
"material::snack_bar::SnackBarAction" o-- "dart::ui::void Function()"
"widgets::framework::StatefulWidget" <|-- "material::snack_bar::SnackBarAction"

class "material::snack_bar::_SnackBarActionState" {
  -bool _haveTriggeredAction
  -void _handlePressed()
  +Widget build()
}

"widgets::framework::State" <|-- "material::snack_bar::_SnackBarActionState"

class "material::snack_bar::SnackBar" {
  +Widget content
  +Color? backgroundColor
  +double? elevation
  +EdgeInsetsGeometry? margin
  +EdgeInsetsGeometry? padding
  +double? width
  +ShapeBorder? shape
  +HitTestBehavior? hitTestBehavior
  +SnackBarBehavior? behavior
  +SnackBarAction? action
  +double? actionOverflowThreshold
  +bool? showCloseIcon
  +Color? closeIconColor
  +Duration duration
  +Animation<double>? animation
  +void Function()? onVisible
  +DismissDirection dismissDirection
  +Clip clipBehavior
  {static} +AnimationController createAnimationController()
  +SnackBar withAnimation()
  +State<SnackBar> createState()
}

"material::snack_bar::SnackBar" o-- "widgets::framework::Widget"
"material::snack_bar::SnackBar" o-- "dart::ui::Color"
"material::snack_bar::SnackBar" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::snack_bar::SnackBar" o-- "painting::borders::ShapeBorder"
"material::snack_bar::SnackBar" o-- "rendering::proxy_box::HitTestBehavior"
"material::snack_bar::SnackBar" o-- "material::snack_bar_theme::SnackBarBehavior"
"material::snack_bar::SnackBar" o-- "material::snack_bar::SnackBarAction"
"material::snack_bar::SnackBar" o-- "animation::animation::Animation<double>"
"material::snack_bar::SnackBar" o-- "dart::ui::void Function()"
"material::snack_bar::SnackBar" o-- "widgets::dismissible::DismissDirection"
"material::snack_bar::SnackBar" o-- "dart::ui::Clip"
"widgets::framework::StatefulWidget" <|-- "material::snack_bar::SnackBar"

class "material::snack_bar::_SnackBarState" {
  -bool _wasVisible
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  -void _onAnimationStatusChanged()
  +Widget build()
}

"widgets::framework::State" <|-- "material::snack_bar::_SnackBarState"

class "material::snack_bar::_SnackbarDefaultsM2" {
  -ThemeData _theme
  -ColorScheme _colors
  +Color backgroundColor
  +TextStyle? contentTextStyle
  +SnackBarBehavior behavior
  +Color actionTextColor
  +Color disabledActionTextColor
  +ShapeBorder shape
  +EdgeInsets insetPadding
  +bool showCloseIcon
  +Color closeIconColor
  +double actionOverflowThreshold
}

"material::snack_bar::_SnackbarDefaultsM2" o-- "material::theme_data::ThemeData"
"material::snack_bar::_SnackbarDefaultsM2" o-- "material::color_scheme::ColorScheme"
"material::snack_bar::_SnackbarDefaultsM2" o-- "dart::ui::Color"
"material::snack_bar::_SnackbarDefaultsM2" o-- "painting::text_style::TextStyle"
"material::snack_bar::_SnackbarDefaultsM2" o-- "material::snack_bar_theme::SnackBarBehavior"
"material::snack_bar::_SnackbarDefaultsM2" o-- "painting::borders::ShapeBorder"
"material::snack_bar::_SnackbarDefaultsM2" o-- "painting::edge_insets::EdgeInsets"
"material::snack_bar_theme::SnackBarThemeData" <|-- "material::snack_bar::_SnackbarDefaultsM2"

class "material::snack_bar::_SnackbarDefaultsM3" {
  +BuildContext context
  -ThemeData _theme
  -ColorScheme _colors
  +Color backgroundColor
  +Color actionTextColor
  +Color disabledActionTextColor
  +TextStyle contentTextStyle
  +double elevation
  +ShapeBorder shape
  +SnackBarBehavior behavior
  +EdgeInsets insetPadding
  +bool showCloseIcon
  +Color? closeIconColor
  +double actionOverflowThreshold
}

"material::snack_bar::_SnackbarDefaultsM3" o-- "widgets::framework::BuildContext"
"material::snack_bar::_SnackbarDefaultsM3" o-- "material::theme_data::ThemeData"
"material::snack_bar::_SnackbarDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::snack_bar::_SnackbarDefaultsM3" o-- "dart::ui::Color"
"material::snack_bar::_SnackbarDefaultsM3" o-- "painting::text_style::TextStyle"
"material::snack_bar::_SnackbarDefaultsM3" o-- "painting::borders::ShapeBorder"
"material::snack_bar::_SnackbarDefaultsM3" o-- "material::snack_bar_theme::SnackBarBehavior"
"material::snack_bar::_SnackbarDefaultsM3" o-- "painting::edge_insets::EdgeInsets"
"material::snack_bar_theme::SnackBarThemeData" <|-- "material::snack_bar::_SnackbarDefaultsM3"

class "material::snack_bar::SnackBarClosedReason" {
  +int index
  {static} +List<SnackBarClosedReason> values
  {static} +SnackBarClosedReason action
  {static} +SnackBarClosedReason dismiss
  {static} +SnackBarClosedReason swipe
  {static} +SnackBarClosedReason hide
  {static} +SnackBarClosedReason remove
  {static} +SnackBarClosedReason timeout
}

"material::snack_bar::SnackBarClosedReason" o-- "material::snack_bar::SnackBarClosedReason"
"dart::core::Enum" <|-- "material::snack_bar::SnackBarClosedReason"

class "material::badge::Badge" {
  +Color? backgroundColor
  +Color? textColor
  +double? smallSize
  +double? largeSize
  +TextStyle? textStyle
  +EdgeInsetsGeometry? padding
  +AlignmentGeometry? alignment
  +Offset? offset
  +Widget? label
  +bool isLabelVisible
  +Widget? child
  +Widget build()
}

"material::badge::Badge" o-- "dart::ui::Color"
"material::badge::Badge" o-- "painting::text_style::TextStyle"
"material::badge::Badge" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::badge::Badge" o-- "painting::alignment::AlignmentGeometry"
"material::badge::Badge" o-- "dart::ui::Offset"
"material::badge::Badge" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::badge::Badge"

class "material::badge::_Badge" {
  +AlignmentGeometry alignment
  +Offset offset
  +TextDirection textDirection
  +_RenderBadge createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"material::badge::_Badge" o-- "painting::alignment::AlignmentGeometry"
"material::badge::_Badge" o-- "dart::ui::Offset"
"material::badge::_Badge" o-- "dart::ui::TextDirection"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "material::badge::_Badge"

class "material::badge::_RenderBadge" {
  -Offset _offset
  +Offset offset
  +void performLayout()
}

"material::badge::_RenderBadge" o-- "dart::ui::Offset"
"rendering::shifted_box::RenderAligningShiftedBox" <|-- "material::badge::_RenderBadge"

class "material::badge::_BadgeDefaultsM3" {
  +BuildContext context
  -ThemeData _theme
  -ColorScheme _colors
  +Color? backgroundColor
  +Color? textColor
  +TextStyle? textStyle
}

"material::badge::_BadgeDefaultsM3" o-- "widgets::framework::BuildContext"
"material::badge::_BadgeDefaultsM3" o-- "material::theme_data::ThemeData"
"material::badge::_BadgeDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::badge::_BadgeDefaultsM3" o-- "dart::ui::Color"
"material::badge::_BadgeDefaultsM3" o-- "painting::text_style::TextStyle"
"material::badge_theme::BadgeThemeData" <|-- "material::badge::_BadgeDefaultsM3"

class "material::input_decorator::_InputBorderGap" {
  -double? _start
  -double _extent
  +double? start
  +double extent
  +int hashCode
  +bool ==()
  +String toString()
}

"foundation::change_notifier::ChangeNotifier" <|-- "material::input_decorator::_InputBorderGap"

class "material::input_decorator::_InputBorderTween" {
  +InputBorder lerp()
}

"animation::tween::Tween" <|-- "material::input_decorator::_InputBorderTween"

class "material::input_decorator::_InputBorderPainter" {
  +Animation<double> borderAnimation
  +_InputBorderTween border
  +Animation<double> gapAnimation
  +_InputBorderGap gap
  +TextDirection textDirection
  +Color fillColor
  +ColorTween hoverColorTween
  +Animation<double> hoverAnimation
  +Color blendedColor
  +void paint()
  +bool shouldRepaint()
  +String toString()
}

"material::input_decorator::_InputBorderPainter" o-- "animation::animation::Animation<double>"
"material::input_decorator::_InputBorderPainter" o-- "material::input_decorator::_InputBorderTween"
"material::input_decorator::_InputBorderPainter" o-- "material::input_decorator::_InputBorderGap"
"material::input_decorator::_InputBorderPainter" o-- "dart::ui::TextDirection"
"material::input_decorator::_InputBorderPainter" o-- "dart::ui::Color"
"material::input_decorator::_InputBorderPainter" o-- "animation::tween::ColorTween"
"rendering::custom_paint::CustomPainter" <|-- "material::input_decorator::_InputBorderPainter"

class "material::input_decorator::_BorderContainer" {
  +InputBorder border
  +_InputBorderGap gap
  +Animation<double> gapAnimation
  +Color fillColor
  +Color hoverColor
  +bool isHovering
  +_BorderContainerState createState()
}

"material::input_decorator::_BorderContainer" o-- "material::input_border::InputBorder"
"material::input_decorator::_BorderContainer" o-- "material::input_decorator::_InputBorderGap"
"material::input_decorator::_BorderContainer" o-- "animation::animation::Animation<double>"
"material::input_decorator::_BorderContainer" o-- "dart::ui::Color"
"widgets::framework::StatefulWidget" <|-- "material::input_decorator::_BorderContainer"

class "material::input_decorator::_BorderContainerState" {
  {static} -Duration _kHoverDuration
  -AnimationController _controller
  -AnimationController _hoverColorController
  -Animation<double> _borderAnimation
  -_InputBorderTween _border
  -Animation<double> _hoverAnimation
  -ColorTween _hoverColorTween
  +void initState()
  +void dispose()
  +void didUpdateWidget()
  +Widget build()
}

"material::input_decorator::_BorderContainerState" o-- "animation::animation_controller::AnimationController"
"material::input_decorator::_BorderContainerState" o-- "animation::animation::Animation<double>"
"material::input_decorator::_BorderContainerState" o-- "material::input_decorator::_InputBorderTween"
"material::input_decorator::_BorderContainerState" o-- "animation::tween::ColorTween"
"widgets::framework::State" <|-- "material::input_decorator::_BorderContainerState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::input_decorator::_BorderContainerState"

class "material::input_decorator::_Shaker" {
  +Widget? child
  +Animation<double> animation
  +double translateX
  +Widget build()
}

"material::input_decorator::_Shaker" o-- "widgets::framework::Widget"
"material::input_decorator::_Shaker" o-- "animation::animation::Animation<double>"
"widgets::transitions::AnimatedWidget" <|-- "material::input_decorator::_Shaker"

class "material::input_decorator::_HelperError" {
  +TextAlign? textAlign
  +String? helperText
  +TextStyle? helperStyle
  +int? helperMaxLines
  +Widget? error
  +String? errorText
  +TextStyle? errorStyle
  +int? errorMaxLines
  +_HelperErrorState createState()
}

"material::input_decorator::_HelperError" o-- "dart::ui::TextAlign"
"material::input_decorator::_HelperError" o-- "painting::text_style::TextStyle"
"material::input_decorator::_HelperError" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "material::input_decorator::_HelperError"

class "material::input_decorator::_HelperErrorState" {
  {static} +Widget empty
  -AnimationController _controller
  -Widget? _helper
  -Widget? _error
  -bool _hasError
  +void initState()
  +void dispose()
  -void _handleChange()
  +void didUpdateWidget()
  -Widget _buildHelper()
  -Widget _buildError()
  +Widget build()
}

"material::input_decorator::_HelperErrorState" o-- "widgets::framework::Widget"
"material::input_decorator::_HelperErrorState" o-- "animation::animation_controller::AnimationController"
"widgets::framework::State" <|-- "material::input_decorator::_HelperErrorState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "material::input_decorator::_HelperErrorState"

class "material::input_decorator::FloatingLabelAlignment" {
  -double _x
  {static} +FloatingLabelAlignment start
  {static} +FloatingLabelAlignment center
  +int hashCode
  +bool ==()
  {static} -String _stringify()
  +String toString()
}

"material::input_decorator::FloatingLabelAlignment" o-- "material::input_decorator::FloatingLabelAlignment"

class "material::input_decorator::_Decoration" {
  +EdgeInsetsGeometry contentPadding
  +bool isCollapsed
  +double floatingLabelHeight
  +double floatingLabelProgress
  +FloatingLabelAlignment floatingLabelAlignment
  +InputBorder border
  +_InputBorderGap borderGap
  +bool alignLabelWithHint
  +bool? isDense
  +VisualDensity visualDensity
  +Widget? icon
  +Widget? input
  +Widget? label
  +Widget? hint
  +Widget? prefix
  +Widget? suffix
  +Widget? prefixIcon
  +Widget? suffixIcon
  +Widget? helperError
  +Widget? counter
  +Widget? container
  +int hashCode
  +bool ==()
}

"material::input_decorator::_Decoration" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::input_decorator::_Decoration" o-- "material::input_decorator::FloatingLabelAlignment"
"material::input_decorator::_Decoration" o-- "material::input_border::InputBorder"
"material::input_decorator::_Decoration" o-- "material::input_decorator::_InputBorderGap"
"material::input_decorator::_Decoration" o-- "material::theme_data::VisualDensity"
"material::input_decorator::_Decoration" o-- "widgets::framework::Widget"

class "material::input_decorator::_RenderDecorationLayout" {
  +Map<RenderBox?, double> boxToBaseline
  +double inputBaseline
  +double outlineBaseline
  +double subtextBaseline
  +double containerHeight
  +double subtextHeight
}

class "material::input_decorator::_RenderDecoration" {
  {static} +double subtextGap
  -_Decoration _decoration
  -TextDirection _textDirection
  -TextBaseline _textBaseline
  -TextAlignVertical? _textAlignVertical
  -bool _isFocused
  -bool _expands
  -bool _material3
  -Matrix4? _labelTransform
  +RenderBox? icon
  +RenderBox? input
  +RenderBox? label
  +RenderBox? hint
  +RenderBox? prefix
  +RenderBox? suffix
  +RenderBox? prefixIcon
  +RenderBox? suffixIcon
  +RenderBox? helperError
  +RenderBox? counter
  +RenderBox? container
  +Iterable<RenderBox> children
  +_Decoration decoration
  +TextDirection textDirection
  +TextBaseline textBaseline
  -TextAlignVertical _defaultTextAlignVertical
  +TextAlignVertical textAlignVertical
  +bool isFocused
  +bool expands
  +bool material3
  -bool _isOutlineAligned
  +bool sizedByParent
  +EdgeInsets contentPadding
  +void visitChildrenForSemantics()
  {static} -double _minWidth()
  {static} -double _maxWidth()
  {static} -double _minHeight()
  {static} -Size _boxSize()
  {static} -BoxParentData _boxParentData()
  -double _layoutLineBox()
  -_RenderDecorationLayout _layout()
  -double _interpolateThree()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  -double _lineHeight()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double computeDistanceToActualBaseline()
  +Size computeDryLayout()
  -dynamic _childSemanticsConfigurationDelegate()
  +void describeSemanticsConfiguration()
  +void performLayout()
  -void _paintLabel()
  +void paint()
  +bool hitTestSelf()
  +bool hitTestChildren()
  +void applyPaintTransform()
}

"material::input_decorator::_RenderDecoration" o-- "material::input_decorator::_Decoration"
"material::input_decorator::_RenderDecoration" o-- "dart::ui::TextDirection"
"material::input_decorator::_RenderDecoration" o-- "dart::ui::TextBaseline"
"material::input_decorator::_RenderDecoration" o-- "painting::alignment::TextAlignVertical"
"material::input_decorator::_RenderDecoration" o-- "vector_math::vector_math_64::Matrix4"
"material::input_decorator::_RenderDecoration" o-- "rendering::box::RenderBox"
"material::input_decorator::_RenderDecoration" o-- "painting::edge_insets::EdgeInsets"
"rendering::box::RenderBox" <|-- "material::input_decorator::_RenderDecoration"
"widgets::slotted_render_object_widget::SlottedContainerRenderObjectMixin" <|-- "material::input_decorator::_RenderDecoration"

class "material::input_decorator::_Decorator" {
  +_Decoration decoration
  +TextDirection textDirection
  +TextBaseline textBaseline
  +TextAlignVertical? textAlignVertical
  +bool isFocused
  +bool expands
  +Iterable<_DecorationSlot> slots
  +Widget? childForSlot()
  +_RenderDecoration createRenderObject()
  +void updateRenderObject()
}

"material::input_decorator::_Decorator" o-- "material::input_decorator::_Decoration"
"material::input_decorator::_Decorator" o-- "dart::ui::TextDirection"
"material::input_decorator::_Decorator" o-- "dart::ui::TextBaseline"
"material::input_decorator::_Decorator" o-- "painting::alignment::TextAlignVertical"

class "material::input_decorator::_AffixText" {
  +bool labelIsFloating
  +String? text
  +TextStyle? style
  +Widget? child
  +SemanticsSortKey? semanticsSortKey
  +SemanticsTag semanticsTag
  +Widget build()
}

"material::input_decorator::_AffixText" o-- "painting::text_style::TextStyle"
"material::input_decorator::_AffixText" o-- "widgets::framework::Widget"
"material::input_decorator::_AffixText" o-- "semantics::semantics::SemanticsSortKey"
"material::input_decorator::_AffixText" o-- "semantics::semantics::SemanticsTag"
"widgets::framework::StatelessWidget" <|-- "material::input_decorator::_AffixText"

class "material::input_decorator::InputDecorator" {
  +InputDecoration decoration
  +TextStyle? baseStyle
  +TextAlign? textAlign
  +TextAlignVertical? textAlignVertical
  +bool isFocused
  +bool isHovering
  +bool expands
  +bool isEmpty
  +Widget? child
  -bool _labelShouldWithdraw
  +State<InputDecorator> createState()
  {static} +RenderBox? containerOf()
  +void debugFillProperties()
}

"material::input_decorator::InputDecorator" o-- "material::input_decorator::InputDecoration"
"material::input_decorator::InputDecorator" o-- "painting::text_style::TextStyle"
"material::input_decorator::InputDecorator" o-- "dart::ui::TextAlign"
"material::input_decorator::InputDecorator" o-- "painting::alignment::TextAlignVertical"
"material::input_decorator::InputDecorator" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "material::input_decorator::InputDecorator"

class "material::input_decorator::_InputDecoratorState" {
  -AnimationController _floatingLabelController
  -Animation<double> _floatingLabelAnimation
  -AnimationController _shakingLabelController
  -_InputBorderGap _borderGap
  {static} -OrdinalSortKey _kPrefixSemanticsSortOrder
  {static} -OrdinalSortKey _kInputSemanticsSortOrder
  {static} -OrdinalSortKey _kSuffixSemanticsSortOrder
  {static} -SemanticsTag _kPrefixSemanticsTag
  {static} -SemanticsTag _kSuffixSemanticsTag
  -InputDecoration? _effectiveDecoration
  +InputDecoration decoration
  +TextAlign? textAlign
  +bool isFocused
  -bool _hasError
  +bool isHovering
  +bool isEmpty
  -bool _floatingLabelEnabled
  -bool _hasInlineLabel
  -bool _shouldShowLabel
  +Set<MaterialState> materialState
  +void initState()
  +void didChangeDependencies()
  +void dispose()
  -void _handleChange()
  +void didUpdateWidget()
  -Color _getDefaultM2BorderColor()
  -Color _getFillColor()
  -Color _getHoverColor()
  -Color _getIconColor()
  -Color _getPrefixIconColor()
  -Color _getSuffixIconColor()
  -TextStyle _getInlineLabelStyle()
  -TextStyle _getInlineHintStyle()
  -TextStyle _getFloatingLabelStyle()
  -TextStyle _getHelperStyle()
  -TextStyle _getErrorStyle()
  -InputBorder _getDefaultBorder()
  +Widget build()
}

"material::input_decorator::_InputDecoratorState" o-- "animation::animation_controller::AnimationController"
"material::input_decorator::_InputDecoratorState" o-- "animation::animation::Animation<double>"
"material::input_decorator::_InputDecoratorState" o-- "material::input_decorator::_InputBorderGap"
"material::input_decorator::_InputDecoratorState" o-- "semantics::semantics::OrdinalSortKey"
"material::input_decorator::_InputDecoratorState" o-- "semantics::semantics::SemanticsTag"
"material::input_decorator::_InputDecoratorState" o-- "material::input_decorator::InputDecoration"
"material::input_decorator::_InputDecoratorState" o-- "dart::ui::TextAlign"
"widgets::framework::State" <|-- "material::input_decorator::_InputDecoratorState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::input_decorator::_InputDecoratorState"

class "material::input_decorator::InputDecoration" {
  +Widget? icon
  +Color? iconColor
  +Widget? label
  +String? labelText
  +TextStyle? labelStyle
  +TextStyle? floatingLabelStyle
  +String? helperText
  +TextStyle? helperStyle
  +int? helperMaxLines
  +String? hintText
  +TextStyle? hintStyle
  +TextDirection? hintTextDirection
  +int? hintMaxLines
  +Duration? hintFadeDuration
  +Widget? error
  +String? errorText
  +TextStyle? errorStyle
  +int? errorMaxLines
  +FloatingLabelBehavior? floatingLabelBehavior
  +FloatingLabelAlignment? floatingLabelAlignment
  +bool? isDense
  +EdgeInsetsGeometry? contentPadding
  +bool? isCollapsed
  +Widget? prefixIcon
  +BoxConstraints? prefixIconConstraints
  +Widget? prefix
  +String? prefixText
  +TextStyle? prefixStyle
  +Color? prefixIconColor
  +Widget? suffixIcon
  +Widget? suffix
  +String? suffixText
  +TextStyle? suffixStyle
  +Color? suffixIconColor
  +BoxConstraints? suffixIconConstraints
  +String? counterText
  +Widget? counter
  +TextStyle? counterStyle
  +bool? filled
  +Color? fillColor
  +Color? focusColor
  +Color? hoverColor
  +InputBorder? errorBorder
  +InputBorder? focusedBorder
  +InputBorder? focusedErrorBorder
  +InputBorder? disabledBorder
  +InputBorder? enabledBorder
  +InputBorder? border
  +bool enabled
  +String? semanticCounterText
  +bool? alignLabelWithHint
  +BoxConstraints? constraints
  +int hashCode
  +InputDecoration copyWith()
  +InputDecoration applyDefaults()
  +bool ==()
  +String toString()
}

"material::input_decorator::InputDecoration" o-- "widgets::framework::Widget"
"material::input_decorator::InputDecoration" o-- "dart::ui::Color"
"material::input_decorator::InputDecoration" o-- "painting::text_style::TextStyle"
"material::input_decorator::InputDecoration" o-- "dart::ui::TextDirection"
"material::input_decorator::InputDecoration" o-- "material::input_decorator::FloatingLabelBehavior"
"material::input_decorator::InputDecoration" o-- "material::input_decorator::FloatingLabelAlignment"
"material::input_decorator::InputDecoration" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::input_decorator::InputDecoration" o-- "rendering::box::BoxConstraints"
"material::input_decorator::InputDecoration" o-- "material::input_border::InputBorder"

class "material::input_decorator::InputDecorationTheme" {
  +TextStyle? labelStyle
  +TextStyle? floatingLabelStyle
  +TextStyle? helperStyle
  +int? helperMaxLines
  +TextStyle? hintStyle
  +Duration? hintFadeDuration
  +TextStyle? errorStyle
  +int? errorMaxLines
  +FloatingLabelBehavior floatingLabelBehavior
  +FloatingLabelAlignment floatingLabelAlignment
  +bool isDense
  +EdgeInsetsGeometry? contentPadding
  +bool isCollapsed
  +Color? iconColor
  +TextStyle? prefixStyle
  +Color? prefixIconColor
  +TextStyle? suffixStyle
  +Color? suffixIconColor
  +TextStyle? counterStyle
  +bool filled
  +Color? fillColor
  +BorderSide? outlineBorder
  +BorderSide? activeIndicatorBorder
  +Color? focusColor
  +Color? hoverColor
  +InputBorder? errorBorder
  +InputBorder? focusedBorder
  +InputBorder? focusedErrorBorder
  +InputBorder? disabledBorder
  +InputBorder? enabledBorder
  +InputBorder? border
  +bool alignLabelWithHint
  +BoxConstraints? constraints
  +int hashCode
  +InputDecorationTheme copyWith()
  +InputDecorationTheme merge()
  +bool ==()
  +void debugFillProperties()
}

"material::input_decorator::InputDecorationTheme" o-- "painting::text_style::TextStyle"
"material::input_decorator::InputDecorationTheme" o-- "material::input_decorator::FloatingLabelBehavior"
"material::input_decorator::InputDecorationTheme" o-- "material::input_decorator::FloatingLabelAlignment"
"material::input_decorator::InputDecorationTheme" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::input_decorator::InputDecorationTheme" o-- "dart::ui::Color"
"material::input_decorator::InputDecorationTheme" o-- "painting::borders::BorderSide"
"material::input_decorator::InputDecorationTheme" o-- "material::input_border::InputBorder"
"material::input_decorator::InputDecorationTheme" o-- "rendering::box::BoxConstraints"
"foundation::diagnostics::Diagnosticable" <|-- "material::input_decorator::InputDecorationTheme"

class "material::input_decorator::_InputDecoratorDefaultsM2" {
  +BuildContext context
  +TextStyle? hintStyle
  +TextStyle? labelStyle
  +TextStyle? floatingLabelStyle
  +TextStyle? helperStyle
  +TextStyle? errorStyle
  +Color? fillColor
  +Color? iconColor
  +Color? prefixIconColor
  +Color? suffixIconColor
}

"material::input_decorator::_InputDecoratorDefaultsM2" o-- "widgets::framework::BuildContext"
"material::input_decorator::_InputDecoratorDefaultsM2" o-- "painting::text_style::TextStyle"
"material::input_decorator::_InputDecoratorDefaultsM2" o-- "dart::ui::Color"
"material::input_decorator::InputDecorationTheme" <|-- "material::input_decorator::_InputDecoratorDefaultsM2"

class "material::input_decorator::_InputDecoratorDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  -TextTheme _textTheme
  +TextStyle? hintStyle
  +Color? fillColor
  +BorderSide? activeIndicatorBorder
  +BorderSide? outlineBorder
  +Color? iconColor
  +Color? prefixIconColor
  +Color? suffixIconColor
  +TextStyle? labelStyle
  +TextStyle? floatingLabelStyle
  +TextStyle? helperStyle
  +TextStyle? errorStyle
}

"material::input_decorator::_InputDecoratorDefaultsM3" o-- "widgets::framework::BuildContext"
"material::input_decorator::_InputDecoratorDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::input_decorator::_InputDecoratorDefaultsM3" o-- "material::text_theme::TextTheme"
"material::input_decorator::_InputDecoratorDefaultsM3" o-- "painting::text_style::TextStyle"
"material::input_decorator::_InputDecoratorDefaultsM3" o-- "dart::ui::Color"
"material::input_decorator::_InputDecoratorDefaultsM3" o-- "painting::borders::BorderSide"
"material::input_decorator::InputDecorationTheme" <|-- "material::input_decorator::_InputDecoratorDefaultsM3"

class "material::input_decorator::FloatingLabelBehavior" {
  +int index
  {static} +List<FloatingLabelBehavior> values
  {static} +FloatingLabelBehavior never
  {static} +FloatingLabelBehavior auto
  {static} +FloatingLabelBehavior always
}

"material::input_decorator::FloatingLabelBehavior" o-- "material::input_decorator::FloatingLabelBehavior"
"dart::core::Enum" <|-- "material::input_decorator::FloatingLabelBehavior"

class "material::input_decorator::_DecorationSlot" {
  +int index
  {static} +List<_DecorationSlot> values
  {static} +_DecorationSlot icon
  {static} +_DecorationSlot input
  {static} +_DecorationSlot label
  {static} +_DecorationSlot hint
  {static} +_DecorationSlot prefix
  {static} +_DecorationSlot suffix
  {static} +_DecorationSlot prefixIcon
  {static} +_DecorationSlot suffixIcon
  {static} +_DecorationSlot helperError
  {static} +_DecorationSlot counter
  {static} +_DecorationSlot container
}

"material::input_decorator::_DecorationSlot" o-- "material::input_decorator::_DecorationSlot"
"dart::core::Enum" <|-- "material::input_decorator::_DecorationSlot"

class "material::reorderable_list::ReorderableListView" {
  +Widget Function(BuildContext, int) itemBuilder
  +int itemCount
  +void Function(int, int) onReorder
  +void Function(int)? onReorderStart
  +void Function(int)? onReorderEnd
  +Widget Function(Widget, int, Animation<double>)? proxyDecorator
  +bool buildDefaultDragHandles
  +EdgeInsets? padding
  +Widget? header
  +Widget? footer
  +Axis scrollDirection
  +bool reverse
  +ScrollController? scrollController
  +bool? primary
  +ScrollPhysics? physics
  +bool shrinkWrap
  +double anchor
  +double? cacheExtent
  +DragStartBehavior dragStartBehavior
  +ScrollViewKeyboardDismissBehavior keyboardDismissBehavior
  +String? restorationId
  +Clip clipBehavior
  +double? itemExtent
  +dynamic itemExtentBuilder
  +Widget? prototypeItem
  +double? autoScrollerVelocityScalar
  +State<ReorderableListView> createState()
}

"material::reorderable_list::ReorderableListView" o-- "widgets::framework::Widget Function(BuildContext, int)"
"material::reorderable_list::ReorderableListView" o-- "widgets::reorderable_list::void Function(int, int)"
"material::reorderable_list::ReorderableListView" o-- "null::void Function(int)"
"material::reorderable_list::ReorderableListView" o-- "widgets::reorderable_list::Widget Function(Widget, int, Animation<double>)"
"material::reorderable_list::ReorderableListView" o-- "painting::edge_insets::EdgeInsets"
"material::reorderable_list::ReorderableListView" o-- "widgets::framework::Widget"
"material::reorderable_list::ReorderableListView" o-- "painting::basic_types::Axis"
"material::reorderable_list::ReorderableListView" o-- "widgets::scroll_controller::ScrollController"
"material::reorderable_list::ReorderableListView" o-- "widgets::scroll_physics::ScrollPhysics"
"material::reorderable_list::ReorderableListView" o-- "gestures::recognizer::DragStartBehavior"
"material::reorderable_list::ReorderableListView" o-- "widgets::scroll_view::ScrollViewKeyboardDismissBehavior"
"material::reorderable_list::ReorderableListView" o-- "dart::ui::Clip"
"widgets::framework::StatefulWidget" <|-- "material::reorderable_list::ReorderableListView"

class "material::reorderable_list::_ReorderableListViewState" {
  -Widget _itemBuilder()
  -Widget _proxyDecorator()
  +Widget build()
}

"widgets::framework::State" <|-- "material::reorderable_list::_ReorderableListViewState"

class "material::reorderable_list::_ReorderableListViewChildGlobalKey" {
  +Key subKey
  +State<StatefulWidget> state
  +int hashCode
  +bool ==()
}

"material::reorderable_list::_ReorderableListViewChildGlobalKey" o-- "foundation::key::Key"
"material::reorderable_list::_ReorderableListViewChildGlobalKey" o-- "widgets::framework::State<StatefulWidget>"
"widgets::framework::GlobalObjectKey" <|-- "material::reorderable_list::_ReorderableListViewChildGlobalKey"

class "material::badge_theme::BadgeThemeData" {
  +Color? backgroundColor
  +Color? textColor
  +double? smallSize
  +double? largeSize
  +TextStyle? textStyle
  +EdgeInsetsGeometry? padding
  +AlignmentGeometry? alignment
  +Offset? offset
  +int hashCode
  +BadgeThemeData copyWith()
  {static} +BadgeThemeData lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::badge_theme::BadgeThemeData" o-- "dart::ui::Color"
"material::badge_theme::BadgeThemeData" o-- "painting::text_style::TextStyle"
"material::badge_theme::BadgeThemeData" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::badge_theme::BadgeThemeData" o-- "painting::alignment::AlignmentGeometry"
"material::badge_theme::BadgeThemeData" o-- "dart::ui::Offset"
"foundation::diagnostics::Diagnosticable" <|-- "material::badge_theme::BadgeThemeData"

class "material::badge_theme::BadgeTheme" {
  +BadgeThemeData data
  {static} +BadgeThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::badge_theme::BadgeTheme" o-- "material::badge_theme::BadgeThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::badge_theme::BadgeTheme"

class "material::desktop_text_selection_toolbar::DesktopTextSelectionToolbar" {
  +Offset anchor
  +List<Widget> children
  {static} -Widget _defaultToolbarBuilder()
  +Widget build()
}

"material::desktop_text_selection_toolbar::DesktopTextSelectionToolbar" o-- "dart::ui::Offset"
"widgets::framework::StatelessWidget" <|-- "material::desktop_text_selection_toolbar::DesktopTextSelectionToolbar"

class "material::navigation_drawer::NavigationDrawer" {
  +Color? backgroundColor
  +Color? shadowColor
  +Color? surfaceTintColor
  +double? elevation
  +Color? indicatorColor
  +ShapeBorder? indicatorShape
  +List<Widget> children
  +int? selectedIndex
  +void Function(int)? onDestinationSelected
  +EdgeInsetsGeometry tilePadding
  +Widget build()
}

"material::navigation_drawer::NavigationDrawer" o-- "dart::ui::Color"
"material::navigation_drawer::NavigationDrawer" o-- "painting::borders::ShapeBorder"
"material::navigation_drawer::NavigationDrawer" o-- "foundation::basic_types::void Function(int)"
"material::navigation_drawer::NavigationDrawer" o-- "painting::edge_insets::EdgeInsetsGeometry"
"widgets::framework::StatelessWidget" <|-- "material::navigation_drawer::NavigationDrawer"

class "material::navigation_drawer::NavigationDrawerDestination" {
  +Color? backgroundColor
  +Widget icon
  +Widget? selectedIcon
  +Widget label
  +bool enabled
  +Widget build()
}

"material::navigation_drawer::NavigationDrawerDestination" o-- "dart::ui::Color"
"material::navigation_drawer::NavigationDrawerDestination" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::navigation_drawer::NavigationDrawerDestination"

class "material::navigation_drawer::_NavigationDestinationBuilder" {
  +Widget Function(BuildContext) buildIcon
  +Widget Function(BuildContext) buildLabel
  +bool enabled
  +Widget build()
}

"material::navigation_drawer::_NavigationDestinationBuilder" o-- "widgets::framework::Widget Function(BuildContext)"
"widgets::framework::StatelessWidget" <|-- "material::navigation_drawer::_NavigationDestinationBuilder"

class "material::navigation_drawer::_NavigationDestinationSemantics" {
  +Widget child
  +Widget build()
}

"material::navigation_drawer::_NavigationDestinationSemantics" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::navigation_drawer::_NavigationDestinationSemantics"

class "material::navigation_drawer::_StatusTransitionWidgetBuilder" {
  +Widget Function(BuildContext, Widget?) builder
  +Widget? child
  +Widget build()
}

"material::navigation_drawer::_StatusTransitionWidgetBuilder" o-- "widgets::framework::Widget Function(BuildContext, Widget)"
"material::navigation_drawer::_StatusTransitionWidgetBuilder" o-- "widgets::framework::Widget"
"widgets::status_transitions::StatusTransitionWidget" <|-- "material::navigation_drawer::_StatusTransitionWidgetBuilder"

class "material::navigation_drawer::_NavigationDrawerDestinationInfo" {
  +int index
  +int totalNumberOfDestinations
  +Animation<double> selectedAnimation
  +Color? indicatorColor
  +ShapeBorder? indicatorShape
  +void Function() onTap
  +EdgeInsetsGeometry tilePadding
  {static} +_NavigationDrawerDestinationInfo of()
  +bool updateShouldNotify()
}

"material::navigation_drawer::_NavigationDrawerDestinationInfo" o-- "animation::animation::Animation<double>"
"material::navigation_drawer::_NavigationDrawerDestinationInfo" o-- "dart::ui::Color"
"material::navigation_drawer::_NavigationDrawerDestinationInfo" o-- "painting::borders::ShapeBorder"
"material::navigation_drawer::_NavigationDrawerDestinationInfo" o-- "dart::ui::void Function()"
"material::navigation_drawer::_NavigationDrawerDestinationInfo" o-- "painting::edge_insets::EdgeInsetsGeometry"
"widgets::framework::InheritedWidget" <|-- "material::navigation_drawer::_NavigationDrawerDestinationInfo"

class "material::navigation_drawer::_SelectableAnimatedBuilder" {
  +bool isSelected
  +Duration duration
  +Widget Function(BuildContext, Animation<double>) builder
  +_SelectableAnimatedBuilderState createState()
}

"material::navigation_drawer::_SelectableAnimatedBuilder" o-- "null::Widget Function(BuildContext, Animation<double>)"
"widgets::framework::StatefulWidget" <|-- "material::navigation_drawer::_SelectableAnimatedBuilder"

class "material::navigation_drawer::_SelectableAnimatedBuilderState" {
  -AnimationController _controller
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"material::navigation_drawer::_SelectableAnimatedBuilderState" o-- "animation::animation_controller::AnimationController"
"widgets::framework::State" <|-- "material::navigation_drawer::_SelectableAnimatedBuilderState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "material::navigation_drawer::_SelectableAnimatedBuilderState"

class "material::navigation_drawer::_NavigationDrawerDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  -TextTheme _textTheme
  +Color? backgroundColor
  +Color? surfaceTintColor
  +Color? shadowColor
  +Color? indicatorColor
  +MaterialStateProperty<IconThemeData?>? iconTheme
  +MaterialStateProperty<TextStyle?>? labelTextStyle
}

"material::navigation_drawer::_NavigationDrawerDefaultsM3" o-- "widgets::framework::BuildContext"
"material::navigation_drawer::_NavigationDrawerDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::navigation_drawer::_NavigationDrawerDefaultsM3" o-- "material::text_theme::TextTheme"
"material::navigation_drawer::_NavigationDrawerDefaultsM3" o-- "dart::ui::Color"
"material::navigation_drawer::_NavigationDrawerDefaultsM3" o-- "material::material_state::MaterialStateProperty<IconThemeData>"
"material::navigation_drawer::_NavigationDrawerDefaultsM3" o-- "material::material_state::MaterialStateProperty<TextStyle>"
"material::navigation_drawer_theme::NavigationDrawerThemeData" <|-- "material::navigation_drawer::_NavigationDrawerDefaultsM3"

class "material::color_scheme::ColorScheme" {
  +Brightness brightness
  +Color primary
  +Color onPrimary
  -Color? _primaryContainer
  -Color? _onPrimaryContainer
  +Color secondary
  +Color onSecondary
  -Color? _secondaryContainer
  -Color? _onSecondaryContainer
  -Color? _tertiary
  -Color? _onTertiary
  -Color? _tertiaryContainer
  -Color? _onTertiaryContainer
  +Color error
  +Color onError
  -Color? _errorContainer
  -Color? _onErrorContainer
  +Color background
  +Color onBackground
  +Color surface
  +Color onSurface
  -Color? _surfaceVariant
  -Color? _onSurfaceVariant
  -Color? _outline
  -Color? _outlineVariant
  -Color? _shadow
  -Color? _scrim
  -Color? _inverseSurface
  -Color? _onInverseSurface
  -Color? _inversePrimary
  -Color? _surfaceTint
  +Color primaryContainer
  +Color onPrimaryContainer
  +Color secondaryContainer
  +Color onSecondaryContainer
  +Color tertiary
  +Color onTertiary
  +Color tertiaryContainer
  +Color onTertiaryContainer
  +Color errorContainer
  +Color onErrorContainer
  +Color surfaceVariant
  +Color onSurfaceVariant
  +Color outline
  +Color outlineVariant
  +Color shadow
  +Color scrim
  +Color inverseSurface
  +Color onInverseSurface
  +Color inversePrimary
  +Color surfaceTint
  +int hashCode
  {static} -Brightness _brightnessFor()
  +ColorScheme copyWith()
  {static} +ColorScheme lerp()
  +bool ==()
  +void debugFillProperties()
  {static} +Future<ColorScheme> fromImageProvider()
  {static} -Future<QuantizerResult> _extractColorsFromImageProvider()
  {static} -Future<Image> _imageProviderToScaled()
  {static} -int _getArgbFromAbgr()
}

"material::color_scheme::ColorScheme" o-- "dart::ui::Brightness"
"material::color_scheme::ColorScheme" o-- "dart::ui::Color"
"foundation::diagnostics::Diagnosticable" <|-- "material::color_scheme::ColorScheme"

class "material::filter_chip::FilterChip" {
  +Widget? avatar
  +Widget label
  +TextStyle? labelStyle
  +EdgeInsetsGeometry? labelPadding
  +bool selected
  +void Function(bool)? onSelected
  +double? pressElevation
  +Color? disabledColor
  +Color? selectedColor
  +String? tooltip
  +BorderSide? side
  +OutlinedBorder? shape
  +Clip clipBehavior
  +FocusNode? focusNode
  +bool autofocus
  +MaterialStateProperty<Color?>? color
  +Color? backgroundColor
  +EdgeInsetsGeometry? padding
  +VisualDensity? visualDensity
  +MaterialTapTargetSize? materialTapTargetSize
  +double? elevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +Color? selectedShadowColor
  +bool? showCheckmark
  +Color? checkmarkColor
  +ShapeBorder avatarBorder
  +IconThemeData? iconTheme
  -_ChipVariant _chipVariant
  +bool isEnabled
  +Widget build()
}

"material::filter_chip::FilterChip" o-- "widgets::framework::Widget"
"material::filter_chip::FilterChip" o-- "painting::text_style::TextStyle"
"material::filter_chip::FilterChip" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::filter_chip::FilterChip" o-- "foundation::basic_types::void Function(bool)"
"material::filter_chip::FilterChip" o-- "dart::ui::Color"
"material::filter_chip::FilterChip" o-- "painting::borders::BorderSide"
"material::filter_chip::FilterChip" o-- "painting::borders::OutlinedBorder"
"material::filter_chip::FilterChip" o-- "dart::ui::Clip"
"material::filter_chip::FilterChip" o-- "widgets::focus_manager::FocusNode"
"material::filter_chip::FilterChip" o-- "material::material_state::MaterialStateProperty<Color>"
"material::filter_chip::FilterChip" o-- "material::theme_data::VisualDensity"
"material::filter_chip::FilterChip" o-- "material::theme_data::MaterialTapTargetSize"
"material::filter_chip::FilterChip" o-- "painting::borders::ShapeBorder"
"material::filter_chip::FilterChip" o-- "widgets::icon_theme_data::IconThemeData"
"material::filter_chip::FilterChip" o-- "material::filter_chip::_ChipVariant"
"widgets::framework::StatelessWidget" <|-- "material::filter_chip::FilterChip"
"material::chip::ChipAttributes" <|-- "material::filter_chip::FilterChip"
"material::chip::SelectableChipAttributes" <|-- "material::filter_chip::FilterChip"
"material::chip::CheckmarkableChipAttributes" <|-- "material::filter_chip::FilterChip"
"material::chip::DisabledChipAttributes" <|-- "material::filter_chip::FilterChip"

class "material::filter_chip::_FilterChipDefaultsM3" {
  +BuildContext context
  +bool isEnabled
  +bool isSelected
  -_ChipVariant _chipVariant
  -ColorScheme _colors
  -TextTheme _textTheme
  +double? elevation
  +double? pressElevation
  +TextStyle? labelStyle
  +MaterialStateProperty<Color?>? color
  +Color? shadowColor
  +Color? surfaceTintColor
  +Color? checkmarkColor
  +Color? deleteIconColor
  +BorderSide? side
  +IconThemeData? iconTheme
  +EdgeInsetsGeometry? padding
  +EdgeInsetsGeometry? labelPadding
}

"material::filter_chip::_FilterChipDefaultsM3" o-- "widgets::framework::BuildContext"
"material::filter_chip::_FilterChipDefaultsM3" o-- "material::filter_chip::_ChipVariant"
"material::filter_chip::_FilterChipDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::filter_chip::_FilterChipDefaultsM3" o-- "material::text_theme::TextTheme"
"material::filter_chip::_FilterChipDefaultsM3" o-- "painting::text_style::TextStyle"
"material::filter_chip::_FilterChipDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::filter_chip::_FilterChipDefaultsM3" o-- "dart::ui::Color"
"material::filter_chip::_FilterChipDefaultsM3" o-- "painting::borders::BorderSide"
"material::filter_chip::_FilterChipDefaultsM3" o-- "widgets::icon_theme_data::IconThemeData"
"material::filter_chip::_FilterChipDefaultsM3" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::chip_theme::ChipThemeData" <|-- "material::filter_chip::_FilterChipDefaultsM3"

class "material::filter_chip::_ChipVariant" {
  +int index
  {static} +List<_ChipVariant> values
  {static} +_ChipVariant flat
  {static} +_ChipVariant elevated
}

"material::filter_chip::_ChipVariant" o-- "material::filter_chip::_ChipVariant"
"dart::core::Enum" <|-- "material::filter_chip::_ChipVariant"

class "material::time::TimeOfDay" {
  {static} +int hoursPerDay
  {static} +int hoursPerPeriod
  {static} +int minutesPerHour
  +int hour
  +int minute
  +DayPeriod period
  +int hourOfPeriod
  +int periodOffset
  +int hashCode
  +TimeOfDay replacing()
  +String format()
  +bool ==()
  +String toString()
}

"material::time::TimeOfDay" o-- "material::time::DayPeriod"

class "material::time::RestorableTimeOfDay" {
  -TimeOfDay _defaultValue
  +TimeOfDay createDefaultValue()
  +void didUpdateValue()
  +TimeOfDay fromPrimitives()
  +Object? toPrimitives()
}

"material::time::RestorableTimeOfDay" o-- "material::time::TimeOfDay"
"widgets::restoration_properties::RestorableValue" <|-- "material::time::RestorableTimeOfDay"

class "material::time::DayPeriod" {
  +int index
  {static} +List<DayPeriod> values
  {static} +DayPeriod am
  {static} +DayPeriod pm
}

"material::time::DayPeriod" o-- "material::time::DayPeriod"
"dart::core::Enum" <|-- "material::time::DayPeriod"

class "material::time::TimeOfDayFormat" {
  +int index
  {static} +List<TimeOfDayFormat> values
  {static} +TimeOfDayFormat HH_colon_mm
  {static} +TimeOfDayFormat HH_dot_mm
  {static} +TimeOfDayFormat frenchCanadian
  {static} +TimeOfDayFormat H_colon_mm
  {static} +TimeOfDayFormat h_colon_mm_space_a
  {static} +TimeOfDayFormat a_space_h_colon_mm
}

"material::time::TimeOfDayFormat" o-- "material::time::TimeOfDayFormat"
"dart::core::Enum" <|-- "material::time::TimeOfDayFormat"

class "material::time::HourFormat" {
  +int index
  {static} +List<HourFormat> values
  {static} +HourFormat HH
  {static} +HourFormat H
  {static} +HourFormat h
}

"material::time::HourFormat" o-- "material::time::HourFormat"
"dart::core::Enum" <|-- "material::time::HourFormat"

class "material::menu_anchor::MenuAnchor" {
  +MenuController? controller
  +FocusNode? childFocusNode
  +MenuStyle? style
  +Offset? alignmentOffset
  +Clip clipBehavior
  +bool anchorTapClosesMenu
  +void Function()? onOpen
  +void Function()? onClose
  +bool crossAxisUnconstrained
  +List<Widget> menuChildren
  +Widget Function(BuildContext, MenuController, Widget?)? builder
  +Widget? child
  +State<MenuAnchor> createState()
  +List<DiagnosticsNode> debugDescribeChildren()
  +void debugFillProperties()
}

"material::menu_anchor::MenuAnchor" o-- "material::menu_anchor::MenuController"
"material::menu_anchor::MenuAnchor" o-- "widgets::focus_manager::FocusNode"
"material::menu_anchor::MenuAnchor" o-- "material::menu_style::MenuStyle"
"material::menu_anchor::MenuAnchor" o-- "dart::ui::Offset"
"material::menu_anchor::MenuAnchor" o-- "dart::ui::Clip"
"material::menu_anchor::MenuAnchor" o-- "dart::ui::void Function()"
"material::menu_anchor::MenuAnchor" o-- "material::menu_anchor::Widget Function(BuildContext, MenuController, Widget)"
"material::menu_anchor::MenuAnchor" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "material::menu_anchor::MenuAnchor"

class "material::menu_anchor::_MenuAnchorState" {
  -GlobalKey<State<StatefulWidget>> _anchorKey
  -_MenuAnchorState? _parent
  -FocusScopeNode _menuScopeNode
  -MenuController? _internalMenuController
  -List<_MenuAnchorState> _anchorChildren
  -ScrollPosition? _position
  -Size? _viewSize
  -OverlayEntry? _overlayEntry
  -Axis _orientation
  -bool _isOpen
  -bool _isRoot
  -bool _isTopLevel
  -MenuController _menuController
  -FocusNode? _firstItemFocusNode
  -_MenuAnchorState? _nextSibling
  -_MenuAnchorState? _previousSibling
  -_MenuAnchorState _root
  -_MenuAnchorState _topLevel
  +void initState()
  +void dispose()
  +void didChangeDependencies()
  +void didUpdateWidget()
  +Widget build()
  -Widget _buildContents()
  -void _addChild()
  -void _removeChild()
  -void _childChangedOpenState()
  -void _focusButton()
  -void _handleScroll()
  -void _open()
  -void _close()
  -void _closeChildren()
  {static} -_MenuAnchorState? _maybeOf()
}

"material::menu_anchor::_MenuAnchorState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"material::menu_anchor::_MenuAnchorState" o-- "material::menu_anchor::_MenuAnchorState"
"material::menu_anchor::_MenuAnchorState" o-- "widgets::focus_manager::FocusScopeNode"
"material::menu_anchor::_MenuAnchorState" o-- "material::menu_anchor::MenuController"
"material::menu_anchor::_MenuAnchorState" o-- "widgets::scroll_position::ScrollPosition"
"material::menu_anchor::_MenuAnchorState" o-- "dart::ui::Size"
"material::menu_anchor::_MenuAnchorState" o-- "widgets::overlay::OverlayEntry"
"material::menu_anchor::_MenuAnchorState" o-- "painting::basic_types::Axis"
"material::menu_anchor::_MenuAnchorState" o-- "widgets::focus_manager::FocusNode"
"widgets::framework::State" <|-- "material::menu_anchor::_MenuAnchorState"

class "material::menu_anchor::MenuController" {
  -_MenuAnchorState? _anchor
  +bool isOpen
  +void close()
  +void open()
  -void _attach()
  -void _detach()
}

"material::menu_anchor::MenuController" o-- "material::menu_anchor::_MenuAnchorState"

class "material::menu_anchor::MenuBar" {
  +MenuStyle? style
  +Clip clipBehavior
  +MenuController? controller
  +List<Widget> children
  +Widget build()
  +List<DiagnosticsNode> debugDescribeChildren()
  +void debugFillProperties()
}

"material::menu_anchor::MenuBar" o-- "material::menu_style::MenuStyle"
"material::menu_anchor::MenuBar" o-- "dart::ui::Clip"
"material::menu_anchor::MenuBar" o-- "material::menu_anchor::MenuController"
"widgets::framework::StatelessWidget" <|-- "material::menu_anchor::MenuBar"

class "material::menu_anchor::MenuItemButton" {
  +void Function()? onPressed
  +void Function(bool)? onHover
  +bool requestFocusOnHover
  +void Function(bool)? onFocusChange
  +FocusNode? focusNode
  +MenuSerializableShortcut? shortcut
  +ButtonStyle? style
  +MaterialStatesController? statesController
  +Clip clipBehavior
  +Widget? leadingIcon
  +Widget? trailingIcon
  +bool closeOnActivate
  +Widget? child
  +bool enabled
  +State<MenuItemButton> createState()
  +ButtonStyle defaultStyleOf()
  +ButtonStyle? themeStyleOf()
  {static} +ButtonStyle styleFrom()
  +void debugFillProperties()
}

"material::menu_anchor::MenuItemButton" o-- "dart::ui::void Function()"
"material::menu_anchor::MenuItemButton" o-- "foundation::basic_types::void Function(bool)"
"material::menu_anchor::MenuItemButton" o-- "widgets::focus_manager::FocusNode"
"material::menu_anchor::MenuItemButton" o-- "widgets::platform_menu_bar::MenuSerializableShortcut"
"material::menu_anchor::MenuItemButton" o-- "material::button_style::ButtonStyle"
"material::menu_anchor::MenuItemButton" o-- "material::material_state::MaterialStatesController"
"material::menu_anchor::MenuItemButton" o-- "dart::ui::Clip"
"material::menu_anchor::MenuItemButton" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "material::menu_anchor::MenuItemButton"

class "material::menu_anchor::_MenuItemButtonState" {
  -FocusNode? _internalFocusNode
  -FocusNode _focusNode
  +void initState()
  +void dispose()
  +void didUpdateWidget()
  +Widget build()
  -void _handleFocusChange()
  -void _handleHover()
  -void _handleSelect()
  -void _createInternalFocusNodeIfNeeded()
}

"material::menu_anchor::_MenuItemButtonState" o-- "widgets::focus_manager::FocusNode"
"widgets::framework::State" <|-- "material::menu_anchor::_MenuItemButtonState"

class "material::menu_anchor::CheckboxMenuButton" {
  +bool? value
  +bool tristate
  +bool isError
  +void Function(bool?)? onChanged
  +void Function(bool)? onHover
  +void Function(bool)? onFocusChange
  +FocusNode? focusNode
  +MenuSerializableShortcut? shortcut
  +ButtonStyle? style
  +MaterialStatesController? statesController
  +Clip clipBehavior
  +Widget? trailingIcon
  +bool closeOnActivate
  +Widget? child
  +bool enabled
  +Widget build()
}

"material::menu_anchor::CheckboxMenuButton" o-- "foundation::basic_types::void Function(bool)"
"material::menu_anchor::CheckboxMenuButton" o-- "widgets::focus_manager::FocusNode"
"material::menu_anchor::CheckboxMenuButton" o-- "widgets::platform_menu_bar::MenuSerializableShortcut"
"material::menu_anchor::CheckboxMenuButton" o-- "material::button_style::ButtonStyle"
"material::menu_anchor::CheckboxMenuButton" o-- "material::material_state::MaterialStatesController"
"material::menu_anchor::CheckboxMenuButton" o-- "dart::ui::Clip"
"material::menu_anchor::CheckboxMenuButton" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::menu_anchor::CheckboxMenuButton"

class "material::menu_anchor::RadioMenuButton" {
  +T value
  +T? groupValue
  +bool toggleable
  +void Function(T?)? onChanged
  +void Function(bool)? onHover
  +void Function(bool)? onFocusChange
  +FocusNode? focusNode
  +MenuSerializableShortcut? shortcut
  +ButtonStyle? style
  +MaterialStatesController? statesController
  +Clip clipBehavior
  +Widget? trailingIcon
  +bool closeOnActivate
  +Widget? child
  +bool enabled
  +Widget build()
}

"material::menu_anchor::RadioMenuButton" o-- "foundation::basic_types::void Function(T)"
"material::menu_anchor::RadioMenuButton" o-- "foundation::basic_types::void Function(bool)"
"material::menu_anchor::RadioMenuButton" o-- "widgets::focus_manager::FocusNode"
"material::menu_anchor::RadioMenuButton" o-- "widgets::platform_menu_bar::MenuSerializableShortcut"
"material::menu_anchor::RadioMenuButton" o-- "material::button_style::ButtonStyle"
"material::menu_anchor::RadioMenuButton" o-- "material::material_state::MaterialStatesController"
"material::menu_anchor::RadioMenuButton" o-- "dart::ui::Clip"
"material::menu_anchor::RadioMenuButton" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::menu_anchor::RadioMenuButton"

class "material::menu_anchor::SubmenuButton" {
  +void Function(bool)? onHover
  +void Function(bool)? onFocusChange
  +void Function()? onOpen
  +void Function()? onClose
  +MenuController? controller
  +ButtonStyle? style
  +MenuStyle? menuStyle
  +Offset? alignmentOffset
  +Clip clipBehavior
  +FocusNode? focusNode
  +MaterialStatesController? statesController
  +Widget? leadingIcon
  +Widget? trailingIcon
  +List<Widget> menuChildren
  +Widget? child
  +State<SubmenuButton> createState()
  +ButtonStyle defaultStyleOf()
  +ButtonStyle? themeStyleOf()
  {static} +ButtonStyle styleFrom()
  +List<DiagnosticsNode> debugDescribeChildren()
  +void debugFillProperties()
}

"material::menu_anchor::SubmenuButton" o-- "foundation::basic_types::void Function(bool)"
"material::menu_anchor::SubmenuButton" o-- "dart::ui::void Function()"
"material::menu_anchor::SubmenuButton" o-- "material::menu_anchor::MenuController"
"material::menu_anchor::SubmenuButton" o-- "material::button_style::ButtonStyle"
"material::menu_anchor::SubmenuButton" o-- "material::menu_style::MenuStyle"
"material::menu_anchor::SubmenuButton" o-- "dart::ui::Offset"
"material::menu_anchor::SubmenuButton" o-- "dart::ui::Clip"
"material::menu_anchor::SubmenuButton" o-- "widgets::focus_manager::FocusNode"
"material::menu_anchor::SubmenuButton" o-- "material::material_state::MaterialStatesController"
"material::menu_anchor::SubmenuButton" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "material::menu_anchor::SubmenuButton"

class "material::menu_anchor::_SubmenuButtonState" {
  -FocusNode? _internalFocusNode
  -bool _waitingToFocusMenu
  -MenuController? _internalMenuController
  -MenuController _menuController
  -_MenuAnchorState? _anchor
  -FocusNode _buttonFocusNode
  -bool _enabled
  +void initState()
  +void dispose()
  +void didUpdateWidget()
  +Widget build()
  -EdgeInsets _computeMenuPadding()
  -void _handleFocusChange()
}

"material::menu_anchor::_SubmenuButtonState" o-- "widgets::focus_manager::FocusNode"
"material::menu_anchor::_SubmenuButtonState" o-- "material::menu_anchor::MenuController"
"material::menu_anchor::_SubmenuButtonState" o-- "material::menu_anchor::_MenuAnchorState"
"widgets::framework::State" <|-- "material::menu_anchor::_SubmenuButtonState"

class "material::menu_anchor::DismissMenuAction" {
  +MenuController controller
  +void invoke()
  +bool isEnabled()
}

"material::menu_anchor::DismissMenuAction" o-- "material::menu_anchor::MenuController"
"widgets::actions::DismissAction" <|-- "material::menu_anchor::DismissMenuAction"

class "material::menu_anchor::_LocalizedShortcutLabeler" {
  {static} -_LocalizedShortcutLabeler? _instance
  {static} -Map<LogicalKeyboardKey, String> _shortcutGraphicEquivalents
  {static} -Set<LogicalKeyboardKey> _modifiers
  -Map<MaterialLocalizations, Map<LogicalKeyboardKey, String>> _cachedShortcutKeys
  {static} +_LocalizedShortcutLabeler instance
  +String getShortcutLabel()
  -String? _getLocalizedName()
  -String _getModifierLabel()
}

"material::menu_anchor::_LocalizedShortcutLabeler" o-- "material::menu_anchor::_LocalizedShortcutLabeler"

class "material::menu_anchor::_MenuAnchorScope" {
  +GlobalKey<State<StatefulWidget>> anchorKey
  +_MenuAnchorState anchor
  +bool isOpen
  +bool updateShouldNotify()
}

"material::menu_anchor::_MenuAnchorScope" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"material::menu_anchor::_MenuAnchorScope" o-- "material::menu_anchor::_MenuAnchorState"
"widgets::framework::InheritedWidget" <|-- "material::menu_anchor::_MenuAnchorScope"

class "material::menu_anchor::_MenuBarAnchor" {
  +State<MenuAnchor> createState()
}

"material::menu_anchor::MenuAnchor" <|-- "material::menu_anchor::_MenuBarAnchor"

class "material::menu_anchor::_MenuBarAnchorState" {
  -bool _isOpen
  -Axis _orientation
  -Widget _buildContents()
  -void _open()
}

"material::menu_anchor::_MenuBarAnchorState" o-- "painting::basic_types::Axis"
"material::menu_anchor::_MenuAnchorState" <|-- "material::menu_anchor::_MenuBarAnchorState"

class "material::menu_anchor::_MenuDirectionalFocusAction" {
  +void invoke()
  -bool _moveToNext()
  -bool _moveToNextTopLevel()
  -bool _moveToParent()
  -bool _moveToPrevious()
  -bool _moveToPreviousTopLevel()
  -bool _moveToSubmenu()
}

"widgets::focus_traversal::DirectionalFocusAction" <|-- "material::menu_anchor::_MenuDirectionalFocusAction"

class "material::menu_anchor::MenuAcceleratorCallbackBinding" {
  +void Function()? onInvoke
  +bool hasSubmenu
  +bool updateShouldNotify()
  {static} +MenuAcceleratorCallbackBinding? maybeOf()
  {static} +MenuAcceleratorCallbackBinding of()
}

"material::menu_anchor::MenuAcceleratorCallbackBinding" o-- "dart::ui::void Function()"
"widgets::framework::InheritedWidget" <|-- "material::menu_anchor::MenuAcceleratorCallbackBinding"

class "material::menu_anchor::MenuAcceleratorLabel" {
  +String label
  +Widget Function(BuildContext, String, int) builder
  +String displayLabel
  +bool hasAccelerator
  {static} +Widget defaultLabelBuilder()
  {static} +String stripAcceleratorMarkers()
  +State<MenuAcceleratorLabel> createState()
  +String toString()
  +void debugFillProperties()
}

"material::menu_anchor::MenuAcceleratorLabel" o-- "material::menu_anchor::Widget Function(BuildContext, String, int)"
"widgets::framework::StatefulWidget" <|-- "material::menu_anchor::MenuAcceleratorLabel"

class "material::menu_anchor::_MenuAcceleratorLabelState" {
  -String _displayLabel
  -int _acceleratorIndex
  -MenuAcceleratorCallbackBinding? _binding
  -_MenuAnchorState? _anchor
  -ShortcutRegistry? _shortcutRegistry
  -ShortcutRegistryEntry? _shortcutRegistryEntry
  -bool _showAccelerators
  +void initState()
  +void dispose()
  +void didChangeDependencies()
  +void didUpdateWidget()
  {static} -bool _altIsPressed()
  -bool _handleKeyEvent()
  -void _updateAcceleratorShortcut()
  -void _updateDisplayLabel()
  +Widget build()
}

"material::menu_anchor::_MenuAcceleratorLabelState" o-- "material::menu_anchor::MenuAcceleratorCallbackBinding"
"material::menu_anchor::_MenuAcceleratorLabelState" o-- "material::menu_anchor::_MenuAnchorState"
"material::menu_anchor::_MenuAcceleratorLabelState" o-- "widgets::shortcuts::ShortcutRegistry"
"material::menu_anchor::_MenuAcceleratorLabelState" o-- "widgets::shortcuts::ShortcutRegistryEntry"
"widgets::framework::State" <|-- "material::menu_anchor::_MenuAcceleratorLabelState"

class "material::menu_anchor::_MenuItemLabel" {
  +bool hasSubmenu
  +bool showDecoration
  +Widget? leadingIcon
  +Widget? trailingIcon
  +MenuSerializableShortcut? shortcut
  +Widget child
  +Widget build()
  +void debugFillProperties()
}

"material::menu_anchor::_MenuItemLabel" o-- "widgets::framework::Widget"
"material::menu_anchor::_MenuItemLabel" o-- "widgets::platform_menu_bar::MenuSerializableShortcut"
"widgets::framework::StatelessWidget" <|-- "material::menu_anchor::_MenuItemLabel"

class "material::menu_anchor::_MenuLayout" {
  +Rect anchorRect
  +TextDirection textDirection
  +AlignmentGeometry alignment
  +Offset alignmentOffset
  +Offset? menuPosition
  +EdgeInsetsGeometry menuPadding
  +Set<Rect> avoidBounds
  +Axis orientation
  +Axis parentOrientation
  +BoxConstraints getConstraintsForChild()
  +Offset getPositionForChild()
  +bool shouldRelayout()
  -Rect _closestScreen()
}

"material::menu_anchor::_MenuLayout" o-- "dart::ui::Rect"
"material::menu_anchor::_MenuLayout" o-- "dart::ui::TextDirection"
"material::menu_anchor::_MenuLayout" o-- "painting::alignment::AlignmentGeometry"
"material::menu_anchor::_MenuLayout" o-- "dart::ui::Offset"
"material::menu_anchor::_MenuLayout" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::menu_anchor::_MenuLayout" o-- "painting::basic_types::Axis"
"rendering::shifted_box::SingleChildLayoutDelegate" <|-- "material::menu_anchor::_MenuLayout"

class "material::menu_anchor::_MenuPanel" {
  +MenuStyle? menuStyle
  +Clip clipBehavior
  +bool crossAxisUnconstrained
  +Axis orientation
  +List<Widget> children
  +State<_MenuPanel> createState()
}

"material::menu_anchor::_MenuPanel" o-- "material::menu_style::MenuStyle"
"material::menu_anchor::_MenuPanel" o-- "dart::ui::Clip"
"material::menu_anchor::_MenuPanel" o-- "painting::basic_types::Axis"
"widgets::framework::StatefulWidget" <|-- "material::menu_anchor::_MenuPanel"

class "material::menu_anchor::_MenuPanelState" {
  +Widget build()
  -Widget _intrinsicCrossSize()
}

"widgets::framework::State" <|-- "material::menu_anchor::_MenuPanelState"

class "material::menu_anchor::_Submenu" {
  +_MenuAnchorState anchor
  +MenuStyle? menuStyle
  +Offset? menuPosition
  +Offset alignmentOffset
  +Clip clipBehavior
  +bool crossAxisUnconstrained
  +List<Widget> menuChildren
  +Widget build()
}

"material::menu_anchor::_Submenu" o-- "material::menu_anchor::_MenuAnchorState"
"material::menu_anchor::_Submenu" o-- "material::menu_style::MenuStyle"
"material::menu_anchor::_Submenu" o-- "dart::ui::Offset"
"material::menu_anchor::_Submenu" o-- "dart::ui::Clip"
"widgets::framework::StatelessWidget" <|-- "material::menu_anchor::_Submenu"

class "material::menu_anchor::_MouseCursor" {
  +MouseCursor? Function(Set<MaterialState>) resolveCallback
  +String debugDescription
  +MouseCursor resolve()
}

"material::menu_anchor::_MouseCursor" o-- "material::material_state::MouseCursor Function(Set<MaterialState>)"
"material::material_state::MaterialStateMouseCursor" <|-- "material::menu_anchor::_MouseCursor"

class "material::menu_anchor::_MenuBarDefaultsM3" {
  {static} -RoundedRectangleBorder _defaultMenuBorder
  +BuildContext context
  -ColorScheme _colors
  +MaterialStateProperty<Color?> backgroundColor
  +MaterialStateProperty<Color?>? shadowColor
  +MaterialStateProperty<Color?>? surfaceTintColor
  +MaterialStateProperty<EdgeInsetsGeometry?>? padding
  +VisualDensity visualDensity
}

"material::menu_anchor::_MenuBarDefaultsM3" o-- "painting::rounded_rectangle_border::RoundedRectangleBorder"
"material::menu_anchor::_MenuBarDefaultsM3" o-- "widgets::framework::BuildContext"
"material::menu_anchor::_MenuBarDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::menu_anchor::_MenuBarDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::menu_anchor::_MenuBarDefaultsM3" o-- "material::material_state::MaterialStateProperty<EdgeInsetsGeometry>"
"material::menu_anchor::_MenuBarDefaultsM3" o-- "material::theme_data::VisualDensity"
"material::menu_style::MenuStyle" <|-- "material::menu_anchor::_MenuBarDefaultsM3"

class "material::menu_anchor::_MenuButtonDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  -TextTheme _textTheme
  +MaterialStateProperty<Color?>? backgroundColor
  +MaterialStateProperty<double>? elevation
  +MaterialStateProperty<Color?>? foregroundColor
  +MaterialStateProperty<Color?>? iconColor
  +MaterialStateProperty<Size>? maximumSize
  +MaterialStateProperty<Size>? minimumSize
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +MaterialStateProperty<Color?>? overlayColor
  +MaterialStateProperty<EdgeInsetsGeometry>? padding
  +MaterialStateProperty<OutlinedBorder>? shape
  +InteractiveInkFeatureFactory? splashFactory
  +MaterialTapTargetSize? tapTargetSize
  +MaterialStateProperty<TextStyle?> textStyle
  +VisualDensity? visualDensity
  -EdgeInsetsGeometry _scaledPadding()
}

"material::menu_anchor::_MenuButtonDefaultsM3" o-- "widgets::framework::BuildContext"
"material::menu_anchor::_MenuButtonDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::menu_anchor::_MenuButtonDefaultsM3" o-- "material::text_theme::TextTheme"
"material::menu_anchor::_MenuButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::menu_anchor::_MenuButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<double>"
"material::menu_anchor::_MenuButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Size>"
"material::menu_anchor::_MenuButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::menu_anchor::_MenuButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<EdgeInsetsGeometry>"
"material::menu_anchor::_MenuButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<OutlinedBorder>"
"material::menu_anchor::_MenuButtonDefaultsM3" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::menu_anchor::_MenuButtonDefaultsM3" o-- "material::theme_data::MaterialTapTargetSize"
"material::menu_anchor::_MenuButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<TextStyle>"
"material::menu_anchor::_MenuButtonDefaultsM3" o-- "material::theme_data::VisualDensity"
"material::button_style::ButtonStyle" <|-- "material::menu_anchor::_MenuButtonDefaultsM3"

class "material::menu_anchor::_MenuDefaultsM3" {
  {static} -RoundedRectangleBorder _defaultMenuBorder
  +BuildContext context
  -ColorScheme _colors
  +MaterialStateProperty<Color?> backgroundColor
  +MaterialStateProperty<Color?>? surfaceTintColor
  +MaterialStateProperty<Color?>? shadowColor
  +MaterialStateProperty<EdgeInsetsGeometry?>? padding
  +VisualDensity visualDensity
}

"material::menu_anchor::_MenuDefaultsM3" o-- "painting::rounded_rectangle_border::RoundedRectangleBorder"
"material::menu_anchor::_MenuDefaultsM3" o-- "widgets::framework::BuildContext"
"material::menu_anchor::_MenuDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::menu_anchor::_MenuDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::menu_anchor::_MenuDefaultsM3" o-- "material::material_state::MaterialStateProperty<EdgeInsetsGeometry>"
"material::menu_anchor::_MenuDefaultsM3" o-- "material::theme_data::VisualDensity"
"material::menu_style::MenuStyle" <|-- "material::menu_anchor::_MenuDefaultsM3"

class "material::menu_style::MenuStyle" {
  +MaterialStateProperty<Color?>? backgroundColor
  +MaterialStateProperty<Color?>? shadowColor
  +MaterialStateProperty<Color?>? surfaceTintColor
  +MaterialStateProperty<double?>? elevation
  +MaterialStateProperty<EdgeInsetsGeometry?>? padding
  +MaterialStateProperty<Size?>? minimumSize
  +MaterialStateProperty<Size?>? fixedSize
  +MaterialStateProperty<Size?>? maximumSize
  +MaterialStateProperty<BorderSide?>? side
  +MaterialStateProperty<OutlinedBorder?>? shape
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +VisualDensity? visualDensity
  +AlignmentGeometry? alignment
  +int hashCode
  +bool ==()
  +MenuStyle copyWith()
  +MenuStyle merge()
  {static} +MenuStyle? lerp()
  +void debugFillProperties()
}

"material::menu_style::MenuStyle" o-- "material::material_state::MaterialStateProperty<Color>"
"material::menu_style::MenuStyle" o-- "material::material_state::MaterialStateProperty<double>"
"material::menu_style::MenuStyle" o-- "material::material_state::MaterialStateProperty<EdgeInsetsGeometry>"
"material::menu_style::MenuStyle" o-- "material::material_state::MaterialStateProperty<Size>"
"material::menu_style::MenuStyle" o-- "material::material_state::MaterialStateProperty<BorderSide>"
"material::menu_style::MenuStyle" o-- "material::material_state::MaterialStateProperty<OutlinedBorder>"
"material::menu_style::MenuStyle" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::menu_style::MenuStyle" o-- "material::theme_data::VisualDensity"
"material::menu_style::MenuStyle" o-- "painting::alignment::AlignmentGeometry"
"foundation::diagnostics::Diagnosticable" <|-- "material::menu_style::MenuStyle"

class "material::menu_style::_LerpSides" {
  +MaterialStateProperty<BorderSide?>? a
  +MaterialStateProperty<BorderSide?>? b
  +double t
  +BorderSide? resolve()
}

"material::menu_style::_LerpSides" o-- "material::material_state::MaterialStateProperty<BorderSide>"
"material::material_state::MaterialStateProperty" <|-- "material::menu_style::_LerpSides"

class "material::card::Card" {
  +Color? color
  +Color? shadowColor
  +Color? surfaceTintColor
  +double? elevation
  +ShapeBorder? shape
  +bool borderOnForeground
  +Clip? clipBehavior
  +EdgeInsetsGeometry? margin
  +bool semanticContainer
  +Widget? child
  +Widget build()
}

"material::card::Card" o-- "dart::ui::Color"
"material::card::Card" o-- "painting::borders::ShapeBorder"
"material::card::Card" o-- "dart::ui::Clip"
"material::card::Card" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::card::Card" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::card::Card"

class "material::card::_CardDefaultsM2" {
  +BuildContext context
  +Color? color
  +Color? shadowColor
}

"material::card::_CardDefaultsM2" o-- "widgets::framework::BuildContext"
"material::card::_CardDefaultsM2" o-- "dart::ui::Color"
"material::card_theme::CardTheme" <|-- "material::card::_CardDefaultsM2"

class "material::card::_CardDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  +Color? color
  +Color? shadowColor
  +Color? surfaceTintColor
}

"material::card::_CardDefaultsM3" o-- "widgets::framework::BuildContext"
"material::card::_CardDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::card::_CardDefaultsM3" o-- "dart::ui::Color"
"material::card_theme::CardTheme" <|-- "material::card::_CardDefaultsM3"

class "material::button::RawMaterialButton" {
  +void Function()? onPressed
  +void Function()? onLongPress
  +void Function(bool)? onHighlightChanged
  +MouseCursor? mouseCursor
  +TextStyle? textStyle
  +Color? fillColor
  +Color? focusColor
  +Color? hoverColor
  +Color? highlightColor
  +Color? splashColor
  +double elevation
  +double hoverElevation
  +double focusElevation
  +double highlightElevation
  +double disabledElevation
  +EdgeInsetsGeometry padding
  +VisualDensity visualDensity
  +BoxConstraints constraints
  +ShapeBorder shape
  +Duration animationDuration
  +Widget? child
  +MaterialTapTargetSize materialTapTargetSize
  +FocusNode? focusNode
  +bool autofocus
  +Clip clipBehavior
  +bool enableFeedback
  +bool enabled
  +State<RawMaterialButton> createState()
}

"material::button::RawMaterialButton" o-- "dart::ui::void Function()"
"material::button::RawMaterialButton" o-- "foundation::basic_types::void Function(bool)"
"material::button::RawMaterialButton" o-- "services::mouse_cursor::MouseCursor"
"material::button::RawMaterialButton" o-- "painting::text_style::TextStyle"
"material::button::RawMaterialButton" o-- "dart::ui::Color"
"material::button::RawMaterialButton" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::button::RawMaterialButton" o-- "material::theme_data::VisualDensity"
"material::button::RawMaterialButton" o-- "rendering::box::BoxConstraints"
"material::button::RawMaterialButton" o-- "painting::borders::ShapeBorder"
"material::button::RawMaterialButton" o-- "widgets::framework::Widget"
"material::button::RawMaterialButton" o-- "material::theme_data::MaterialTapTargetSize"
"material::button::RawMaterialButton" o-- "widgets::focus_manager::FocusNode"
"material::button::RawMaterialButton" o-- "dart::ui::Clip"
"widgets::framework::StatefulWidget" <|-- "material::button::RawMaterialButton"

class "material::button::_RawMaterialButtonState" {
  -double _effectiveElevation
  +void initState()
  +void didUpdateWidget()
  +Widget build()
}

"widgets::framework::State" <|-- "material::button::_RawMaterialButtonState"
"material::material_state_mixin::MaterialStateMixin" <|-- "material::button::_RawMaterialButtonState"

class "material::button::_InputPadding" {
  +Size minSize
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"material::button::_InputPadding" o-- "dart::ui::Size"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "material::button::_InputPadding"

class "material::button::_RenderInputPadding" {
  -Size _minSize
  +Size minSize
  +double computeMinIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicWidth()
  +double computeMaxIntrinsicHeight()
  -Size _computeSize()
  +Size computeDryLayout()
  +void performLayout()
  +bool hitTest()
}

"material::button::_RenderInputPadding" o-- "dart::ui::Size"
"rendering::shifted_box::RenderShiftedBox" <|-- "material::button::_RenderInputPadding"

class "material::segmented_button::ButtonSegment" {
  +T value
  +Widget? icon
  +Widget? label
  +String? tooltip
  +bool enabled
}

"material::segmented_button::ButtonSegment" o-- "widgets::framework::Widget"

class "material::segmented_button::SegmentedButton" {
  +List<ButtonSegment<T>> segments
  +Set<T> selected
  +void Function(Set<T>)? onSelectionChanged
  +bool multiSelectionEnabled
  +bool emptySelectionAllowed
  +ButtonStyle? style
  +bool showSelectedIcon
  +Widget? selectedIcon
  +State<SegmentedButton<T>> createState()
}

"material::segmented_button::SegmentedButton" o-- "null::void Function(Set<T>)"
"material::segmented_button::SegmentedButton" o-- "material::button_style::ButtonStyle"
"material::segmented_button::SegmentedButton" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "material::segmented_button::SegmentedButton"

class "material::segmented_button::SegmentedButtonState" {
  +Map<ButtonSegment<T>, MaterialStatesController> statesControllers
  -bool _enabled
  +void didUpdateWidget()
  -void _handleOnPressed()
  +Widget build()
  +void dispose()
}

"widgets::framework::State" <|-- "material::segmented_button::SegmentedButtonState"

class "material::segmented_button::_SegmentedButtonRenderWidget" {
  +List<ButtonSegment<T>> segments
  +OutlinedBorder enabledBorder
  +OutlinedBorder disabledBorder
  +TextDirection direction
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"material::segmented_button::_SegmentedButtonRenderWidget" o-- "painting::borders::OutlinedBorder"
"material::segmented_button::_SegmentedButtonRenderWidget" o-- "dart::ui::TextDirection"
"widgets::framework::MultiChildRenderObjectWidget" <|-- "material::segmented_button::_SegmentedButtonRenderWidget"

class "material::segmented_button::_SegmentedButtonContainerBoxParentData" {
  +RRect? surroundingRect
}

"material::segmented_button::_SegmentedButtonContainerBoxParentData" o-- "dart::ui::RRect"
"rendering::box::ContainerBoxParentData" <|-- "material::segmented_button::_SegmentedButtonContainerBoxParentData"

class "material::segmented_button::_RenderSegmentedButton" {
  -List<ButtonSegment<T>> _segments
  -OutlinedBorder _enabledBorder
  -OutlinedBorder _disabledBorder
  -TextDirection _textDirection
  +List<ButtonSegment<T>> segments
  +OutlinedBorder enabledBorder
  +OutlinedBorder disabledBorder
  +TextDirection textDirection
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double? computeDistanceToActualBaseline()
  +void setupParentData()
  -void _layoutRects()
  -Size _calculateChildSize()
  -Size _computeOverallSizeFromChildSize()
  +Size computeDryLayout()
  +void performLayout()
  +void paint()
  +bool hitTestChildren()
}

"material::segmented_button::_RenderSegmentedButton" o-- "painting::borders::OutlinedBorder"
"material::segmented_button::_RenderSegmentedButton" o-- "dart::ui::TextDirection"
"rendering::box::RenderBox" <|-- "material::segmented_button::_RenderSegmentedButton"
"rendering::object::ContainerRenderObjectMixin" <|-- "material::segmented_button::_RenderSegmentedButton"
"rendering::box::RenderBoxContainerDefaultsMixin" <|-- "material::segmented_button::_RenderSegmentedButton"

class "material::segmented_button::_SegmentedButtonDefaultsM3" {
  +BuildContext context
  -ThemeData _theme
  -ColorScheme _colors
  +ButtonStyle? style
  +Widget? selectedIcon
}

"material::segmented_button::_SegmentedButtonDefaultsM3" o-- "widgets::framework::BuildContext"
"material::segmented_button::_SegmentedButtonDefaultsM3" o-- "material::theme_data::ThemeData"
"material::segmented_button::_SegmentedButtonDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::segmented_button::_SegmentedButtonDefaultsM3" o-- "material::button_style::ButtonStyle"
"material::segmented_button::_SegmentedButtonDefaultsM3" o-- "widgets::framework::Widget"
"material::segmented_button_theme::SegmentedButtonThemeData" <|-- "material::segmented_button::_SegmentedButtonDefaultsM3"

class "material::popup_menu_theme::PopupMenuThemeData" {
  +Color? color
  +ShapeBorder? shape
  +double? elevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +TextStyle? textStyle
  +MaterialStateProperty<TextStyle?>? labelTextStyle
  +bool? enableFeedback
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +PopupMenuPosition? position
  +Color? iconColor
  +double? iconSize
  +int hashCode
  +PopupMenuThemeData copyWith()
  {static} +PopupMenuThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::popup_menu_theme::PopupMenuThemeData" o-- "dart::ui::Color"
"material::popup_menu_theme::PopupMenuThemeData" o-- "painting::borders::ShapeBorder"
"material::popup_menu_theme::PopupMenuThemeData" o-- "painting::text_style::TextStyle"
"material::popup_menu_theme::PopupMenuThemeData" o-- "material::material_state::MaterialStateProperty<TextStyle>"
"material::popup_menu_theme::PopupMenuThemeData" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::popup_menu_theme::PopupMenuThemeData" o-- "material::popup_menu_theme::PopupMenuPosition"
"foundation::diagnostics::Diagnosticable" <|-- "material::popup_menu_theme::PopupMenuThemeData"

class "material::popup_menu_theme::PopupMenuTheme" {
  +PopupMenuThemeData data
  {static} +PopupMenuThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::popup_menu_theme::PopupMenuTheme" o-- "material::popup_menu_theme::PopupMenuThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::popup_menu_theme::PopupMenuTheme"

class "material::popup_menu_theme::PopupMenuPosition" {
  +int index
  {static} +List<PopupMenuPosition> values
  {static} +PopupMenuPosition over
  {static} +PopupMenuPosition under
}

"material::popup_menu_theme::PopupMenuPosition" o-- "material::popup_menu_theme::PopupMenuPosition"
"dart::core::Enum" <|-- "material::popup_menu_theme::PopupMenuPosition"

class "material::data_table::DataColumn" {
  +Widget label
  +String? tooltip
  +bool numeric
  +void Function(int, bool)? onSort
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  -bool _debugInteractive
}

"material::data_table::DataColumn" o-- "widgets::framework::Widget"
"material::data_table::DataColumn" o-- "material::data_table::void Function(int, bool)"
"material::data_table::DataColumn" o-- "material::material_state::MaterialStateProperty<MouseCursor>"

class "material::data_table::DataRow" {
  +LocalKey? key
  +void Function(bool?)? onSelectChanged
  +void Function()? onLongPress
  +bool selected
  +List<DataCell> cells
  +MaterialStateProperty<Color?>? color
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  -bool _debugInteractive
}

"material::data_table::DataRow" o-- "foundation::key::LocalKey"
"material::data_table::DataRow" o-- "foundation::basic_types::void Function(bool)"
"material::data_table::DataRow" o-- "gestures::long_press::void Function()"
"material::data_table::DataRow" o-- "material::material_state::MaterialStateProperty<Color>"
"material::data_table::DataRow" o-- "material::material_state::MaterialStateProperty<MouseCursor>"

class "material::data_table::DataCell" {
  {static} +DataCell empty
  +Widget child
  +bool placeholder
  +bool showEditIcon
  +void Function()? onTap
  +void Function()? onDoubleTap
  +void Function()? onLongPress
  +void Function(TapDownDetails)? onTapDown
  +void Function()? onTapCancel
  -bool _debugInteractive
}

"material::data_table::DataCell" o-- "material::data_table::DataCell"
"material::data_table::DataCell" o-- "widgets::framework::Widget"
"material::data_table::DataCell" o-- "gestures::tap::void Function()"
"material::data_table::DataCell" o-- "gestures::long_press::void Function()"
"material::data_table::DataCell" o-- "gestures::tap::void Function(TapDownDetails)"

class "material::data_table::DataTable" {
  +List<DataColumn> columns
  +int? sortColumnIndex
  +bool sortAscending
  +void Function(bool?)? onSelectAll
  +Decoration? decoration
  +MaterialStateProperty<Color?>? dataRowColor
  +double? dataRowMinHeight
  +double? dataRowMaxHeight
  +TextStyle? dataTextStyle
  +MaterialStateProperty<Color?>? headingRowColor
  +double? headingRowHeight
  +TextStyle? headingTextStyle
  +double? horizontalMargin
  +double? columnSpacing
  +bool showCheckboxColumn
  +List<DataRow> rows
  +double? dividerThickness
  +bool showBottomBorder
  +double? checkboxHorizontalMargin
  +TableBorder? border
  +Clip clipBehavior
  -int? _onlyTextColumn
  {static} -LocalKey _headingRowKey
  {static} -double _headingRowHeight
  {static} -double _horizontalMargin
  {static} -double _columnSpacing
  {static} -double _sortArrowPadding
  {static} -double _dividerThickness
  {static} -Duration _sortArrowAnimationDuration
  +double? dataRowHeight
  -bool _debugInteractive
  {static} -int? _initOnlyTextColumn()
  -void _handleSelectAll()
  -Widget _buildCheckbox()
  -Widget _buildHeadingCell()
  -Widget _buildDataCell()
  +Widget build()
}

"material::data_table::DataTable" o-- "foundation::basic_types::void Function(bool)"
"material::data_table::DataTable" o-- "painting::decoration::Decoration"
"material::data_table::DataTable" o-- "material::material_state::MaterialStateProperty<Color>"
"material::data_table::DataTable" o-- "painting::text_style::TextStyle"
"material::data_table::DataTable" o-- "rendering::table_border::TableBorder"
"material::data_table::DataTable" o-- "dart::ui::Clip"
"material::data_table::DataTable" o-- "foundation::key::LocalKey"
"widgets::framework::StatelessWidget" <|-- "material::data_table::DataTable"

class "material::data_table::TableRowInkWell" {
  +Rect Function() getRectCallback()
  +bool debugCheckContext()
}

"material::ink_well::InkResponse" <|-- "material::data_table::TableRowInkWell"

class "material::data_table::_SortArrow" {
  +bool visible
  +bool? up
  +Duration duration
  +_SortArrowState createState()
}

"widgets::framework::StatefulWidget" <|-- "material::data_table::_SortArrow"

class "material::data_table::_SortArrowState" {
  -AnimationController _opacityController
  -Animation<double> _opacityAnimation
  -AnimationController _orientationController
  -Animation<double> _orientationAnimation
  -double _orientationOffset
  -bool? _up
  {static} -Animatable<double> _turnTween
  {static} -double _arrowIconBaselineOffset
  {static} -double _arrowIconSize
  +void initState()
  -void _rebuild()
  -void _resetOrientationAnimation()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"material::data_table::_SortArrowState" o-- "animation::animation_controller::AnimationController"
"material::data_table::_SortArrowState" o-- "animation::animation::Animation<double>"
"material::data_table::_SortArrowState" o-- "animation::tween::Animatable<double>"
"widgets::framework::State" <|-- "material::data_table::_SortArrowState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::data_table::_SortArrowState"

class "material::data_table::_NullTableColumnWidth" {
  +double maxIntrinsicWidth()
  +double minIntrinsicWidth()
}

"rendering::table::TableColumnWidth" <|-- "material::data_table::_NullTableColumnWidth"

class "material::data_table::_NullWidget" {
  +Element createElement()
}

"widgets::framework::Widget" <|-- "material::data_table::_NullWidget"

class "material::tab_controller::TabController" {
  -AnimationController? _animationController
  -Duration _animationDuration
  +int length
  -int _index
  -int _previousIndex
  -int _indexIsChangingCount
  +Animation<double>? animation
  +Duration animationDuration
  +int index
  +int previousIndex
  +bool indexIsChanging
  +double offset
  -TabController _copyWith()
  -void _changeIndex()
  +void animateTo()
  +void dispose()
}

"material::tab_controller::TabController" o-- "animation::animation_controller::AnimationController"
"material::tab_controller::TabController" o-- "animation::animation::Animation<double>"
"foundation::change_notifier::ChangeNotifier" <|-- "material::tab_controller::TabController"

class "material::tab_controller::_TabControllerScope" {
  +TabController controller
  +bool enabled
  +bool updateShouldNotify()
}

"material::tab_controller::_TabControllerScope" o-- "material::tab_controller::TabController"
"widgets::framework::InheritedWidget" <|-- "material::tab_controller::_TabControllerScope"

class "material::tab_controller::DefaultTabController" {
  +int length
  +int initialIndex
  +Duration? animationDuration
  +Widget child
  {static} +TabController? maybeOf()
  {static} +TabController of()
  +State<DefaultTabController> createState()
}

"material::tab_controller::DefaultTabController" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "material::tab_controller::DefaultTabController"

class "material::tab_controller::_DefaultTabControllerState" {
  -TabController _controller
  +void initState()
  +void dispose()
  +Widget build()
  +void didUpdateWidget()
}

"material::tab_controller::_DefaultTabControllerState" o-- "material::tab_controller::TabController"
"widgets::framework::State" <|-- "material::tab_controller::_DefaultTabControllerState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "material::tab_controller::_DefaultTabControllerState"

class "material::navigation_rail::NavigationRail" {
  +Color? backgroundColor
  +bool extended
  +Widget? leading
  +Widget? trailing
  +List<NavigationRailDestination> destinations
  +int? selectedIndex
  +void Function(int)? onDestinationSelected
  +double? elevation
  +double? groupAlignment
  +NavigationRailLabelType? labelType
  +TextStyle? unselectedLabelTextStyle
  +TextStyle? selectedLabelTextStyle
  +IconThemeData? unselectedIconTheme
  +IconThemeData? selectedIconTheme
  +double? minWidth
  +double? minExtendedWidth
  +bool? useIndicator
  +Color? indicatorColor
  +ShapeBorder? indicatorShape
  {static} +Animation<double> extendedAnimation()
  +State<NavigationRail> createState()
}

"material::navigation_rail::NavigationRail" o-- "dart::ui::Color"
"material::navigation_rail::NavigationRail" o-- "widgets::framework::Widget"
"material::navigation_rail::NavigationRail" o-- "foundation::basic_types::void Function(int)"
"material::navigation_rail::NavigationRail" o-- "material::navigation_rail::NavigationRailLabelType"
"material::navigation_rail::NavigationRail" o-- "painting::text_style::TextStyle"
"material::navigation_rail::NavigationRail" o-- "widgets::icon_theme_data::IconThemeData"
"material::navigation_rail::NavigationRail" o-- "painting::borders::ShapeBorder"
"widgets::framework::StatefulWidget" <|-- "material::navigation_rail::NavigationRail"

class "material::navigation_rail::_NavigationRailState" {
  -List<AnimationController> _destinationControllers
  -List<Animation<double>> _destinationAnimations
  -AnimationController _extendedController
  -Animation<double> _extendedAnimation
  +void initState()
  +void dispose()
  +void didUpdateWidget()
  +Widget build()
  -void _disposeControllers()
  -void _initControllers()
  -void _resetState()
  -void _rebuild()
}

"material::navigation_rail::_NavigationRailState" o-- "animation::animation_controller::AnimationController"
"material::navigation_rail::_NavigationRailState" o-- "animation::animation::Animation<double>"
"widgets::framework::State" <|-- "material::navigation_rail::_NavigationRailState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::navigation_rail::_NavigationRailState"

class "material::navigation_rail::_RailDestination" {
  +double minWidth
  +double minExtendedWidth
  +Widget icon
  +Widget label
  +Animation<double> destinationAnimation
  +NavigationRailLabelType labelType
  +bool selected
  +Animation<double> extendedTransitionAnimation
  +IconThemeData iconTheme
  +TextStyle labelTextStyle
  +void Function() onTap
  +String indexLabel
  +EdgeInsetsGeometry? padding
  +bool useIndicator
  +Color? indicatorColor
  +ShapeBorder? indicatorShape
  +bool disabled
  -Animation<double> _positionAnimation
  +Widget build()
}

"material::navigation_rail::_RailDestination" o-- "widgets::framework::Widget"
"material::navigation_rail::_RailDestination" o-- "animation::animation::Animation<double>"
"material::navigation_rail::_RailDestination" o-- "material::navigation_rail::NavigationRailLabelType"
"material::navigation_rail::_RailDestination" o-- "widgets::icon_theme_data::IconThemeData"
"material::navigation_rail::_RailDestination" o-- "painting::text_style::TextStyle"
"material::navigation_rail::_RailDestination" o-- "dart::ui::void Function()"
"material::navigation_rail::_RailDestination" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::navigation_rail::_RailDestination" o-- "dart::ui::Color"
"material::navigation_rail::_RailDestination" o-- "painting::borders::ShapeBorder"
"widgets::framework::StatelessWidget" <|-- "material::navigation_rail::_RailDestination"

class "material::navigation_rail::_IndicatorInkWell" {
  +bool useMaterial3
  +Offset indicatorOffset
  +bool applyXOffset
  +TextDirection textDirection
  +Rect Function()? getRectCallback()
}

"material::navigation_rail::_IndicatorInkWell" o-- "dart::ui::Offset"
"material::navigation_rail::_IndicatorInkWell" o-- "dart::ui::TextDirection"
"material::ink_well::InkResponse" <|-- "material::navigation_rail::_IndicatorInkWell"

class "material::navigation_rail::_AddIndicator" {
  +bool addIndicator
  +bool isCircular
  +Color? indicatorColor
  +ShapeBorder? indicatorShape
  +Animation<double> indicatorAnimation
  +Widget child
  +Widget build()
}

"material::navigation_rail::_AddIndicator" o-- "dart::ui::Color"
"material::navigation_rail::_AddIndicator" o-- "painting::borders::ShapeBorder"
"material::navigation_rail::_AddIndicator" o-- "animation::animation::Animation<double>"
"material::navigation_rail::_AddIndicator" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::navigation_rail::_AddIndicator"

class "material::navigation_rail::NavigationRailDestination" {
  +Widget icon
  +Widget selectedIcon
  +Color? indicatorColor
  +ShapeBorder? indicatorShape
  +Widget label
  +EdgeInsetsGeometry? padding
  +bool disabled
}

"material::navigation_rail::NavigationRailDestination" o-- "widgets::framework::Widget"
"material::navigation_rail::NavigationRailDestination" o-- "dart::ui::Color"
"material::navigation_rail::NavigationRailDestination" o-- "painting::borders::ShapeBorder"
"material::navigation_rail::NavigationRailDestination" o-- "painting::edge_insets::EdgeInsetsGeometry"

class "material::navigation_rail::_ExtendedNavigationRailAnimation" {
  +Animation<double> animation
  +bool updateShouldNotify()
}

"material::navigation_rail::_ExtendedNavigationRailAnimation" o-- "animation::animation::Animation<double>"
"widgets::framework::InheritedWidget" <|-- "material::navigation_rail::_ExtendedNavigationRailAnimation"

class "material::navigation_rail::_NavigationRailDefaultsM2" {
  -ThemeData _theme
  -ColorScheme _colors
  +Color? backgroundColor
  +TextStyle? unselectedLabelTextStyle
  +TextStyle? selectedLabelTextStyle
  +IconThemeData? unselectedIconTheme
  +IconThemeData? selectedIconTheme
}

"material::navigation_rail::_NavigationRailDefaultsM2" o-- "material::theme_data::ThemeData"
"material::navigation_rail::_NavigationRailDefaultsM2" o-- "material::color_scheme::ColorScheme"
"material::navigation_rail::_NavigationRailDefaultsM2" o-- "dart::ui::Color"
"material::navigation_rail::_NavigationRailDefaultsM2" o-- "painting::text_style::TextStyle"
"material::navigation_rail::_NavigationRailDefaultsM2" o-- "widgets::icon_theme_data::IconThemeData"
"material::navigation_rail_theme::NavigationRailThemeData" <|-- "material::navigation_rail::_NavigationRailDefaultsM2"

class "material::navigation_rail::_NavigationRailDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  -TextTheme _textTheme
  +Color? backgroundColor
  +TextStyle? unselectedLabelTextStyle
  +TextStyle? selectedLabelTextStyle
  +IconThemeData? unselectedIconTheme
  +IconThemeData? selectedIconTheme
  +Color? indicatorColor
  +ShapeBorder? indicatorShape
}

"material::navigation_rail::_NavigationRailDefaultsM3" o-- "widgets::framework::BuildContext"
"material::navigation_rail::_NavigationRailDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::navigation_rail::_NavigationRailDefaultsM3" o-- "material::text_theme::TextTheme"
"material::navigation_rail::_NavigationRailDefaultsM3" o-- "dart::ui::Color"
"material::navigation_rail::_NavigationRailDefaultsM3" o-- "painting::text_style::TextStyle"
"material::navigation_rail::_NavigationRailDefaultsM3" o-- "widgets::icon_theme_data::IconThemeData"
"material::navigation_rail::_NavigationRailDefaultsM3" o-- "painting::borders::ShapeBorder"
"material::navigation_rail_theme::NavigationRailThemeData" <|-- "material::navigation_rail::_NavigationRailDefaultsM3"

class "material::navigation_rail::NavigationRailLabelType" {
  +int index
  {static} +List<NavigationRailLabelType> values
  {static} +NavigationRailLabelType none
  {static} +NavigationRailLabelType selected
  {static} +NavigationRailLabelType all
}

"material::navigation_rail::NavigationRailLabelType" o-- "material::navigation_rail::NavigationRailLabelType"
"dart::core::Enum" <|-- "material::navigation_rail::NavigationRailLabelType"

class "material::tooltip_theme::TooltipThemeData" {
  +double? height
  +EdgeInsetsGeometry? padding
  +EdgeInsetsGeometry? margin
  +double? verticalOffset
  +bool? preferBelow
  +bool? excludeFromSemantics
  +Decoration? decoration
  +TextStyle? textStyle
  +TextAlign? textAlign
  +Duration? waitDuration
  +Duration? showDuration
  +TooltipTriggerMode? triggerMode
  +bool? enableFeedback
  +int hashCode
  +TooltipThemeData copyWith()
  {static} +TooltipThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::tooltip_theme::TooltipThemeData" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::tooltip_theme::TooltipThemeData" o-- "painting::decoration::Decoration"
"material::tooltip_theme::TooltipThemeData" o-- "painting::text_style::TextStyle"
"material::tooltip_theme::TooltipThemeData" o-- "dart::ui::TextAlign"
"material::tooltip_theme::TooltipThemeData" o-- "material::tooltip_theme::TooltipTriggerMode"
"foundation::diagnostics::Diagnosticable" <|-- "material::tooltip_theme::TooltipThemeData"

class "material::tooltip_theme::TooltipTheme" {
  +TooltipThemeData data
  {static} +TooltipThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::tooltip_theme::TooltipTheme" o-- "material::tooltip_theme::TooltipThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::tooltip_theme::TooltipTheme"

class "material::tooltip_theme::TooltipTriggerMode" {
  +int index
  {static} +List<TooltipTriggerMode> values
  {static} +TooltipTriggerMode manual
  {static} +TooltipTriggerMode longPress
  {static} +TooltipTriggerMode tap
}

"material::tooltip_theme::TooltipTriggerMode" o-- "material::tooltip_theme::TooltipTriggerMode"
"dart::core::Enum" <|-- "material::tooltip_theme::TooltipTriggerMode"

class "material::menu_button_theme::MenuButtonThemeData" {
  +ButtonStyle? style
  +int hashCode
  {static} +MenuButtonThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::menu_button_theme::MenuButtonThemeData" o-- "material::button_style::ButtonStyle"
"foundation::diagnostics::Diagnosticable" <|-- "material::menu_button_theme::MenuButtonThemeData"

class "material::menu_button_theme::MenuButtonTheme" {
  +MenuButtonThemeData data
  {static} +MenuButtonThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::menu_button_theme::MenuButtonTheme" o-- "material::menu_button_theme::MenuButtonThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::menu_button_theme::MenuButtonTheme"

class "material::text_button::TextButton" {
  {static} +ButtonStyle styleFrom()
  +ButtonStyle defaultStyleOf()
  +ButtonStyle? themeStyleOf()
}

"material::button_style_button::ButtonStyleButton" <|-- "material::text_button::TextButton"

class "material::text_button::_TextButtonDefaultColor" {
  +Color? color
  +Color? disabled
  +Color? resolve()
  +String toString()
}

"material::text_button::_TextButtonDefaultColor" o-- "dart::ui::Color"
"material::material_state::MaterialStateProperty" <|-- "material::text_button::_TextButtonDefaultColor"

class "material::text_button::_TextButtonDefaultOverlay" {
  +Color primary
  +Color? resolve()
  +String toString()
}

"material::text_button::_TextButtonDefaultOverlay" o-- "dart::ui::Color"
"material::material_state::MaterialStateProperty" <|-- "material::text_button::_TextButtonDefaultOverlay"

class "material::text_button::_TextButtonDefaultIconColor" {
  +Color? iconColor
  +Color? disabledIconColor
  +Color? resolve()
  +String toString()
}

"material::text_button::_TextButtonDefaultIconColor" o-- "dart::ui::Color"
"material::material_state::MaterialStateProperty" <|-- "material::text_button::_TextButtonDefaultIconColor"

class "material::text_button::_TextButtonDefaultMouseCursor" {
  +MouseCursor? enabledCursor
  +MouseCursor? disabledCursor
  +MouseCursor? resolve()
}

"material::text_button::_TextButtonDefaultMouseCursor" o-- "services::mouse_cursor::MouseCursor"
"material::material_state::MaterialStateProperty" <|-- "material::text_button::_TextButtonDefaultMouseCursor"
"foundation::diagnostics::Diagnosticable" <|-- "material::text_button::_TextButtonDefaultMouseCursor"

class "material::text_button::_TextButtonWithIcon" {
  +ButtonStyle defaultStyleOf()
}

"material::text_button::TextButton" <|-- "material::text_button::_TextButtonWithIcon"

class "material::text_button::_TextButtonWithIconChild" {
  +Widget label
  +Widget icon
  +Widget build()
}

"material::text_button::_TextButtonWithIconChild" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::text_button::_TextButtonWithIconChild"

class "material::text_button::_TextButtonDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  +MaterialStateProperty<TextStyle?> textStyle
  +MaterialStateProperty<Color?>? backgroundColor
  +MaterialStateProperty<Color?>? foregroundColor
  +MaterialStateProperty<Color?>? overlayColor
  +MaterialStateProperty<Color>? shadowColor
  +MaterialStateProperty<Color>? surfaceTintColor
  +MaterialStateProperty<double>? elevation
  +MaterialStateProperty<EdgeInsetsGeometry>? padding
  +MaterialStateProperty<Size>? minimumSize
  +MaterialStateProperty<Size>? maximumSize
  +MaterialStateProperty<OutlinedBorder>? shape
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +VisualDensity? visualDensity
  +MaterialTapTargetSize? tapTargetSize
  +InteractiveInkFeatureFactory? splashFactory
}

"material::text_button::_TextButtonDefaultsM3" o-- "widgets::framework::BuildContext"
"material::text_button::_TextButtonDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::text_button::_TextButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<TextStyle>"
"material::text_button::_TextButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::text_button::_TextButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<double>"
"material::text_button::_TextButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<EdgeInsetsGeometry>"
"material::text_button::_TextButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Size>"
"material::text_button::_TextButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<OutlinedBorder>"
"material::text_button::_TextButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::text_button::_TextButtonDefaultsM3" o-- "material::theme_data::VisualDensity"
"material::text_button::_TextButtonDefaultsM3" o-- "material::theme_data::MaterialTapTargetSize"
"material::text_button::_TextButtonDefaultsM3" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::button_style::ButtonStyle" <|-- "material::text_button::_TextButtonDefaultsM3"

class "material::dialog::Dialog" {
  +Color? backgroundColor
  +double? elevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +Duration insetAnimationDuration
  +Curve insetAnimationCurve
  +EdgeInsets? insetPadding
  +Clip clipBehavior
  +ShapeBorder? shape
  +AlignmentGeometry? alignment
  +Widget? child
  -bool _fullscreen
  +Widget build()
}

"material::dialog::Dialog" o-- "dart::ui::Color"
"material::dialog::Dialog" o-- "animation::curves::Curve"
"material::dialog::Dialog" o-- "painting::edge_insets::EdgeInsets"
"material::dialog::Dialog" o-- "dart::ui::Clip"
"material::dialog::Dialog" o-- "painting::borders::ShapeBorder"
"material::dialog::Dialog" o-- "painting::alignment::AlignmentGeometry"
"material::dialog::Dialog" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::dialog::Dialog"

class "material::dialog::AlertDialog" {
  +Widget? icon
  +Color? iconColor
  +EdgeInsetsGeometry? iconPadding
  +Widget? title
  +EdgeInsetsGeometry? titlePadding
  +TextStyle? titleTextStyle
  +Widget? content
  +EdgeInsetsGeometry? contentPadding
  +TextStyle? contentTextStyle
  +List<Widget>? actions
  +EdgeInsetsGeometry? actionsPadding
  +MainAxisAlignment? actionsAlignment
  +OverflowBarAlignment? actionsOverflowAlignment
  +VerticalDirection? actionsOverflowDirection
  +double? actionsOverflowButtonSpacing
  +EdgeInsetsGeometry? buttonPadding
  +Color? backgroundColor
  +double? elevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +String? semanticLabel
  +EdgeInsets insetPadding
  +Clip clipBehavior
  +ShapeBorder? shape
  +AlignmentGeometry? alignment
  +bool scrollable
  +Widget build()
}

"material::dialog::AlertDialog" o-- "widgets::framework::Widget"
"material::dialog::AlertDialog" o-- "dart::ui::Color"
"material::dialog::AlertDialog" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::dialog::AlertDialog" o-- "painting::text_style::TextStyle"
"material::dialog::AlertDialog" o-- "rendering::flex::MainAxisAlignment"
"material::dialog::AlertDialog" o-- "widgets::overflow_bar::OverflowBarAlignment"
"material::dialog::AlertDialog" o-- "painting::basic_types::VerticalDirection"
"material::dialog::AlertDialog" o-- "painting::edge_insets::EdgeInsets"
"material::dialog::AlertDialog" o-- "dart::ui::Clip"
"material::dialog::AlertDialog" o-- "painting::borders::ShapeBorder"
"material::dialog::AlertDialog" o-- "painting::alignment::AlignmentGeometry"
"widgets::framework::StatelessWidget" <|-- "material::dialog::AlertDialog"

class "material::dialog::_AdaptiveAlertDialog" {
  +ScrollController? scrollController
  +ScrollController? actionScrollController
  +Duration insetAnimationDuration
  +Curve insetAnimationCurve
  +Widget build()
}

"material::dialog::_AdaptiveAlertDialog" o-- "widgets::scroll_controller::ScrollController"
"material::dialog::_AdaptiveAlertDialog" o-- "animation::curves::Curve"
"material::dialog::AlertDialog" <|-- "material::dialog::_AdaptiveAlertDialog"

class "material::dialog::SimpleDialogOption" {
  +void Function()? onPressed
  +Widget? child
  +EdgeInsets? padding
  +Widget build()
}

"material::dialog::SimpleDialogOption" o-- "dart::ui::void Function()"
"material::dialog::SimpleDialogOption" o-- "widgets::framework::Widget"
"material::dialog::SimpleDialogOption" o-- "painting::edge_insets::EdgeInsets"
"widgets::framework::StatelessWidget" <|-- "material::dialog::SimpleDialogOption"

class "material::dialog::SimpleDialog" {
  +Widget? title
  +EdgeInsetsGeometry titlePadding
  +TextStyle? titleTextStyle
  +List<Widget>? children
  +EdgeInsetsGeometry contentPadding
  +Color? backgroundColor
  +double? elevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +String? semanticLabel
  +EdgeInsets insetPadding
  +Clip clipBehavior
  +ShapeBorder? shape
  +AlignmentGeometry? alignment
  +Widget build()
}

"material::dialog::SimpleDialog" o-- "widgets::framework::Widget"
"material::dialog::SimpleDialog" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::dialog::SimpleDialog" o-- "painting::text_style::TextStyle"
"material::dialog::SimpleDialog" o-- "dart::ui::Color"
"material::dialog::SimpleDialog" o-- "painting::edge_insets::EdgeInsets"
"material::dialog::SimpleDialog" o-- "dart::ui::Clip"
"material::dialog::SimpleDialog" o-- "painting::borders::ShapeBorder"
"material::dialog::SimpleDialog" o-- "painting::alignment::AlignmentGeometry"
"widgets::framework::StatelessWidget" <|-- "material::dialog::SimpleDialog"

class "material::dialog::DialogRoute" {
}

"widgets::routes::RawDialogRoute" <|-- "material::dialog::DialogRoute"

class "material::dialog::_DialogDefaultsM2" {
  +BuildContext context
  -TextTheme _textTheme
  -IconThemeData _iconTheme
  +Color? iconColor
  +Color? backgroundColor
  +Color? shadowColor
  +TextStyle? titleTextStyle
  +TextStyle? contentTextStyle
  +EdgeInsetsGeometry? actionsPadding
}

"material::dialog::_DialogDefaultsM2" o-- "widgets::framework::BuildContext"
"material::dialog::_DialogDefaultsM2" o-- "material::text_theme::TextTheme"
"material::dialog::_DialogDefaultsM2" o-- "widgets::icon_theme_data::IconThemeData"
"material::dialog::_DialogDefaultsM2" o-- "dart::ui::Color"
"material::dialog::_DialogDefaultsM2" o-- "painting::text_style::TextStyle"
"material::dialog::_DialogDefaultsM2" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::dialog_theme::DialogTheme" <|-- "material::dialog::_DialogDefaultsM2"

class "material::dialog::_DialogDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  -TextTheme _textTheme
  +Color? iconColor
  +Color? backgroundColor
  +Color? shadowColor
  +Color? surfaceTintColor
  +TextStyle? titleTextStyle
  +TextStyle? contentTextStyle
  +EdgeInsetsGeometry? actionsPadding
}

"material::dialog::_DialogDefaultsM3" o-- "widgets::framework::BuildContext"
"material::dialog::_DialogDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::dialog::_DialogDefaultsM3" o-- "material::text_theme::TextTheme"
"material::dialog::_DialogDefaultsM3" o-- "dart::ui::Color"
"material::dialog::_DialogDefaultsM3" o-- "painting::text_style::TextStyle"
"material::dialog::_DialogDefaultsM3" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::dialog_theme::DialogTheme" <|-- "material::dialog::_DialogDefaultsM3"

class "material::dialog::_DialogFullscreenDefaultsM3" {
  +BuildContext context
  +Color? backgroundColor
}

"material::dialog::_DialogFullscreenDefaultsM3" o-- "widgets::framework::BuildContext"
"material::dialog::_DialogFullscreenDefaultsM3" o-- "dart::ui::Color"
"material::dialog_theme::DialogTheme" <|-- "material::dialog::_DialogFullscreenDefaultsM3"

abstract class "material::ink_well::InteractiveInkFeature" {
  -Color _color
  -ShapeBorder? _customBorder
  +Color color
  +ShapeBorder? customBorder
  +void confirm()
  +void cancel()
  #void paintInkCircle()
}

"material::ink_well::InteractiveInkFeature" o-- "dart::ui::Color"
"material::ink_well::InteractiveInkFeature" o-- "painting::borders::ShapeBorder"
"material::material::InkFeature" <|-- "material::ink_well::InteractiveInkFeature"

abstract class "material::ink_well::InteractiveInkFeatureFactory" {
  +InteractiveInkFeature create()
}

abstract class "material::ink_well::_ParentInkResponseState" {
  +void markChildInkResponsePressed()
}

class "material::ink_well::_ParentInkResponseProvider" {
  +_ParentInkResponseState state
  +bool updateShouldNotify()
  {static} +_ParentInkResponseState? maybeOf()
}

"material::ink_well::_ParentInkResponseProvider" o-- "material::ink_well::_ParentInkResponseState"
"widgets::framework::InheritedWidget" <|-- "material::ink_well::_ParentInkResponseProvider"

class "material::ink_well::InkResponse" {
  +Widget? child
  +void Function()? onTap
  +void Function(TapDownDetails)? onTapDown
  +void Function(TapUpDetails)? onTapUp
  +void Function()? onTapCancel
  +void Function()? onDoubleTap
  +void Function()? onLongPress
  +void Function()? onSecondaryTap
  +void Function(TapDownDetails)? onSecondaryTapDown
  +void Function(TapUpDetails)? onSecondaryTapUp
  +void Function()? onSecondaryTapCancel
  +void Function(bool)? onHighlightChanged
  +void Function(bool)? onHover
  +MouseCursor? mouseCursor
  +bool containedInkWell
  +BoxShape highlightShape
  +double? radius
  +BorderRadius? borderRadius
  +ShapeBorder? customBorder
  +Color? focusColor
  +Color? hoverColor
  +Color? highlightColor
  +MaterialStateProperty<Color?>? overlayColor
  +Color? splashColor
  +InteractiveInkFeatureFactory? splashFactory
  +bool enableFeedback
  +bool excludeFromSemantics
  +void Function(bool)? onFocusChange
  +bool autofocus
  +FocusNode? focusNode
  +bool canRequestFocus
  +MaterialStatesController? statesController
  +Duration? hoverDuration
  +Rect Function()? getRectCallback()
  +Widget build()
  +bool debugCheckContext()
}

"material::ink_well::InkResponse" o-- "widgets::framework::Widget"
"material::ink_well::InkResponse" o-- "gestures::tap::void Function()"
"material::ink_well::InkResponse" o-- "gestures::tap::void Function(TapDownDetails)"
"material::ink_well::InkResponse" o-- "gestures::tap::void Function(TapUpDetails)"
"material::ink_well::InkResponse" o-- "gestures::long_press::void Function()"
"material::ink_well::InkResponse" o-- "foundation::basic_types::void Function(bool)"
"material::ink_well::InkResponse" o-- "services::mouse_cursor::MouseCursor"
"material::ink_well::InkResponse" o-- "painting::box_border::BoxShape"
"material::ink_well::InkResponse" o-- "painting::border_radius::BorderRadius"
"material::ink_well::InkResponse" o-- "painting::borders::ShapeBorder"
"material::ink_well::InkResponse" o-- "dart::ui::Color"
"material::ink_well::InkResponse" o-- "material::material_state::MaterialStateProperty<Color>"
"material::ink_well::InkResponse" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::ink_well::InkResponse" o-- "widgets::focus_manager::FocusNode"
"material::ink_well::InkResponse" o-- "material::material_state::MaterialStatesController"
"widgets::framework::StatelessWidget" <|-- "material::ink_well::InkResponse"

class "material::ink_well::_InkResponseStateWidget" {
  +Widget? child
  +void Function()? onTap
  +void Function(TapDownDetails)? onTapDown
  +void Function(TapUpDetails)? onTapUp
  +void Function()? onTapCancel
  +void Function()? onDoubleTap
  +void Function()? onLongPress
  +void Function()? onSecondaryTap
  +void Function(TapUpDetails)? onSecondaryTapUp
  +void Function(TapDownDetails)? onSecondaryTapDown
  +void Function()? onSecondaryTapCancel
  +void Function(bool)? onHighlightChanged
  +void Function(bool)? onHover
  +MouseCursor? mouseCursor
  +bool containedInkWell
  +BoxShape highlightShape
  +double? radius
  +BorderRadius? borderRadius
  +ShapeBorder? customBorder
  +Color? focusColor
  +Color? hoverColor
  +Color? highlightColor
  +MaterialStateProperty<Color?>? overlayColor
  +Color? splashColor
  +InteractiveInkFeatureFactory? splashFactory
  +bool enableFeedback
  +bool excludeFromSemantics
  +void Function(bool)? onFocusChange
  +bool autofocus
  +FocusNode? focusNode
  +bool canRequestFocus
  +_ParentInkResponseState? parentState
  +Rect Function()? Function(RenderBox)? getRectCallback
  +bool Function(BuildContext) debugCheckContext
  +MaterialStatesController? statesController
  +Duration? hoverDuration
  +_InkResponseState createState()
  +void debugFillProperties()
}

"material::ink_well::_InkResponseStateWidget" o-- "widgets::framework::Widget"
"material::ink_well::_InkResponseStateWidget" o-- "gestures::tap::void Function()"
"material::ink_well::_InkResponseStateWidget" o-- "gestures::tap::void Function(TapDownDetails)"
"material::ink_well::_InkResponseStateWidget" o-- "gestures::tap::void Function(TapUpDetails)"
"material::ink_well::_InkResponseStateWidget" o-- "gestures::long_press::void Function()"
"material::ink_well::_InkResponseStateWidget" o-- "foundation::basic_types::void Function(bool)"
"material::ink_well::_InkResponseStateWidget" o-- "services::mouse_cursor::MouseCursor"
"material::ink_well::_InkResponseStateWidget" o-- "painting::box_border::BoxShape"
"material::ink_well::_InkResponseStateWidget" o-- "painting::border_radius::BorderRadius"
"material::ink_well::_InkResponseStateWidget" o-- "painting::borders::ShapeBorder"
"material::ink_well::_InkResponseStateWidget" o-- "dart::ui::Color"
"material::ink_well::_InkResponseStateWidget" o-- "material::material_state::MaterialStateProperty<Color>"
"material::ink_well::_InkResponseStateWidget" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::ink_well::_InkResponseStateWidget" o-- "widgets::focus_manager::FocusNode"
"material::ink_well::_InkResponseStateWidget" o-- "material::ink_well::_ParentInkResponseState"
"material::ink_well::_InkResponseStateWidget" o-- "material::ink_well::Rect Function() Function(RenderBox)"
"material::ink_well::_InkResponseStateWidget" o-- "material::ink_well::bool Function(BuildContext)"
"material::ink_well::_InkResponseStateWidget" o-- "material::material_state::MaterialStatesController"
"widgets::framework::StatefulWidget" <|-- "material::ink_well::_InkResponseStateWidget"

class "material::ink_well::_InkResponseState" {
  -Set<InteractiveInkFeature>? _splashes
  -InteractiveInkFeature? _currentSplash
  -bool _hovering
  -Map<_HighlightType, InkHighlight?> _highlights
  -Map<Type, Action<Intent>> _actionMap
  +MaterialStatesController? internalStatesController
  -ObserverList<_ParentInkResponseState> _activeChildren
  {static} -Duration _activationDuration
  -Timer? _activationTimer
  -bool _hasFocus
  +bool highlightsExist
  -bool _anyChildInkResponsePressed
  +MaterialStatesController statesController
  +bool wantKeepAlive
  -bool _shouldShowFocus
  +bool enabled
  -bool _primaryEnabled
  -bool _secondaryEnabled
  -bool _canRequestFocus
  +void markChildInkResponsePressed()
  +void activateOnIntent()
  +void simulateTap()
  +void simulateLongPress()
  +void handleStatesControllerChange()
  +void initStatesController()
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Duration getFadeDurationForType()
  +void updateHighlight()
  -void _updateHighlightsAndSplashes()
  -InteractiveInkFeature _createSplash()
  +void handleFocusHighlightModeChange()
  +void updateFocusHighlights()
  +void handleFocusUpdate()
  +void handleAnyTapDown()
  +void handleTapDown()
  +void handleTapUp()
  +void handleSecondaryTapDown()
  +void handleSecondaryTapUp()
  -void _startNewSplash()
  +void handleTap()
  +void handleTapCancel()
  +void handleDoubleTap()
  +void handleLongPress()
  +void handleSecondaryTap()
  +void handleSecondaryTapCancel()
  +void deactivate()
  +bool isWidgetEnabled()
  -bool _primaryButtonEnabled()
  -bool _secondaryButtonEnabled()
  +void handleMouseEnter()
  +void handleMouseExit()
  +void handleHoverChange()
  +Widget build()
}

"material::ink_well::_InkResponseState" o-- "material::ink_well::InteractiveInkFeature"
"material::ink_well::_InkResponseState" o-- "material::material_state::MaterialStatesController"
"material::ink_well::_InkResponseState" o-- "foundation::observer_list::ObserverList<_ParentInkResponseState>"
"material::ink_well::_InkResponseState" o-- "dart::async::Timer"
"widgets::framework::State" <|-- "material::ink_well::_InkResponseState"
"widgets::automatic_keep_alive::AutomaticKeepAliveClientMixin" <|-- "material::ink_well::_InkResponseState"
"material::ink_well::_ParentInkResponseState" <|-- "material::ink_well::_InkResponseState"

class "material::ink_well::InkWell" {
}

"material::ink_well::InkResponse" <|-- "material::ink_well::InkWell"

class "material::ink_well::_HighlightType" {
  +int index
  {static} +List<_HighlightType> values
  {static} +_HighlightType pressed
  {static} +_HighlightType hover
  {static} +_HighlightType focus
}

"material::ink_well::_HighlightType" o-- "material::ink_well::_HighlightType"
"dart::core::Enum" <|-- "material::ink_well::_HighlightType"

class "material::checkbox::Checkbox" {
  +bool? value
  +void Function(bool?)? onChanged
  +MouseCursor? mouseCursor
  +Color? activeColor
  +MaterialStateProperty<Color?>? fillColor
  +Color? checkColor
  +bool tristate
  +MaterialTapTargetSize? materialTapTargetSize
  +VisualDensity? visualDensity
  +Color? focusColor
  +Color? hoverColor
  +MaterialStateProperty<Color?>? overlayColor
  +double? splashRadius
  +FocusNode? focusNode
  +bool autofocus
  +OutlinedBorder? shape
  +BorderSide? side
  +bool isError
  +String? semanticLabel
  {static} +double width
  -_CheckboxType _checkboxType
  +State<Checkbox> createState()
}

"material::checkbox::Checkbox" o-- "foundation::basic_types::void Function(bool)"
"material::checkbox::Checkbox" o-- "services::mouse_cursor::MouseCursor"
"material::checkbox::Checkbox" o-- "dart::ui::Color"
"material::checkbox::Checkbox" o-- "material::material_state::MaterialStateProperty<Color>"
"material::checkbox::Checkbox" o-- "material::theme_data::MaterialTapTargetSize"
"material::checkbox::Checkbox" o-- "material::theme_data::VisualDensity"
"material::checkbox::Checkbox" o-- "widgets::focus_manager::FocusNode"
"material::checkbox::Checkbox" o-- "painting::borders::OutlinedBorder"
"material::checkbox::Checkbox" o-- "painting::borders::BorderSide"
"material::checkbox::Checkbox" o-- "material::checkbox::_CheckboxType"
"widgets::framework::StatefulWidget" <|-- "material::checkbox::Checkbox"

class "material::checkbox::_CheckboxState" {
  -_CheckboxPainter _painter
  -bool? _previousValue
  +void Function(bool?)? onChanged
  +bool tristate
  +bool? value
  -MaterialStateProperty<Color?> _widgetFillColor
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  -BorderSide? _resolveSide()
  +Widget build()
}

"material::checkbox::_CheckboxState" o-- "material::checkbox::_CheckboxPainter"
"material::checkbox::_CheckboxState" o-- "foundation::basic_types::void Function(bool)"
"material::checkbox::_CheckboxState" o-- "material::material_state::MaterialStateProperty<Color>"
"widgets::framework::State" <|-- "material::checkbox::_CheckboxState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::checkbox::_CheckboxState"
"material::toggleable::ToggleableStateMixin" <|-- "material::checkbox::_CheckboxState"

class "material::checkbox::_CheckboxPainter" {
  -Color? _checkColor
  -bool? _value
  -bool? _previousValue
  -OutlinedBorder? _shape
  -BorderSide? _activeSide
  -BorderSide? _inactiveSide
  +Color checkColor
  +bool? value
  +bool? previousValue
  +OutlinedBorder shape
  +BorderSide activeSide
  +BorderSide inactiveSide
  -Rect _outerRectAt()
  -Color _colorAt()
  -Paint _createStrokePaint()
  -void _drawBox()
  -void _drawCheck()
  -void _drawDash()
  +void paint()
}

"material::checkbox::_CheckboxPainter" o-- "dart::ui::Color"
"material::checkbox::_CheckboxPainter" o-- "painting::borders::OutlinedBorder"
"material::checkbox::_CheckboxPainter" o-- "painting::borders::BorderSide"
"material::toggleable::ToggleablePainter" <|-- "material::checkbox::_CheckboxPainter"

class "material::checkbox::_CheckboxDefaultsM2" {
  -ThemeData _theme
  -ColorScheme _colors
  +MaterialStateBorderSide? side
  +MaterialStateProperty<Color> fillColor
  +MaterialStateProperty<Color> checkColor
  +MaterialStateProperty<Color?> overlayColor
  +double splashRadius
  +MaterialTapTargetSize materialTapTargetSize
  +VisualDensity visualDensity
  +OutlinedBorder shape
}

"material::checkbox::_CheckboxDefaultsM2" o-- "material::theme_data::ThemeData"
"material::checkbox::_CheckboxDefaultsM2" o-- "material::color_scheme::ColorScheme"
"material::checkbox::_CheckboxDefaultsM2" o-- "material::material_state::MaterialStateBorderSide"
"material::checkbox::_CheckboxDefaultsM2" o-- "material::material_state::MaterialStateProperty<Color>"
"material::checkbox::_CheckboxDefaultsM2" o-- "material::theme_data::MaterialTapTargetSize"
"material::checkbox::_CheckboxDefaultsM2" o-- "material::theme_data::VisualDensity"
"material::checkbox::_CheckboxDefaultsM2" o-- "painting::borders::OutlinedBorder"
"material::checkbox_theme::CheckboxThemeData" <|-- "material::checkbox::_CheckboxDefaultsM2"

class "material::checkbox::_CheckboxDefaultsM3" {
  -ThemeData _theme
  -ColorScheme _colors
  +MaterialStateBorderSide? side
  +MaterialStateProperty<Color> fillColor
  +MaterialStateProperty<Color> checkColor
  +MaterialStateProperty<Color> overlayColor
  +double splashRadius
  +MaterialTapTargetSize materialTapTargetSize
  +VisualDensity visualDensity
  +OutlinedBorder shape
}

"material::checkbox::_CheckboxDefaultsM3" o-- "material::theme_data::ThemeData"
"material::checkbox::_CheckboxDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::checkbox::_CheckboxDefaultsM3" o-- "material::material_state::MaterialStateBorderSide"
"material::checkbox::_CheckboxDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::checkbox::_CheckboxDefaultsM3" o-- "material::theme_data::MaterialTapTargetSize"
"material::checkbox::_CheckboxDefaultsM3" o-- "material::theme_data::VisualDensity"
"material::checkbox::_CheckboxDefaultsM3" o-- "painting::borders::OutlinedBorder"
"material::checkbox_theme::CheckboxThemeData" <|-- "material::checkbox::_CheckboxDefaultsM3"

class "material::checkbox::_CheckboxType" {
  +int index
  {static} +List<_CheckboxType> values
  {static} +_CheckboxType material
  {static} +_CheckboxType adaptive
}

"material::checkbox::_CheckboxType" o-- "material::checkbox::_CheckboxType"
"dart::core::Enum" <|-- "material::checkbox::_CheckboxType"

class "material::time_picker::_TimePickerModel" {
  +TimePickerEntryMode entryMode
  +_HourMinuteMode hourMinuteMode
  +void Function(_HourMinuteMode) onHourMinuteModeChanged
  +void Function() onHourDoubleTapped
  +void Function() onMinuteDoubleTapped
  +TimeOfDay selectedTime
  +void Function(TimeOfDay) onSelectedTimeChanged
  +bool use24HourFormat
  +bool useMaterial3
  +_HourDialType hourDialType
  +Orientation orientation
  +TimePickerThemeData theme
  +_TimePickerDefaults defaultTheme
  {static} +_TimePickerModel of()
  {static} +TimePickerEntryMode entryModeOf()
  {static} +_HourMinuteMode hourMinuteModeOf()
  {static} +TimeOfDay selectedTimeOf()
  {static} +bool use24HourFormatOf()
  {static} +bool useMaterial3Of()
  {static} +_HourDialType hourDialTypeOf()
  {static} +Orientation orientationOf()
  {static} +TimePickerThemeData themeOf()
  {static} +_TimePickerDefaults defaultThemeOf()
  {static} +void setSelectedTime()
  {static} +void setHourMinuteMode()
  +bool updateShouldNotifyDependent()
  +bool updateShouldNotify()
}

"material::time_picker::_TimePickerModel" o-- "material::time_picker::TimePickerEntryMode"
"material::time_picker::_TimePickerModel" o-- "material::time_picker::_HourMinuteMode"
"material::time_picker::_TimePickerModel" o-- "foundation::basic_types::void Function(_HourMinuteMode)"
"material::time_picker::_TimePickerModel" o-- "gestures::tap::void Function()"
"material::time_picker::_TimePickerModel" o-- "material::time::TimeOfDay"
"material::time_picker::_TimePickerModel" o-- "foundation::basic_types::void Function(TimeOfDay)"
"material::time_picker::_TimePickerModel" o-- "material::time_picker::_HourDialType"
"material::time_picker::_TimePickerModel" o-- "widgets::media_query::Orientation"
"material::time_picker::_TimePickerModel" o-- "material::time_picker_theme::TimePickerThemeData"
"material::time_picker::_TimePickerModel" o-- "material::time_picker::_TimePickerDefaults"
"widgets::inherited_model::InheritedModel" <|-- "material::time_picker::_TimePickerModel"

class "material::time_picker::_TimePickerHeader" {
  +String helpText
  +Widget build()
}

"widgets::framework::StatelessWidget" <|-- "material::time_picker::_TimePickerHeader"

class "material::time_picker::_HourMinuteControl" {
  +String text
  +void Function() onTap
  +void Function() onDoubleTap
  +bool isSelected
  +Widget build()
}

"material::time_picker::_HourMinuteControl" o-- "gestures::tap::void Function()"
"widgets::framework::StatelessWidget" <|-- "material::time_picker::_HourMinuteControl"

class "material::time_picker::_HourControl" {
  +Widget build()
}

"widgets::framework::StatelessWidget" <|-- "material::time_picker::_HourControl"

class "material::time_picker::_StringFragment" {
  +TimeOfDayFormat timeOfDayFormat
  -String _stringFragmentValue()
  +Widget build()
}

"material::time_picker::_StringFragment" o-- "material::time::TimeOfDayFormat"
"widgets::framework::StatelessWidget" <|-- "material::time_picker::_StringFragment"

class "material::time_picker::_MinuteControl" {
  +Widget build()
}

"widgets::framework::StatelessWidget" <|-- "material::time_picker::_MinuteControl"

class "material::time_picker::_DayPeriodControl" {
  +void Function(TimeOfDay)? onPeriodChanged
  -void _togglePeriod()
  -void _setAm()
  -void _setPm()
  +Widget build()
}

"material::time_picker::_DayPeriodControl" o-- "foundation::basic_types::void Function(TimeOfDay)"
"widgets::framework::StatelessWidget" <|-- "material::time_picker::_DayPeriodControl"

class "material::time_picker::_AmPmButton" {
  +bool selected
  +void Function() onPressed
  +String label
  +Widget build()
}

"material::time_picker::_AmPmButton" o-- "dart::ui::void Function()"
"widgets::framework::StatelessWidget" <|-- "material::time_picker::_AmPmButton"

class "material::time_picker::_DayPeriodInputPadding" {
  +Size minSize
  +Orientation orientation
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"material::time_picker::_DayPeriodInputPadding" o-- "dart::ui::Size"
"material::time_picker::_DayPeriodInputPadding" o-- "widgets::media_query::Orientation"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "material::time_picker::_DayPeriodInputPadding"

class "material::time_picker::_RenderInputPadding" {
  -Size _minSize
  -Orientation _orientation
  +Size minSize
  +Orientation orientation
  +double computeMinIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicWidth()
  +double computeMaxIntrinsicHeight()
  -Size _computeSize()
  +Size computeDryLayout()
  +void performLayout()
  +bool hitTest()
}

"material::time_picker::_RenderInputPadding" o-- "dart::ui::Size"
"material::time_picker::_RenderInputPadding" o-- "widgets::media_query::Orientation"
"rendering::shifted_box::RenderShiftedBox" <|-- "material::time_picker::_RenderInputPadding"

class "material::time_picker::_TappableLabel" {
  +int value
  +bool inner
  +TextPainter painter
  +void Function() onTap
}

"material::time_picker::_TappableLabel" o-- "painting::text_painter::TextPainter"
"material::time_picker::_TappableLabel" o-- "dart::ui::void Function()"

class "material::time_picker::_DialPainter" {
  +List<_TappableLabel> primaryLabels
  +List<_TappableLabel> selectedLabels
  +Color backgroundColor
  +Color handColor
  +double handWidth
  +Color dotColor
  +double dotRadius
  +double centerRadius
  +double theta
  +double radius
  +TextDirection textDirection
  +int selectedValue
  +void dispose()
  +void paint()
  +bool shouldRepaint()
}

"material::time_picker::_DialPainter" o-- "dart::ui::Color"
"material::time_picker::_DialPainter" o-- "dart::ui::TextDirection"
"rendering::custom_paint::CustomPainter" <|-- "material::time_picker::_DialPainter"

class "material::time_picker::_Dial" {
  +TimeOfDay selectedTime
  +_HourMinuteMode hourMinuteMode
  +_HourDialType hourDialType
  +void Function(TimeOfDay)? onChanged
  +void Function()? onHourSelected
  +_DialState createState()
}

"material::time_picker::_Dial" o-- "material::time::TimeOfDay"
"material::time_picker::_Dial" o-- "material::time_picker::_HourMinuteMode"
"material::time_picker::_Dial" o-- "material::time_picker::_HourDialType"
"material::time_picker::_Dial" o-- "foundation::basic_types::void Function(TimeOfDay)"
"material::time_picker::_Dial" o-- "dart::ui::void Function()"
"widgets::framework::StatefulWidget" <|-- "material::time_picker::_Dial"

class "material::time_picker::_DialState" {
  +ThemeData themeData
  +MaterialLocalizations localizations
  +_DialPainter? painter
  -AnimationController _animationController
  -Tween<double> _thetaTween
  -Animation<double> _theta
  -Tween<double> _radiusTween
  -Animation<double> _radius
  -bool _dragging
  -Offset? _position
  -Offset? _center
  -Size? _dialSize
  {static} -List<TimeOfDay> _amHours
  {static} -List<TimeOfDay> _twentyFourHoursM2
  {static} -List<TimeOfDay> _twentyFourHours
  +void initState()
  +void didChangeDependencies()
  +void didUpdateWidget()
  +void dispose()
  {static} -double _nearest()
  -void _animateTo()
  -double _getRadiusForTime()
  -double _getThetaForTime()
  -TimeOfDay _getTimeForTheta()
  -TimeOfDay _notifyOnChangedIfNeeded()
  -void _updateThetaForPan()
  -void _handlePanStart()
  -void _handlePanUpdate()
  -void _handlePanEnd()
  -void _handleTapUp()
  -void _selectHour()
  -void _selectMinute()
  -_TappableLabel _buildTappableLabel()
  -List<_TappableLabel> _build24HourRing()
  -List<_TappableLabel> _build12HourRing()
  -List<_TappableLabel> _buildMinutes()
  +Widget build()
}

"material::time_picker::_DialState" o-- "material::theme_data::ThemeData"
"material::time_picker::_DialState" o-- "material::material_localizations::MaterialLocalizations"
"material::time_picker::_DialState" o-- "material::time_picker::_DialPainter"
"material::time_picker::_DialState" o-- "animation::animation_controller::AnimationController"
"material::time_picker::_DialState" o-- "animation::tween::Tween<double>"
"material::time_picker::_DialState" o-- "animation::animation::Animation<double>"
"material::time_picker::_DialState" o-- "dart::ui::Offset"
"material::time_picker::_DialState" o-- "dart::ui::Size"
"widgets::framework::State" <|-- "material::time_picker::_DialState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "material::time_picker::_DialState"

class "material::time_picker::_TimePickerInput" {
  +TimeOfDay initialSelectedTime
  +String? errorInvalidText
  +String? hourLabelText
  +String? minuteLabelText
  +String helpText
  +bool? autofocusHour
  +bool? autofocusMinute
  +String? restorationId
  +_TimePickerInputState createState()
}

"material::time_picker::_TimePickerInput" o-- "material::time::TimeOfDay"
"widgets::framework::StatefulWidget" <|-- "material::time_picker::_TimePickerInput"

class "material::time_picker::_TimePickerInputState" {
  -RestorableTimeOfDay _selectedTime
  +RestorableBool hourHasError
  +RestorableBool minuteHasError
  +String? restorationId
  +void restoreState()
  -int? _parseHour()
  -int? _parseMinute()
  -void _handleHourSavedSubmitted()
  -void _handleHourChanged()
  -void _handleMinuteSavedSubmitted()
  -void _handleDayPeriodChanged()
  -String? _validateHour()
  -String? _validateMinute()
  +Widget build()
}

"material::time_picker::_TimePickerInputState" o-- "material::time::RestorableTimeOfDay"
"material::time_picker::_TimePickerInputState" o-- "widgets::restoration_properties::RestorableBool"
"widgets::framework::State" <|-- "material::time_picker::_TimePickerInputState"
"widgets::restoration::RestorationMixin" <|-- "material::time_picker::_TimePickerInputState"

class "material::time_picker::_HourTextField" {
  +TimeOfDay selectedTime
  +TextStyle style
  +bool? autofocus
  +TextInputAction inputAction
  +String? Function(String?) validator
  +void Function(String?) onSavedSubmitted
  +void Function(String) onChanged
  +String? hourLabelText
  +String? restorationId
  +Widget build()
}

"material::time_picker::_HourTextField" o-- "material::time::TimeOfDay"
"material::time_picker::_HourTextField" o-- "painting::text_style::TextStyle"
"material::time_picker::_HourTextField" o-- "services::text_input::TextInputAction"
"material::time_picker::_HourTextField" o-- "widgets::form::String Function(String)"
"material::time_picker::_HourTextField" o-- "foundation::basic_types::void Function(String)"
"widgets::framework::StatelessWidget" <|-- "material::time_picker::_HourTextField"

class "material::time_picker::_MinuteTextField" {
  +TimeOfDay selectedTime
  +TextStyle style
  +bool? autofocus
  +TextInputAction inputAction
  +String? Function(String?) validator
  +void Function(String?) onSavedSubmitted
  +String? minuteLabelText
  +String? restorationId
  +Widget build()
}

"material::time_picker::_MinuteTextField" o-- "material::time::TimeOfDay"
"material::time_picker::_MinuteTextField" o-- "painting::text_style::TextStyle"
"material::time_picker::_MinuteTextField" o-- "services::text_input::TextInputAction"
"material::time_picker::_MinuteTextField" o-- "widgets::form::String Function(String)"
"material::time_picker::_MinuteTextField" o-- "foundation::basic_types::void Function(String)"
"widgets::framework::StatelessWidget" <|-- "material::time_picker::_MinuteTextField"

class "material::time_picker::_HourMinuteTextField" {
  +TimeOfDay selectedTime
  +bool isHour
  +bool? autofocus
  +TextInputAction inputAction
  +TextStyle style
  +String semanticHintText
  +String? Function(String?) validator
  +void Function(String?) onSavedSubmitted
  +void Function(String)? onChanged
  +String? restorationId
  +_HourMinuteTextFieldState createState()
}

"material::time_picker::_HourMinuteTextField" o-- "material::time::TimeOfDay"
"material::time_picker::_HourMinuteTextField" o-- "services::text_input::TextInputAction"
"material::time_picker::_HourMinuteTextField" o-- "painting::text_style::TextStyle"
"material::time_picker::_HourMinuteTextField" o-- "widgets::form::String Function(String)"
"material::time_picker::_HourMinuteTextField" o-- "foundation::basic_types::void Function(String)"
"widgets::framework::StatefulWidget" <|-- "material::time_picker::_HourMinuteTextField"

class "material::time_picker::_HourMinuteTextFieldState" {
  +RestorableTextEditingController controller
  +RestorableBool controllerHasBeenSet
  +FocusNode focusNode
  +String? restorationId
  -String _formattedValue
  +void initState()
  +void didChangeDependencies()
  +void restoreState()
  +Widget build()
}

"material::time_picker::_HourMinuteTextFieldState" o-- "widgets::restoration_properties::RestorableTextEditingController"
"material::time_picker::_HourMinuteTextFieldState" o-- "widgets::restoration_properties::RestorableBool"
"material::time_picker::_HourMinuteTextFieldState" o-- "widgets::focus_manager::FocusNode"
"widgets::framework::State" <|-- "material::time_picker::_HourMinuteTextFieldState"
"widgets::restoration::RestorationMixin" <|-- "material::time_picker::_HourMinuteTextFieldState"

class "material::time_picker::TimePickerDialog" {
  +TimeOfDay initialTime
  +String? cancelText
  +String? confirmText
  +String? helpText
  +String? errorInvalidText
  +String? hourLabelText
  +String? minuteLabelText
  +String? restorationId
  +TimePickerEntryMode initialEntryMode
  +Orientation? orientation
  +void Function(TimePickerEntryMode)? onEntryModeChanged
  +State<TimePickerDialog> createState()
}

"material::time_picker::TimePickerDialog" o-- "material::time::TimeOfDay"
"material::time_picker::TimePickerDialog" o-- "material::time_picker::TimePickerEntryMode"
"material::time_picker::TimePickerDialog" o-- "widgets::media_query::Orientation"
"material::time_picker::TimePickerDialog" o-- "material::time_picker::void Function(TimePickerEntryMode)"
"widgets::framework::StatefulWidget" <|-- "material::time_picker::TimePickerDialog"

class "material::time_picker::_TimePickerDialogState" {
  -dynamic _entryMode
  -RestorableTimeOfDay _selectedTime
  -GlobalKey<FormState> _formKey
  -dynamic _autovalidateMode
  -dynamic _orientation
  {static} -Size _kTimePickerPortraitSize
  {static} -Size _kTimePickerLandscapeSize
  {static} -Size _kTimePickerLandscapeSizeM2
  {static} -Size _kTimePickerInputSize
  {static} -Size _kTimePickerMinPortraitSize
  {static} -Size _kTimePickerMinLandscapeSize
  {static} -Size _kTimePickerMinInputSize
  +String? restorationId
  +void dispose()
  +void restoreState()
  -void _handleTimeChanged()
  -void _handleEntryModeChanged()
  -void _toggleEntryMode()
  -void _handleCancel()
  -void _handleOk()
  -Size _minDialogSize()
  -Size _dialogSize()
  +Widget build()
}

"material::time_picker::_TimePickerDialogState" o-- "material::time::RestorableTimeOfDay"
"material::time_picker::_TimePickerDialogState" o-- "widgets::framework::GlobalKey<FormState>"
"material::time_picker::_TimePickerDialogState" o-- "dart::ui::Size"
"widgets::framework::State" <|-- "material::time_picker::_TimePickerDialogState"
"widgets::restoration::RestorationMixin" <|-- "material::time_picker::_TimePickerDialogState"

class "material::time_picker::_TimePicker" {
  +String? helpText
  +String? cancelText
  +String? confirmText
  +String? errorInvalidText
  +String? hourLabelText
  +String? minuteLabelText
  +String? restorationId
  +TimePickerEntryMode entryMode
  +TimeOfDay time
  +void Function(TimeOfDay)? onTimeChanged
  +Orientation? orientation
  +void Function(TimePickerEntryMode)? onEntryModeChanged
  +State<_TimePicker> createState()
}

"material::time_picker::_TimePicker" o-- "material::time_picker::TimePickerEntryMode"
"material::time_picker::_TimePicker" o-- "material::time::TimeOfDay"
"material::time_picker::_TimePicker" o-- "foundation::basic_types::void Function(TimeOfDay)"
"material::time_picker::_TimePicker" o-- "widgets::media_query::Orientation"
"material::time_picker::_TimePicker" o-- "material::time_picker::void Function(TimePickerEntryMode)"
"widgets::framework::StatefulWidget" <|-- "material::time_picker::_TimePicker"

class "material::time_picker::_TimePickerState" {
  -Timer? _vibrateTimer
  +MaterialLocalizations localizations
  -dynamic _hourMinuteMode
  -dynamic _lastModeAnnounced
  -RestorableBoolN _autofocusHour
  -RestorableBoolN _autofocusMinute
  -RestorableBool _announcedInitialTime
  -dynamic _orientation
  -RestorableTimeOfDay _selectedTime
  +RestorableTimeOfDay selectedTime
  +String? restorationId
  +void dispose()
  +void didChangeDependencies()
  +void didUpdateWidget()
  -void _setEntryMode()
  +void restoreState()
  -void _vibrate()
  -void _handleHourMinuteModeChanged()
  -void _handleEntryModeToggle()
  -void _announceModeOnce()
  -void _announceInitialTimeOnce()
  -void _handleTimeChanged()
  -void _handleHourDoubleTapped()
  -void _handleMinuteDoubleTapped()
  -void _handleHourSelected()
  +Widget build()
}

"material::time_picker::_TimePickerState" o-- "dart::async::Timer"
"material::time_picker::_TimePickerState" o-- "material::material_localizations::MaterialLocalizations"
"material::time_picker::_TimePickerState" o-- "widgets::restoration_properties::RestorableBoolN"
"material::time_picker::_TimePickerState" o-- "widgets::restoration_properties::RestorableBool"
"material::time_picker::_TimePickerState" o-- "material::time::RestorableTimeOfDay"
"widgets::framework::State" <|-- "material::time_picker::_TimePickerState"
"widgets::restoration::RestorationMixin" <|-- "material::time_picker::_TimePickerState"

abstract class "material::time_picker::_TimePickerDefaults" {
  +Color backgroundColor
  +ButtonStyle cancelButtonStyle
  +ButtonStyle confirmButtonStyle
  +BorderSide dayPeriodBorderSide
  +Color dayPeriodColor
  +OutlinedBorder dayPeriodShape
  +Size dayPeriodInputSize
  +Size dayPeriodLandscapeSize
  +Size dayPeriodPortraitSize
  +Color dayPeriodTextColor
  +TextStyle dayPeriodTextStyle
  +Color dialBackgroundColor
  +Color dialHandColor
  +Size dialSize
  +double handWidth
  +double dotRadius
  +double centerRadius
  +Color dialTextColor
  +TextStyle dialTextStyle
  +double elevation
  +Color entryModeIconColor
  +TextStyle helpTextStyle
  +Color hourMinuteColor
  +ShapeBorder hourMinuteShape
  +Size hourMinuteSize
  +Size hourMinuteSize24Hour
  +Size hourMinuteInputSize
  +Size hourMinuteInputSize24Hour
  +Color hourMinuteTextColor
  +TextStyle hourMinuteTextStyle
  +InputDecorationTheme inputDecorationTheme
  +EdgeInsetsGeometry padding
  +ShapeBorder shape
}

"material::time_picker::_TimePickerDefaults" o-- "dart::ui::Color"
"material::time_picker::_TimePickerDefaults" o-- "material::button_style::ButtonStyle"
"material::time_picker::_TimePickerDefaults" o-- "painting::borders::BorderSide"
"material::time_picker::_TimePickerDefaults" o-- "painting::borders::OutlinedBorder"
"material::time_picker::_TimePickerDefaults" o-- "dart::ui::Size"
"material::time_picker::_TimePickerDefaults" o-- "painting::text_style::TextStyle"
"material::time_picker::_TimePickerDefaults" o-- "painting::borders::ShapeBorder"
"material::time_picker::_TimePickerDefaults" o-- "material::input_decorator::InputDecorationTheme"
"material::time_picker::_TimePickerDefaults" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::time_picker_theme::TimePickerThemeData" <|-- "material::time_picker::_TimePickerDefaults"

class "material::time_picker::_TimePickerDefaultsM2" {
  +BuildContext context
  -ColorScheme _colors
  -TextTheme _textTheme
  {static} -OutlinedBorder _kDefaultShape
  +Color backgroundColor
  +ButtonStyle cancelButtonStyle
  +ButtonStyle confirmButtonStyle
  +BorderSide dayPeriodBorderSide
  +Color dayPeriodColor
  +OutlinedBorder dayPeriodShape
  +Size dayPeriodPortraitSize
  +Size dayPeriodLandscapeSize
  +Size dayPeriodInputSize
  +Color dayPeriodTextColor
  +TextStyle dayPeriodTextStyle
  +Color dialBackgroundColor
  +Color dialHandColor
  +Size dialSize
  +double handWidth
  +double dotRadius
  +double centerRadius
  +Color dialTextColor
  +TextStyle dialTextStyle
  +double elevation
  +Color entryModeIconColor
  +TextStyle helpTextStyle
  +Color hourMinuteColor
  +ShapeBorder hourMinuteShape
  +Size hourMinuteSize
  +Size hourMinuteSize24Hour
  +Size hourMinuteInputSize
  +Size hourMinuteInputSize24Hour
  +Color hourMinuteTextColor
  +TextStyle hourMinuteTextStyle
  -Color _hourMinuteInputColor
  +InputDecorationTheme inputDecorationTheme
  +EdgeInsetsGeometry padding
  +ShapeBorder shape
}

"material::time_picker::_TimePickerDefaultsM2" o-- "widgets::framework::BuildContext"
"material::time_picker::_TimePickerDefaultsM2" o-- "material::color_scheme::ColorScheme"
"material::time_picker::_TimePickerDefaultsM2" o-- "material::text_theme::TextTheme"
"material::time_picker::_TimePickerDefaultsM2" o-- "painting::borders::OutlinedBorder"
"material::time_picker::_TimePickerDefaultsM2" o-- "dart::ui::Color"
"material::time_picker::_TimePickerDefaultsM2" o-- "material::button_style::ButtonStyle"
"material::time_picker::_TimePickerDefaultsM2" o-- "painting::borders::BorderSide"
"material::time_picker::_TimePickerDefaultsM2" o-- "dart::ui::Size"
"material::time_picker::_TimePickerDefaultsM2" o-- "painting::text_style::TextStyle"
"material::time_picker::_TimePickerDefaultsM2" o-- "painting::borders::ShapeBorder"
"material::time_picker::_TimePickerDefaultsM2" o-- "material::input_decorator::InputDecorationTheme"
"material::time_picker::_TimePickerDefaultsM2" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::time_picker::_TimePickerDefaults" <|-- "material::time_picker::_TimePickerDefaultsM2"

class "material::time_picker::_TimePickerDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  -TextTheme _textTheme
  +Color backgroundColor
  +ButtonStyle cancelButtonStyle
  +ButtonStyle confirmButtonStyle
  +BorderSide dayPeriodBorderSide
  +Color dayPeriodColor
  +OutlinedBorder dayPeriodShape
  +Size dayPeriodPortraitSize
  +Size dayPeriodLandscapeSize
  +Size dayPeriodInputSize
  +Color dayPeriodTextColor
  +TextStyle dayPeriodTextStyle
  +Color dialBackgroundColor
  +Color dialHandColor
  +Size dialSize
  +double handWidth
  +double dotRadius
  +double centerRadius
  +Color dialTextColor
  +TextStyle dialTextStyle
  +double elevation
  +Color entryModeIconColor
  +TextStyle helpTextStyle
  +EdgeInsetsGeometry padding
  +Color hourMinuteColor
  +ShapeBorder hourMinuteShape
  +Size hourMinuteSize
  +Size hourMinuteSize24Hour
  +Size hourMinuteInputSize
  +Size hourMinuteInputSize24Hour
  +Color hourMinuteTextColor
  -MaterialStateProperty<Color> _hourMinuteTextColor
  +TextStyle hourMinuteTextStyle
  +InputDecorationTheme inputDecorationTheme
  +ShapeBorder shape
}

"material::time_picker::_TimePickerDefaultsM3" o-- "widgets::framework::BuildContext"
"material::time_picker::_TimePickerDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::time_picker::_TimePickerDefaultsM3" o-- "material::text_theme::TextTheme"
"material::time_picker::_TimePickerDefaultsM3" o-- "dart::ui::Color"
"material::time_picker::_TimePickerDefaultsM3" o-- "material::button_style::ButtonStyle"
"material::time_picker::_TimePickerDefaultsM3" o-- "painting::borders::BorderSide"
"material::time_picker::_TimePickerDefaultsM3" o-- "painting::borders::OutlinedBorder"
"material::time_picker::_TimePickerDefaultsM3" o-- "dart::ui::Size"
"material::time_picker::_TimePickerDefaultsM3" o-- "painting::text_style::TextStyle"
"material::time_picker::_TimePickerDefaultsM3" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::time_picker::_TimePickerDefaultsM3" o-- "painting::borders::ShapeBorder"
"material::time_picker::_TimePickerDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::time_picker::_TimePickerDefaultsM3" o-- "material::input_decorator::InputDecorationTheme"
"material::time_picker::_TimePickerDefaults" <|-- "material::time_picker::_TimePickerDefaultsM3"

class "material::time_picker::TimePickerEntryMode" {
  +int index
  {static} +List<TimePickerEntryMode> values
  {static} +TimePickerEntryMode dial
  {static} +TimePickerEntryMode input
  {static} +TimePickerEntryMode dialOnly
  {static} +TimePickerEntryMode inputOnly
}

"material::time_picker::TimePickerEntryMode" o-- "material::time_picker::TimePickerEntryMode"
"dart::core::Enum" <|-- "material::time_picker::TimePickerEntryMode"

class "material::time_picker::_HourMinuteMode" {
  +int index
  {static} +List<_HourMinuteMode> values
  {static} +_HourMinuteMode hour
  {static} +_HourMinuteMode minute
}

"material::time_picker::_HourMinuteMode" o-- "material::time_picker::_HourMinuteMode"
"dart::core::Enum" <|-- "material::time_picker::_HourMinuteMode"

class "material::time_picker::_TimePickerAspect" {
  +int index
  {static} +List<_TimePickerAspect> values
  {static} +_TimePickerAspect use24HourFormat
  {static} +_TimePickerAspect useMaterial3
  {static} +_TimePickerAspect entryMode
  {static} +_TimePickerAspect hourMinuteMode
  {static} +_TimePickerAspect onHourMinuteModeChanged
  {static} +_TimePickerAspect onHourDoubleTapped
  {static} +_TimePickerAspect onMinuteDoubleTapped
  {static} +_TimePickerAspect hourDialType
  {static} +_TimePickerAspect selectedTime
  {static} +_TimePickerAspect onSelectedTimeChanged
  {static} +_TimePickerAspect orientation
  {static} +_TimePickerAspect theme
  {static} +_TimePickerAspect defaultTheme
}

"material::time_picker::_TimePickerAspect" o-- "material::time_picker::_TimePickerAspect"
"dart::core::Enum" <|-- "material::time_picker::_TimePickerAspect"

class "material::time_picker::_HourDialType" {
  +int index
  {static} +List<_HourDialType> values
  {static} +_HourDialType twentyFourHour
  {static} +_HourDialType twentyFourHourDoubleRing
  {static} +_HourDialType twelveHour
}

"material::time_picker::_HourDialType" o-- "material::time_picker::_HourDialType"
"dart::core::Enum" <|-- "material::time_picker::_HourDialType"

class "material::radio::Radio" {
  +T value
  +T? groupValue
  +void Function(T?)? onChanged
  +MouseCursor? mouseCursor
  +bool toggleable
  +Color? activeColor
  +MaterialStateProperty<Color?>? fillColor
  +MaterialTapTargetSize? materialTapTargetSize
  +VisualDensity? visualDensity
  +Color? focusColor
  +Color? hoverColor
  +MaterialStateProperty<Color?>? overlayColor
  +double? splashRadius
  +FocusNode? focusNode
  +bool autofocus
  +bool useCupertinoCheckmarkStyle
  -_RadioType _radioType
  -bool _selected
  +State<Radio<T>> createState()
}

"material::radio::Radio" o-- "foundation::basic_types::void Function(T)"
"material::radio::Radio" o-- "services::mouse_cursor::MouseCursor"
"material::radio::Radio" o-- "dart::ui::Color"
"material::radio::Radio" o-- "material::material_state::MaterialStateProperty<Color>"
"material::radio::Radio" o-- "material::theme_data::MaterialTapTargetSize"
"material::radio::Radio" o-- "material::theme_data::VisualDensity"
"material::radio::Radio" o-- "widgets::focus_manager::FocusNode"
"material::radio::Radio" o-- "material::radio::_RadioType"
"widgets::framework::StatefulWidget" <|-- "material::radio::Radio"

class "material::radio::_RadioState" {
  -_RadioPainter _painter
  +void Function(bool?)? onChanged
  +bool tristate
  +bool? value
  -MaterialStateProperty<Color?> _widgetFillColor
  -void _handleChanged()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"material::radio::_RadioState" o-- "material::radio::_RadioPainter"
"material::radio::_RadioState" o-- "foundation::basic_types::void Function(bool)"
"material::radio::_RadioState" o-- "material::material_state::MaterialStateProperty<Color>"
"widgets::framework::State" <|-- "material::radio::_RadioState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::radio::_RadioState"
"material::toggleable::ToggleableStateMixin" <|-- "material::radio::_RadioState"

class "material::radio::_RadioPainter" {
  +void paint()
}

"material::toggleable::ToggleablePainter" <|-- "material::radio::_RadioPainter"

class "material::radio::_RadioDefaultsM2" {
  +BuildContext context
  -ThemeData _theme
  -ColorScheme _colors
  +MaterialStateProperty<Color> fillColor
  +MaterialStateProperty<Color> overlayColor
  +MaterialTapTargetSize materialTapTargetSize
  +VisualDensity visualDensity
}

"material::radio::_RadioDefaultsM2" o-- "widgets::framework::BuildContext"
"material::radio::_RadioDefaultsM2" o-- "material::theme_data::ThemeData"
"material::radio::_RadioDefaultsM2" o-- "material::color_scheme::ColorScheme"
"material::radio::_RadioDefaultsM2" o-- "material::material_state::MaterialStateProperty<Color>"
"material::radio::_RadioDefaultsM2" o-- "material::theme_data::MaterialTapTargetSize"
"material::radio::_RadioDefaultsM2" o-- "material::theme_data::VisualDensity"
"material::radio_theme::RadioThemeData" <|-- "material::radio::_RadioDefaultsM2"

class "material::radio::_RadioDefaultsM3" {
  +BuildContext context
  -ThemeData _theme
  -ColorScheme _colors
  +MaterialStateProperty<Color> fillColor
  +MaterialStateProperty<Color> overlayColor
  +MaterialTapTargetSize materialTapTargetSize
  +VisualDensity visualDensity
}

"material::radio::_RadioDefaultsM3" o-- "widgets::framework::BuildContext"
"material::radio::_RadioDefaultsM3" o-- "material::theme_data::ThemeData"
"material::radio::_RadioDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::radio::_RadioDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::radio::_RadioDefaultsM3" o-- "material::theme_data::MaterialTapTargetSize"
"material::radio::_RadioDefaultsM3" o-- "material::theme_data::VisualDensity"
"material::radio_theme::RadioThemeData" <|-- "material::radio::_RadioDefaultsM3"

class "material::radio::_RadioType" {
  +int index
  {static} +List<_RadioType> values
  {static} +_RadioType material
  {static} +_RadioType adaptive
}

"material::radio::_RadioType" o-- "material::radio::_RadioType"
"dart::core::Enum" <|-- "material::radio::_RadioType"

class "material::stepper::ControlsDetails" {
  +int currentStep
  +int stepIndex
  +void Function()? onStepContinue
  +void Function()? onStepCancel
  +bool isActive
}

"material::stepper::ControlsDetails" o-- "dart::ui::void Function()"

class "material::stepper::Step" {
  +Widget title
  +Widget? subtitle
  +Widget content
  +StepState state
  +bool isActive
  +Widget? label
}

"material::stepper::Step" o-- "widgets::framework::Widget"
"material::stepper::Step" o-- "material::stepper::StepState"

class "material::stepper::Stepper" {
  +List<Step> steps
  +ScrollPhysics? physics
  +ScrollController? controller
  +StepperType type
  +int currentStep
  +void Function(int)? onStepTapped
  +void Function()? onStepContinue
  +void Function()? onStepCancel
  +Widget Function(BuildContext, ControlsDetails)? controlsBuilder
  +double? elevation
  +EdgeInsetsGeometry? margin
  +MaterialStateProperty<Color>? connectorColor
  +double? connectorThickness
  +Widget? Function(int, StepState)? stepIconBuilder
  +State<Stepper> createState()
}

"material::stepper::Stepper" o-- "widgets::scroll_physics::ScrollPhysics"
"material::stepper::Stepper" o-- "widgets::scroll_controller::ScrollController"
"material::stepper::Stepper" o-- "material::stepper::StepperType"
"material::stepper::Stepper" o-- "foundation::basic_types::void Function(int)"
"material::stepper::Stepper" o-- "dart::ui::void Function()"
"material::stepper::Stepper" o-- "material::stepper::Widget Function(BuildContext, ControlsDetails)"
"material::stepper::Stepper" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::stepper::Stepper" o-- "material::material_state::MaterialStateProperty<Color>"
"material::stepper::Stepper" o-- "material::stepper::Widget Function(int, StepState)"
"widgets::framework::StatefulWidget" <|-- "material::stepper::Stepper"

class "material::stepper::_StepperState" {
  -List<GlobalKey<State<StatefulWidget>>> _keys
  -Map<int, StepState> _oldStates
  +void initState()
  +void didUpdateWidget()
  -bool _isFirst()
  -bool _isLast()
  -bool _isCurrent()
  -bool _isDark()
  -bool _isLabel()
  -Color _connectorColor()
  -Widget _buildLine()
  -Widget _buildCircleChild()
  -Color _circleColor()
  -Widget _buildCircle()
  -Widget _buildTriangle()
  -Widget _buildIcon()
  -Widget _buildVerticalControls()
  -TextStyle _titleStyle()
  -TextStyle _subtitleStyle()
  -TextStyle _labelStyle()
  -Widget _buildHeaderText()
  -Widget _buildLabelText()
  -Widget _buildVerticalHeader()
  -Widget _buildVerticalBody()
  -Widget _buildVertical()
  -Widget _buildHorizontal()
  +Widget build()
}

"widgets::framework::State" <|-- "material::stepper::_StepperState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::stepper::_StepperState"

class "material::stepper::_TrianglePainter" {
  +Color color
  +bool hitTest()
  +bool shouldRepaint()
  +void paint()
}

"material::stepper::_TrianglePainter" o-- "dart::ui::Color"
"rendering::custom_paint::CustomPainter" <|-- "material::stepper::_TrianglePainter"

class "material::stepper::StepState" {
  +int index
  {static} +List<StepState> values
  {static} +StepState indexed
  {static} +StepState editing
  {static} +StepState complete
  {static} +StepState disabled
  {static} +StepState error
}

"material::stepper::StepState" o-- "material::stepper::StepState"
"dart::core::Enum" <|-- "material::stepper::StepState"

class "material::stepper::StepperType" {
  +int index
  {static} +List<StepperType> values
  {static} +StepperType vertical
  {static} +StepperType horizontal
}

"material::stepper::StepperType" o-- "material::stepper::StepperType"
"dart::core::Enum" <|-- "material::stepper::StepperType"

class "material::checkbox_list_tile::CheckboxListTile" {
  +bool? value
  +void Function(bool?)? onChanged
  +MouseCursor? mouseCursor
  +Color? activeColor
  +MaterialStateProperty<Color?>? fillColor
  +Color? checkColor
  +Color? hoverColor
  +MaterialStateProperty<Color?>? overlayColor
  +double? splashRadius
  +MaterialTapTargetSize? materialTapTargetSize
  +VisualDensity? visualDensity
  +FocusNode? focusNode
  +bool autofocus
  +ShapeBorder? shape
  +BorderSide? side
  +bool isError
  +Color? tileColor
  +Widget? title
  +Widget? subtitle
  +Widget? secondary
  +bool isThreeLine
  +bool? dense
  +bool selected
  +ListTileControlAffinity controlAffinity
  +EdgeInsetsGeometry? contentPadding
  +bool tristate
  +OutlinedBorder? checkboxShape
  +Color? selectedTileColor
  +void Function(bool)? onFocusChange
  +bool? enableFeedback
  +bool? enabled
  +String? checkboxSemanticLabel
  -_CheckboxType _checkboxType
  -void _handleValueChange()
  +Widget build()
}

"material::checkbox_list_tile::CheckboxListTile" o-- "foundation::basic_types::void Function(bool)"
"material::checkbox_list_tile::CheckboxListTile" o-- "services::mouse_cursor::MouseCursor"
"material::checkbox_list_tile::CheckboxListTile" o-- "dart::ui::Color"
"material::checkbox_list_tile::CheckboxListTile" o-- "material::material_state::MaterialStateProperty<Color>"
"material::checkbox_list_tile::CheckboxListTile" o-- "material::theme_data::MaterialTapTargetSize"
"material::checkbox_list_tile::CheckboxListTile" o-- "material::theme_data::VisualDensity"
"material::checkbox_list_tile::CheckboxListTile" o-- "widgets::focus_manager::FocusNode"
"material::checkbox_list_tile::CheckboxListTile" o-- "painting::borders::ShapeBorder"
"material::checkbox_list_tile::CheckboxListTile" o-- "painting::borders::BorderSide"
"material::checkbox_list_tile::CheckboxListTile" o-- "widgets::framework::Widget"
"material::checkbox_list_tile::CheckboxListTile" o-- "material::list_tile::ListTileControlAffinity"
"material::checkbox_list_tile::CheckboxListTile" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::checkbox_list_tile::CheckboxListTile" o-- "painting::borders::OutlinedBorder"
"material::checkbox_list_tile::CheckboxListTile" o-- "material::checkbox_list_tile::_CheckboxType"
"widgets::framework::StatelessWidget" <|-- "material::checkbox_list_tile::CheckboxListTile"

class "material::checkbox_list_tile::_CheckboxType" {
  +int index
  {static} +List<_CheckboxType> values
  {static} +_CheckboxType material
  {static} +_CheckboxType adaptive
}

"material::checkbox_list_tile::_CheckboxType" o-- "material::checkbox_list_tile::_CheckboxType"
"dart::core::Enum" <|-- "material::checkbox_list_tile::_CheckboxType"

class "material::radio_theme::RadioThemeData" {
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +MaterialStateProperty<Color?>? fillColor
  +MaterialStateProperty<Color?>? overlayColor
  +double? splashRadius
  +MaterialTapTargetSize? materialTapTargetSize
  +VisualDensity? visualDensity
  +int hashCode
  +RadioThemeData copyWith()
  {static} +RadioThemeData lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::radio_theme::RadioThemeData" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::radio_theme::RadioThemeData" o-- "material::material_state::MaterialStateProperty<Color>"
"material::radio_theme::RadioThemeData" o-- "material::theme_data::MaterialTapTargetSize"
"material::radio_theme::RadioThemeData" o-- "material::theme_data::VisualDensity"
"foundation::diagnostics::Diagnosticable" <|-- "material::radio_theme::RadioThemeData"

class "material::radio_theme::RadioTheme" {
  +RadioThemeData data
  {static} +RadioThemeData of()
  +bool updateShouldNotify()
}

"material::radio_theme::RadioTheme" o-- "material::radio_theme::RadioThemeData"
"widgets::framework::InheritedWidget" <|-- "material::radio_theme::RadioTheme"

class "material::tabs::Tab" {
  +String? text
  +Widget? child
  +Widget? icon
  +EdgeInsetsGeometry iconMargin
  +double? height
  +Size preferredSize
  -Widget _buildLabelText()
  +Widget build()
  +void debugFillProperties()
}

"material::tabs::Tab" o-- "widgets::framework::Widget"
"material::tabs::Tab" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::tabs::Tab" o-- "dart::ui::Size"
"widgets::framework::StatelessWidget" <|-- "material::tabs::Tab"
"widgets::preferred_size::PreferredSizeWidget" <|-- "material::tabs::Tab"

class "material::tabs::_TabStyle" {
  +TextStyle? labelStyle
  +TextStyle? unselectedLabelStyle
  +bool isSelected
  +bool isPrimary
  +Color? labelColor
  +Color? unselectedLabelColor
  +TabBarTheme defaults
  +Widget child
  -MaterialStateColor _resolveWithLabelColor()
  +Widget build()
}

"material::tabs::_TabStyle" o-- "painting::text_style::TextStyle"
"material::tabs::_TabStyle" o-- "dart::ui::Color"
"material::tabs::_TabStyle" o-- "material::tab_bar_theme::TabBarTheme"
"material::tabs::_TabStyle" o-- "widgets::framework::Widget"
"widgets::transitions::AnimatedWidget" <|-- "material::tabs::_TabStyle"

class "material::tabs::_TabLabelBarRenderer" {
  +void Function(List<double>, TextDirection, double) onPerformLayout
  +void performLayout()
}

"material::tabs::_TabLabelBarRenderer" o-- "material::tabs::void Function(List<double>, TextDirection, double)"
"rendering::flex::RenderFlex" <|-- "material::tabs::_TabLabelBarRenderer"

class "material::tabs::_TabLabelBar" {
  +void Function(List<double>, TextDirection, double) onPerformLayout
  +RenderFlex createRenderObject()
  +void updateRenderObject()
}

"material::tabs::_TabLabelBar" o-- "material::tabs::void Function(List<double>, TextDirection, double)"
"widgets::basic::Flex" <|-- "material::tabs::_TabLabelBar"

class "material::tabs::_DividerPainter" {
  +Color dividerColor
  +double dividerHeight
  +void paint()
  +bool shouldRepaint()
}

"material::tabs::_DividerPainter" o-- "dart::ui::Color"
"rendering::custom_paint::CustomPainter" <|-- "material::tabs::_DividerPainter"

class "material::tabs::_IndicatorPainter" {
  +TabController controller
  +Decoration indicator
  +TabBarIndicatorSize? indicatorSize
  +EdgeInsetsGeometry indicatorPadding
  +List<GlobalKey<State<StatefulWidget>>> tabKeys
  +List<EdgeInsetsGeometry> labelPaddings
  +Color? dividerColor
  +double? dividerHeight
  +bool showDivider
  -List<double>? _currentTabOffsets
  -TextDirection? _currentTextDirection
  -Rect? _currentRect
  -BoxPainter? _painter
  -bool _needsPaint
  +int maxTabIndex
  +void markNeedsPaint()
  +void dispose()
  +void saveTabOffsets()
  +double centerOf()
  +Rect indicatorRect()
  +void paint()
  +bool shouldRepaint()
}

"material::tabs::_IndicatorPainter" o-- "material::tab_controller::TabController"
"material::tabs::_IndicatorPainter" o-- "painting::decoration::Decoration"
"material::tabs::_IndicatorPainter" o-- "material::tabs::TabBarIndicatorSize"
"material::tabs::_IndicatorPainter" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::tabs::_IndicatorPainter" o-- "dart::ui::Color"
"material::tabs::_IndicatorPainter" o-- "dart::ui::TextDirection"
"material::tabs::_IndicatorPainter" o-- "dart::ui::Rect"
"material::tabs::_IndicatorPainter" o-- "painting::decoration::BoxPainter"
"rendering::custom_paint::CustomPainter" <|-- "material::tabs::_IndicatorPainter"

class "material::tabs::_ChangeAnimation" {
  +TabController controller
  +Animation<double> parent
  +double value
  +void removeStatusListener()
  +void removeListener()
}

"material::tabs::_ChangeAnimation" o-- "material::tab_controller::TabController"
"material::tabs::_ChangeAnimation" o-- "animation::animation::Animation<double>"
"animation::animation::Animation" <|-- "material::tabs::_ChangeAnimation"
"animation::animations::AnimationWithParentMixin" <|-- "material::tabs::_ChangeAnimation"

class "material::tabs::_DragAnimation" {
  +TabController controller
  +int index
  +Animation<double> parent
  +double value
  +void removeStatusListener()
  +void removeListener()
}

"material::tabs::_DragAnimation" o-- "material::tab_controller::TabController"
"material::tabs::_DragAnimation" o-- "animation::animation::Animation<double>"
"animation::animation::Animation" <|-- "material::tabs::_DragAnimation"
"animation::animations::AnimationWithParentMixin" <|-- "material::tabs::_DragAnimation"

class "material::tabs::_TabBarScrollPosition" {
  +_TabBarState tabBar
  -bool _viewportDimensionWasNonZero
  -bool _needsPixelsCorrection
  +bool applyContentDimensions()
  +void markNeedsPixelsCorrection()
}

"material::tabs::_TabBarScrollPosition" o-- "material::tabs::_TabBarState"
"widgets::scroll_position_with_single_context::ScrollPositionWithSingleContext" <|-- "material::tabs::_TabBarScrollPosition"

class "material::tabs::_TabBarScrollController" {
  +_TabBarState tabBar
  +ScrollPosition createScrollPosition()
}

"material::tabs::_TabBarScrollController" o-- "material::tabs::_TabBarState"
"widgets::scroll_controller::ScrollController" <|-- "material::tabs::_TabBarScrollController"

class "material::tabs::TabBar" {
  +List<Widget> tabs
  +TabController? controller
  +bool isScrollable
  +EdgeInsetsGeometry? padding
  +Color? indicatorColor
  +double indicatorWeight
  +EdgeInsetsGeometry indicatorPadding
  +Decoration? indicator
  +bool automaticIndicatorColorAdjustment
  +TabBarIndicatorSize? indicatorSize
  +Color? dividerColor
  +double? dividerHeight
  +Color? labelColor
  +Color? unselectedLabelColor
  +TextStyle? labelStyle
  +TextStyle? unselectedLabelStyle
  +EdgeInsetsGeometry? labelPadding
  +MaterialStateProperty<Color?>? overlayColor
  +DragStartBehavior dragStartBehavior
  +MouseCursor? mouseCursor
  +bool? enableFeedback
  +void Function(int)? onTap
  +ScrollPhysics? physics
  +InteractiveInkFeatureFactory? splashFactory
  +BorderRadius? splashBorderRadius
  +TabAlignment? tabAlignment
  -bool _isPrimary
  +Size preferredSize
  +bool tabHasTextAndIcon
  +State<TabBar> createState()
}

"material::tabs::TabBar" o-- "material::tab_controller::TabController"
"material::tabs::TabBar" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::tabs::TabBar" o-- "dart::ui::Color"
"material::tabs::TabBar" o-- "painting::decoration::Decoration"
"material::tabs::TabBar" o-- "material::tabs::TabBarIndicatorSize"
"material::tabs::TabBar" o-- "painting::text_style::TextStyle"
"material::tabs::TabBar" o-- "material::material_state::MaterialStateProperty<Color>"
"material::tabs::TabBar" o-- "gestures::recognizer::DragStartBehavior"
"material::tabs::TabBar" o-- "services::mouse_cursor::MouseCursor"
"material::tabs::TabBar" o-- "foundation::basic_types::void Function(int)"
"material::tabs::TabBar" o-- "widgets::scroll_physics::ScrollPhysics"
"material::tabs::TabBar" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::tabs::TabBar" o-- "painting::border_radius::BorderRadius"
"material::tabs::TabBar" o-- "material::tabs::TabAlignment"
"material::tabs::TabBar" o-- "dart::ui::Size"
"widgets::framework::StatefulWidget" <|-- "material::tabs::TabBar"
"widgets::preferred_size::PreferredSizeWidget" <|-- "material::tabs::TabBar"

class "material::tabs::_TabBarState" {
  -ScrollController? _scrollController
  -TabController? _controller
  -_IndicatorPainter? _indicatorPainter
  -int? _currentIndex
  -double _tabStripWidth
  -List<GlobalKey<State<StatefulWidget>>> _tabKeys
  -List<EdgeInsetsGeometry> _labelPaddings
  -bool _debugHasScheduledValidTabsCountCheck
  -TabBarTheme _defaults
  -bool _controllerIsValid
  +int maxTabIndex
  +void initState()
  -Decoration _getIndicator()
  -void _updateTabController()
  -void _initIndicatorPainter()
  +void didChangeDependencies()
  +void didUpdateWidget()
  +void dispose()
  -double _tabScrollOffset()
  -double _tabCenteredScrollOffset()
  -double _initialScrollOffset()
  -void _scrollToCurrentIndex()
  -void _scrollToControllerValue()
  -void _handleTabControllerAnimationTick()
  -void _handleTabControllerTick()
  -void _saveTabOffsets()
  -void _handleTap()
  -Widget _buildStyledTab()
  -bool _debugScheduleCheckHasValidTabsCount()
  -bool _debugTabAlignmentIsValid()
  +Widget build()
}

"material::tabs::_TabBarState" o-- "widgets::scroll_controller::ScrollController"
"material::tabs::_TabBarState" o-- "material::tab_controller::TabController"
"material::tabs::_TabBarState" o-- "material::tabs::_IndicatorPainter"
"material::tabs::_TabBarState" o-- "material::tab_bar_theme::TabBarTheme"
"widgets::framework::State" <|-- "material::tabs::_TabBarState"

class "material::tabs::TabBarView" {
  +TabController? controller
  +List<Widget> children
  +ScrollPhysics? physics
  +DragStartBehavior dragStartBehavior
  +double viewportFraction
  +Clip clipBehavior
  +State<TabBarView> createState()
}

"material::tabs::TabBarView" o-- "material::tab_controller::TabController"
"material::tabs::TabBarView" o-- "widgets::scroll_physics::ScrollPhysics"
"material::tabs::TabBarView" o-- "gestures::recognizer::DragStartBehavior"
"material::tabs::TabBarView" o-- "dart::ui::Clip"
"widgets::framework::StatefulWidget" <|-- "material::tabs::TabBarView"

class "material::tabs::_TabBarViewState" {
  -TabController? _controller
  -PageController? _pageController
  -List<Widget> _childrenWithKey
  -int? _currentIndex
  -int _warpUnderwayCount
  -int _scrollUnderwayCount
  -bool _debugHasScheduledValidChildrenCountCheck
  -bool _controllerIsValid
  -void _updateTabController()
  -void _jumpToPage()
  -Future<void> _animateToPage()
  +void initState()
  +void didChangeDependencies()
  +void didUpdateWidget()
  +void dispose()
  -void _updateChildren()
  -void _handleTabControllerAnimationTick()
  -void _warpToCurrentIndex()
  -Future<void> _warpToAdjacentTab()
  -Future<void> _warpToNonAdjacentTab()
  -void _syncControllerOffset()
  -bool _handleScrollNotification()
  -bool _debugScheduleCheckHasValidChildrenCount()
  +Widget build()
}

"material::tabs::_TabBarViewState" o-- "material::tab_controller::TabController"
"material::tabs::_TabBarViewState" o-- "widgets::page_view::PageController"
"widgets::framework::State" <|-- "material::tabs::_TabBarViewState"

class "material::tabs::TabPageSelectorIndicator" {
  +Color backgroundColor
  +Color borderColor
  +double size
  +BorderStyle borderStyle
  +Widget build()
}

"material::tabs::TabPageSelectorIndicator" o-- "dart::ui::Color"
"material::tabs::TabPageSelectorIndicator" o-- "painting::borders::BorderStyle"
"widgets::framework::StatelessWidget" <|-- "material::tabs::TabPageSelectorIndicator"

class "material::tabs::TabPageSelector" {
  +TabController? controller
  +double indicatorSize
  +Color? color
  +Color? selectedColor
  +BorderStyle? borderStyle
  -Widget _buildTabIndicator()
  +Widget build()
}

"material::tabs::TabPageSelector" o-- "material::tab_controller::TabController"
"material::tabs::TabPageSelector" o-- "dart::ui::Color"
"material::tabs::TabPageSelector" o-- "painting::borders::BorderStyle"
"widgets::framework::StatelessWidget" <|-- "material::tabs::TabPageSelector"

class "material::tabs::_TabsDefaultsM2" {
  +BuildContext context
  +bool isScrollable
  +Color? indicatorColor
  +Color? labelColor
  +TextStyle? labelStyle
  +TextStyle? unselectedLabelStyle
  +InteractiveInkFeatureFactory? splashFactory
  +TabAlignment? tabAlignment
}

"material::tabs::_TabsDefaultsM2" o-- "widgets::framework::BuildContext"
"material::tabs::_TabsDefaultsM2" o-- "dart::ui::Color"
"material::tabs::_TabsDefaultsM2" o-- "painting::text_style::TextStyle"
"material::tabs::_TabsDefaultsM2" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::tabs::_TabsDefaultsM2" o-- "material::tabs::TabAlignment"
"material::tab_bar_theme::TabBarTheme" <|-- "material::tabs::_TabsDefaultsM2"

class "material::tabs::_TabsPrimaryDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  -TextTheme _textTheme
  +bool isScrollable
  {static} +double indicatorWeight
  +Color? dividerColor
  +double? dividerHeight
  +Color? indicatorColor
  +Color? labelColor
  +TextStyle? labelStyle
  +Color? unselectedLabelColor
  +TextStyle? unselectedLabelStyle
  +MaterialStateProperty<Color?> overlayColor
  +InteractiveInkFeatureFactory? splashFactory
  +TabAlignment? tabAlignment
}

"material::tabs::_TabsPrimaryDefaultsM3" o-- "widgets::framework::BuildContext"
"material::tabs::_TabsPrimaryDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::tabs::_TabsPrimaryDefaultsM3" o-- "material::text_theme::TextTheme"
"material::tabs::_TabsPrimaryDefaultsM3" o-- "dart::ui::Color"
"material::tabs::_TabsPrimaryDefaultsM3" o-- "painting::text_style::TextStyle"
"material::tabs::_TabsPrimaryDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::tabs::_TabsPrimaryDefaultsM3" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::tabs::_TabsPrimaryDefaultsM3" o-- "material::tabs::TabAlignment"
"material::tab_bar_theme::TabBarTheme" <|-- "material::tabs::_TabsPrimaryDefaultsM3"

class "material::tabs::_TabsSecondaryDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  -TextTheme _textTheme
  +bool isScrollable
  +Color? dividerColor
  +double? dividerHeight
  +Color? indicatorColor
  +Color? labelColor
  +TextStyle? labelStyle
  +Color? unselectedLabelColor
  +TextStyle? unselectedLabelStyle
  +MaterialStateProperty<Color?> overlayColor
  +InteractiveInkFeatureFactory? splashFactory
  +TabAlignment? tabAlignment
}

"material::tabs::_TabsSecondaryDefaultsM3" o-- "widgets::framework::BuildContext"
"material::tabs::_TabsSecondaryDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::tabs::_TabsSecondaryDefaultsM3" o-- "material::text_theme::TextTheme"
"material::tabs::_TabsSecondaryDefaultsM3" o-- "dart::ui::Color"
"material::tabs::_TabsSecondaryDefaultsM3" o-- "painting::text_style::TextStyle"
"material::tabs::_TabsSecondaryDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::tabs::_TabsSecondaryDefaultsM3" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::tabs::_TabsSecondaryDefaultsM3" o-- "material::tabs::TabAlignment"
"material::tab_bar_theme::TabBarTheme" <|-- "material::tabs::_TabsSecondaryDefaultsM3"

class "material::tabs::TabBarIndicatorSize" {
  +int index
  {static} +List<TabBarIndicatorSize> values
  {static} +TabBarIndicatorSize tab
  {static} +TabBarIndicatorSize label
}

"material::tabs::TabBarIndicatorSize" o-- "material::tabs::TabBarIndicatorSize"
"dart::core::Enum" <|-- "material::tabs::TabBarIndicatorSize"

class "material::tabs::TabAlignment" {
  +int index
  {static} +List<TabAlignment> values
  {static} +TabAlignment start
  {static} +TabAlignment startOffset
  {static} +TabAlignment fill
  {static} +TabAlignment center
}

"material::tabs::TabAlignment" o-- "material::tabs::TabAlignment"
"dart::core::Enum" <|-- "material::tabs::TabAlignment"

class "material::date_picker::DatePickerDialog" {
  +DateTime? initialDate
  +DateTime firstDate
  +DateTime lastDate
  +DateTime currentDate
  +DatePickerEntryMode initialEntryMode
  +bool Function(DateTime)? selectableDayPredicate
  +String? cancelText
  +String? confirmText
  +String? helpText
  +DatePickerMode initialCalendarMode
  +String? errorFormatText
  +String? errorInvalidText
  +String? fieldHintText
  +String? fieldLabelText
  +TextInputType? keyboardType
  +String? restorationId
  +void Function(DatePickerEntryMode)? onDatePickerModeChange
  +Icon? switchToInputEntryModeIcon
  +Icon? switchToCalendarEntryModeIcon
  +State<DatePickerDialog> createState()
}

"material::date_picker::DatePickerDialog" o-- "material::date::DatePickerEntryMode"
"material::date_picker::DatePickerDialog" o-- "material::date::bool Function(DateTime)"
"material::date_picker::DatePickerDialog" o-- "material::date::DatePickerMode"
"material::date_picker::DatePickerDialog" o-- "services::text_input::TextInputType"
"material::date_picker::DatePickerDialog" o-- "foundation::basic_types::void Function(DatePickerEntryMode)"
"material::date_picker::DatePickerDialog" o-- "widgets::icon::Icon"
"widgets::framework::StatefulWidget" <|-- "material::date_picker::DatePickerDialog"

class "material::date_picker::_DatePickerDialogState" {
  -RestorableDateTimeN _selectedDate
  -_RestorableDatePickerEntryMode _entryMode
  -_RestorableAutovalidateMode _autovalidateMode
  -GlobalKey<State<StatefulWidget>> _calendarPickerKey
  -GlobalKey<FormState> _formKey
  {static} -Map<ShortcutActivator, Intent> _formShortcutMap
  +String? restorationId
  +void dispose()
  +void restoreState()
  -void _handleOk()
  -void _handleCancel()
  -void _handleOnDatePickerModeChange()
  -void _handleEntryModeToggle()
  -void _handleDateChanged()
  -Size _dialogSize()
  +Widget build()
}

"material::date_picker::_DatePickerDialogState" o-- "widgets::restoration_properties::RestorableDateTimeN"
"material::date_picker::_DatePickerDialogState" o-- "material::date_picker::_RestorableDatePickerEntryMode"
"material::date_picker::_DatePickerDialogState" o-- "material::date_picker::_RestorableAutovalidateMode"
"material::date_picker::_DatePickerDialogState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"material::date_picker::_DatePickerDialogState" o-- "widgets::framework::GlobalKey<FormState>"
"widgets::framework::State" <|-- "material::date_picker::_DatePickerDialogState"
"widgets::restoration::RestorationMixin" <|-- "material::date_picker::_DatePickerDialogState"

class "material::date_picker::_RestorableDatePickerEntryMode" {
  -DatePickerEntryMode _defaultValue
  +DatePickerEntryMode createDefaultValue()
  +void didUpdateValue()
  +DatePickerEntryMode fromPrimitives()
  +Object? toPrimitives()
}

"material::date_picker::_RestorableDatePickerEntryMode" o-- "material::date::DatePickerEntryMode"
"widgets::restoration_properties::RestorableValue" <|-- "material::date_picker::_RestorableDatePickerEntryMode"

class "material::date_picker::_RestorableAutovalidateMode" {
  -AutovalidateMode _defaultValue
  +AutovalidateMode createDefaultValue()
  +void didUpdateValue()
  +AutovalidateMode fromPrimitives()
  +Object? toPrimitives()
}

"material::date_picker::_RestorableAutovalidateMode" o-- "widgets::form::AutovalidateMode"
"widgets::restoration_properties::RestorableValue" <|-- "material::date_picker::_RestorableAutovalidateMode"

class "material::date_picker::_DatePickerHeader" {
  {static} -double _datePickerHeaderLandscapeWidth
  {static} -double _datePickerHeaderPortraitHeight
  {static} -double _headerPaddingLandscape
  +String helpText
  +String titleText
  +String? titleSemanticsLabel
  +TextStyle? titleStyle
  +Orientation orientation
  +bool isShort
  +Widget? entryModeButton
  +Widget build()
}

"material::date_picker::_DatePickerHeader" o-- "painting::text_style::TextStyle"
"material::date_picker::_DatePickerHeader" o-- "widgets::media_query::Orientation"
"material::date_picker::_DatePickerHeader" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::date_picker::_DatePickerHeader"

class "material::date_picker::DateRangePickerDialog" {
  +DateTimeRange? initialDateRange
  +DateTime firstDate
  +DateTime lastDate
  +DateTime? currentDate
  +DatePickerEntryMode initialEntryMode
  +String? cancelText
  +String? confirmText
  +String? saveText
  +String? helpText
  +String? errorInvalidRangeText
  +String? errorFormatText
  +String? errorInvalidText
  +String? fieldStartHintText
  +String? fieldEndHintText
  +String? fieldStartLabelText
  +String? fieldEndLabelText
  +TextInputType keyboardType
  +String? restorationId
  +Icon? switchToInputEntryModeIcon
  +Icon? switchToCalendarEntryModeIcon
  +State<DateRangePickerDialog> createState()
}

"material::date_picker::DateRangePickerDialog" o-- "material::date::DateTimeRange"
"material::date_picker::DateRangePickerDialog" o-- "material::date::DatePickerEntryMode"
"material::date_picker::DateRangePickerDialog" o-- "services::text_input::TextInputType"
"material::date_picker::DateRangePickerDialog" o-- "widgets::icon::Icon"
"widgets::framework::StatefulWidget" <|-- "material::date_picker::DateRangePickerDialog"

class "material::date_picker::_DateRangePickerDialogState" {
  -_RestorableDatePickerEntryMode _entryMode
  -RestorableDateTimeN _selectedStart
  -RestorableDateTimeN _selectedEnd
  -RestorableBool _autoValidate
  -GlobalKey<State<StatefulWidget>> _calendarPickerKey
  -GlobalKey<_InputDateRangePickerState> _inputPickerKey
  +String? restorationId
  -bool _hasSelectedDateRange
  +void restoreState()
  -void _handleOk()
  -void _handleCancel()
  -void _handleEntryModeToggle()
  -void _handleStartDateChanged()
  -void _handleEndDateChanged()
  +Widget build()
}

"material::date_picker::_DateRangePickerDialogState" o-- "material::date_picker::_RestorableDatePickerEntryMode"
"material::date_picker::_DateRangePickerDialogState" o-- "widgets::restoration_properties::RestorableDateTimeN"
"material::date_picker::_DateRangePickerDialogState" o-- "widgets::restoration_properties::RestorableBool"
"material::date_picker::_DateRangePickerDialogState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"material::date_picker::_DateRangePickerDialogState" o-- "widgets::framework::GlobalKey<_InputDateRangePickerState>"
"widgets::framework::State" <|-- "material::date_picker::_DateRangePickerDialogState"
"widgets::restoration::RestorationMixin" <|-- "material::date_picker::_DateRangePickerDialogState"

class "material::date_picker::_CalendarRangePickerDialog" {
  +DateTime? selectedStartDate
  +DateTime? selectedEndDate
  +DateTime firstDate
  +DateTime lastDate
  +DateTime? currentDate
  +void Function(DateTime) onStartDateChanged
  +void Function(DateTime?) onEndDateChanged
  +void Function()? onConfirm
  +void Function()? onCancel
  +String confirmText
  +String helpText
  +Widget? entryModeButton
  +Widget build()
}

"material::date_picker::_CalendarRangePickerDialog" o-- "foundation::basic_types::void Function(DateTime)"
"material::date_picker::_CalendarRangePickerDialog" o-- "dart::ui::void Function()"
"material::date_picker::_CalendarRangePickerDialog" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::date_picker::_CalendarRangePickerDialog"

class "material::date_picker::_CalendarDateRangePicker" {
  +DateTime? initialStartDate
  +DateTime? initialEndDate
  +DateTime firstDate
  +DateTime lastDate
  +DateTime currentDate
  +void Function(DateTime)? onStartDateChanged
  +void Function(DateTime?)? onEndDateChanged
  +_CalendarDateRangePickerState createState()
}

"material::date_picker::_CalendarDateRangePicker" o-- "foundation::basic_types::void Function(DateTime)"
"widgets::framework::StatefulWidget" <|-- "material::date_picker::_CalendarDateRangePicker"

class "material::date_picker::_CalendarDateRangePickerState" {
  -GlobalKey<State<StatefulWidget>> _scrollViewKey
  -DateTime? _startDate
  -DateTime? _endDate
  -int _initialMonthIndex
  -ScrollController _controller
  -bool _showWeekBottomDivider
  -int _numberOfMonths
  +void initState()
  +void dispose()
  -void _scrollListener()
  -void _vibrate()
  -void _updateSelection()
  -Widget _buildMonthItem()
  +Widget build()
}

"material::date_picker::_CalendarDateRangePickerState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"material::date_picker::_CalendarDateRangePickerState" o-- "widgets::scroll_controller::ScrollController"
"widgets::framework::State" <|-- "material::date_picker::_CalendarDateRangePickerState"

class "material::date_picker::_CalendarKeyboardNavigator" {
  +Widget child
  +DateTime firstDate
  +DateTime lastDate
  +DateTime initialFocusedDay
  +_CalendarKeyboardNavigatorState createState()
}

"material::date_picker::_CalendarKeyboardNavigator" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "material::date_picker::_CalendarKeyboardNavigator"

class "material::date_picker::_CalendarKeyboardNavigatorState" {
  -Map<ShortcutActivator, Intent> _shortcutMap
  -Map<Type, Action<Intent>> _actionMap
  -FocusNode _dayGridFocus
  -TraversalDirection? _dayTraversalDirection
  -DateTime? _focusedDay
  {static} -Map<TraversalDirection, int> _directionOffset
  +void initState()
  +void dispose()
  -void _handleGridFocusChange()
  -void _handleGridNextFocus()
  -void _handleGridPreviousFocus()
  -void _handleDirectionFocus()
  -int _dayDirectionOffset()
  -DateTime? _nextDateInDirection()
  +Widget build()
}

"material::date_picker::_CalendarKeyboardNavigatorState" o-- "widgets::focus_manager::FocusNode"
"material::date_picker::_CalendarKeyboardNavigatorState" o-- "widgets::focus_traversal::TraversalDirection"
"widgets::framework::State" <|-- "material::date_picker::_CalendarKeyboardNavigatorState"

class "material::date_picker::_FocusedDate" {
  +DateTime? date
  +TraversalDirection? scrollDirection
  +bool updateShouldNotify()
  {static} +_FocusedDate? maybeOf()
}

"material::date_picker::_FocusedDate" o-- "widgets::focus_traversal::TraversalDirection"
"widgets::framework::InheritedWidget" <|-- "material::date_picker::_FocusedDate"

class "material::date_picker::_DayHeaders" {
  -List<Widget> _getDayHeaders()
  +Widget build()
}

"widgets::framework::StatelessWidget" <|-- "material::date_picker::_DayHeaders"

class "material::date_picker::_MonthItemGridDelegate" {
  +SliverGridLayout getLayout()
  +bool shouldRelayout()
}

"rendering::sliver_grid::SliverGridDelegate" <|-- "material::date_picker::_MonthItemGridDelegate"

class "material::date_picker::_MonthSliverGridLayout" {
  +int crossAxisCount
  +double dayChildWidth
  +double edgeChildWidth
  +bool reverseCrossAxis
  -double _rowHeight
  -double _childHeight
  +int getMinChildIndexForScrollOffset()
  +int getMaxChildIndexForScrollOffset()
  -double _getCrossAxisOffset()
  +SliverGridGeometry getGeometryForChildIndex()
  +double computeMaxScrollOffset()
}

"rendering::sliver_grid::SliverGridLayout" <|-- "material::date_picker::_MonthSliverGridLayout"

class "material::date_picker::_MonthItem" {
  +DateTime? selectedDateStart
  +DateTime? selectedDateEnd
  +DateTime currentDate
  +void Function(DateTime) onChanged
  +DateTime firstDate
  +DateTime lastDate
  +DateTime displayedMonth
  +_MonthItemState createState()
}

"material::date_picker::_MonthItem" o-- "foundation::basic_types::void Function(DateTime)"
"widgets::framework::StatefulWidget" <|-- "material::date_picker::_MonthItem"

class "material::date_picker::_MonthItemState" {
  -List<FocusNode> _dayFocusNodes
  +void initState()
  +void didChangeDependencies()
  +void dispose()
  -Color _highlightColor()
  -void _dayFocusChanged()
  -Widget _buildDayItem()
  -Widget _buildEdgeContainer()
  +Widget build()
}

"widgets::framework::State" <|-- "material::date_picker::_MonthItemState"

class "material::date_picker::_HighlightPainter" {
  +Color color
  +_HighlightPainterStyle style
  +TextDirection? textDirection
  +void paint()
  +bool shouldRepaint()
}

"material::date_picker::_HighlightPainter" o-- "dart::ui::Color"
"material::date_picker::_HighlightPainter" o-- "material::date_picker::_HighlightPainterStyle"
"material::date_picker::_HighlightPainter" o-- "dart::ui::TextDirection"
"rendering::custom_paint::CustomPainter" <|-- "material::date_picker::_HighlightPainter"

class "material::date_picker::_InputDateRangePickerDialog" {
  +DateTime? selectedStartDate
  +DateTime? selectedEndDate
  +DateTime? currentDate
  +Widget picker
  +void Function() onConfirm
  +void Function() onCancel
  +String? confirmText
  +String? cancelText
  +String? helpText
  +Widget? entryModeButton
  -String _formatDateRange()
  +Widget build()
}

"material::date_picker::_InputDateRangePickerDialog" o-- "widgets::framework::Widget"
"material::date_picker::_InputDateRangePickerDialog" o-- "dart::ui::void Function()"
"widgets::framework::StatelessWidget" <|-- "material::date_picker::_InputDateRangePickerDialog"

class "material::date_picker::_InputDateRangePicker" {
  +DateTime? initialStartDate
  +DateTime? initialEndDate
  +DateTime firstDate
  +DateTime lastDate
  +void Function(DateTime?)? onStartDateChanged
  +void Function(DateTime?)? onEndDateChanged
  +String? helpText
  +String? errorFormatText
  +String? errorInvalidText
  +String? errorInvalidRangeText
  +String? fieldStartHintText
  +String? fieldEndHintText
  +String? fieldStartLabelText
  +String? fieldEndLabelText
  +bool autofocus
  +bool autovalidate
  +TextInputType keyboardType
  +_InputDateRangePickerState createState()
}

"material::date_picker::_InputDateRangePicker" o-- "foundation::basic_types::void Function(DateTime)"
"material::date_picker::_InputDateRangePicker" o-- "services::text_input::TextInputType"
"widgets::framework::StatefulWidget" <|-- "material::date_picker::_InputDateRangePicker"

class "material::date_picker::_InputDateRangePickerState" {
  -String _startInputText
  -String _endInputText
  -DateTime? _startDate
  -DateTime? _endDate
  -TextEditingController _startController
  -TextEditingController _endController
  -String? _startErrorText
  -String? _endErrorText
  -bool _autoSelected
  +void initState()
  +void dispose()
  +void didChangeDependencies()
  +bool validate()
  -DateTime? _parseDate()
  -String? _validateDate()
  -void _updateController()
  -void _handleStartChanged()
  -void _handleEndChanged()
  +Widget build()
}

"material::date_picker::_InputDateRangePickerState" o-- "widgets::editable_text::TextEditingController"
"widgets::framework::State" <|-- "material::date_picker::_InputDateRangePickerState"

class "material::date_picker::_HighlightPainterStyle" {
  +int index
  {static} +List<_HighlightPainterStyle> values
  {static} +_HighlightPainterStyle none
  {static} +_HighlightPainterStyle highlightLeading
  {static} +_HighlightPainterStyle highlightTrailing
  {static} +_HighlightPainterStyle highlightAll
}

"material::date_picker::_HighlightPainterStyle" o-- "material::date_picker::_HighlightPainterStyle"
"dart::core::Enum" <|-- "material::date_picker::_HighlightPainterStyle"

class "material::bottom_navigation_bar_theme::BottomNavigationBarThemeData" {
  +Color? backgroundColor
  +double? elevation
  +IconThemeData? selectedIconTheme
  +IconThemeData? unselectedIconTheme
  +Color? selectedItemColor
  +Color? unselectedItemColor
  +TextStyle? selectedLabelStyle
  +TextStyle? unselectedLabelStyle
  +bool? showSelectedLabels
  +bool? showUnselectedLabels
  +BottomNavigationBarType? type
  +bool? enableFeedback
  +BottomNavigationBarLandscapeLayout? landscapeLayout
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +int hashCode
  +BottomNavigationBarThemeData copyWith()
  {static} +BottomNavigationBarThemeData lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::bottom_navigation_bar_theme::BottomNavigationBarThemeData" o-- "dart::ui::Color"
"material::bottom_navigation_bar_theme::BottomNavigationBarThemeData" o-- "widgets::icon_theme_data::IconThemeData"
"material::bottom_navigation_bar_theme::BottomNavigationBarThemeData" o-- "painting::text_style::TextStyle"
"material::bottom_navigation_bar_theme::BottomNavigationBarThemeData" o-- "material::bottom_navigation_bar::BottomNavigationBarType"
"material::bottom_navigation_bar_theme::BottomNavigationBarThemeData" o-- "material::bottom_navigation_bar::BottomNavigationBarLandscapeLayout"
"material::bottom_navigation_bar_theme::BottomNavigationBarThemeData" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"foundation::diagnostics::Diagnosticable" <|-- "material::bottom_navigation_bar_theme::BottomNavigationBarThemeData"

class "material::bottom_navigation_bar_theme::BottomNavigationBarTheme" {
  +BottomNavigationBarThemeData data
  {static} +BottomNavigationBarThemeData of()
  +bool updateShouldNotify()
}

"material::bottom_navigation_bar_theme::BottomNavigationBarTheme" o-- "material::bottom_navigation_bar_theme::BottomNavigationBarThemeData"
"widgets::framework::InheritedWidget" <|-- "material::bottom_navigation_bar_theme::BottomNavigationBarTheme"

class "material::floating_action_button::_DefaultHeroTag" {
  +String toString()
}

class "material::floating_action_button::FloatingActionButton" {
  +Widget? child
  +String? tooltip
  +Color? foregroundColor
  +Color? backgroundColor
  +Color? focusColor
  +Color? hoverColor
  +Color? splashColor
  +Object? heroTag
  +void Function()? onPressed
  +MouseCursor? mouseCursor
  +double? elevation
  +double? focusElevation
  +double? hoverElevation
  +double? highlightElevation
  +double? disabledElevation
  +bool mini
  +ShapeBorder? shape
  +Clip clipBehavior
  +bool isExtended
  +FocusNode? focusNode
  +bool autofocus
  +MaterialTapTargetSize? materialTapTargetSize
  +bool? enableFeedback
  +double? extendedIconLabelSpacing
  +EdgeInsetsGeometry? extendedPadding
  +TextStyle? extendedTextStyle
  -_FloatingActionButtonType _floatingActionButtonType
  -Widget? _extendedLabel
  +Widget build()
  +void debugFillProperties()
}

"material::floating_action_button::FloatingActionButton" o-- "widgets::framework::Widget"
"material::floating_action_button::FloatingActionButton" o-- "dart::ui::Color"
"material::floating_action_button::FloatingActionButton" o-- "dart::ui::void Function()"
"material::floating_action_button::FloatingActionButton" o-- "services::mouse_cursor::MouseCursor"
"material::floating_action_button::FloatingActionButton" o-- "painting::borders::ShapeBorder"
"material::floating_action_button::FloatingActionButton" o-- "dart::ui::Clip"
"material::floating_action_button::FloatingActionButton" o-- "widgets::focus_manager::FocusNode"
"material::floating_action_button::FloatingActionButton" o-- "material::theme_data::MaterialTapTargetSize"
"material::floating_action_button::FloatingActionButton" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::floating_action_button::FloatingActionButton" o-- "painting::text_style::TextStyle"
"material::floating_action_button::FloatingActionButton" o-- "material::floating_action_button::_FloatingActionButtonType"
"widgets::framework::StatelessWidget" <|-- "material::floating_action_button::FloatingActionButton"

class "material::floating_action_button::_EffectiveMouseCursor" {
  +MouseCursor? widgetCursor
  +MaterialStateProperty<MouseCursor?>? themeCursor
  +String debugDescription
  +MouseCursor resolve()
}

"material::floating_action_button::_EffectiveMouseCursor" o-- "services::mouse_cursor::MouseCursor"
"material::floating_action_button::_EffectiveMouseCursor" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::material_state::MaterialStateMouseCursor" <|-- "material::floating_action_button::_EffectiveMouseCursor"

class "material::floating_action_button::_ChildOverflowBox" {
  +_RenderChildOverflowBox createRenderObject()
  +void updateRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "material::floating_action_button::_ChildOverflowBox"

class "material::floating_action_button::_RenderChildOverflowBox" {
  +double computeMinIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +Size computeDryLayout()
  +void performLayout()
}

"rendering::shifted_box::RenderAligningShiftedBox" <|-- "material::floating_action_button::_RenderChildOverflowBox"

class "material::floating_action_button::_FABDefaultsM2" {
  +_FloatingActionButtonType type
  +bool hasChild
  -ThemeData _theme
  -ColorScheme _colors
  -bool _isExtended
  -bool _isLarge
  +Color? foregroundColor
  +Color? backgroundColor
  +Color? focusColor
  +Color? hoverColor
  +Color? splashColor
  +ShapeBorder? shape
  +double? iconSize
  +EdgeInsetsGeometry? extendedPadding
  +TextStyle? extendedTextStyle
}

"material::floating_action_button::_FABDefaultsM2" o-- "material::floating_action_button::_FloatingActionButtonType"
"material::floating_action_button::_FABDefaultsM2" o-- "material::theme_data::ThemeData"
"material::floating_action_button::_FABDefaultsM2" o-- "material::color_scheme::ColorScheme"
"material::floating_action_button::_FABDefaultsM2" o-- "dart::ui::Color"
"material::floating_action_button::_FABDefaultsM2" o-- "painting::borders::ShapeBorder"
"material::floating_action_button::_FABDefaultsM2" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::floating_action_button::_FABDefaultsM2" o-- "painting::text_style::TextStyle"
"material::floating_action_button_theme::FloatingActionButtonThemeData" <|-- "material::floating_action_button::_FABDefaultsM2"

class "material::floating_action_button::_FABDefaultsM3" {
  +BuildContext context
  +_FloatingActionButtonType type
  +bool hasChild
  -ColorScheme _colors
  -TextTheme _textTheme
  -bool _isExtended
  +Color? foregroundColor
  +Color? backgroundColor
  +Color? splashColor
  +Color? focusColor
  +Color? hoverColor
  +ShapeBorder? shape
  +double? iconSize
  +EdgeInsetsGeometry? extendedPadding
  +TextStyle? extendedTextStyle
}

"material::floating_action_button::_FABDefaultsM3" o-- "widgets::framework::BuildContext"
"material::floating_action_button::_FABDefaultsM3" o-- "material::floating_action_button::_FloatingActionButtonType"
"material::floating_action_button::_FABDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::floating_action_button::_FABDefaultsM3" o-- "material::text_theme::TextTheme"
"material::floating_action_button::_FABDefaultsM3" o-- "dart::ui::Color"
"material::floating_action_button::_FABDefaultsM3" o-- "painting::borders::ShapeBorder"
"material::floating_action_button::_FABDefaultsM3" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::floating_action_button::_FABDefaultsM3" o-- "painting::text_style::TextStyle"
"material::floating_action_button_theme::FloatingActionButtonThemeData" <|-- "material::floating_action_button::_FABDefaultsM3"

class "material::floating_action_button::_FloatingActionButtonType" {
  +int index
  {static} +List<_FloatingActionButtonType> values
  {static} +_FloatingActionButtonType regular
  {static} +_FloatingActionButtonType small
  {static} +_FloatingActionButtonType large
  {static} +_FloatingActionButtonType extended
}

"material::floating_action_button::_FloatingActionButtonType" o-- "material::floating_action_button::_FloatingActionButtonType"
"dart::core::Enum" <|-- "material::floating_action_button::_FloatingActionButtonType"

class "material::filled_button::FilledButton" {
  -_FilledButtonVariant _variant
  {static} +ButtonStyle styleFrom()
  +ButtonStyle defaultStyleOf()
  +ButtonStyle? themeStyleOf()
}

"material::filled_button::FilledButton" o-- "material::filled_button::_FilledButtonVariant"
"material::button_style_button::ButtonStyleButton" <|-- "material::filled_button::FilledButton"

class "material::filled_button::_FilledButtonDefaultColor" {
  +Color? color
  +Color? disabled
  +Color? resolve()
}

"material::filled_button::_FilledButtonDefaultColor" o-- "dart::ui::Color"
"material::material_state::MaterialStateProperty" <|-- "material::filled_button::_FilledButtonDefaultColor"
"foundation::diagnostics::Diagnosticable" <|-- "material::filled_button::_FilledButtonDefaultColor"

class "material::filled_button::_FilledButtonDefaultOverlay" {
  +Color overlay
  +Color? resolve()
}

"material::filled_button::_FilledButtonDefaultOverlay" o-- "dart::ui::Color"
"material::material_state::MaterialStateProperty" <|-- "material::filled_button::_FilledButtonDefaultOverlay"
"foundation::diagnostics::Diagnosticable" <|-- "material::filled_button::_FilledButtonDefaultOverlay"

class "material::filled_button::_FilledButtonDefaultMouseCursor" {
  +MouseCursor? enabledCursor
  +MouseCursor? disabledCursor
  +MouseCursor? resolve()
}

"material::filled_button::_FilledButtonDefaultMouseCursor" o-- "services::mouse_cursor::MouseCursor"
"material::material_state::MaterialStateProperty" <|-- "material::filled_button::_FilledButtonDefaultMouseCursor"
"foundation::diagnostics::Diagnosticable" <|-- "material::filled_button::_FilledButtonDefaultMouseCursor"

class "material::filled_button::_FilledButtonWithIcon" {
  +ButtonStyle defaultStyleOf()
}

"material::filled_button::FilledButton" <|-- "material::filled_button::_FilledButtonWithIcon"

class "material::filled_button::_FilledButtonWithIconChild" {
  +Widget label
  +Widget icon
  +Widget build()
}

"material::filled_button::_FilledButtonWithIconChild" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::filled_button::_FilledButtonWithIconChild"

class "material::filled_button::_FilledButtonDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  +MaterialStateProperty<TextStyle?> textStyle
  +MaterialStateProperty<Color?>? backgroundColor
  +MaterialStateProperty<Color?>? foregroundColor
  +MaterialStateProperty<Color?>? overlayColor
  +MaterialStateProperty<Color>? shadowColor
  +MaterialStateProperty<Color>? surfaceTintColor
  +MaterialStateProperty<double>? elevation
  +MaterialStateProperty<EdgeInsetsGeometry>? padding
  +MaterialStateProperty<Size>? minimumSize
  +MaterialStateProperty<Size>? maximumSize
  +MaterialStateProperty<OutlinedBorder>? shape
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +VisualDensity? visualDensity
  +MaterialTapTargetSize? tapTargetSize
  +InteractiveInkFeatureFactory? splashFactory
}

"material::filled_button::_FilledButtonDefaultsM3" o-- "widgets::framework::BuildContext"
"material::filled_button::_FilledButtonDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::filled_button::_FilledButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<TextStyle>"
"material::filled_button::_FilledButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::filled_button::_FilledButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<double>"
"material::filled_button::_FilledButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<EdgeInsetsGeometry>"
"material::filled_button::_FilledButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Size>"
"material::filled_button::_FilledButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<OutlinedBorder>"
"material::filled_button::_FilledButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::filled_button::_FilledButtonDefaultsM3" o-- "material::theme_data::VisualDensity"
"material::filled_button::_FilledButtonDefaultsM3" o-- "material::theme_data::MaterialTapTargetSize"
"material::filled_button::_FilledButtonDefaultsM3" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::button_style::ButtonStyle" <|-- "material::filled_button::_FilledButtonDefaultsM3"

class "material::filled_button::_FilledTonalButtonDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  +MaterialStateProperty<TextStyle?> textStyle
  +MaterialStateProperty<Color?>? backgroundColor
  +MaterialStateProperty<Color?>? foregroundColor
  +MaterialStateProperty<Color?>? overlayColor
  +MaterialStateProperty<Color>? shadowColor
  +MaterialStateProperty<Color>? surfaceTintColor
  +MaterialStateProperty<double>? elevation
  +MaterialStateProperty<EdgeInsetsGeometry>? padding
  +MaterialStateProperty<Size>? minimumSize
  +MaterialStateProperty<Size>? maximumSize
  +MaterialStateProperty<OutlinedBorder>? shape
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +VisualDensity? visualDensity
  +MaterialTapTargetSize? tapTargetSize
  +InteractiveInkFeatureFactory? splashFactory
}

"material::filled_button::_FilledTonalButtonDefaultsM3" o-- "widgets::framework::BuildContext"
"material::filled_button::_FilledTonalButtonDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::filled_button::_FilledTonalButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<TextStyle>"
"material::filled_button::_FilledTonalButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::filled_button::_FilledTonalButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<double>"
"material::filled_button::_FilledTonalButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<EdgeInsetsGeometry>"
"material::filled_button::_FilledTonalButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Size>"
"material::filled_button::_FilledTonalButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<OutlinedBorder>"
"material::filled_button::_FilledTonalButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::filled_button::_FilledTonalButtonDefaultsM3" o-- "material::theme_data::VisualDensity"
"material::filled_button::_FilledTonalButtonDefaultsM3" o-- "material::theme_data::MaterialTapTargetSize"
"material::filled_button::_FilledTonalButtonDefaultsM3" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::button_style::ButtonStyle" <|-- "material::filled_button::_FilledTonalButtonDefaultsM3"

class "material::filled_button::_FilledButtonVariant" {
  +int index
  {static} +List<_FilledButtonVariant> values
  {static} +_FilledButtonVariant filled
  {static} +_FilledButtonVariant tonal
}

"material::filled_button::_FilledButtonVariant" o-- "material::filled_button::_FilledButtonVariant"
"dart::core::Enum" <|-- "material::filled_button::_FilledButtonVariant"

class "material::tooltip_visibility::_TooltipVisibilityScope" {
  +bool visible
  +bool updateShouldNotify()
}

"widgets::framework::InheritedWidget" <|-- "material::tooltip_visibility::_TooltipVisibilityScope"

class "material::tooltip_visibility::TooltipVisibility" {
  +Widget child
  +bool visible
  {static} +bool of()
  +Widget build()
}

"material::tooltip_visibility::TooltipVisibility" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::tooltip_visibility::TooltipVisibility"

class "material::checkbox_theme::CheckboxThemeData" {
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +MaterialStateProperty<Color?>? fillColor
  +MaterialStateProperty<Color?>? checkColor
  +MaterialStateProperty<Color?>? overlayColor
  +double? splashRadius
  +MaterialTapTargetSize? materialTapTargetSize
  +VisualDensity? visualDensity
  +OutlinedBorder? shape
  +BorderSide? side
  +int hashCode
  +CheckboxThemeData copyWith()
  {static} +CheckboxThemeData lerp()
  +bool ==()
  +void debugFillProperties()
  {static} -BorderSide? _lerpSides()
}

"material::checkbox_theme::CheckboxThemeData" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::checkbox_theme::CheckboxThemeData" o-- "material::material_state::MaterialStateProperty<Color>"
"material::checkbox_theme::CheckboxThemeData" o-- "material::theme_data::MaterialTapTargetSize"
"material::checkbox_theme::CheckboxThemeData" o-- "material::theme_data::VisualDensity"
"material::checkbox_theme::CheckboxThemeData" o-- "painting::borders::OutlinedBorder"
"material::checkbox_theme::CheckboxThemeData" o-- "painting::borders::BorderSide"
"foundation::diagnostics::Diagnosticable" <|-- "material::checkbox_theme::CheckboxThemeData"

class "material::checkbox_theme::CheckboxTheme" {
  +CheckboxThemeData data
  {static} +CheckboxThemeData of()
  +bool updateShouldNotify()
}

"material::checkbox_theme::CheckboxTheme" o-- "material::checkbox_theme::CheckboxThemeData"
"widgets::framework::InheritedWidget" <|-- "material::checkbox_theme::CheckboxTheme"

class "material::range_slider::RangeSlider" {
  +RangeValues values
  +void Function(RangeValues)? onChanged
  +void Function(RangeValues)? onChangeStart
  +void Function(RangeValues)? onChangeEnd
  +double min
  +double max
  +int? divisions
  +RangeLabels? labels
  +Color? activeColor
  +Color? inactiveColor
  +MaterialStateProperty<Color?>? overlayColor
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +String Function(double)? semanticFormatterCallback
  {static} -double _minTouchTargetWidth
  +State<RangeSlider> createState()
  +void debugFillProperties()
}

"material::range_slider::RangeSlider" o-- "material::slider_theme::RangeValues"
"material::range_slider::RangeSlider" o-- "foundation::basic_types::void Function(RangeValues)"
"material::range_slider::RangeSlider" o-- "material::slider_theme::RangeLabels"
"material::range_slider::RangeSlider" o-- "dart::ui::Color"
"material::range_slider::RangeSlider" o-- "material::material_state::MaterialStateProperty<Color>"
"material::range_slider::RangeSlider" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::range_slider::RangeSlider" o-- "material::slider_theme::String Function(double)"
"widgets::framework::StatefulWidget" <|-- "material::range_slider::RangeSlider"

class "material::range_slider::_RangeSliderState" {
  {static} +Duration enableAnimationDuration
  {static} +Duration valueIndicatorAnimationDuration
  +AnimationController overlayController
  +AnimationController valueIndicatorController
  +AnimationController enableController
  +AnimationController startPositionController
  +AnimationController endPositionController
  +Timer? interactionTimer
  +void Function(PaintingContext, Offset)? paintTopValueIndicator
  +void Function(PaintingContext, Offset)? paintBottomValueIndicator
  -bool _dragging
  -bool _hovering
  -LayerLink _layerLink
  +OverlayEntry? overlayEntry
  -bool _enabled
  -void _handleHoverChanged()
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  -void _handleChanged()
  -void _handleDragStart()
  -void _handleDragEnd()
  -double _lerp()
  -RangeValues _lerpRangeValues()
  -double _unlerp()
  -RangeValues _unlerpRangeValues()
  -Thumb? _defaultRangeThumbSelector()
  +Widget build()
  +void showValueIndicator()
}

"material::range_slider::_RangeSliderState" o-- "animation::animation_controller::AnimationController"
"material::range_slider::_RangeSliderState" o-- "dart::async::Timer"
"material::range_slider::_RangeSliderState" o-- "material::range_slider::void Function(PaintingContext, Offset)"
"material::range_slider::_RangeSliderState" o-- "rendering::layer::LayerLink"
"material::range_slider::_RangeSliderState" o-- "widgets::overlay::OverlayEntry"
"widgets::framework::State" <|-- "material::range_slider::_RangeSliderState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::range_slider::_RangeSliderState"

class "material::range_slider::_RangeSliderRenderObjectWidget" {
  +RangeValues values
  +int? divisions
  +RangeLabels? labels
  +SliderThemeData sliderTheme
  +double textScaleFactor
  +Size screenSize
  +void Function(RangeValues)? onChanged
  +void Function(RangeValues)? onChangeStart
  +void Function(RangeValues)? onChangeEnd
  +String Function(double)? semanticFormatterCallback
  +_RangeSliderState state
  +bool hovering
  +_RenderRangeSlider createRenderObject()
  +void updateRenderObject()
}

"material::range_slider::_RangeSliderRenderObjectWidget" o-- "material::slider_theme::RangeValues"
"material::range_slider::_RangeSliderRenderObjectWidget" o-- "material::slider_theme::RangeLabels"
"material::range_slider::_RangeSliderRenderObjectWidget" o-- "material::slider_theme::SliderThemeData"
"material::range_slider::_RangeSliderRenderObjectWidget" o-- "dart::ui::Size"
"material::range_slider::_RangeSliderRenderObjectWidget" o-- "foundation::basic_types::void Function(RangeValues)"
"material::range_slider::_RangeSliderRenderObjectWidget" o-- "material::slider_theme::String Function(double)"
"material::range_slider::_RangeSliderRenderObjectWidget" o-- "material::range_slider::_RangeSliderState"
"widgets::framework::LeafRenderObjectWidget" <|-- "material::range_slider::_RangeSliderRenderObjectWidget"

class "material::range_slider::_RenderRangeSlider" {
  -Thumb? _lastThumbSelection
  {static} -Duration _positionAnimationDuration
  {static} -double _minPreferredTrackWidth
  {static} -Duration _minimumInteractionTime
  -_RangeSliderState _state
  -Animation<double> _overlayAnimation
  -Animation<double> _valueIndicatorAnimation
  -Animation<double> _enableAnimation
  -TextPainter _startLabelPainter
  -TextPainter _endLabelPainter
  -HorizontalDragGestureRecognizer _drag
  -TapGestureRecognizer _tap
  -bool _active
  -RangeValues _newValues
  -Offset _startThumbCenter
  -Offset _endThumbCenter
  +Rect? overlayStartRect
  +Rect? overlayEndRect
  -RangeValues _values
  -TargetPlatform _platform
  -String Function(double)? _semanticFormatterCallback
  -int? _divisions
  -RangeLabels? _labels
  -SliderThemeData _sliderTheme
  -ThemeData? _theme
  -double _textScaleFactor
  -Size _screenSize
  -void Function(RangeValues)? _onChanged
  +void Function(RangeValues)? onChangeStart
  +void Function(RangeValues)? onChangeEnd
  -TextDirection _textDirection
  -bool _hovering
  -bool _hoveringStartThumb
  -bool _hoveringEndThumb
  -SemanticsNode? _startSemanticsNode
  -SemanticsNode? _endSemanticsNode
  -double _maxSliderPartWidth
  -double _maxSliderPartHeight
  -List<Size> _sliderPartSizes
  -double? _minPreferredTrackHeight
  -Rect _trackRect
  +bool isEnabled
  +bool isDiscrete
  -double _minThumbSeparationValue
  +RangeValues values
  +TargetPlatform platform
  +DeviceGestureSettings? gestureSettings
  +String Function(double)? semanticFormatterCallback
  +int? divisions
  +RangeLabels? labels
  +SliderThemeData sliderTheme
  +ThemeData? theme
  +double textScaleFactor
  +Size screenSize
  +void Function(RangeValues)? onChanged
  +TextDirection textDirection
  +bool hovering
  +bool hoveringStartThumb
  +bool hoveringEndThumb
  +bool showValueIndicator
  -Size _thumbSize
  -double _adjustmentUnit
  +bool sizedByParent
  -double _semanticActionUnit
  -double _increasedStartValue
  -double _decreasedStartValue
  -double _increasedEndValue
  -double _decreasedEndValue
  -void _updateForHover()
  -void _updateLabelPainters()
  -void _updateLabelPainter()
  +void systemFontsDidChange()
  +void attach()
  +void detach()
  +void dispose()
  -double _getValueFromVisualPosition()
  -double _getValueFromGlobalPosition()
  -double _discretize()
  -RangeValues _discretizeRangeValues()
  -void _startInteraction()
  -void _handleDragUpdate()
  -void _endInteraction()
  -void _handleDragStart()
  -void _handleDragEnd()
  -void _handleDragCancel()
  -void _handleTapDown()
  -void _handleTapUp()
  +bool hitTestSelf()
  +void handleEvent()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +Size computeDryLayout()
  +void paint()
  -SemanticsConfiguration _createSemanticsConfiguration()
  +void assembleSemanticsNode()
  +void clearSemantics()
  +void describeSemanticsConfiguration()
  -void _increaseStartAction()
  -void _decreaseStartAction()
  -void _increaseEndAction()
  -void _decreaseEndAction()
}

"material::range_slider::_RenderRangeSlider" o-- "material::slider_theme::Thumb"
"material::range_slider::_RenderRangeSlider" o-- "material::range_slider::_RangeSliderState"
"material::range_slider::_RenderRangeSlider" o-- "animation::animation::Animation<double>"
"material::range_slider::_RenderRangeSlider" o-- "painting::text_painter::TextPainter"
"material::range_slider::_RenderRangeSlider" o-- "gestures::monodrag::HorizontalDragGestureRecognizer"
"material::range_slider::_RenderRangeSlider" o-- "gestures::tap::TapGestureRecognizer"
"material::range_slider::_RenderRangeSlider" o-- "material::slider_theme::RangeValues"
"material::range_slider::_RenderRangeSlider" o-- "dart::ui::Offset"
"material::range_slider::_RenderRangeSlider" o-- "dart::ui::Rect"
"material::range_slider::_RenderRangeSlider" o-- "foundation::platform::TargetPlatform"
"material::range_slider::_RenderRangeSlider" o-- "material::slider_theme::String Function(double)"
"material::range_slider::_RenderRangeSlider" o-- "material::slider_theme::RangeLabels"
"material::range_slider::_RenderRangeSlider" o-- "material::slider_theme::SliderThemeData"
"material::range_slider::_RenderRangeSlider" o-- "material::theme_data::ThemeData"
"material::range_slider::_RenderRangeSlider" o-- "dart::ui::Size"
"material::range_slider::_RenderRangeSlider" o-- "foundation::basic_types::void Function(RangeValues)"
"material::range_slider::_RenderRangeSlider" o-- "dart::ui::TextDirection"
"material::range_slider::_RenderRangeSlider" o-- "semantics::semantics::SemanticsNode"
"material::range_slider::_RenderRangeSlider" o-- "gestures::gesture_settings::DeviceGestureSettings"
"rendering::box::RenderBox" <|-- "material::range_slider::_RenderRangeSlider"
"rendering::object::RelayoutWhenSystemFontsChangeMixin" <|-- "material::range_slider::_RenderRangeSlider"

class "material::range_slider::_ValueIndicatorRenderObjectWidget" {
  +_RangeSliderState state
  +_RenderValueIndicator createRenderObject()
  +void updateRenderObject()
}

"material::range_slider::_ValueIndicatorRenderObjectWidget" o-- "material::range_slider::_RangeSliderState"
"widgets::framework::LeafRenderObjectWidget" <|-- "material::range_slider::_ValueIndicatorRenderObjectWidget"

class "material::range_slider::_RenderValueIndicator" {
  -Animation<double> _valueIndicatorAnimation
  -_RangeSliderState _state
  +bool sizedByParent
  +void attach()
  +void detach()
  +void paint()
  +Size computeDryLayout()
}

"material::range_slider::_RenderValueIndicator" o-- "animation::animation::Animation<double>"
"material::range_slider::_RenderValueIndicator" o-- "material::range_slider::_RangeSliderState"
"rendering::box::RenderBox" <|-- "material::range_slider::_RenderValueIndicator"
"rendering::object::RelayoutWhenSystemFontsChangeMixin" <|-- "material::range_slider::_RenderValueIndicator"

class "material::scrollbar_theme::ScrollbarThemeData" {
  +MaterialStateProperty<bool?>? thumbVisibility
  +MaterialStateProperty<double?>? thickness
  +MaterialStateProperty<bool?>? trackVisibility
  +bool? showTrackOnHover
  +bool? interactive
  +Radius? radius
  +MaterialStateProperty<Color?>? thumbColor
  +MaterialStateProperty<Color?>? trackColor
  +MaterialStateProperty<Color?>? trackBorderColor
  +double? crossAxisMargin
  +double? mainAxisMargin
  +double? minThumbLength
  +int hashCode
  +ScrollbarThemeData copyWith()
  {static} +ScrollbarThemeData lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::scrollbar_theme::ScrollbarThemeData" o-- "material::material_state::MaterialStateProperty<bool>"
"material::scrollbar_theme::ScrollbarThemeData" o-- "material::material_state::MaterialStateProperty<double>"
"material::scrollbar_theme::ScrollbarThemeData" o-- "dart::ui::Radius"
"material::scrollbar_theme::ScrollbarThemeData" o-- "material::material_state::MaterialStateProperty<Color>"
"foundation::diagnostics::Diagnosticable" <|-- "material::scrollbar_theme::ScrollbarThemeData"

class "material::scrollbar_theme::ScrollbarTheme" {
  +ScrollbarThemeData data
  {static} +ScrollbarThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::scrollbar_theme::ScrollbarTheme" o-- "material::scrollbar_theme::ScrollbarThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::scrollbar_theme::ScrollbarTheme"

class "material::ink_highlight::InkHighlight" {
  -BoxShape _shape
  -double? _radius
  -BorderRadius _borderRadius
  -Rect Function()? _rectCallback
  -TextDirection _textDirection
  -Animation<int> _alpha
  -AnimationController _alphaController
  -bool _active
  +bool active
  +void activate()
  +void deactivate()
  -void _handleAlphaStatusChanged()
  +void dispose()
  -void _paintHighlight()
  +void paintFeature()
}

"material::ink_highlight::InkHighlight" o-- "painting::box_border::BoxShape"
"material::ink_highlight::InkHighlight" o-- "painting::border_radius::BorderRadius"
"material::ink_highlight::InkHighlight" o-- "material::material::Rect Function()"
"material::ink_highlight::InkHighlight" o-- "dart::ui::TextDirection"
"material::ink_highlight::InkHighlight" o-- "animation::animation::Animation<int>"
"material::ink_highlight::InkHighlight" o-- "animation::animation_controller::AnimationController"
"material::ink_well::InteractiveInkFeature" <|-- "material::ink_highlight::InkHighlight"

abstract class "material::popup_menu::PopupMenuEntry" {
  +double height
  +bool represents()
}

"widgets::framework::StatefulWidget" <|-- "material::popup_menu::PopupMenuEntry"

class "material::popup_menu::PopupMenuDivider" {
  +double height
  +bool represents()
  +State<PopupMenuDivider> createState()
}

"material::popup_menu::PopupMenuEntry" <|-- "material::popup_menu::PopupMenuDivider"

class "material::popup_menu::_PopupMenuDividerState" {
  +Widget build()
}

"widgets::framework::State" <|-- "material::popup_menu::_PopupMenuDividerState"

class "material::popup_menu::_MenuItem" {
  +void Function(Size) onLayout
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"material::popup_menu::_MenuItem" o-- "foundation::basic_types::void Function(Size)"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "material::popup_menu::_MenuItem"

class "material::popup_menu::_RenderMenuItem" {
  +void Function(Size) onLayout
  +Size computeDryLayout()
  +void performLayout()
}

"material::popup_menu::_RenderMenuItem" o-- "foundation::basic_types::void Function(Size)"
"rendering::shifted_box::RenderShiftedBox" <|-- "material::popup_menu::_RenderMenuItem"

class "material::popup_menu::PopupMenuItem" {
  +T? value
  +void Function()? onTap
  +bool enabled
  +double height
  +EdgeInsets? padding
  +TextStyle? textStyle
  +MaterialStateProperty<TextStyle?>? labelTextStyle
  +MouseCursor? mouseCursor
  +Widget? child
  +bool represents()
  +PopupMenuItemState<T, PopupMenuItem<T>> createState()
}

"material::popup_menu::PopupMenuItem" o-- "dart::ui::void Function()"
"material::popup_menu::PopupMenuItem" o-- "painting::edge_insets::EdgeInsets"
"material::popup_menu::PopupMenuItem" o-- "painting::text_style::TextStyle"
"material::popup_menu::PopupMenuItem" o-- "material::material_state::MaterialStateProperty<TextStyle>"
"material::popup_menu::PopupMenuItem" o-- "services::mouse_cursor::MouseCursor"
"material::popup_menu::PopupMenuItem" o-- "widgets::framework::Widget"
"material::popup_menu::PopupMenuEntry" <|-- "material::popup_menu::PopupMenuItem"

class "material::popup_menu::PopupMenuItemState" {
  #Widget? buildChild()
  #void handleTap()
  +Widget build()
}

"widgets::framework::State" <|-- "material::popup_menu::PopupMenuItemState"

class "material::popup_menu::CheckedPopupMenuItem" {
  +bool checked
  +Widget? child
  +PopupMenuItemState<T, CheckedPopupMenuItem<T>> createState()
}

"material::popup_menu::CheckedPopupMenuItem" o-- "widgets::framework::Widget"
"material::popup_menu::PopupMenuItem" <|-- "material::popup_menu::CheckedPopupMenuItem"

class "material::popup_menu::_CheckedPopupMenuItemState" {
  {static} -Duration _fadeDuration
  -AnimationController _controller
  -Animation<double> _opacity
  +void initState()
  +void handleTap()
  +Widget buildChild()
}

"material::popup_menu::_CheckedPopupMenuItemState" o-- "animation::animation_controller::AnimationController"
"material::popup_menu::_CheckedPopupMenuItemState" o-- "animation::animation::Animation<double>"
"material::popup_menu::PopupMenuItemState" <|-- "material::popup_menu::_CheckedPopupMenuItemState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "material::popup_menu::_CheckedPopupMenuItemState"

class "material::popup_menu::_PopupMenu" {
  +_PopupMenuRoute<T> route
  +String? semanticLabel
  +BoxConstraints? constraints
  +Clip clipBehavior
  +Widget build()
}

"material::popup_menu::_PopupMenu" o-- "material::popup_menu::_PopupMenuRoute<T>"
"material::popup_menu::_PopupMenu" o-- "rendering::box::BoxConstraints"
"material::popup_menu::_PopupMenu" o-- "dart::ui::Clip"
"widgets::framework::StatelessWidget" <|-- "material::popup_menu::_PopupMenu"

class "material::popup_menu::_PopupMenuRouteLayout" {
  +RelativeRect position
  +List<Size?> itemSizes
  +int? selectedItemIndex
  +TextDirection textDirection
  +EdgeInsets padding
  +Set<Rect> avoidBounds
  +BoxConstraints getConstraintsForChild()
  +Offset getPositionForChild()
  -Rect _closestScreen()
  -Offset _fitInsideScreen()
  +bool shouldRelayout()
}

"material::popup_menu::_PopupMenuRouteLayout" o-- "rendering::stack::RelativeRect"
"material::popup_menu::_PopupMenuRouteLayout" o-- "dart::ui::TextDirection"
"material::popup_menu::_PopupMenuRouteLayout" o-- "painting::edge_insets::EdgeInsets"
"rendering::shifted_box::SingleChildLayoutDelegate" <|-- "material::popup_menu::_PopupMenuRouteLayout"

class "material::popup_menu::_PopupMenuRoute" {
  +RelativeRect position
  +List<PopupMenuEntry<T>> items
  +List<Size?> itemSizes
  +T? initialValue
  +double? elevation
  +Color? surfaceTintColor
  +Color? shadowColor
  +String? semanticLabel
  +ShapeBorder? shape
  +Color? color
  +CapturedThemes capturedThemes
  +BoxConstraints? constraints
  +Clip clipBehavior
  +String barrierLabel
  +Duration transitionDuration
  +bool barrierDismissible
  +Color? barrierColor
  +Animation<double> createAnimation()
  +Widget buildPage()
  -Set<Rect> _avoidBounds()
}

"material::popup_menu::_PopupMenuRoute" o-- "rendering::stack::RelativeRect"
"material::popup_menu::_PopupMenuRoute" o-- "dart::ui::Color"
"material::popup_menu::_PopupMenuRoute" o-- "painting::borders::ShapeBorder"
"material::popup_menu::_PopupMenuRoute" o-- "widgets::inherited_theme::CapturedThemes"
"material::popup_menu::_PopupMenuRoute" o-- "rendering::box::BoxConstraints"
"material::popup_menu::_PopupMenuRoute" o-- "dart::ui::Clip"
"widgets::routes::PopupRoute" <|-- "material::popup_menu::_PopupMenuRoute"

class "material::popup_menu::PopupMenuButton" {
  +List<PopupMenuEntry<T>> Function(BuildContext) itemBuilder
  +T? initialValue
  +void Function()? onOpened
  +void Function(T)? onSelected
  +void Function()? onCanceled
  +String? tooltip
  +double? elevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +EdgeInsetsGeometry padding
  +double? splashRadius
  +Widget? child
  +Widget? icon
  +Offset offset
  +bool enabled
  +ShapeBorder? shape
  +Color? color
  +Color? iconColor
  +bool? enableFeedback
  +double? iconSize
  +BoxConstraints? constraints
  +PopupMenuPosition? position
  +Clip clipBehavior
  +PopupMenuButtonState<T> createState()
}

"material::popup_menu::PopupMenuButton" o-- "material::popup_menu::List<PopupMenuEntry<T>> Function(BuildContext)"
"material::popup_menu::PopupMenuButton" o-- "dart::ui::void Function()"
"material::popup_menu::PopupMenuButton" o-- "material::popup_menu::void Function(T)"
"material::popup_menu::PopupMenuButton" o-- "material::popup_menu::void Function()"
"material::popup_menu::PopupMenuButton" o-- "dart::ui::Color"
"material::popup_menu::PopupMenuButton" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::popup_menu::PopupMenuButton" o-- "widgets::framework::Widget"
"material::popup_menu::PopupMenuButton" o-- "dart::ui::Offset"
"material::popup_menu::PopupMenuButton" o-- "painting::borders::ShapeBorder"
"material::popup_menu::PopupMenuButton" o-- "rendering::box::BoxConstraints"
"material::popup_menu::PopupMenuButton" o-- "material::popup_menu_theme::PopupMenuPosition"
"material::popup_menu::PopupMenuButton" o-- "dart::ui::Clip"
"widgets::framework::StatefulWidget" <|-- "material::popup_menu::PopupMenuButton"

class "material::popup_menu::PopupMenuButtonState" {
  -bool _canRequestFocus
  +void showButtonMenu()
  +Widget build()
}

"widgets::framework::State" <|-- "material::popup_menu::PopupMenuButtonState"

class "material::popup_menu::_EffectiveMouseCursor" {
  +MouseCursor? widgetCursor
  +MaterialStateProperty<MouseCursor?>? themeCursor
  +String debugDescription
  +MouseCursor resolve()
}

"material::popup_menu::_EffectiveMouseCursor" o-- "services::mouse_cursor::MouseCursor"
"material::popup_menu::_EffectiveMouseCursor" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::material_state::MaterialStateMouseCursor" <|-- "material::popup_menu::_EffectiveMouseCursor"

class "material::popup_menu::_PopupMenuDefaultsM2" {
  +BuildContext context
  -ThemeData _theme
  -TextTheme _textTheme
  {static} +EdgeInsets menuHorizontalPadding
  +TextStyle? textStyle
}

"material::popup_menu::_PopupMenuDefaultsM2" o-- "widgets::framework::BuildContext"
"material::popup_menu::_PopupMenuDefaultsM2" o-- "material::theme_data::ThemeData"
"material::popup_menu::_PopupMenuDefaultsM2" o-- "material::text_theme::TextTheme"
"material::popup_menu::_PopupMenuDefaultsM2" o-- "painting::edge_insets::EdgeInsets"
"material::popup_menu::_PopupMenuDefaultsM2" o-- "painting::text_style::TextStyle"
"material::popup_menu_theme::PopupMenuThemeData" <|-- "material::popup_menu::_PopupMenuDefaultsM2"

class "material::popup_menu::_PopupMenuDefaultsM3" {
  +BuildContext context
  -ThemeData _theme
  -ColorScheme _colors
  -TextTheme _textTheme
  {static} +EdgeInsets menuHorizontalPadding
  +MaterialStateProperty<TextStyle?>? labelTextStyle
  +Color? color
  +Color? shadowColor
  +Color? surfaceTintColor
  +ShapeBorder? shape
}

"material::popup_menu::_PopupMenuDefaultsM3" o-- "widgets::framework::BuildContext"
"material::popup_menu::_PopupMenuDefaultsM3" o-- "material::theme_data::ThemeData"
"material::popup_menu::_PopupMenuDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::popup_menu::_PopupMenuDefaultsM3" o-- "material::text_theme::TextTheme"
"material::popup_menu::_PopupMenuDefaultsM3" o-- "painting::edge_insets::EdgeInsets"
"material::popup_menu::_PopupMenuDefaultsM3" o-- "material::material_state::MaterialStateProperty<TextStyle>"
"material::popup_menu::_PopupMenuDefaultsM3" o-- "dart::ui::Color"
"material::popup_menu::_PopupMenuDefaultsM3" o-- "painting::borders::ShapeBorder"
"material::popup_menu_theme::PopupMenuThemeData" <|-- "material::popup_menu::_PopupMenuDefaultsM3"

class "material::expand_icon::ExpandIcon" {
  +bool isExpanded
  +double size
  +void Function(bool)? onPressed
  +EdgeInsetsGeometry padding
  +Color? color
  +Color? disabledColor
  +Color? expandedColor
  +State<ExpandIcon> createState()
}

"material::expand_icon::ExpandIcon" o-- "foundation::basic_types::void Function(bool)"
"material::expand_icon::ExpandIcon" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::expand_icon::ExpandIcon" o-- "dart::ui::Color"
"widgets::framework::StatefulWidget" <|-- "material::expand_icon::ExpandIcon"

class "material::expand_icon::_ExpandIconState" {
  -AnimationController _controller
  -Animation<double> _iconTurns
  {static} -Animatable<double> _iconTurnTween
  -Color _iconColor
  +void initState()
  +void dispose()
  +void didUpdateWidget()
  -void _handlePressed()
  +Widget build()
}

"material::expand_icon::_ExpandIconState" o-- "animation::animation_controller::AnimationController"
"material::expand_icon::_ExpandIconState" o-- "animation::animation::Animation<double>"
"material::expand_icon::_ExpandIconState" o-- "animation::tween::Animatable<double>"
"material::expand_icon::_ExpandIconState" o-- "dart::ui::Color"
"widgets::framework::State" <|-- "material::expand_icon::_ExpandIconState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "material::expand_icon::_ExpandIconState"

class "material::app_bar::_ToolbarContainerLayout" {
  +double toolbarHeight
  +BoxConstraints getConstraintsForChild()
  +Size getSize()
  +Offset getPositionForChild()
  +bool shouldRelayout()
}

"rendering::shifted_box::SingleChildLayoutDelegate" <|-- "material::app_bar::_ToolbarContainerLayout"

class "material::app_bar::_PreferredAppBarSize" {
  +double? toolbarHeight
  +double? bottomHeight
}

"dart::ui::Size" <|-- "material::app_bar::_PreferredAppBarSize"

class "material::app_bar::AppBar" {
  +Widget? leading
  +bool automaticallyImplyLeading
  +Widget? title
  +List<Widget>? actions
  +Widget? flexibleSpace
  +PreferredSizeWidget? bottom
  +double? elevation
  +double? scrolledUnderElevation
  +bool Function(ScrollNotification) notificationPredicate
  +Color? shadowColor
  +Color? surfaceTintColor
  +ShapeBorder? shape
  +Color? backgroundColor
  +Color? foregroundColor
  +IconThemeData? iconTheme
  +IconThemeData? actionsIconTheme
  +bool primary
  +bool? centerTitle
  +bool excludeHeaderSemantics
  +double? titleSpacing
  +double toolbarOpacity
  +double bottomOpacity
  +Size preferredSize
  +double? toolbarHeight
  +double? leadingWidth
  +TextStyle? toolbarTextStyle
  +TextStyle? titleTextStyle
  +SystemUiOverlayStyle? systemOverlayStyle
  +bool forceMaterialTransparency
  +Clip? clipBehavior
  {static} +double preferredHeightFor()
  -bool _getEffectiveCenterTitle()
  +State<AppBar> createState()
}

"material::app_bar::AppBar" o-- "widgets::framework::Widget"
"material::app_bar::AppBar" o-- "widgets::preferred_size::PreferredSizeWidget"
"material::app_bar::AppBar" o-- "widgets::scroll_notification::bool Function(ScrollNotification)"
"material::app_bar::AppBar" o-- "dart::ui::Color"
"material::app_bar::AppBar" o-- "painting::borders::ShapeBorder"
"material::app_bar::AppBar" o-- "widgets::icon_theme_data::IconThemeData"
"material::app_bar::AppBar" o-- "dart::ui::Size"
"material::app_bar::AppBar" o-- "painting::text_style::TextStyle"
"material::app_bar::AppBar" o-- "services::system_chrome::SystemUiOverlayStyle"
"material::app_bar::AppBar" o-- "dart::ui::Clip"
"widgets::framework::StatefulWidget" <|-- "material::app_bar::AppBar"
"widgets::preferred_size::PreferredSizeWidget" <|-- "material::app_bar::AppBar"

class "material::app_bar::_AppBarState" {
  -ScrollNotificationObserverState? _scrollNotificationObserver
  -bool _scrolledUnder
  +void didChangeDependencies()
  +void dispose()
  -void _handleScrollNotification()
  -Color _resolveColor()
  -SystemUiOverlayStyle _systemOverlayStyleForBrightness()
  +Widget build()
}

"material::app_bar::_AppBarState" o-- "widgets::scroll_notification_observer::ScrollNotificationObserverState"
"widgets::framework::State" <|-- "material::app_bar::_AppBarState"

class "material::app_bar::_SliverAppBarDelegate" {
  +Widget? leading
  +bool automaticallyImplyLeading
  +Widget? title
  +List<Widget>? actions
  +Widget? flexibleSpace
  +PreferredSizeWidget? bottom
  +double? elevation
  +double? scrolledUnderElevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +bool forceElevated
  +Color? backgroundColor
  +Color? foregroundColor
  +IconThemeData? iconTheme
  +IconThemeData? actionsIconTheme
  +bool primary
  +bool? centerTitle
  +bool excludeHeaderSemantics
  +double? titleSpacing
  +double? expandedHeight
  +double collapsedHeight
  +double topPadding
  +bool floating
  +bool pinned
  +ShapeBorder? shape
  +double? toolbarHeight
  +double? leadingWidth
  +TextStyle? toolbarTextStyle
  +TextStyle? titleTextStyle
  +SystemUiOverlayStyle? systemOverlayStyle
  -double _bottomHeight
  +bool forceMaterialTransparency
  +Clip? clipBehavior
  +_SliverAppVariant variant
  +TickerProvider vsync
  +FloatingHeaderSnapConfiguration? snapConfiguration
  +OverScrollHeaderStretchConfiguration? stretchConfiguration
  +PersistentHeaderShowOnScreenConfiguration? showOnScreenConfiguration
  +double minExtent
  +double maxExtent
  +Widget build()
  +bool shouldRebuild()
  +String toString()
}

"material::app_bar::_SliverAppBarDelegate" o-- "widgets::framework::Widget"
"material::app_bar::_SliverAppBarDelegate" o-- "widgets::preferred_size::PreferredSizeWidget"
"material::app_bar::_SliverAppBarDelegate" o-- "dart::ui::Color"
"material::app_bar::_SliverAppBarDelegate" o-- "widgets::icon_theme_data::IconThemeData"
"material::app_bar::_SliverAppBarDelegate" o-- "painting::borders::ShapeBorder"
"material::app_bar::_SliverAppBarDelegate" o-- "painting::text_style::TextStyle"
"material::app_bar::_SliverAppBarDelegate" o-- "services::system_chrome::SystemUiOverlayStyle"
"material::app_bar::_SliverAppBarDelegate" o-- "dart::ui::Clip"
"material::app_bar::_SliverAppBarDelegate" o-- "material::app_bar::_SliverAppVariant"
"material::app_bar::_SliverAppBarDelegate" o-- "scheduler::ticker::TickerProvider"
"material::app_bar::_SliverAppBarDelegate" o-- "rendering::sliver_persistent_header::FloatingHeaderSnapConfiguration"
"material::app_bar::_SliverAppBarDelegate" o-- "rendering::sliver_persistent_header::OverScrollHeaderStretchConfiguration"
"material::app_bar::_SliverAppBarDelegate" o-- "rendering::sliver_persistent_header::PersistentHeaderShowOnScreenConfiguration"
"widgets::sliver_persistent_header::SliverPersistentHeaderDelegate" <|-- "material::app_bar::_SliverAppBarDelegate"

class "material::app_bar::SliverAppBar" {
  +Widget? leading
  +bool automaticallyImplyLeading
  +Widget? title
  +List<Widget>? actions
  +Widget? flexibleSpace
  +PreferredSizeWidget? bottom
  +double? elevation
  +double? scrolledUnderElevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +bool forceElevated
  +Color? backgroundColor
  +Color? foregroundColor
  +IconThemeData? iconTheme
  +IconThemeData? actionsIconTheme
  +bool primary
  +bool? centerTitle
  +bool excludeHeaderSemantics
  +double? titleSpacing
  +double? collapsedHeight
  +double? expandedHeight
  +bool floating
  +bool pinned
  +ShapeBorder? shape
  +bool snap
  +bool stretch
  +double stretchTriggerOffset
  +Future<void> Function()? onStretchTrigger
  +double toolbarHeight
  +double? leadingWidth
  +TextStyle? toolbarTextStyle
  +TextStyle? titleTextStyle
  +SystemUiOverlayStyle? systemOverlayStyle
  +bool forceMaterialTransparency
  +Clip? clipBehavior
  -_SliverAppVariant _variant
  +State<SliverAppBar> createState()
}

"material::app_bar::SliverAppBar" o-- "widgets::framework::Widget"
"material::app_bar::SliverAppBar" o-- "widgets::preferred_size::PreferredSizeWidget"
"material::app_bar::SliverAppBar" o-- "dart::ui::Color"
"material::app_bar::SliverAppBar" o-- "widgets::icon_theme_data::IconThemeData"
"material::app_bar::SliverAppBar" o-- "painting::borders::ShapeBorder"
"material::app_bar::SliverAppBar" o-- "foundation::basic_types::Future<void> Function()"
"material::app_bar::SliverAppBar" o-- "painting::text_style::TextStyle"
"material::app_bar::SliverAppBar" o-- "services::system_chrome::SystemUiOverlayStyle"
"material::app_bar::SliverAppBar" o-- "dart::ui::Clip"
"material::app_bar::SliverAppBar" o-- "material::app_bar::_SliverAppVariant"
"widgets::framework::StatefulWidget" <|-- "material::app_bar::SliverAppBar"

class "material::app_bar::_SliverAppBarState" {
  -FloatingHeaderSnapConfiguration? _snapConfiguration
  -OverScrollHeaderStretchConfiguration? _stretchConfiguration
  -PersistentHeaderShowOnScreenConfiguration? _showOnScreenConfiguration
  -void _updateSnapConfiguration()
  -void _updateStretchConfiguration()
  +void initState()
  +void didUpdateWidget()
  +Widget build()
}

"material::app_bar::_SliverAppBarState" o-- "rendering::sliver_persistent_header::FloatingHeaderSnapConfiguration"
"material::app_bar::_SliverAppBarState" o-- "rendering::sliver_persistent_header::OverScrollHeaderStretchConfiguration"
"material::app_bar::_SliverAppBarState" o-- "rendering::sliver_persistent_header::PersistentHeaderShowOnScreenConfiguration"
"widgets::framework::State" <|-- "material::app_bar::_SliverAppBarState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::app_bar::_SliverAppBarState"

class "material::app_bar::_AppBarTitleBox" {
  +_RenderAppBarTitleBox createRenderObject()
  +void updateRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "material::app_bar::_AppBarTitleBox"

class "material::app_bar::_RenderAppBarTitleBox" {
  +Size computeDryLayout()
  +void performLayout()
}

"rendering::shifted_box::RenderAligningShiftedBox" <|-- "material::app_bar::_RenderAppBarTitleBox"

class "material::app_bar::_ScrollUnderFlexibleSpace" {
  +Widget? title
  +Color? foregroundColor
  +_ScrollUnderFlexibleConfig Function(BuildContext) configBuilder
  +TextStyle? titleTextStyle
  +double bottomHeight
  +Widget build()
}

"material::app_bar::_ScrollUnderFlexibleSpace" o-- "widgets::framework::Widget"
"material::app_bar::_ScrollUnderFlexibleSpace" o-- "dart::ui::Color"
"material::app_bar::_ScrollUnderFlexibleSpace" o-- "material::app_bar::_ScrollUnderFlexibleConfig Function(BuildContext)"
"material::app_bar::_ScrollUnderFlexibleSpace" o-- "painting::text_style::TextStyle"
"widgets::framework::StatelessWidget" <|-- "material::app_bar::_ScrollUnderFlexibleSpace"

class "material::app_bar::_ExpandedTitleWithPadding" {
  +EdgeInsetsGeometry padding
  +double maxExtent
  +_RenderExpandedTitleBox createRenderObject()
  +void updateRenderObject()
}

"material::app_bar::_ExpandedTitleWithPadding" o-- "painting::edge_insets::EdgeInsetsGeometry"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "material::app_bar::_ExpandedTitleWithPadding"

class "material::app_bar::_RenderExpandedTitleBox" {
  -EdgeInsets _padding
  -Alignment _titleAlignment
  -double _maxExtent
  +EdgeInsets padding
  +Alignment titleAlignment
  +double maxExtent
  +double computeMaxIntrinsicHeight()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMinIntrinsicWidth()
  -Size _computeSize()
  +Size computeDryLayout()
  +void performLayout()
}

"material::app_bar::_RenderExpandedTitleBox" o-- "painting::edge_insets::EdgeInsets"
"material::app_bar::_RenderExpandedTitleBox" o-- "painting::alignment::Alignment"
"rendering::shifted_box::RenderShiftedBox" <|-- "material::app_bar::_RenderExpandedTitleBox"

class "material::app_bar::_AppBarDefaultsM2" {
  +BuildContext context
  -ThemeData _theme
  -ColorScheme _colors
  +Color? backgroundColor
  +Color? foregroundColor
  +IconThemeData? iconTheme
  +TextStyle? toolbarTextStyle
  +TextStyle? titleTextStyle
}

"material::app_bar::_AppBarDefaultsM2" o-- "widgets::framework::BuildContext"
"material::app_bar::_AppBarDefaultsM2" o-- "material::theme_data::ThemeData"
"material::app_bar::_AppBarDefaultsM2" o-- "material::color_scheme::ColorScheme"
"material::app_bar::_AppBarDefaultsM2" o-- "dart::ui::Color"
"material::app_bar::_AppBarDefaultsM2" o-- "widgets::icon_theme_data::IconThemeData"
"material::app_bar::_AppBarDefaultsM2" o-- "painting::text_style::TextStyle"
"material::app_bar_theme::AppBarTheme" <|-- "material::app_bar::_AppBarDefaultsM2"

class "material::app_bar::_AppBarDefaultsM3" {
  +BuildContext context
  -ThemeData _theme
  -ColorScheme _colors
  -TextTheme _textTheme
  +Color? backgroundColor
  +Color? foregroundColor
  +Color? shadowColor
  +Color? surfaceTintColor
  +IconThemeData? iconTheme
  +IconThemeData? actionsIconTheme
  +TextStyle? toolbarTextStyle
  +TextStyle? titleTextStyle
}

"material::app_bar::_AppBarDefaultsM3" o-- "widgets::framework::BuildContext"
"material::app_bar::_AppBarDefaultsM3" o-- "material::theme_data::ThemeData"
"material::app_bar::_AppBarDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::app_bar::_AppBarDefaultsM3" o-- "material::text_theme::TextTheme"
"material::app_bar::_AppBarDefaultsM3" o-- "dart::ui::Color"
"material::app_bar::_AppBarDefaultsM3" o-- "widgets::icon_theme_data::IconThemeData"
"material::app_bar::_AppBarDefaultsM3" o-- "painting::text_style::TextStyle"
"material::app_bar_theme::AppBarTheme" <|-- "material::app_bar::_AppBarDefaultsM3"

class "material::app_bar::_MediumScrollUnderFlexibleConfig" {
  +BuildContext context
  -ThemeData _theme
  -ColorScheme _colors
  -TextTheme _textTheme
  {static} +double collapsedHeight
  {static} +double expandedHeight
  +TextStyle? collapsedTextStyle
  +TextStyle? expandedTextStyle
  +EdgeInsetsGeometry expandedTitlePadding
}

"material::app_bar::_MediumScrollUnderFlexibleConfig" o-- "widgets::framework::BuildContext"
"material::app_bar::_MediumScrollUnderFlexibleConfig" o-- "material::theme_data::ThemeData"
"material::app_bar::_MediumScrollUnderFlexibleConfig" o-- "material::color_scheme::ColorScheme"
"material::app_bar::_MediumScrollUnderFlexibleConfig" o-- "material::text_theme::TextTheme"
"material::app_bar::_MediumScrollUnderFlexibleConfig" o-- "painting::text_style::TextStyle"
"material::app_bar::_MediumScrollUnderFlexibleConfig" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::app_bar::_ScrollUnderFlexibleConfig" <|-- "material::app_bar::_MediumScrollUnderFlexibleConfig"

class "material::app_bar::_LargeScrollUnderFlexibleConfig" {
  +BuildContext context
  -ThemeData _theme
  -ColorScheme _colors
  -TextTheme _textTheme
  {static} +double collapsedHeight
  {static} +double expandedHeight
  +TextStyle? collapsedTextStyle
  +TextStyle? expandedTextStyle
  +EdgeInsetsGeometry expandedTitlePadding
}

"material::app_bar::_LargeScrollUnderFlexibleConfig" o-- "widgets::framework::BuildContext"
"material::app_bar::_LargeScrollUnderFlexibleConfig" o-- "material::theme_data::ThemeData"
"material::app_bar::_LargeScrollUnderFlexibleConfig" o-- "material::color_scheme::ColorScheme"
"material::app_bar::_LargeScrollUnderFlexibleConfig" o-- "material::text_theme::TextTheme"
"material::app_bar::_LargeScrollUnderFlexibleConfig" o-- "painting::text_style::TextStyle"
"material::app_bar::_LargeScrollUnderFlexibleConfig" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::app_bar::_ScrollUnderFlexibleConfig" <|-- "material::app_bar::_LargeScrollUnderFlexibleConfig"

class "material::app_bar::_SliverAppVariant" {
  +int index
  {static} +List<_SliverAppVariant> values
  {static} +_SliverAppVariant small
  {static} +_SliverAppVariant medium
  {static} +_SliverAppVariant large
}

"material::app_bar::_SliverAppVariant" o-- "material::app_bar::_SliverAppVariant"
"dart::core::Enum" <|-- "material::app_bar::_SliverAppVariant"

abstract class "material::app_bar::_ScrollUnderFlexibleConfig" {
  +TextStyle? collapsedTextStyle
  +TextStyle? expandedTextStyle
  +EdgeInsetsGeometry expandedTitlePadding
}

"material::app_bar::_ScrollUnderFlexibleConfig" o-- "painting::text_style::TextStyle"
"material::app_bar::_ScrollUnderFlexibleConfig" o-- "painting::edge_insets::EdgeInsetsGeometry"

class "material::bottom_app_bar::BottomAppBar" {
  +Widget? child
  +EdgeInsetsGeometry? padding
  +Color? color
  +double? elevation
  +NotchedShape? shape
  +Clip clipBehavior
  +double notchMargin
  +Color? surfaceTintColor
  +Color? shadowColor
  +double? height
  +State<StatefulWidget> createState()
}

"material::bottom_app_bar::BottomAppBar" o-- "widgets::framework::Widget"
"material::bottom_app_bar::BottomAppBar" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::bottom_app_bar::BottomAppBar" o-- "dart::ui::Color"
"material::bottom_app_bar::BottomAppBar" o-- "painting::notched_shapes::NotchedShape"
"material::bottom_app_bar::BottomAppBar" o-- "dart::ui::Clip"
"widgets::framework::StatefulWidget" <|-- "material::bottom_app_bar::BottomAppBar"

class "material::bottom_app_bar::_BottomAppBarState" {
  +ValueListenable<ScaffoldGeometry> geometryListenable
  +GlobalKey<State<StatefulWidget>> materialKey
  +void didChangeDependencies()
  +Widget build()
}

"material::bottom_app_bar::_BottomAppBarState" o-- "foundation::change_notifier::ValueListenable<ScaffoldGeometry>"
"material::bottom_app_bar::_BottomAppBarState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::framework::State" <|-- "material::bottom_app_bar::_BottomAppBarState"

class "material::bottom_app_bar::_BottomAppBarClipper" {
  +ValueListenable<ScaffoldGeometry> geometry
  +NotchedShape shape
  +GlobalKey<State<StatefulWidget>> materialKey
  +double notchMargin
  +double bottomNavigationBarTop
  +Path getClip()
  +bool shouldReclip()
}

"material::bottom_app_bar::_BottomAppBarClipper" o-- "foundation::change_notifier::ValueListenable<ScaffoldGeometry>"
"material::bottom_app_bar::_BottomAppBarClipper" o-- "painting::notched_shapes::NotchedShape"
"material::bottom_app_bar::_BottomAppBarClipper" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"rendering::proxy_box::CustomClipper" <|-- "material::bottom_app_bar::_BottomAppBarClipper"

class "material::bottom_app_bar::_BottomAppBarDefaultsM2" {
  +BuildContext context
  +Color? color
  +Color? surfaceTintColor
  +Color shadowColor
}

"material::bottom_app_bar::_BottomAppBarDefaultsM2" o-- "widgets::framework::BuildContext"
"material::bottom_app_bar::_BottomAppBarDefaultsM2" o-- "dart::ui::Color"
"material::bottom_app_bar_theme::BottomAppBarTheme" <|-- "material::bottom_app_bar::_BottomAppBarDefaultsM2"

class "material::bottom_app_bar::_BottomAppBarDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  +Color? color
  +Color? surfaceTintColor
  +Color? shadowColor
}

"material::bottom_app_bar::_BottomAppBarDefaultsM3" o-- "widgets::framework::BuildContext"
"material::bottom_app_bar::_BottomAppBarDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::bottom_app_bar::_BottomAppBarDefaultsM3" o-- "dart::ui::Color"
"material::bottom_app_bar_theme::BottomAppBarTheme" <|-- "material::bottom_app_bar::_BottomAppBarDefaultsM3"

class "material::user_accounts_drawer_header::_AccountPictures" {
  +Widget? currentAccountPicture
  +List<Widget>? otherAccountsPictures
  +Size? currentAccountPictureSize
  +Size? otherAccountsPicturesSize
  +Widget build()
}

"material::user_accounts_drawer_header::_AccountPictures" o-- "widgets::framework::Widget"
"material::user_accounts_drawer_header::_AccountPictures" o-- "dart::ui::Size"
"widgets::framework::StatelessWidget" <|-- "material::user_accounts_drawer_header::_AccountPictures"

class "material::user_accounts_drawer_header::_AccountDetails" {
  +Widget? accountName
  +Widget? accountEmail
  +void Function()? onTap
  +bool isOpen
  +Color? arrowColor
  +_AccountDetailsState createState()
}

"material::user_accounts_drawer_header::_AccountDetails" o-- "widgets::framework::Widget"
"material::user_accounts_drawer_header::_AccountDetails" o-- "dart::ui::void Function()"
"material::user_accounts_drawer_header::_AccountDetails" o-- "dart::ui::Color"
"widgets::framework::StatefulWidget" <|-- "material::user_accounts_drawer_header::_AccountDetails"

class "material::user_accounts_drawer_header::_AccountDetailsState" {
  -Animation<double> _animation
  -AnimationController _controller
  +void initState()
  +void dispose()
  +void didUpdateWidget()
  +Widget build()
}

"material::user_accounts_drawer_header::_AccountDetailsState" o-- "animation::animation::Animation<double>"
"material::user_accounts_drawer_header::_AccountDetailsState" o-- "animation::animation_controller::AnimationController"
"widgets::framework::State" <|-- "material::user_accounts_drawer_header::_AccountDetailsState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "material::user_accounts_drawer_header::_AccountDetailsState"

class "material::user_accounts_drawer_header::_AccountDetailsLayout" {
  {static} +String accountName
  {static} +String accountEmail
  {static} +String dropdownIcon
  +TextDirection textDirection
  +void performLayout()
  +bool shouldRelayout()
  -Offset _offsetForIcon()
  -Offset _offsetForBottomLine()
  -Offset _offsetForName()
}

"material::user_accounts_drawer_header::_AccountDetailsLayout" o-- "dart::ui::TextDirection"
"rendering::custom_layout::MultiChildLayoutDelegate" <|-- "material::user_accounts_drawer_header::_AccountDetailsLayout"

class "material::user_accounts_drawer_header::UserAccountsDrawerHeader" {
  +Decoration? decoration
  +EdgeInsetsGeometry? margin
  +Widget? currentAccountPicture
  +List<Widget>? otherAccountsPictures
  +Size currentAccountPictureSize
  +Size otherAccountsPicturesSize
  +Widget? accountName
  +Widget? accountEmail
  +void Function()? onDetailsPressed
  +Color arrowColor
  +State<UserAccountsDrawerHeader> createState()
}

"material::user_accounts_drawer_header::UserAccountsDrawerHeader" o-- "painting::decoration::Decoration"
"material::user_accounts_drawer_header::UserAccountsDrawerHeader" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::user_accounts_drawer_header::UserAccountsDrawerHeader" o-- "widgets::framework::Widget"
"material::user_accounts_drawer_header::UserAccountsDrawerHeader" o-- "dart::ui::Size"
"material::user_accounts_drawer_header::UserAccountsDrawerHeader" o-- "dart::ui::void Function()"
"material::user_accounts_drawer_header::UserAccountsDrawerHeader" o-- "dart::ui::Color"
"widgets::framework::StatefulWidget" <|-- "material::user_accounts_drawer_header::UserAccountsDrawerHeader"

class "material::user_accounts_drawer_header::_UserAccountsDrawerHeaderState" {
  -bool _isOpen
  -void _handleDetailsPressed()
  +Widget build()
}

"widgets::framework::State" <|-- "material::user_accounts_drawer_header::_UserAccountsDrawerHeaderState"

class "material::banner::MaterialBanner" {
  +Widget content
  +TextStyle? contentTextStyle
  +List<Widget> actions
  +double? elevation
  +Widget? leading
  +Color? backgroundColor
  +Color? surfaceTintColor
  +Color? shadowColor
  +Color? dividerColor
  +EdgeInsetsGeometry? padding
  +EdgeInsetsGeometry? margin
  +EdgeInsetsGeometry? leadingPadding
  +bool forceActionsBelow
  +OverflowBarAlignment overflowAlignment
  +Animation<double>? animation
  +void Function()? onVisible
  {static} +AnimationController createAnimationController()
  +MaterialBanner withAnimation()
  +State<MaterialBanner> createState()
}

"material::banner::MaterialBanner" o-- "widgets::framework::Widget"
"material::banner::MaterialBanner" o-- "painting::text_style::TextStyle"
"material::banner::MaterialBanner" o-- "dart::ui::Color"
"material::banner::MaterialBanner" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::banner::MaterialBanner" o-- "widgets::overflow_bar::OverflowBarAlignment"
"material::banner::MaterialBanner" o-- "animation::animation::Animation<double>"
"material::banner::MaterialBanner" o-- "dart::ui::void Function()"
"widgets::framework::StatefulWidget" <|-- "material::banner::MaterialBanner"

class "material::banner::_MaterialBannerState" {
  -bool _wasVisible
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  -void _onAnimationStatusChanged()
  +Widget build()
}

"widgets::framework::State" <|-- "material::banner::_MaterialBannerState"

class "material::banner::_BannerDefaultsM2" {
  +BuildContext context
  -ThemeData _theme
  +Color? backgroundColor
  +TextStyle? contentTextStyle
}

"material::banner::_BannerDefaultsM2" o-- "widgets::framework::BuildContext"
"material::banner::_BannerDefaultsM2" o-- "material::theme_data::ThemeData"
"material::banner::_BannerDefaultsM2" o-- "dart::ui::Color"
"material::banner::_BannerDefaultsM2" o-- "painting::text_style::TextStyle"
"material::banner_theme::MaterialBannerThemeData" <|-- "material::banner::_BannerDefaultsM2"

class "material::banner::_BannerDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  -TextTheme _textTheme
  +Color? backgroundColor
  +Color? surfaceTintColor
  +Color? dividerColor
  +TextStyle? contentTextStyle
}

"material::banner::_BannerDefaultsM3" o-- "widgets::framework::BuildContext"
"material::banner::_BannerDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::banner::_BannerDefaultsM3" o-- "material::text_theme::TextTheme"
"material::banner::_BannerDefaultsM3" o-- "dart::ui::Color"
"material::banner::_BannerDefaultsM3" o-- "painting::text_style::TextStyle"
"material::banner_theme::MaterialBannerThemeData" <|-- "material::banner::_BannerDefaultsM3"

class "material::banner::MaterialBannerClosedReason" {
  +int index
  {static} +List<MaterialBannerClosedReason> values
  {static} +MaterialBannerClosedReason dismiss
  {static} +MaterialBannerClosedReason swipe
  {static} +MaterialBannerClosedReason hide
  {static} +MaterialBannerClosedReason remove
}

"material::banner::MaterialBannerClosedReason" o-- "material::banner::MaterialBannerClosedReason"
"dart::core::Enum" <|-- "material::banner::MaterialBannerClosedReason"

class "material::calendar_date_picker::CalendarDatePicker" {
  +DateTime? initialDate
  +DateTime firstDate
  +DateTime lastDate
  +DateTime currentDate
  +void Function(DateTime) onDateChanged
  +void Function(DateTime)? onDisplayedMonthChanged
  +DatePickerMode initialCalendarMode
  +bool Function(DateTime)? selectableDayPredicate
  +State<CalendarDatePicker> createState()
}

"material::calendar_date_picker::CalendarDatePicker" o-- "foundation::basic_types::void Function(DateTime)"
"material::calendar_date_picker::CalendarDatePicker" o-- "material::date::DatePickerMode"
"material::calendar_date_picker::CalendarDatePicker" o-- "material::date::bool Function(DateTime)"
"widgets::framework::StatefulWidget" <|-- "material::calendar_date_picker::CalendarDatePicker"

class "material::calendar_date_picker::_CalendarDatePickerState" {
  -bool _announcedInitialDate
  -DatePickerMode _mode
  -DateTime _currentDisplayedMonthDate
  -DateTime? _selectedDate
  -GlobalKey<State<StatefulWidget>> _monthPickerKey
  -GlobalKey<State<StatefulWidget>> _yearPickerKey
  -MaterialLocalizations _localizations
  -TextDirection _textDirection
  +void initState()
  +void didChangeDependencies()
  -void _vibrate()
  -void _handleModeChanged()
  -void _handleMonthChanged()
  -void _handleYearChanged()
  -void _handleDayChanged()
  -bool _isSelectable()
  -Widget _buildPicker()
  +Widget build()
}

"material::calendar_date_picker::_CalendarDatePickerState" o-- "material::date::DatePickerMode"
"material::calendar_date_picker::_CalendarDatePickerState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"material::calendar_date_picker::_CalendarDatePickerState" o-- "material::material_localizations::MaterialLocalizations"
"material::calendar_date_picker::_CalendarDatePickerState" o-- "dart::ui::TextDirection"
"widgets::framework::State" <|-- "material::calendar_date_picker::_CalendarDatePickerState"

class "material::calendar_date_picker::_DatePickerModeToggleButton" {
  +DatePickerMode mode
  +String title
  +void Function() onTitlePressed
  +_DatePickerModeToggleButtonState createState()
}

"material::calendar_date_picker::_DatePickerModeToggleButton" o-- "material::date::DatePickerMode"
"material::calendar_date_picker::_DatePickerModeToggleButton" o-- "dart::ui::void Function()"
"widgets::framework::StatefulWidget" <|-- "material::calendar_date_picker::_DatePickerModeToggleButton"

class "material::calendar_date_picker::_DatePickerModeToggleButtonState" {
  -AnimationController _controller
  +void initState()
  +void didUpdateWidget()
  +Widget build()
  +void dispose()
}

"material::calendar_date_picker::_DatePickerModeToggleButtonState" o-- "animation::animation_controller::AnimationController"
"widgets::framework::State" <|-- "material::calendar_date_picker::_DatePickerModeToggleButtonState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "material::calendar_date_picker::_DatePickerModeToggleButtonState"

class "material::calendar_date_picker::_MonthPicker" {
  +DateTime initialMonth
  +DateTime currentDate
  +DateTime firstDate
  +DateTime lastDate
  +DateTime? selectedDate
  +void Function(DateTime) onChanged
  +void Function(DateTime) onDisplayedMonthChanged
  +bool Function(DateTime)? selectableDayPredicate
  +_MonthPickerState createState()
}

"material::calendar_date_picker::_MonthPicker" o-- "foundation::basic_types::void Function(DateTime)"
"material::calendar_date_picker::_MonthPicker" o-- "material::date::bool Function(DateTime)"
"widgets::framework::StatefulWidget" <|-- "material::calendar_date_picker::_MonthPicker"

class "material::calendar_date_picker::_MonthPickerState" {
  -GlobalKey<State<StatefulWidget>> _pageViewKey
  -DateTime _currentMonth
  -PageController _pageController
  -MaterialLocalizations _localizations
  -TextDirection _textDirection
  -Map<ShortcutActivator, Intent>? _shortcutMap
  -Map<Type, Action<Intent>>? _actionMap
  -FocusNode _dayGridFocus
  -DateTime? _focusedDay
  {static} -Map<TraversalDirection, int> _directionOffset
  -bool _isDisplayingFirstMonth
  -bool _isDisplayingLastMonth
  +void initState()
  +void didChangeDependencies()
  +void dispose()
  -void _handleDateSelected()
  -void _handleMonthPageChanged()
  -DateTime? _focusableDayForMonth()
  -void _handleNextMonth()
  -void _handlePreviousMonth()
  -void _showMonth()
  -void _handleGridFocusChange()
  -void _handleGridNextFocus()
  -void _handleGridPreviousFocus()
  -void _handleDirectionFocus()
  -int _dayDirectionOffset()
  -DateTime? _nextDateInDirection()
  -bool _isSelectable()
  -Widget _buildItems()
  +Widget build()
}

"material::calendar_date_picker::_MonthPickerState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"material::calendar_date_picker::_MonthPickerState" o-- "widgets::page_view::PageController"
"material::calendar_date_picker::_MonthPickerState" o-- "material::material_localizations::MaterialLocalizations"
"material::calendar_date_picker::_MonthPickerState" o-- "dart::ui::TextDirection"
"material::calendar_date_picker::_MonthPickerState" o-- "widgets::focus_manager::FocusNode"
"widgets::framework::State" <|-- "material::calendar_date_picker::_MonthPickerState"

class "material::calendar_date_picker::_FocusedDate" {
  +DateTime? date
  +bool updateShouldNotify()
  {static} +DateTime? maybeOf()
}

"widgets::framework::InheritedWidget" <|-- "material::calendar_date_picker::_FocusedDate"

class "material::calendar_date_picker::_DayPicker" {
  +DateTime? selectedDate
  +DateTime currentDate
  +void Function(DateTime) onChanged
  +DateTime firstDate
  +DateTime lastDate
  +DateTime displayedMonth
  +bool Function(DateTime)? selectableDayPredicate
  +_DayPickerState createState()
}

"material::calendar_date_picker::_DayPicker" o-- "foundation::basic_types::void Function(DateTime)"
"material::calendar_date_picker::_DayPicker" o-- "material::date::bool Function(DateTime)"
"widgets::framework::StatefulWidget" <|-- "material::calendar_date_picker::_DayPicker"

class "material::calendar_date_picker::_DayPickerState" {
  -List<FocusNode> _dayFocusNodes
  +void initState()
  +void didChangeDependencies()
  +void dispose()
  -List<Widget> _dayHeaders()
  +Widget build()
}

"widgets::framework::State" <|-- "material::calendar_date_picker::_DayPickerState"

class "material::calendar_date_picker::_Day" {
  +DateTime day
  +bool isDisabled
  +bool isSelectedDay
  +bool isToday
  +void Function(DateTime) onChanged
  +FocusNode? focusNode
  +State<_Day> createState()
}

"material::calendar_date_picker::_Day" o-- "foundation::basic_types::void Function(DateTime)"
"material::calendar_date_picker::_Day" o-- "widgets::focus_manager::FocusNode"
"widgets::framework::StatefulWidget" <|-- "material::calendar_date_picker::_Day"

class "material::calendar_date_picker::_DayState" {
  -MaterialStatesController _statesController
  +Widget build()
  +void dispose()
}

"material::calendar_date_picker::_DayState" o-- "material::material_state::MaterialStatesController"
"widgets::framework::State" <|-- "material::calendar_date_picker::_DayState"

class "material::calendar_date_picker::_DayPickerGridDelegate" {
  +SliverGridLayout getLayout()
  +bool shouldRelayout()
}

"rendering::sliver_grid::SliverGridDelegate" <|-- "material::calendar_date_picker::_DayPickerGridDelegate"

class "material::calendar_date_picker::YearPicker" {
  +DateTime currentDate
  +DateTime firstDate
  +DateTime lastDate
  +DateTime? selectedDate
  +void Function(DateTime) onChanged
  +DragStartBehavior dragStartBehavior
  +State<YearPicker> createState()
}

"material::calendar_date_picker::YearPicker" o-- "foundation::basic_types::void Function(DateTime)"
"material::calendar_date_picker::YearPicker" o-- "gestures::recognizer::DragStartBehavior"
"widgets::framework::StatefulWidget" <|-- "material::calendar_date_picker::YearPicker"

class "material::calendar_date_picker::_YearPickerState" {
  -ScrollController? _scrollController
  -MaterialStatesController _statesController
  {static} +int minYears
  -int _itemCount
  +void initState()
  +void dispose()
  +void didUpdateWidget()
  -double _scrollOffsetForYear()
  -Widget _buildYearItem()
  +Widget build()
}

"material::calendar_date_picker::_YearPickerState" o-- "widgets::scroll_controller::ScrollController"
"material::calendar_date_picker::_YearPickerState" o-- "material::material_state::MaterialStatesController"
"widgets::framework::State" <|-- "material::calendar_date_picker::_YearPickerState"

class "material::calendar_date_picker::_YearPickerGridDelegate" {
  +SliverGridLayout getLayout()
  +bool shouldRelayout()
}

"rendering::sliver_grid::SliverGridDelegate" <|-- "material::calendar_date_picker::_YearPickerGridDelegate"

class "material::navigation_drawer_theme::NavigationDrawerThemeData" {
  +double? tileHeight
  +Color? backgroundColor
  +double? elevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +Color? indicatorColor
  +ShapeBorder? indicatorShape
  +Size? indicatorSize
  +MaterialStateProperty<TextStyle?>? labelTextStyle
  +MaterialStateProperty<IconThemeData?>? iconTheme
  +int hashCode
  +NavigationDrawerThemeData copyWith()
  {static} +NavigationDrawerThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::navigation_drawer_theme::NavigationDrawerThemeData" o-- "dart::ui::Color"
"material::navigation_drawer_theme::NavigationDrawerThemeData" o-- "painting::borders::ShapeBorder"
"material::navigation_drawer_theme::NavigationDrawerThemeData" o-- "dart::ui::Size"
"material::navigation_drawer_theme::NavigationDrawerThemeData" o-- "material::material_state::MaterialStateProperty<TextStyle>"
"material::navigation_drawer_theme::NavigationDrawerThemeData" o-- "material::material_state::MaterialStateProperty<IconThemeData>"
"foundation::diagnostics::Diagnosticable" <|-- "material::navigation_drawer_theme::NavigationDrawerThemeData"

class "material::navigation_drawer_theme::NavigationDrawerTheme" {
  +NavigationDrawerThemeData data
  {static} +NavigationDrawerThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::navigation_drawer_theme::NavigationDrawerTheme" o-- "material::navigation_drawer_theme::NavigationDrawerThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::navigation_drawer_theme::NavigationDrawerTheme"

class "material::input_chip::InputChip" {
  +Widget? avatar
  +Widget label
  +TextStyle? labelStyle
  +EdgeInsetsGeometry? labelPadding
  +bool selected
  +bool isEnabled
  +void Function(bool)? onSelected
  +Widget? deleteIcon
  +void Function()? onDeleted
  +Color? deleteIconColor
  +String? deleteButtonTooltipMessage
  +void Function()? onPressed
  +double? pressElevation
  +Color? disabledColor
  +Color? selectedColor
  +String? tooltip
  +BorderSide? side
  +OutlinedBorder? shape
  +Clip clipBehavior
  +FocusNode? focusNode
  +bool autofocus
  +MaterialStateProperty<Color?>? color
  +Color? backgroundColor
  +EdgeInsetsGeometry? padding
  +VisualDensity? visualDensity
  +MaterialTapTargetSize? materialTapTargetSize
  +double? elevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +Color? selectedShadowColor
  +bool? showCheckmark
  +Color? checkmarkColor
  +ShapeBorder avatarBorder
  +IconThemeData? iconTheme
  +Widget build()
}

"material::input_chip::InputChip" o-- "widgets::framework::Widget"
"material::input_chip::InputChip" o-- "painting::text_style::TextStyle"
"material::input_chip::InputChip" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::input_chip::InputChip" o-- "foundation::basic_types::void Function(bool)"
"material::input_chip::InputChip" o-- "dart::ui::void Function()"
"material::input_chip::InputChip" o-- "dart::ui::Color"
"material::input_chip::InputChip" o-- "painting::borders::BorderSide"
"material::input_chip::InputChip" o-- "painting::borders::OutlinedBorder"
"material::input_chip::InputChip" o-- "dart::ui::Clip"
"material::input_chip::InputChip" o-- "widgets::focus_manager::FocusNode"
"material::input_chip::InputChip" o-- "material::material_state::MaterialStateProperty<Color>"
"material::input_chip::InputChip" o-- "material::theme_data::VisualDensity"
"material::input_chip::InputChip" o-- "material::theme_data::MaterialTapTargetSize"
"material::input_chip::InputChip" o-- "painting::borders::ShapeBorder"
"material::input_chip::InputChip" o-- "widgets::icon_theme_data::IconThemeData"
"widgets::framework::StatelessWidget" <|-- "material::input_chip::InputChip"
"material::chip::ChipAttributes" <|-- "material::input_chip::InputChip"
"material::chip::DeletableChipAttributes" <|-- "material::input_chip::InputChip"
"material::chip::SelectableChipAttributes" <|-- "material::input_chip::InputChip"
"material::chip::CheckmarkableChipAttributes" <|-- "material::input_chip::InputChip"
"material::chip::DisabledChipAttributes" <|-- "material::input_chip::InputChip"
"material::chip::TappableChipAttributes" <|-- "material::input_chip::InputChip"

class "material::input_chip::_InputChipDefaultsM3" {
  +BuildContext context
  +bool isEnabled
  +bool isSelected
  -ColorScheme _colors
  -TextTheme _textTheme
  +TextStyle? labelStyle
  +MaterialStateProperty<Color?>? color
  +Color? shadowColor
  +Color? surfaceTintColor
  +Color? checkmarkColor
  +Color? deleteIconColor
  +BorderSide? side
  +IconThemeData? iconTheme
  +EdgeInsetsGeometry? padding
  +EdgeInsetsGeometry? labelPadding
}

"material::input_chip::_InputChipDefaultsM3" o-- "widgets::framework::BuildContext"
"material::input_chip::_InputChipDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::input_chip::_InputChipDefaultsM3" o-- "material::text_theme::TextTheme"
"material::input_chip::_InputChipDefaultsM3" o-- "painting::text_style::TextStyle"
"material::input_chip::_InputChipDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::input_chip::_InputChipDefaultsM3" o-- "dart::ui::Color"
"material::input_chip::_InputChipDefaultsM3" o-- "painting::borders::BorderSide"
"material::input_chip::_InputChipDefaultsM3" o-- "widgets::icon_theme_data::IconThemeData"
"material::input_chip::_InputChipDefaultsM3" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::chip_theme::ChipThemeData" <|-- "material::input_chip::_InputChipDefaultsM3"

class "material::filled_button_theme::FilledButtonThemeData" {
  +ButtonStyle? style
  +int hashCode
  {static} +FilledButtonThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::filled_button_theme::FilledButtonThemeData" o-- "material::button_style::ButtonStyle"
"foundation::diagnostics::Diagnosticable" <|-- "material::filled_button_theme::FilledButtonThemeData"

class "material::filled_button_theme::FilledButtonTheme" {
  +FilledButtonThemeData data
  {static} +FilledButtonThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::filled_button_theme::FilledButtonTheme" o-- "material::filled_button_theme::FilledButtonThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::filled_button_theme::FilledButtonTheme"

abstract class "material::input_border::InputBorder" {
  {static} +InputBorder none
  +BorderSide borderSide
  +bool isOutline
  +InputBorder copyWith()
  +void paint()
}

"material::input_border::InputBorder" o-- "material::input_border::InputBorder"
"material::input_border::InputBorder" o-- "painting::borders::BorderSide"
"painting::borders::ShapeBorder" <|-- "material::input_border::InputBorder"

class "material::input_border::_NoInputBorder" {
  +bool isOutline
  +EdgeInsetsGeometry dimensions
  +bool preferPaintInterior
  +_NoInputBorder copyWith()
  +_NoInputBorder scale()
  +Path getInnerPath()
  +Path getOuterPath()
  +void paintInterior()
  +void paint()
}

"material::input_border::_NoInputBorder" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::input_border::InputBorder" <|-- "material::input_border::_NoInputBorder"

class "material::input_border::UnderlineInputBorder" {
  +BorderRadius borderRadius
  +bool isOutline
  +EdgeInsetsGeometry dimensions
  +bool preferPaintInterior
  +int hashCode
  +UnderlineInputBorder copyWith()
  +UnderlineInputBorder scale()
  +Path getInnerPath()
  +Path getOuterPath()
  +void paintInterior()
  +ShapeBorder? lerpFrom()
  +ShapeBorder? lerpTo()
  +void paint()
  +bool ==()
}

"material::input_border::UnderlineInputBorder" o-- "painting::border_radius::BorderRadius"
"material::input_border::UnderlineInputBorder" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::input_border::InputBorder" <|-- "material::input_border::UnderlineInputBorder"

class "material::input_border::OutlineInputBorder" {
  +double gapPadding
  +BorderRadius borderRadius
  +bool isOutline
  +EdgeInsetsGeometry dimensions
  +bool preferPaintInterior
  +int hashCode
  {static} -bool _cornersAreCircular()
  +OutlineInputBorder copyWith()
  +OutlineInputBorder scale()
  +ShapeBorder? lerpFrom()
  +ShapeBorder? lerpTo()
  +Path getInnerPath()
  +Path getOuterPath()
  +void paintInterior()
  -Path _gapBorderPath()
  +void paint()
  +bool ==()
}

"material::input_border::OutlineInputBorder" o-- "painting::border_radius::BorderRadius"
"material::input_border::OutlineInputBorder" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::input_border::InputBorder" <|-- "material::input_border::OutlineInputBorder"

class "material::chip::ChipAttributes" {
  +Widget label
  +Widget? avatar
  +TextStyle? labelStyle
  +BorderSide? side
  +OutlinedBorder? shape
  +Clip clipBehavior
  +FocusNode? focusNode
  +bool autofocus
  +MaterialStateProperty<Color?>? color
  +Color? backgroundColor
  +EdgeInsetsGeometry? padding
  +VisualDensity? visualDensity
  +EdgeInsetsGeometry? labelPadding
  +MaterialTapTargetSize? materialTapTargetSize
  +double? elevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +IconThemeData? iconTheme
}

"material::chip::ChipAttributes" o-- "widgets::framework::Widget"
"material::chip::ChipAttributes" o-- "painting::text_style::TextStyle"
"material::chip::ChipAttributes" o-- "painting::borders::BorderSide"
"material::chip::ChipAttributes" o-- "painting::borders::OutlinedBorder"
"material::chip::ChipAttributes" o-- "dart::ui::Clip"
"material::chip::ChipAttributes" o-- "widgets::focus_manager::FocusNode"
"material::chip::ChipAttributes" o-- "material::material_state::MaterialStateProperty<Color>"
"material::chip::ChipAttributes" o-- "dart::ui::Color"
"material::chip::ChipAttributes" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::chip::ChipAttributes" o-- "material::theme_data::VisualDensity"
"material::chip::ChipAttributes" o-- "material::theme_data::MaterialTapTargetSize"
"material::chip::ChipAttributes" o-- "widgets::icon_theme_data::IconThemeData"

class "material::chip::DeletableChipAttributes" {
  +Widget? deleteIcon
  +void Function()? onDeleted
  +Color? deleteIconColor
  +String? deleteButtonTooltipMessage
}

"material::chip::DeletableChipAttributes" o-- "widgets::framework::Widget"
"material::chip::DeletableChipAttributes" o-- "dart::ui::void Function()"
"material::chip::DeletableChipAttributes" o-- "dart::ui::Color"

class "material::chip::CheckmarkableChipAttributes" {
  +bool? showCheckmark
  +Color? checkmarkColor
}

"material::chip::CheckmarkableChipAttributes" o-- "dart::ui::Color"

class "material::chip::SelectableChipAttributes" {
  +bool selected
  +void Function(bool)? onSelected
  +double? pressElevation
  +Color? selectedColor
  +Color? selectedShadowColor
  +String? tooltip
  +ShapeBorder avatarBorder
}

"material::chip::SelectableChipAttributes" o-- "foundation::basic_types::void Function(bool)"
"material::chip::SelectableChipAttributes" o-- "dart::ui::Color"
"material::chip::SelectableChipAttributes" o-- "painting::borders::ShapeBorder"

class "material::chip::DisabledChipAttributes" {
  +bool isEnabled
  +Color? disabledColor
}

"material::chip::DisabledChipAttributes" o-- "dart::ui::Color"

class "material::chip::TappableChipAttributes" {
  +void Function()? onPressed
  +double? pressElevation
  +String? tooltip
}

"material::chip::TappableChipAttributes" o-- "dart::ui::void Function()"

class "material::chip::Chip" {
  +Widget? avatar
  +Widget label
  +TextStyle? labelStyle
  +EdgeInsetsGeometry? labelPadding
  +BorderSide? side
  +OutlinedBorder? shape
  +Clip clipBehavior
  +FocusNode? focusNode
  +bool autofocus
  +MaterialStateProperty<Color?>? color
  +Color? backgroundColor
  +EdgeInsetsGeometry? padding
  +VisualDensity? visualDensity
  +Widget? deleteIcon
  +void Function()? onDeleted
  +Color? deleteIconColor
  +String? deleteButtonTooltipMessage
  +MaterialTapTargetSize? materialTapTargetSize
  +double? elevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +IconThemeData? iconTheme
  +Widget build()
}

"material::chip::Chip" o-- "widgets::framework::Widget"
"material::chip::Chip" o-- "painting::text_style::TextStyle"
"material::chip::Chip" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::chip::Chip" o-- "painting::borders::BorderSide"
"material::chip::Chip" o-- "painting::borders::OutlinedBorder"
"material::chip::Chip" o-- "dart::ui::Clip"
"material::chip::Chip" o-- "widgets::focus_manager::FocusNode"
"material::chip::Chip" o-- "material::material_state::MaterialStateProperty<Color>"
"material::chip::Chip" o-- "dart::ui::Color"
"material::chip::Chip" o-- "material::theme_data::VisualDensity"
"material::chip::Chip" o-- "dart::ui::void Function()"
"material::chip::Chip" o-- "material::theme_data::MaterialTapTargetSize"
"material::chip::Chip" o-- "widgets::icon_theme_data::IconThemeData"
"widgets::framework::StatelessWidget" <|-- "material::chip::Chip"
"material::chip::ChipAttributes" <|-- "material::chip::Chip"
"material::chip::DeletableChipAttributes" <|-- "material::chip::Chip"

class "material::chip::RawChip" {
  +ChipThemeData? defaultProperties
  +Widget? avatar
  +Widget label
  +TextStyle? labelStyle
  +EdgeInsetsGeometry? labelPadding
  +Widget deleteIcon
  +void Function()? onDeleted
  +Color? deleteIconColor
  +String? deleteButtonTooltipMessage
  +void Function(bool)? onSelected
  +void Function()? onPressed
  +double? pressElevation
  +bool selected
  +bool isEnabled
  +Color? disabledColor
  +Color? selectedColor
  +String? tooltip
  +BorderSide? side
  +OutlinedBorder? shape
  +Clip clipBehavior
  +FocusNode? focusNode
  +bool autofocus
  +MaterialStateProperty<Color?>? color
  +Color? backgroundColor
  +EdgeInsetsGeometry? padding
  +VisualDensity? visualDensity
  +MaterialTapTargetSize? materialTapTargetSize
  +double? elevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +IconThemeData? iconTheme
  +Color? selectedShadowColor
  +bool? showCheckmark
  +Color? checkmarkColor
  +ShapeBorder avatarBorder
  +bool tapEnabled
  +State<RawChip> createState()
}

"material::chip::RawChip" o-- "material::chip_theme::ChipThemeData"
"material::chip::RawChip" o-- "widgets::framework::Widget"
"material::chip::RawChip" o-- "painting::text_style::TextStyle"
"material::chip::RawChip" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::chip::RawChip" o-- "dart::ui::void Function()"
"material::chip::RawChip" o-- "dart::ui::Color"
"material::chip::RawChip" o-- "foundation::basic_types::void Function(bool)"
"material::chip::RawChip" o-- "painting::borders::BorderSide"
"material::chip::RawChip" o-- "painting::borders::OutlinedBorder"
"material::chip::RawChip" o-- "dart::ui::Clip"
"material::chip::RawChip" o-- "widgets::focus_manager::FocusNode"
"material::chip::RawChip" o-- "material::material_state::MaterialStateProperty<Color>"
"material::chip::RawChip" o-- "material::theme_data::VisualDensity"
"material::chip::RawChip" o-- "material::theme_data::MaterialTapTargetSize"
"material::chip::RawChip" o-- "widgets::icon_theme_data::IconThemeData"
"material::chip::RawChip" o-- "painting::borders::ShapeBorder"
"widgets::framework::StatefulWidget" <|-- "material::chip::RawChip"
"material::chip::ChipAttributes" <|-- "material::chip::RawChip"
"material::chip::DeletableChipAttributes" <|-- "material::chip::RawChip"
"material::chip::SelectableChipAttributes" <|-- "material::chip::RawChip"
"material::chip::CheckmarkableChipAttributes" <|-- "material::chip::RawChip"
"material::chip::DisabledChipAttributes" <|-- "material::chip::RawChip"
"material::chip::TappableChipAttributes" <|-- "material::chip::RawChip"

class "material::chip::_RawChipState" {
  {static} +Duration pressedAnimationDuration
  +AnimationController selectController
  +AnimationController avatarDrawerController
  +AnimationController deleteDrawerController
  +AnimationController enableController
  +Animation<double> checkmarkAnimation
  +Animation<double> avatarDrawerAnimation
  +Animation<double> deleteDrawerAnimation
  +Animation<double> enableAnimation
  +Animation<double> selectionFade
  -bool _isTapping
  +bool hasDeleteButton
  +bool hasAvatar
  +bool canTap
  +bool isTapping
  +void initState()
  +void dispose()
  -void _handleTapDown()
  -void _handleTapCancel()
  -void _handleTap()
  -OutlinedBorder _getShape()
  +Color? resolveColor()
  -Color? _getBackgroundColor()
  +void didUpdateWidget()
  -Widget? _wrapWithTooltip()
  -Widget? _buildDeleteIcon()
  +Widget build()
}

"material::chip::_RawChipState" o-- "animation::animation_controller::AnimationController"
"material::chip::_RawChipState" o-- "animation::animation::Animation<double>"
"widgets::framework::State" <|-- "material::chip::_RawChipState"
"material::material_state_mixin::MaterialStateMixin" <|-- "material::chip::_RawChipState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::chip::_RawChipState"

class "material::chip::_IndividualOverrides" {
  +MaterialStateProperty<Color?>? color
  +Color? backgroundColor
  +Color? selectedColor
  +Color? disabledColor
  +Color? resolve()
}

"material::chip::_IndividualOverrides" o-- "material::material_state::MaterialStateProperty<Color>"
"material::chip::_IndividualOverrides" o-- "dart::ui::Color"
"material::material_state::MaterialStateProperty" <|-- "material::chip::_IndividualOverrides"

class "material::chip::_ChipRedirectingHitDetectionWidget" {
  +BoxConstraints constraints
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"material::chip::_ChipRedirectingHitDetectionWidget" o-- "rendering::box::BoxConstraints"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "material::chip::_ChipRedirectingHitDetectionWidget"

class "material::chip::_RenderChipRedirectingHitDetection" {
  +bool hitTest()
}

"rendering::proxy_box::RenderConstrainedBox" <|-- "material::chip::_RenderChipRedirectingHitDetection"

class "material::chip::_ChipRenderWidget" {
  +_ChipRenderTheme theme
  +bool? value
  +bool? isEnabled
  +Animation<double> checkmarkAnimation
  +Animation<double> avatarDrawerAnimation
  +Animation<double> deleteDrawerAnimation
  +Animation<double> enableAnimation
  +ShapeBorder? avatarBorder
  +Iterable<_ChipSlot> slots
  +Widget? childForSlot()
  +void updateRenderObject()
  +SlottedContainerRenderObjectMixin<dynamic> createRenderObject()
}

"material::chip::_ChipRenderWidget" o-- "material::chip::_ChipRenderTheme"
"material::chip::_ChipRenderWidget" o-- "animation::animation::Animation<double>"
"material::chip::_ChipRenderWidget" o-- "painting::borders::ShapeBorder"

class "material::chip::_ChipRenderTheme" {
  +Widget avatar
  +Widget label
  +Widget deleteIcon
  +Brightness brightness
  +EdgeInsets padding
  +VisualDensity visualDensity
  +EdgeInsets labelPadding
  +bool showAvatar
  +bool showCheckmark
  +Color? checkmarkColor
  +bool canTapBody
  +int hashCode
  +bool ==()
}

"material::chip::_ChipRenderTheme" o-- "widgets::framework::Widget"
"material::chip::_ChipRenderTheme" o-- "dart::ui::Brightness"
"material::chip::_ChipRenderTheme" o-- "painting::edge_insets::EdgeInsets"
"material::chip::_ChipRenderTheme" o-- "material::theme_data::VisualDensity"
"material::chip::_ChipRenderTheme" o-- "dart::ui::Color"

class "material::chip::_RenderChip" {
  +bool? value
  +bool? isEnabled
  -Rect _deleteButtonRect
  -Rect _pressRect
  +Animation<double> checkmarkAnimation
  +Animation<double> avatarDrawerAnimation
  +Animation<double> deleteDrawerAnimation
  +Animation<double> enableAnimation
  +ShapeBorder? avatarBorder
  -_ChipRenderTheme _theme
  -TextDirection? _textDirection
  {static} +ColorTween selectionScrimTween
  -LayerHandle<OpacityLayer> _avatarOpacityLayerHandler
  -LayerHandle<OpacityLayer> _childOpacityLayerHandler
  {static} -bool _debugShowTapTargetOutlines
  +RenderBox? avatar
  +RenderBox? deleteIcon
  +RenderBox? label
  +_ChipRenderTheme theme
  +TextDirection? textDirection
  +Iterable<RenderBox> children
  +bool isDrawingCheckmark
  +bool deleteIconShowing
  +bool sizedByParent
  -Color _disabledColor
  {static} -double _minWidth()
  {static} -double _maxWidth()
  {static} -double _minHeight()
  {static} -Size _boxSize()
  {static} -Rect _boxRect()
  {static} -BoxParentData _boxParentData()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double? computeDistanceToActualBaseline()
  -Size _layoutLabel()
  -Size _layoutAvatar()
  -Size _layoutDeleteIcon()
  +bool hitTest()
  +Size computeDryLayout()
  -_ChipSizes _computeSizes()
  +void performLayout()
  -void _paintCheck()
  -void _paintSelectionOverlay()
  -void _paintAvatar()
  -void _paintChild()
  +void dispose()
  +void paint()
  +void debugPaint()
  +bool hitTestSelf()
}

"material::chip::_RenderChip" o-- "dart::ui::Rect"
"material::chip::_RenderChip" o-- "animation::animation::Animation<double>"
"material::chip::_RenderChip" o-- "painting::borders::ShapeBorder"
"material::chip::_RenderChip" o-- "material::chip::_ChipRenderTheme"
"material::chip::_RenderChip" o-- "dart::ui::TextDirection"
"material::chip::_RenderChip" o-- "animation::tween::ColorTween"
"material::chip::_RenderChip" o-- "rendering::layer::LayerHandle<OpacityLayer>"
"material::chip::_RenderChip" o-- "rendering::box::RenderBox"
"material::chip::_RenderChip" o-- "dart::ui::Color"
"rendering::box::RenderBox" <|-- "material::chip::_RenderChip"
"widgets::slotted_render_object_widget::SlottedContainerRenderObjectMixin" <|-- "material::chip::_RenderChip"

class "material::chip::_ChipSizes" {
  +Size size
  +Size overall
  +double content
  +Size avatar
  +Size label
  +Size deleteIcon
  +Offset densityAdjustment
}

"material::chip::_ChipSizes" o-- "dart::ui::Size"
"material::chip::_ChipSizes" o-- "dart::ui::Offset"

class "material::chip::_UnconstrainedInkSplashFactory" {
  +InteractiveInkFeatureFactory parentFactory
  +InteractiveInkFeature create()
}

"material::chip::_UnconstrainedInkSplashFactory" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::ink_well::InteractiveInkFeatureFactory" <|-- "material::chip::_UnconstrainedInkSplashFactory"

class "material::chip::_ChipDefaultsM3" {
  +BuildContext context
  +bool isEnabled
  -ColorScheme _colors
  -TextTheme _textTheme
  +TextStyle? labelStyle
  +MaterialStateProperty<Color?>? color
  +Color? shadowColor
  +Color? surfaceTintColor
  +Color? checkmarkColor
  +Color? deleteIconColor
  +BorderSide? side
  +IconThemeData? iconTheme
  +EdgeInsetsGeometry? padding
  +EdgeInsetsGeometry? labelPadding
}

"material::chip::_ChipDefaultsM3" o-- "widgets::framework::BuildContext"
"material::chip::_ChipDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::chip::_ChipDefaultsM3" o-- "material::text_theme::TextTheme"
"material::chip::_ChipDefaultsM3" o-- "painting::text_style::TextStyle"
"material::chip::_ChipDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::chip::_ChipDefaultsM3" o-- "dart::ui::Color"
"material::chip::_ChipDefaultsM3" o-- "painting::borders::BorderSide"
"material::chip::_ChipDefaultsM3" o-- "widgets::icon_theme_data::IconThemeData"
"material::chip::_ChipDefaultsM3" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::chip_theme::ChipThemeData" <|-- "material::chip::_ChipDefaultsM3"

class "material::chip::_ChipSlot" {
  +int index
  {static} +List<_ChipSlot> values
  {static} +_ChipSlot label
  {static} +_ChipSlot avatar
  {static} +_ChipSlot deleteIcon
}

"material::chip::_ChipSlot" o-- "material::chip::_ChipSlot"
"dart::core::Enum" <|-- "material::chip::_ChipSlot"

class "material::dialog_theme::DialogTheme" {
  +Color? backgroundColor
  +double? elevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +ShapeBorder? shape
  +AlignmentGeometry? alignment
  +TextStyle? titleTextStyle
  +TextStyle? contentTextStyle
  +EdgeInsetsGeometry? actionsPadding
  +Color? iconColor
  +int hashCode
  +DialogTheme copyWith()
  {static} +DialogTheme of()
  {static} +DialogTheme lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::dialog_theme::DialogTheme" o-- "dart::ui::Color"
"material::dialog_theme::DialogTheme" o-- "painting::borders::ShapeBorder"
"material::dialog_theme::DialogTheme" o-- "painting::alignment::AlignmentGeometry"
"material::dialog_theme::DialogTheme" o-- "painting::text_style::TextStyle"
"material::dialog_theme::DialogTheme" o-- "painting::edge_insets::EdgeInsetsGeometry"
"foundation::diagnostics::Diagnosticable" <|-- "material::dialog_theme::DialogTheme"

class "material::paginated_data_table::PaginatedDataTable" {
  +Widget? header
  +List<Widget>? actions
  +List<DataColumn> columns
  +int? sortColumnIndex
  +bool sortAscending
  +void Function(bool?)? onSelectAll
  +double? dataRowMinHeight
  +double? dataRowMaxHeight
  +double headingRowHeight
  +double horizontalMargin
  +double columnSpacing
  +bool showCheckboxColumn
  +bool showFirstLastButtons
  +int? initialFirstRowIndex
  +void Function(int)? onPageChanged
  +int rowsPerPage
  {static} +int defaultRowsPerPage
  +List<int> availableRowsPerPage
  +void Function(int?)? onRowsPerPageChanged
  +DataTableSource source
  +DragStartBehavior dragStartBehavior
  +double? checkboxHorizontalMargin
  +Color? arrowHeadColor
  +ScrollController? controller
  +bool? primary
  +MaterialStateProperty<Color?>? headingRowColor
  +double? dataRowHeight
  +PaginatedDataTableState createState()
}

"material::paginated_data_table::PaginatedDataTable" o-- "widgets::framework::Widget"
"material::paginated_data_table::PaginatedDataTable" o-- "foundation::basic_types::void Function(bool)"
"material::paginated_data_table::PaginatedDataTable" o-- "foundation::basic_types::void Function(int)"
"material::paginated_data_table::PaginatedDataTable" o-- "material::data_table_source::DataTableSource"
"material::paginated_data_table::PaginatedDataTable" o-- "gestures::recognizer::DragStartBehavior"
"material::paginated_data_table::PaginatedDataTable" o-- "dart::ui::Color"
"material::paginated_data_table::PaginatedDataTable" o-- "widgets::scroll_controller::ScrollController"
"material::paginated_data_table::PaginatedDataTable" o-- "material::material_state::MaterialStateProperty<Color>"
"widgets::framework::StatefulWidget" <|-- "material::paginated_data_table::PaginatedDataTable"

class "material::paginated_data_table::PaginatedDataTableState" {
  -int _firstRowIndex
  -int _rowCount
  -bool _rowCountApproximate
  -int _selectedRowCount
  -Map<int, DataRow?> _rows
  -GlobalKey<State<StatefulWidget>> _tableKey
  +void initState()
  +void didUpdateWidget()
  +void reassemble()
  +void dispose()
  -void _handleDataSourceChanged()
  -void _updateCaches()
  +void pageTo()
  -DataRow _getBlankRowFor()
  -DataRow _getProgressIndicatorRowFor()
  -List<DataRow> _getRows()
  -void _handleFirst()
  -void _handlePrevious()
  -void _handleNext()
  -void _handleLast()
  -bool _isNextPageUnavailable()
  +Widget build()
}

"material::paginated_data_table::PaginatedDataTableState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::framework::State" <|-- "material::paginated_data_table::PaginatedDataTableState"

abstract class "material::material_state::MaterialStateColor" {
  {static} +MaterialStateColor resolveWith()
  +Color resolve()
}

"dart::ui::Color" <|-- "material::material_state::MaterialStateColor"
"material::material_state::MaterialStateProperty" <|-- "material::material_state::MaterialStateColor"

class "material::material_state::_MaterialStateColor" {
  -Color Function(Set<MaterialState>) _resolve
  {static} -Set<MaterialState> _defaultStates
  +Color resolve()
}

"material::material_state::_MaterialStateColor" o-- "material::material_state::Color Function(Set<MaterialState>)"
"material::material_state::MaterialStateColor" <|-- "material::material_state::_MaterialStateColor"

abstract class "material::material_state::MaterialStateMouseCursor" {
  {static} +MaterialStateMouseCursor clickable
  {static} +MaterialStateMouseCursor textable
  #MouseCursorSession createSession()
  +MouseCursor resolve()
}

"material::material_state::MaterialStateMouseCursor" o-- "material::material_state::MaterialStateMouseCursor"
"services::mouse_cursor::MouseCursor" <|-- "material::material_state::MaterialStateMouseCursor"
"material::material_state::MaterialStateProperty" <|-- "material::material_state::MaterialStateMouseCursor"

class "material::material_state::_EnabledAndDisabledMouseCursor" {
  +MouseCursor enabledCursor
  +MouseCursor disabledCursor
  +String name
  +String debugDescription
  +MouseCursor resolve()
}

"material::material_state::_EnabledAndDisabledMouseCursor" o-- "services::mouse_cursor::MouseCursor"
"material::material_state::MaterialStateMouseCursor" <|-- "material::material_state::_EnabledAndDisabledMouseCursor"

abstract class "material::material_state::MaterialStateBorderSide" {
  +BorderSide? resolve()
  {static} +MaterialStateBorderSide resolveWith()
}

"painting::borders::BorderSide" <|-- "material::material_state::MaterialStateBorderSide"
"material::material_state::MaterialStateProperty" <|-- "material::material_state::MaterialStateBorderSide"

class "material::material_state::_MaterialStateBorderSide" {
  -BorderSide? Function(Set<MaterialState>) _resolve
  +BorderSide? resolve()
}

"material::material_state::_MaterialStateBorderSide" o-- "material::material_state::BorderSide Function(Set<MaterialState>)"
"material::material_state::MaterialStateBorderSide" <|-- "material::material_state::_MaterialStateBorderSide"

abstract class "material::material_state::MaterialStateOutlinedBorder" {
  +OutlinedBorder? resolve()
}

"painting::borders::OutlinedBorder" <|-- "material::material_state::MaterialStateOutlinedBorder"
"material::material_state::MaterialStateProperty" <|-- "material::material_state::MaterialStateOutlinedBorder"

abstract class "material::material_state::MaterialStateTextStyle" {
  {static} +MaterialStateTextStyle resolveWith()
  +TextStyle resolve()
}

"painting::text_style::TextStyle" <|-- "material::material_state::MaterialStateTextStyle"
"material::material_state::MaterialStateProperty" <|-- "material::material_state::MaterialStateTextStyle"

class "material::material_state::_MaterialStateTextStyle" {
  -TextStyle Function(Set<MaterialState>) _resolve
  +TextStyle resolve()
}

"material::material_state::_MaterialStateTextStyle" o-- "material::material_state::TextStyle Function(Set<MaterialState>)"
"material::material_state::MaterialStateTextStyle" <|-- "material::material_state::_MaterialStateTextStyle"

abstract class "material::material_state::MaterialStateOutlineInputBorder" {
  {static} +MaterialStateOutlineInputBorder resolveWith()
  +InputBorder resolve()
}

"material::input_border::OutlineInputBorder" <|-- "material::material_state::MaterialStateOutlineInputBorder"
"material::material_state::MaterialStateProperty" <|-- "material::material_state::MaterialStateOutlineInputBorder"

class "material::material_state::_MaterialStateOutlineInputBorder" {
  -InputBorder Function(Set<MaterialState>) _resolve
  +InputBorder resolve()
}

"material::material_state::_MaterialStateOutlineInputBorder" o-- "material::material_state::InputBorder Function(Set<MaterialState>)"
"material::material_state::MaterialStateOutlineInputBorder" <|-- "material::material_state::_MaterialStateOutlineInputBorder"

abstract class "material::material_state::MaterialStateUnderlineInputBorder" {
  {static} +MaterialStateUnderlineInputBorder resolveWith()
  +InputBorder resolve()
}

"material::input_border::UnderlineInputBorder" <|-- "material::material_state::MaterialStateUnderlineInputBorder"
"material::material_state::MaterialStateProperty" <|-- "material::material_state::MaterialStateUnderlineInputBorder"

class "material::material_state::_MaterialStateUnderlineInputBorder" {
  -InputBorder Function(Set<MaterialState>) _resolve
  +InputBorder resolve()
}

"material::material_state::_MaterialStateUnderlineInputBorder" o-- "material::material_state::InputBorder Function(Set<MaterialState>)"
"material::material_state::MaterialStateUnderlineInputBorder" <|-- "material::material_state::_MaterialStateUnderlineInputBorder"

abstract class "material::material_state::MaterialStateProperty" {
  +T resolve()
  {static} +T resolveAs()
  {static} +MaterialStateProperty<T> resolveWith()
  {static} +MaterialStateProperty<T> all()
  {static} +MaterialStateProperty<T?>? lerp()
}

class "material::material_state::_LerpProperties" {
  +MaterialStateProperty<T>? a
  +MaterialStateProperty<T>? b
  +double t
  +T? Function(T?, T?, double) lerpFunction
  +T? resolve()
}

"material::material_state::_LerpProperties" o-- "material::material_state::MaterialStateProperty<T>"
"material::material_state::_LerpProperties" o-- "null::T Function(T, T, double)"
"material::material_state::MaterialStateProperty" <|-- "material::material_state::_LerpProperties"

class "material::material_state::_MaterialStatePropertyWith" {
  -T Function(Set<MaterialState>) _resolve
  +T resolve()
}

"material::material_state::_MaterialStatePropertyWith" o-- "material::material_state::T Function(Set<MaterialState>)"
"material::material_state::MaterialStateProperty" <|-- "material::material_state::_MaterialStatePropertyWith"

class "material::material_state::MaterialStatePropertyAll" {
  +T value
  +T resolve()
  +String toString()
}

"material::material_state::MaterialStateProperty" <|-- "material::material_state::MaterialStatePropertyAll"

class "material::material_state::MaterialStatesController" {
  +void update()
}

"foundation::change_notifier::ValueNotifier" <|-- "material::material_state::MaterialStatesController"

class "material::material_state::MaterialState" {
  +int index
  {static} +List<MaterialState> values
  {static} +MaterialState hovered
  {static} +MaterialState focused
  {static} +MaterialState pressed
  {static} +MaterialState dragged
  {static} +MaterialState selected
  {static} +MaterialState scrolledUnder
  {static} +MaterialState disabled
  {static} +MaterialState error
}

"material::material_state::MaterialState" o-- "material::material_state::MaterialState"
"dart::core::Enum" <|-- "material::material_state::MaterialState"

class "material::segmented_button_theme::SegmentedButtonThemeData" {
  +ButtonStyle? style
  +Widget? selectedIcon
  +int hashCode
  +SegmentedButtonThemeData copyWith()
  {static} +SegmentedButtonThemeData lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::segmented_button_theme::SegmentedButtonThemeData" o-- "material::button_style::ButtonStyle"
"material::segmented_button_theme::SegmentedButtonThemeData" o-- "widgets::framework::Widget"
"foundation::diagnostics::Diagnosticable" <|-- "material::segmented_button_theme::SegmentedButtonThemeData"

class "material::segmented_button_theme::SegmentedButtonTheme" {
  +SegmentedButtonThemeData data
  {static} +SegmentedButtonThemeData of()
  {static} +SegmentedButtonThemeData? maybeOf()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::segmented_button_theme::SegmentedButtonTheme" o-- "material::segmented_button_theme::SegmentedButtonThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::segmented_button_theme::SegmentedButtonTheme"

class "material::floating_action_button_theme::FloatingActionButtonThemeData" {
  +Color? foregroundColor
  +Color? backgroundColor
  +Color? focusColor
  +Color? hoverColor
  +Color? splashColor
  +double? elevation
  +double? focusElevation
  +double? hoverElevation
  +double? disabledElevation
  +double? highlightElevation
  +ShapeBorder? shape
  +bool? enableFeedback
  +double? iconSize
  +BoxConstraints? sizeConstraints
  +BoxConstraints? smallSizeConstraints
  +BoxConstraints? largeSizeConstraints
  +BoxConstraints? extendedSizeConstraints
  +double? extendedIconLabelSpacing
  +EdgeInsetsGeometry? extendedPadding
  +TextStyle? extendedTextStyle
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +int hashCode
  +FloatingActionButtonThemeData copyWith()
  {static} +FloatingActionButtonThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::floating_action_button_theme::FloatingActionButtonThemeData" o-- "dart::ui::Color"
"material::floating_action_button_theme::FloatingActionButtonThemeData" o-- "painting::borders::ShapeBorder"
"material::floating_action_button_theme::FloatingActionButtonThemeData" o-- "rendering::box::BoxConstraints"
"material::floating_action_button_theme::FloatingActionButtonThemeData" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::floating_action_button_theme::FloatingActionButtonThemeData" o-- "painting::text_style::TextStyle"
"material::floating_action_button_theme::FloatingActionButtonThemeData" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"foundation::diagnostics::Diagnosticable" <|-- "material::floating_action_button_theme::FloatingActionButtonThemeData"

class "material::flutter_logo::FlutterLogo" {
  +double? size
  +Color textColor
  +FlutterLogoStyle style
  +Duration duration
  +Curve curve
  +Widget build()
}

"material::flutter_logo::FlutterLogo" o-- "dart::ui::Color"
"material::flutter_logo::FlutterLogo" o-- "painting::flutter_logo::FlutterLogoStyle"
"material::flutter_logo::FlutterLogo" o-- "animation::curves::Curve"
"widgets::framework::StatelessWidget" <|-- "material::flutter_logo::FlutterLogo"

class "material::card_theme::CardTheme" {
  +Clip? clipBehavior
  +Color? color
  +Color? shadowColor
  +Color? surfaceTintColor
  +double? elevation
  +EdgeInsetsGeometry? margin
  +ShapeBorder? shape
  +int hashCode
  +CardTheme copyWith()
  {static} +CardTheme of()
  {static} +CardTheme lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::card_theme::CardTheme" o-- "dart::ui::Clip"
"material::card_theme::CardTheme" o-- "dart::ui::Color"
"material::card_theme::CardTheme" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::card_theme::CardTheme" o-- "painting::borders::ShapeBorder"
"foundation::diagnostics::Diagnosticable" <|-- "material::card_theme::CardTheme"

class "material::bottom_sheet_theme::BottomSheetThemeData" {
  +Color? backgroundColor
  +Color? surfaceTintColor
  +double? elevation
  +Color? modalBackgroundColor
  +Color? modalBarrierColor
  +Color? shadowColor
  +double? modalElevation
  +ShapeBorder? shape
  +bool? showDragHandle
  +Color? dragHandleColor
  +Size? dragHandleSize
  +Clip? clipBehavior
  +BoxConstraints? constraints
  +int hashCode
  +BottomSheetThemeData copyWith()
  {static} +BottomSheetThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::bottom_sheet_theme::BottomSheetThemeData" o-- "dart::ui::Color"
"material::bottom_sheet_theme::BottomSheetThemeData" o-- "painting::borders::ShapeBorder"
"material::bottom_sheet_theme::BottomSheetThemeData" o-- "dart::ui::Size"
"material::bottom_sheet_theme::BottomSheetThemeData" o-- "dart::ui::Clip"
"material::bottom_sheet_theme::BottomSheetThemeData" o-- "rendering::box::BoxConstraints"
"foundation::diagnostics::Diagnosticable" <|-- "material::bottom_sheet_theme::BottomSheetThemeData"

class "material::choice_chip::ChoiceChip" {
  +Widget? avatar
  +Widget label
  +TextStyle? labelStyle
  +EdgeInsetsGeometry? labelPadding
  +void Function(bool)? onSelected
  +double? pressElevation
  +bool selected
  +Color? disabledColor
  +Color? selectedColor
  +String? tooltip
  +BorderSide? side
  +OutlinedBorder? shape
  +Clip clipBehavior
  +FocusNode? focusNode
  +bool autofocus
  +MaterialStateProperty<Color?>? color
  +Color? backgroundColor
  +EdgeInsetsGeometry? padding
  +VisualDensity? visualDensity
  +MaterialTapTargetSize? materialTapTargetSize
  +double? elevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +Color? selectedShadowColor
  +bool? showCheckmark
  +Color? checkmarkColor
  +ShapeBorder avatarBorder
  +IconThemeData? iconTheme
  -_ChipVariant _chipVariant
  +bool isEnabled
  +Widget build()
}

"material::choice_chip::ChoiceChip" o-- "widgets::framework::Widget"
"material::choice_chip::ChoiceChip" o-- "painting::text_style::TextStyle"
"material::choice_chip::ChoiceChip" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::choice_chip::ChoiceChip" o-- "foundation::basic_types::void Function(bool)"
"material::choice_chip::ChoiceChip" o-- "dart::ui::Color"
"material::choice_chip::ChoiceChip" o-- "painting::borders::BorderSide"
"material::choice_chip::ChoiceChip" o-- "painting::borders::OutlinedBorder"
"material::choice_chip::ChoiceChip" o-- "dart::ui::Clip"
"material::choice_chip::ChoiceChip" o-- "widgets::focus_manager::FocusNode"
"material::choice_chip::ChoiceChip" o-- "material::material_state::MaterialStateProperty<Color>"
"material::choice_chip::ChoiceChip" o-- "material::theme_data::VisualDensity"
"material::choice_chip::ChoiceChip" o-- "material::theme_data::MaterialTapTargetSize"
"material::choice_chip::ChoiceChip" o-- "painting::borders::ShapeBorder"
"material::choice_chip::ChoiceChip" o-- "widgets::icon_theme_data::IconThemeData"
"material::choice_chip::ChoiceChip" o-- "material::choice_chip::_ChipVariant"
"widgets::framework::StatelessWidget" <|-- "material::choice_chip::ChoiceChip"
"material::chip::ChipAttributes" <|-- "material::choice_chip::ChoiceChip"
"material::chip::SelectableChipAttributes" <|-- "material::choice_chip::ChoiceChip"
"material::chip::CheckmarkableChipAttributes" <|-- "material::choice_chip::ChoiceChip"
"material::chip::DisabledChipAttributes" <|-- "material::choice_chip::ChoiceChip"

class "material::choice_chip::_ChoiceChipDefaultsM3" {
  +BuildContext context
  +bool isEnabled
  +bool isSelected
  -_ChipVariant _chipVariant
  -ColorScheme _colors
  -TextTheme _textTheme
  +double? elevation
  +double? pressElevation
  +TextStyle? labelStyle
  +MaterialStateProperty<Color?>? color
  +Color? shadowColor
  +Color? surfaceTintColor
  +Color? checkmarkColor
  +Color? deleteIconColor
  +BorderSide? side
  +IconThemeData? iconTheme
  +EdgeInsetsGeometry? padding
  +EdgeInsetsGeometry? labelPadding
}

"material::choice_chip::_ChoiceChipDefaultsM3" o-- "widgets::framework::BuildContext"
"material::choice_chip::_ChoiceChipDefaultsM3" o-- "material::choice_chip::_ChipVariant"
"material::choice_chip::_ChoiceChipDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::choice_chip::_ChoiceChipDefaultsM3" o-- "material::text_theme::TextTheme"
"material::choice_chip::_ChoiceChipDefaultsM3" o-- "painting::text_style::TextStyle"
"material::choice_chip::_ChoiceChipDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::choice_chip::_ChoiceChipDefaultsM3" o-- "dart::ui::Color"
"material::choice_chip::_ChoiceChipDefaultsM3" o-- "painting::borders::BorderSide"
"material::choice_chip::_ChoiceChipDefaultsM3" o-- "widgets::icon_theme_data::IconThemeData"
"material::choice_chip::_ChoiceChipDefaultsM3" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::chip_theme::ChipThemeData" <|-- "material::choice_chip::_ChoiceChipDefaultsM3"

class "material::choice_chip::_ChipVariant" {
  +int index
  {static} +List<_ChipVariant> values
  {static} +_ChipVariant flat
  {static} +_ChipVariant elevated
}

"material::choice_chip::_ChipVariant" o-- "material::choice_chip::_ChipVariant"
"dart::core::Enum" <|-- "material::choice_chip::_ChipVariant"

class "material::tooltip::_ExclusiveMouseRegion" {
  +_RenderExclusiveMouseRegion createRenderObject()
}

"widgets::basic::MouseRegion" <|-- "material::tooltip::_ExclusiveMouseRegion"

class "material::tooltip::_RenderExclusiveMouseRegion" {
  {static} +bool isOutermostMouseRegion
  {static} +bool foundInnermostMouseRegion
  +bool hitTest()
}

"rendering::proxy_box::RenderMouseRegion" <|-- "material::tooltip::_RenderExclusiveMouseRegion"

class "material::tooltip::Tooltip" {
  +String? message
  +InlineSpan? richMessage
  +double? height
  +EdgeInsetsGeometry? padding
  +EdgeInsetsGeometry? margin
  +double? verticalOffset
  +bool? preferBelow
  +bool? excludeFromSemantics
  +Widget? child
  +Decoration? decoration
  +TextStyle? textStyle
  +TextAlign? textAlign
  +Duration? waitDuration
  +Duration? showDuration
  +TooltipTriggerMode? triggerMode
  +bool? enableFeedback
  +void Function()? onTriggered
  {static} -List<TooltipState> _openedTooltips
  {static} +bool dismissAllToolTips()
  +State<Tooltip> createState()
  +void debugFillProperties()
}

"material::tooltip::Tooltip" o-- "painting::inline_span::InlineSpan"
"material::tooltip::Tooltip" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::tooltip::Tooltip" o-- "widgets::framework::Widget"
"material::tooltip::Tooltip" o-- "painting::decoration::Decoration"
"material::tooltip::Tooltip" o-- "painting::text_style::TextStyle"
"material::tooltip::Tooltip" o-- "dart::ui::TextAlign"
"material::tooltip::Tooltip" o-- "material::tooltip_theme::TooltipTriggerMode"
"material::tooltip::Tooltip" o-- "material::tooltip::void Function()"
"widgets::framework::StatefulWidget" <|-- "material::tooltip::Tooltip"

class "material::tooltip::TooltipState" {
  {static} -double _defaultVerticalOffset
  {static} -bool _defaultPreferBelow
  {static} -EdgeInsetsGeometry _defaultMargin
  {static} -Duration _fadeInDuration
  {static} -Duration _fadeOutDuration
  {static} -Duration _defaultShowDuration
  {static} -Duration _defaultHoverShowDuration
  {static} -Duration _defaultWaitDuration
  {static} -bool _defaultExcludeFromSemantics
  {static} -TooltipTriggerMode _defaultTriggerMode
  {static} -bool _defaultEnableFeedback
  {static} -TextAlign _defaultTextAlign
  -dynamic _overlayController
  -bool _visible
  -TooltipThemeData _tooltipTheme
  -Timer? _timer
  -AnimationController? _backingController
  -LongPressGestureRecognizer? _longPressRecognizer
  -TapGestureRecognizer? _tapRecognizer
  -Set<int> _activeHoveringPointerDevices
  -AnimationStatus _animationStatus
  -Duration _showDuration
  -Duration _hoverShowDuration
  -Duration _waitDuration
  -TooltipTriggerMode _triggerMode
  -bool _enableFeedback
  -String _tooltipMessage
  -AnimationController _controller
  {static} -bool _isTooltipVisible()
  -void _handleStatusChanged()
  -void _scheduleShowTooltip()
  -void _scheduleDismissTooltip()
  -void _handlePointerDown()
  -void _handleGlobalPointerEvent()
  -void _handleTapToDismiss()
  -void _handleTap()
  -void _handleLongPress()
  -void _handlePressUp()
  -void _handleMouseEnter()
  -void _handleMouseExit()
  +bool ensureTooltipVisible()
  +void initState()
  +void didChangeDependencies()
  -double _getDefaultTooltipHeight()
  -EdgeInsets _getDefaultPadding()
  {static} -double _getDefaultFontSize()
  -Widget _buildTooltipOverlay()
  +void dispose()
  +Widget build()
}

"material::tooltip::TooltipState" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::tooltip::TooltipState" o-- "material::tooltip_theme::TooltipTriggerMode"
"material::tooltip::TooltipState" o-- "dart::ui::TextAlign"
"material::tooltip::TooltipState" o-- "material::tooltip_theme::TooltipThemeData"
"material::tooltip::TooltipState" o-- "dart::async::Timer"
"material::tooltip::TooltipState" o-- "animation::animation_controller::AnimationController"
"material::tooltip::TooltipState" o-- "gestures::long_press::LongPressGestureRecognizer"
"material::tooltip::TooltipState" o-- "gestures::tap::TapGestureRecognizer"
"material::tooltip::TooltipState" o-- "animation::animation::AnimationStatus"
"widgets::framework::State" <|-- "material::tooltip::TooltipState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "material::tooltip::TooltipState"

class "material::tooltip::_TooltipPositionDelegate" {
  +Offset target
  +double verticalOffset
  +bool preferBelow
  +BoxConstraints getConstraintsForChild()
  +Offset getPositionForChild()
  +bool shouldRelayout()
}

"material::tooltip::_TooltipPositionDelegate" o-- "dart::ui::Offset"
"rendering::shifted_box::SingleChildLayoutDelegate" <|-- "material::tooltip::_TooltipPositionDelegate"

class "material::tooltip::_TooltipOverlay" {
  +InlineSpan richMessage
  +double height
  +EdgeInsetsGeometry? padding
  +EdgeInsetsGeometry? margin
  +Decoration? decoration
  +TextStyle? textStyle
  +TextAlign? textAlign
  +Animation<double> animation
  +Offset target
  +double verticalOffset
  +bool preferBelow
  +void Function(PointerEnterEvent)? onEnter
  +void Function(PointerExitEvent)? onExit
  +Widget build()
}

"material::tooltip::_TooltipOverlay" o-- "painting::inline_span::InlineSpan"
"material::tooltip::_TooltipOverlay" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::tooltip::_TooltipOverlay" o-- "painting::decoration::Decoration"
"material::tooltip::_TooltipOverlay" o-- "painting::text_style::TextStyle"
"material::tooltip::_TooltipOverlay" o-- "dart::ui::TextAlign"
"material::tooltip::_TooltipOverlay" o-- "animation::animation::Animation<double>"
"material::tooltip::_TooltipOverlay" o-- "dart::ui::Offset"
"material::tooltip::_TooltipOverlay" o-- "services::mouse_tracking::void Function(PointerEnterEvent)"
"material::tooltip::_TooltipOverlay" o-- "services::mouse_tracking::void Function(PointerExitEvent)"
"widgets::framework::StatelessWidget" <|-- "material::tooltip::_TooltipOverlay"

class "material::elevated_button::ElevatedButton" {
  {static} +ButtonStyle styleFrom()
  +ButtonStyle defaultStyleOf()
  +ButtonStyle? themeStyleOf()
}

"material::button_style_button::ButtonStyleButton" <|-- "material::elevated_button::ElevatedButton"

class "material::elevated_button::_ElevatedButtonDefaultColor" {
  +Color? color
  +Color? disabled
  +Color? resolve()
}

"material::elevated_button::_ElevatedButtonDefaultColor" o-- "dart::ui::Color"
"material::material_state::MaterialStateProperty" <|-- "material::elevated_button::_ElevatedButtonDefaultColor"
"foundation::diagnostics::Diagnosticable" <|-- "material::elevated_button::_ElevatedButtonDefaultColor"

class "material::elevated_button::_ElevatedButtonDefaultOverlay" {
  +Color overlay
  +Color? resolve()
}

"material::elevated_button::_ElevatedButtonDefaultOverlay" o-- "dart::ui::Color"
"material::material_state::MaterialStateProperty" <|-- "material::elevated_button::_ElevatedButtonDefaultOverlay"
"foundation::diagnostics::Diagnosticable" <|-- "material::elevated_button::_ElevatedButtonDefaultOverlay"

class "material::elevated_button::_ElevatedButtonDefaultElevation" {
  +double elevation
  +double resolve()
}

"material::material_state::MaterialStateProperty" <|-- "material::elevated_button::_ElevatedButtonDefaultElevation"
"foundation::diagnostics::Diagnosticable" <|-- "material::elevated_button::_ElevatedButtonDefaultElevation"

class "material::elevated_button::_ElevatedButtonDefaultMouseCursor" {
  +MouseCursor? enabledCursor
  +MouseCursor? disabledCursor
  +MouseCursor? resolve()
}

"material::elevated_button::_ElevatedButtonDefaultMouseCursor" o-- "services::mouse_cursor::MouseCursor"
"material::material_state::MaterialStateProperty" <|-- "material::elevated_button::_ElevatedButtonDefaultMouseCursor"
"foundation::diagnostics::Diagnosticable" <|-- "material::elevated_button::_ElevatedButtonDefaultMouseCursor"

class "material::elevated_button::_ElevatedButtonWithIcon" {
  +ButtonStyle defaultStyleOf()
}

"material::elevated_button::ElevatedButton" <|-- "material::elevated_button::_ElevatedButtonWithIcon"

class "material::elevated_button::_ElevatedButtonWithIconChild" {
  +Widget label
  +Widget icon
  +Widget build()
}

"material::elevated_button::_ElevatedButtonWithIconChild" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::elevated_button::_ElevatedButtonWithIconChild"

class "material::elevated_button::_ElevatedButtonDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  +MaterialStateProperty<TextStyle?> textStyle
  +MaterialStateProperty<Color?>? backgroundColor
  +MaterialStateProperty<Color?>? foregroundColor
  +MaterialStateProperty<Color?>? overlayColor
  +MaterialStateProperty<Color>? shadowColor
  +MaterialStateProperty<Color>? surfaceTintColor
  +MaterialStateProperty<double>? elevation
  +MaterialStateProperty<EdgeInsetsGeometry>? padding
  +MaterialStateProperty<Size>? minimumSize
  +MaterialStateProperty<Size>? maximumSize
  +MaterialStateProperty<OutlinedBorder>? shape
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +VisualDensity? visualDensity
  +MaterialTapTargetSize? tapTargetSize
  +InteractiveInkFeatureFactory? splashFactory
}

"material::elevated_button::_ElevatedButtonDefaultsM3" o-- "widgets::framework::BuildContext"
"material::elevated_button::_ElevatedButtonDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::elevated_button::_ElevatedButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<TextStyle>"
"material::elevated_button::_ElevatedButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::elevated_button::_ElevatedButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<double>"
"material::elevated_button::_ElevatedButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<EdgeInsetsGeometry>"
"material::elevated_button::_ElevatedButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Size>"
"material::elevated_button::_ElevatedButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<OutlinedBorder>"
"material::elevated_button::_ElevatedButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::elevated_button::_ElevatedButtonDefaultsM3" o-- "material::theme_data::VisualDensity"
"material::elevated_button::_ElevatedButtonDefaultsM3" o-- "material::theme_data::MaterialTapTargetSize"
"material::elevated_button::_ElevatedButtonDefaultsM3" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::button_style::ButtonStyle" <|-- "material::elevated_button::_ElevatedButtonDefaultsM3"

class "material::switch_list_tile::SwitchListTile" {
  +bool value
  +void Function(bool)? onChanged
  +Color? activeColor
  +Color? activeTrackColor
  +Color? inactiveThumbColor
  +Color? inactiveTrackColor
  +ImageProvider<Object>? activeThumbImage
  +void Function(Object, StackTrace?)? onActiveThumbImageError
  +ImageProvider<Object>? inactiveThumbImage
  +void Function(Object, StackTrace?)? onInactiveThumbImageError
  +MaterialStateProperty<Color?>? thumbColor
  +MaterialStateProperty<Color?>? trackColor
  +MaterialStateProperty<Color?>? trackOutlineColor
  +MaterialStateProperty<Icon?>? thumbIcon
  +MaterialTapTargetSize? materialTapTargetSize
  +DragStartBehavior dragStartBehavior
  +MouseCursor? mouseCursor
  +MaterialStateProperty<Color?>? overlayColor
  +double? splashRadius
  +FocusNode? focusNode
  +void Function(bool)? onFocusChange
  +bool autofocus
  +Color? tileColor
  +Widget? title
  +Widget? subtitle
  +Widget? secondary
  +bool isThreeLine
  +bool? dense
  +EdgeInsetsGeometry? contentPadding
  +bool selected
  -_SwitchListTileType _switchListTileType
  +ListTileControlAffinity controlAffinity
  +ShapeBorder? shape
  +Color? selectedTileColor
  +VisualDensity? visualDensity
  +bool? enableFeedback
  +Color? hoverColor
  +bool? applyCupertinoTheme
  +Widget build()
}

"material::switch_list_tile::SwitchListTile" o-- "foundation::basic_types::void Function(bool)"
"material::switch_list_tile::SwitchListTile" o-- "dart::ui::Color"
"material::switch_list_tile::SwitchListTile" o-- "painting::image_provider::ImageProvider<Object>"
"material::switch_list_tile::SwitchListTile" o-- "painting::image_stream::void Function(Object, StackTrace)"
"material::switch_list_tile::SwitchListTile" o-- "material::material_state::MaterialStateProperty<Color>"
"material::switch_list_tile::SwitchListTile" o-- "material::material_state::MaterialStateProperty<Icon>"
"material::switch_list_tile::SwitchListTile" o-- "material::theme_data::MaterialTapTargetSize"
"material::switch_list_tile::SwitchListTile" o-- "gestures::recognizer::DragStartBehavior"
"material::switch_list_tile::SwitchListTile" o-- "services::mouse_cursor::MouseCursor"
"material::switch_list_tile::SwitchListTile" o-- "widgets::focus_manager::FocusNode"
"material::switch_list_tile::SwitchListTile" o-- "widgets::framework::Widget"
"material::switch_list_tile::SwitchListTile" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::switch_list_tile::SwitchListTile" o-- "material::switch_list_tile::_SwitchListTileType"
"material::switch_list_tile::SwitchListTile" o-- "material::list_tile::ListTileControlAffinity"
"material::switch_list_tile::SwitchListTile" o-- "painting::borders::ShapeBorder"
"material::switch_list_tile::SwitchListTile" o-- "material::theme_data::VisualDensity"
"widgets::framework::StatelessWidget" <|-- "material::switch_list_tile::SwitchListTile"

class "material::switch_list_tile::_SwitchListTileType" {
  +int index
  {static} +List<_SwitchListTileType> values
  {static} +_SwitchListTileType material
  {static} +_SwitchListTileType adaptive
}

"material::switch_list_tile::_SwitchListTileType" o-- "material::switch_list_tile::_SwitchListTileType"
"dart::core::Enum" <|-- "material::switch_list_tile::_SwitchListTileType"

class "material::dropdown_menu::DropdownMenuEntry" {
  +T value
  +String label
  +Widget? labelWidget
  +Widget? leadingIcon
  +Widget? trailingIcon
  +bool enabled
  +ButtonStyle? style
}

"material::dropdown_menu::DropdownMenuEntry" o-- "widgets::framework::Widget"
"material::dropdown_menu::DropdownMenuEntry" o-- "material::button_style::ButtonStyle"

class "material::dropdown_menu::DropdownMenu" {
  +bool enabled
  +double? width
  +double? menuHeight
  +Widget? leadingIcon
  +Widget? trailingIcon
  +Widget? label
  +String? hintText
  +String? helperText
  +String? errorText
  +Widget? selectedTrailingIcon
  +bool enableFilter
  +bool enableSearch
  +TextStyle? textStyle
  +InputDecorationTheme? inputDecorationTheme
  +MenuStyle? menuStyle
  +TextEditingController? controller
  +T? initialSelection
  +void Function(T?)? onSelected
  +bool? requestFocusOnTap
  +List<DropdownMenuEntry<T>> dropdownMenuEntries
  +EdgeInsets? expandedInsets
  +State<DropdownMenu<T>> createState()
}

"material::dropdown_menu::DropdownMenu" o-- "widgets::framework::Widget"
"material::dropdown_menu::DropdownMenu" o-- "painting::text_style::TextStyle"
"material::dropdown_menu::DropdownMenu" o-- "material::input_decorator::InputDecorationTheme"
"material::dropdown_menu::DropdownMenu" o-- "material::menu_style::MenuStyle"
"material::dropdown_menu::DropdownMenu" o-- "widgets::editable_text::TextEditingController"
"material::dropdown_menu::DropdownMenu" o-- "foundation::basic_types::void Function(T)"
"material::dropdown_menu::DropdownMenu" o-- "painting::edge_insets::EdgeInsets"
"widgets::framework::StatefulWidget" <|-- "material::dropdown_menu::DropdownMenu"

class "material::dropdown_menu::_DropdownMenuState" {
  -GlobalKey<State<StatefulWidget>> _anchorKey
  -GlobalKey<State<StatefulWidget>> _leadingKey
  +List<GlobalKey<State<StatefulWidget>>> buttonItemKeys
  -MenuController _controller
  -TextEditingController _textEditingController
  -bool _enableFilter
  +List<DropdownMenuEntry<T>> filteredEntries
  -List<Widget>? _initialMenu
  +int? currentHighlight
  +double? leadingPadding
  -bool _menuHasEnabledItem
  +void initState()
  +void didUpdateWidget()
  +bool canRequestFocus()
  +void refreshLeadingPadding()
  +void scrollToHighlight()
  +double? getWidth()
  +List<DropdownMenuEntry<T>> filter()
  +int? search()
  -List<Widget> _buildButtons()
  +void handleUpKeyInvoke()
  +void handleDownKeyInvoke()
  +void handlePressed()
  +void dispose()
  +Widget build()
}

"material::dropdown_menu::_DropdownMenuState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"material::dropdown_menu::_DropdownMenuState" o-- "material::menu_anchor::MenuController"
"material::dropdown_menu::_DropdownMenuState" o-- "widgets::editable_text::TextEditingController"
"widgets::framework::State" <|-- "material::dropdown_menu::_DropdownMenuState"

class "material::dropdown_menu::_ArrowUpIntent" {
}

"widgets::actions::Intent" <|-- "material::dropdown_menu::_ArrowUpIntent"

class "material::dropdown_menu::_ArrowDownIntent" {
}

"widgets::actions::Intent" <|-- "material::dropdown_menu::_ArrowDownIntent"

class "material::dropdown_menu::_DropdownMenuBody" {
  +double? width
  +_RenderDropdownMenuBody createRenderObject()
  +void updateRenderObject()
}

"widgets::framework::MultiChildRenderObjectWidget" <|-- "material::dropdown_menu::_DropdownMenuBody"

class "material::dropdown_menu::_DropdownMenuBodyParentData" {
}

"rendering::box::ContainerBoxParentData" <|-- "material::dropdown_menu::_DropdownMenuBodyParentData"

class "material::dropdown_menu::_RenderDropdownMenuBody" {
  -double? _width
  +double? width
  +void setupParentData()
  +void performLayout()
  +void paint()
  +Size computeDryLayout()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +bool hitTestChildren()
}

"rendering::box::RenderBox" <|-- "material::dropdown_menu::_RenderDropdownMenuBody"
"rendering::object::ContainerRenderObjectMixin" <|-- "material::dropdown_menu::_RenderDropdownMenuBody"
"rendering::box::RenderBoxContainerDefaultsMixin" <|-- "material::dropdown_menu::_RenderDropdownMenuBody"

class "material::dropdown_menu::_DropdownMenuDefaultsM3" {
  +BuildContext context
  -ThemeData _theme
  +TextStyle? textStyle
  +MenuStyle menuStyle
  +InputDecorationTheme inputDecorationTheme
}

"material::dropdown_menu::_DropdownMenuDefaultsM3" o-- "widgets::framework::BuildContext"
"material::dropdown_menu::_DropdownMenuDefaultsM3" o-- "material::theme_data::ThemeData"
"material::dropdown_menu::_DropdownMenuDefaultsM3" o-- "painting::text_style::TextStyle"
"material::dropdown_menu::_DropdownMenuDefaultsM3" o-- "material::menu_style::MenuStyle"
"material::dropdown_menu::_DropdownMenuDefaultsM3" o-- "material::input_decorator::InputDecorationTheme"
"material::dropdown_menu_theme::DropdownMenuThemeData" <|-- "material::dropdown_menu::_DropdownMenuDefaultsM3"

class "material::dropdown::_DropdownMenuPainter" {
  +Color? color
  +int? elevation
  +int? selectedIndex
  +BorderRadius? borderRadius
  +Animation<double> resize
  +double Function() getSelectedItemOffset
  -BoxPainter _painter
  +void paint()
  +bool shouldRepaint()
}

"material::dropdown::_DropdownMenuPainter" o-- "dart::ui::Color"
"material::dropdown::_DropdownMenuPainter" o-- "painting::border_radius::BorderRadius"
"material::dropdown::_DropdownMenuPainter" o-- "animation::animation::Animation<double>"
"material::dropdown::_DropdownMenuPainter" o-- "foundation::basic_types::double Function()"
"material::dropdown::_DropdownMenuPainter" o-- "painting::decoration::BoxPainter"
"rendering::custom_paint::CustomPainter" <|-- "material::dropdown::_DropdownMenuPainter"

class "material::dropdown::_DropdownMenuItemButton" {
  +_DropdownRoute<T> route
  +ScrollController scrollController
  +EdgeInsets? padding
  +Rect buttonRect
  +BoxConstraints constraints
  +int itemIndex
  +bool enableFeedback
  +_DropdownMenuItemButtonState<T> createState()
}

"material::dropdown::_DropdownMenuItemButton" o-- "material::dropdown::_DropdownRoute<T>"
"material::dropdown::_DropdownMenuItemButton" o-- "widgets::scroll_controller::ScrollController"
"material::dropdown::_DropdownMenuItemButton" o-- "painting::edge_insets::EdgeInsets"
"material::dropdown::_DropdownMenuItemButton" o-- "dart::ui::Rect"
"material::dropdown::_DropdownMenuItemButton" o-- "rendering::box::BoxConstraints"
"widgets::framework::StatefulWidget" <|-- "material::dropdown::_DropdownMenuItemButton"

class "material::dropdown::_DropdownMenuItemButtonState" {
  {static} -Map<ShortcutActivator, Intent> _webShortcuts
  -void _handleFocusChange()
  -void _handleOnTap()
  +Widget build()
}

"widgets::framework::State" <|-- "material::dropdown::_DropdownMenuItemButtonState"

class "material::dropdown::_DropdownMenu" {
  +_DropdownRoute<T> route
  +EdgeInsets? padding
  +Rect buttonRect
  +BoxConstraints constraints
  +Color? dropdownColor
  +bool enableFeedback
  +BorderRadius? borderRadius
  +ScrollController scrollController
  +_DropdownMenuState<T> createState()
}

"material::dropdown::_DropdownMenu" o-- "material::dropdown::_DropdownRoute<T>"
"material::dropdown::_DropdownMenu" o-- "painting::edge_insets::EdgeInsets"
"material::dropdown::_DropdownMenu" o-- "dart::ui::Rect"
"material::dropdown::_DropdownMenu" o-- "rendering::box::BoxConstraints"
"material::dropdown::_DropdownMenu" o-- "dart::ui::Color"
"material::dropdown::_DropdownMenu" o-- "painting::border_radius::BorderRadius"
"material::dropdown::_DropdownMenu" o-- "widgets::scroll_controller::ScrollController"
"widgets::framework::StatefulWidget" <|-- "material::dropdown::_DropdownMenu"

class "material::dropdown::_DropdownMenuState" {
  -CurvedAnimation _fadeOpacity
  -CurvedAnimation _resize
  +void initState()
  +Widget build()
}

"material::dropdown::_DropdownMenuState" o-- "animation::animations::CurvedAnimation"
"widgets::framework::State" <|-- "material::dropdown::_DropdownMenuState"

class "material::dropdown::_DropdownMenuRouteLayout" {
  +Rect buttonRect
  +_DropdownRoute<T> route
  +TextDirection? textDirection
  +BoxConstraints getConstraintsForChild()
  +Offset getPositionForChild()
  +bool shouldRelayout()
}

"material::dropdown::_DropdownMenuRouteLayout" o-- "dart::ui::Rect"
"material::dropdown::_DropdownMenuRouteLayout" o-- "material::dropdown::_DropdownRoute<T>"
"material::dropdown::_DropdownMenuRouteLayout" o-- "dart::ui::TextDirection"
"rendering::shifted_box::SingleChildLayoutDelegate" <|-- "material::dropdown::_DropdownMenuRouteLayout"

class "material::dropdown::_DropdownRouteResult" {
  +T? result
  +int hashCode
  +bool ==()
}

class "material::dropdown::_MenuLimits" {
  +double top
  +double bottom
  +double height
  +double scrollOffset
}

class "material::dropdown::_DropdownRoute" {
  +List<_MenuItem<T>> items
  +EdgeInsetsGeometry padding
  +Rect buttonRect
  +int selectedIndex
  +int elevation
  +CapturedThemes capturedThemes
  +TextStyle style
  +double? itemHeight
  +Color? dropdownColor
  +double? menuMaxHeight
  +bool enableFeedback
  +BorderRadius? borderRadius
  +List<double> itemHeights
  +String? barrierLabel
  +Duration transitionDuration
  +bool barrierDismissible
  +Color? barrierColor
  +Widget buildPage()
  -void _dismiss()
  +double getItemOffset()
  +_MenuLimits getMenuLimits()
}

"material::dropdown::_DropdownRoute" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::dropdown::_DropdownRoute" o-- "dart::ui::Rect"
"material::dropdown::_DropdownRoute" o-- "widgets::inherited_theme::CapturedThemes"
"material::dropdown::_DropdownRoute" o-- "painting::text_style::TextStyle"
"material::dropdown::_DropdownRoute" o-- "dart::ui::Color"
"material::dropdown::_DropdownRoute" o-- "painting::border_radius::BorderRadius"
"widgets::routes::PopupRoute" <|-- "material::dropdown::_DropdownRoute"

class "material::dropdown::_DropdownRoutePage" {
  +_DropdownRoute<T> route
  +BoxConstraints constraints
  +List<_MenuItem<T>>? items
  +EdgeInsetsGeometry padding
  +Rect buttonRect
  +int selectedIndex
  +int elevation
  +CapturedThemes capturedThemes
  +TextStyle? style
  +Color? dropdownColor
  +bool enableFeedback
  +BorderRadius? borderRadius
  +State<_DropdownRoutePage<T>> createState()
}

"material::dropdown::_DropdownRoutePage" o-- "material::dropdown::_DropdownRoute<T>"
"material::dropdown::_DropdownRoutePage" o-- "rendering::box::BoxConstraints"
"material::dropdown::_DropdownRoutePage" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::dropdown::_DropdownRoutePage" o-- "dart::ui::Rect"
"material::dropdown::_DropdownRoutePage" o-- "widgets::inherited_theme::CapturedThemes"
"material::dropdown::_DropdownRoutePage" o-- "painting::text_style::TextStyle"
"material::dropdown::_DropdownRoutePage" o-- "dart::ui::Color"
"material::dropdown::_DropdownRoutePage" o-- "painting::border_radius::BorderRadius"
"widgets::framework::StatefulWidget" <|-- "material::dropdown::_DropdownRoutePage"

class "material::dropdown::_DropdownRoutePageState" {
  -ScrollController _scrollSontroller
  +void initState()
  +Widget build()
  +void dispose()
}

"material::dropdown::_DropdownRoutePageState" o-- "widgets::scroll_controller::ScrollController"
"widgets::framework::State" <|-- "material::dropdown::_DropdownRoutePageState"

class "material::dropdown::_MenuItem" {
  +void Function(Size) onLayout
  +DropdownMenuItem<T>? item
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"material::dropdown::_MenuItem" o-- "foundation::basic_types::void Function(Size)"
"material::dropdown::_MenuItem" o-- "material::dropdown::DropdownMenuItem<T>"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "material::dropdown::_MenuItem"

class "material::dropdown::_RenderMenuItem" {
  +void Function(Size) onLayout
  +void performLayout()
}

"material::dropdown::_RenderMenuItem" o-- "foundation::basic_types::void Function(Size)"
"rendering::proxy_box::RenderProxyBox" <|-- "material::dropdown::_RenderMenuItem"

class "material::dropdown::_DropdownMenuItemContainer" {
  +Widget child
  +AlignmentGeometry alignment
  +Widget build()
}

"material::dropdown::_DropdownMenuItemContainer" o-- "widgets::framework::Widget"
"material::dropdown::_DropdownMenuItemContainer" o-- "painting::alignment::AlignmentGeometry"
"widgets::framework::StatelessWidget" <|-- "material::dropdown::_DropdownMenuItemContainer"

class "material::dropdown::DropdownMenuItem" {
  +void Function()? onTap
  +T? value
  +bool enabled
}

"material::dropdown::DropdownMenuItem" o-- "dart::ui::void Function()"
"material::dropdown::_DropdownMenuItemContainer" <|-- "material::dropdown::DropdownMenuItem"

class "material::dropdown::DropdownButtonHideUnderline" {
  {static} +bool at()
  +bool updateShouldNotify()
}

"widgets::framework::InheritedWidget" <|-- "material::dropdown::DropdownButtonHideUnderline"

class "material::dropdown::DropdownButton" {
  +List<DropdownMenuItem<T>>? items
  +T? value
  +Widget? hint
  +Widget? disabledHint
  +void Function(T?)? onChanged
  +void Function()? onTap
  +List<Widget> Function(BuildContext)? selectedItemBuilder
  +int elevation
  +TextStyle? style
  +Widget? underline
  +Widget? icon
  +Color? iconDisabledColor
  +Color? iconEnabledColor
  +double iconSize
  +bool isDense
  +bool isExpanded
  +double? itemHeight
  +Color? focusColor
  +FocusNode? focusNode
  +bool autofocus
  +Color? dropdownColor
  +EdgeInsetsGeometry? padding
  +double? menuMaxHeight
  +bool? enableFeedback
  +AlignmentGeometry alignment
  +BorderRadius? borderRadius
  -InputDecoration? _inputDecoration
  -bool _isEmpty
  -bool _isFocused
  +State<DropdownButton<T>> createState()
}

"material::dropdown::DropdownButton" o-- "widgets::framework::Widget"
"material::dropdown::DropdownButton" o-- "foundation::basic_types::void Function(T)"
"material::dropdown::DropdownButton" o-- "dart::ui::void Function()"
"material::dropdown::DropdownButton" o-- "material::dropdown::List<Widget> Function(BuildContext)"
"material::dropdown::DropdownButton" o-- "painting::text_style::TextStyle"
"material::dropdown::DropdownButton" o-- "dart::ui::Color"
"material::dropdown::DropdownButton" o-- "widgets::focus_manager::FocusNode"
"material::dropdown::DropdownButton" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::dropdown::DropdownButton" o-- "painting::alignment::AlignmentGeometry"
"material::dropdown::DropdownButton" o-- "painting::border_radius::BorderRadius"
"material::dropdown::DropdownButton" o-- "material::input_decorator::InputDecoration"
"widgets::framework::StatefulWidget" <|-- "material::dropdown::DropdownButton"

class "material::dropdown::_DropdownButtonState" {
  -int? _selectedIndex
  -_DropdownRoute<T>? _dropdownRoute
  -Orientation? _lastOrientation
  -FocusNode? _internalNode
  -Map<Type, Action<Intent>> _actionMap
  +FocusNode? focusNode
  -TextStyle? _textStyle
  -double _denseButtonHeight
  -Color _iconColor
  -bool _enabled
  -FocusNode _createFocusNode()
  +void initState()
  +void dispose()
  -void _removeDropdownRoute()
  +void didUpdateWidget()
  -void _updateSelectedIndex()
  -void _handleTap()
  -Orientation _getOrientation()
  +Widget build()
}

"material::dropdown::_DropdownButtonState" o-- "material::dropdown::_DropdownRoute<T>"
"material::dropdown::_DropdownButtonState" o-- "widgets::media_query::Orientation"
"material::dropdown::_DropdownButtonState" o-- "widgets::focus_manager::FocusNode"
"material::dropdown::_DropdownButtonState" o-- "painting::text_style::TextStyle"
"material::dropdown::_DropdownButtonState" o-- "dart::ui::Color"
"widgets::framework::State" <|-- "material::dropdown::_DropdownButtonState"
"widgets::binding::WidgetsBindingObserver" <|-- "material::dropdown::_DropdownButtonState"

class "material::dropdown::DropdownButtonFormField" {
  +void Function(T?)? onChanged
  +InputDecoration decoration
  +FormFieldState<T> createState()
}

"material::dropdown::DropdownButtonFormField" o-- "foundation::basic_types::void Function(T)"
"material::dropdown::DropdownButtonFormField" o-- "material::input_decorator::InputDecoration"
"widgets::form::FormField" <|-- "material::dropdown::DropdownButtonFormField"

class "material::dropdown::_DropdownButtonFormFieldState" {
  -DropdownButtonFormField<T> _dropdownButtonFormField
  +void didChange()
  +void didUpdateWidget()
  +void reset()
}

"material::dropdown::_DropdownButtonFormFieldState" o-- "material::dropdown::DropdownButtonFormField<T>"
"widgets::form::FormFieldState" <|-- "material::dropdown::_DropdownButtonFormFieldState"

class "material::text_form_field::TextFormField" {
  +TextEditingController? controller
  +void Function(String)? onChanged
  {static} -Widget _defaultContextMenuBuilder()
  +FormFieldState<String> createState()
}

"material::text_form_field::TextFormField" o-- "widgets::editable_text::TextEditingController"
"material::text_form_field::TextFormField" o-- "foundation::basic_types::void Function(String)"
"widgets::form::FormField" <|-- "material::text_form_field::TextFormField"

class "material::text_form_field::_TextFormFieldState" {
  -RestorableTextEditingController? _controller
  -TextEditingController _effectiveController
  -TextFormField _textFormField
  +void restoreState()
  -void _registerController()
  -void _createLocalController()
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +void didChange()
  +void reset()
  -void _handleControllerChanged()
}

"material::text_form_field::_TextFormFieldState" o-- "widgets::restoration_properties::RestorableTextEditingController"
"material::text_form_field::_TextFormFieldState" o-- "widgets::editable_text::TextEditingController"
"material::text_form_field::_TextFormFieldState" o-- "material::text_form_field::TextFormField"
"widgets::form::FormFieldState" <|-- "material::text_form_field::_TextFormFieldState"

class "material::slider::Slider" {
  +double value
  +double? secondaryTrackValue
  +void Function(double)? onChanged
  +void Function(double)? onChangeStart
  +void Function(double)? onChangeEnd
  +double min
  +double max
  +int? divisions
  +String? label
  +Color? activeColor
  +Color? inactiveColor
  +Color? secondaryActiveColor
  +Color? thumbColor
  +MaterialStateProperty<Color?>? overlayColor
  +MouseCursor? mouseCursor
  +String Function(double)? semanticFormatterCallback
  +FocusNode? focusNode
  +bool autofocus
  +SliderInteraction? allowedInteraction
  -_SliderType _sliderType
  +State<Slider> createState()
  +void debugFillProperties()
}

"material::slider::Slider" o-- "foundation::basic_types::void Function(double)"
"material::slider::Slider" o-- "dart::ui::Color"
"material::slider::Slider" o-- "material::material_state::MaterialStateProperty<Color>"
"material::slider::Slider" o-- "services::mouse_cursor::MouseCursor"
"material::slider::Slider" o-- "material::slider_theme::String Function(double)"
"material::slider::Slider" o-- "widgets::focus_manager::FocusNode"
"material::slider::Slider" o-- "material::slider::SliderInteraction"
"material::slider::Slider" o-- "material::slider::_SliderType"
"widgets::framework::StatefulWidget" <|-- "material::slider::Slider"

class "material::slider::_SliderState" {
  {static} +Duration enableAnimationDuration
  {static} +Duration valueIndicatorAnimationDuration
  +AnimationController overlayController
  +AnimationController valueIndicatorController
  +AnimationController enableController
  +AnimationController positionController
  +Timer? interactionTimer
  -GlobalKey<State<StatefulWidget>> _renderObjectKey
  {static} -Map<ShortcutActivator, Intent> _traditionalNavShortcutMap
  {static} -Map<ShortcutActivator, Intent> _directionalNavShortcutMap
  -Map<Type, Action<Intent>> _actionMap
  +void Function(PaintingContext, Offset)? paintValueIndicator
  -bool _dragging
  -FocusNode? _focusNode
  -bool _focused
  -bool _hovering
  -LayerLink _layerLink
  +OverlayEntry? overlayEntry
  -bool _enabled
  +FocusNode focusNode
  +void initState()
  +void dispose()
  -void _handleChanged()
  -void _handleDragStart()
  -void _handleDragEnd()
  -void _actionHandler()
  -void _handleFocusHighlightChanged()
  -void _handleHoverChanged()
  -double _lerp()
  -double _discretize()
  -double _convert()
  -double _unlerp()
  +Widget build()
  -Widget _buildMaterialSlider()
  -Widget _buildCupertinoSlider()
  +void showValueIndicator()
}

"material::slider::_SliderState" o-- "animation::animation_controller::AnimationController"
"material::slider::_SliderState" o-- "dart::async::Timer"
"material::slider::_SliderState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"material::slider::_SliderState" o-- "material::slider::void Function(PaintingContext, Offset)"
"material::slider::_SliderState" o-- "widgets::focus_manager::FocusNode"
"material::slider::_SliderState" o-- "rendering::layer::LayerLink"
"material::slider::_SliderState" o-- "widgets::overlay::OverlayEntry"
"widgets::framework::State" <|-- "material::slider::_SliderState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::slider::_SliderState"

class "material::slider::_SliderRenderObjectWidget" {
  +double value
  +double? secondaryTrackValue
  +int? divisions
  +String? label
  +SliderThemeData sliderTheme
  +double textScaleFactor
  +Size screenSize
  +void Function(double)? onChanged
  +void Function(double)? onChangeStart
  +void Function(double)? onChangeEnd
  +String Function(double)? semanticFormatterCallback
  +_SliderState state
  +bool hasFocus
  +bool hovering
  +SliderInteraction allowedInteraction
  +_RenderSlider createRenderObject()
  +void updateRenderObject()
}

"material::slider::_SliderRenderObjectWidget" o-- "material::slider_theme::SliderThemeData"
"material::slider::_SliderRenderObjectWidget" o-- "dart::ui::Size"
"material::slider::_SliderRenderObjectWidget" o-- "foundation::basic_types::void Function(double)"
"material::slider::_SliderRenderObjectWidget" o-- "material::slider_theme::String Function(double)"
"material::slider::_SliderRenderObjectWidget" o-- "material::slider::_SliderState"
"material::slider::_SliderRenderObjectWidget" o-- "material::slider::SliderInteraction"
"widgets::framework::LeafRenderObjectWidget" <|-- "material::slider::_SliderRenderObjectWidget"

class "material::slider::_RenderSlider" {
  {static} -Duration _positionAnimationDuration
  {static} -Duration _minimumInteractionTime
  {static} -double _minPreferredTrackWidth
  -_SliderState _state
  -Animation<double> _overlayAnimation
  -Animation<double> _valueIndicatorAnimation
  -Animation<double> _enableAnimation
  -TextPainter _labelPainter
  -HorizontalDragGestureRecognizer _drag
  -TapGestureRecognizer _tap
  -bool _active
  -double _currentDragValue
  +Rect? overlayRect
  -double _value
  -double? _secondaryTrackValue
  -TargetPlatform _platform
  -String Function(double)? _semanticFormatterCallback
  -int? _divisions
  -String? _label
  -SliderThemeData _sliderTheme
  -double _textScaleFactor
  -Size _screenSize
  -void Function(double)? _onChanged
  +void Function(double)? onChangeStart
  +void Function(double)? onChangeEnd
  -TextDirection _textDirection
  -bool _hasFocus
  -bool _hovering
  -bool _hoveringThumb
  -SliderInteraction _allowedInteraction
  -double _maxSliderPartWidth
  -double _maxSliderPartHeight
  -List<Size> _sliderPartSizes
  -double _minPreferredTrackHeight
  -Rect _trackRect
  +bool isInteractive
  +bool isDiscrete
  +double value
  +double? secondaryTrackValue
  +DeviceGestureSettings? gestureSettings
  +TargetPlatform platform
  +String Function(double)? semanticFormatterCallback
  +int? divisions
  +String? label
  +SliderThemeData sliderTheme
  +double textScaleFactor
  +Size screenSize
  +void Function(double)? onChanged
  +TextDirection textDirection
  +bool hasFocus
  +bool hovering
  +bool hoveringThumb
  +SliderInteraction allowedInteraction
  +bool showValueIndicator
  -double _adjustmentUnit
  +bool sizedByParent
  -double _semanticActionUnit
  +double currentValue
  -void _updateForFocus()
  -void _updateForHover()
  -void _updateLabelPainter()
  +void systemFontsDidChange()
  +void attach()
  +void detach()
  +void dispose()
  -double _getValueFromVisualPosition()
  -double _getValueFromGlobalPosition()
  -double _discretize()
  -void _startInteraction()
  -void _endInteraction()
  -void _handleDragStart()
  -void _handleDragUpdate()
  -void _handleDragEnd()
  -void _handleTapDown()
  -void _handleTapUp()
  -bool _isPointerOnOverlay()
  +bool hitTestSelf()
  +void handleEvent()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +Size computeDryLayout()
  +void paint()
  +void describeSemanticsConfiguration()
  +void increaseAction()
  +void decreaseAction()
  +double increaseValue()
  +double decreaseValue()
}

"material::slider::_RenderSlider" o-- "material::slider::_SliderState"
"material::slider::_RenderSlider" o-- "animation::animation::Animation<double>"
"material::slider::_RenderSlider" o-- "painting::text_painter::TextPainter"
"material::slider::_RenderSlider" o-- "gestures::monodrag::HorizontalDragGestureRecognizer"
"material::slider::_RenderSlider" o-- "gestures::tap::TapGestureRecognizer"
"material::slider::_RenderSlider" o-- "dart::ui::Rect"
"material::slider::_RenderSlider" o-- "foundation::platform::TargetPlatform"
"material::slider::_RenderSlider" o-- "material::slider_theme::String Function(double)"
"material::slider::_RenderSlider" o-- "material::slider_theme::SliderThemeData"
"material::slider::_RenderSlider" o-- "dart::ui::Size"
"material::slider::_RenderSlider" o-- "foundation::basic_types::void Function(double)"
"material::slider::_RenderSlider" o-- "dart::ui::TextDirection"
"material::slider::_RenderSlider" o-- "material::slider::SliderInteraction"
"material::slider::_RenderSlider" o-- "gestures::gesture_settings::DeviceGestureSettings"
"rendering::box::RenderBox" <|-- "material::slider::_RenderSlider"
"rendering::object::RelayoutWhenSystemFontsChangeMixin" <|-- "material::slider::_RenderSlider"

class "material::slider::_AdjustSliderIntent" {
  +_SliderAdjustmentType type
}

"material::slider::_AdjustSliderIntent" o-- "material::slider::_SliderAdjustmentType"
"widgets::actions::Intent" <|-- "material::slider::_AdjustSliderIntent"

class "material::slider::_ValueIndicatorRenderObjectWidget" {
  +_SliderState state
  +_RenderValueIndicator createRenderObject()
  +void updateRenderObject()
}

"material::slider::_ValueIndicatorRenderObjectWidget" o-- "material::slider::_SliderState"
"widgets::framework::LeafRenderObjectWidget" <|-- "material::slider::_ValueIndicatorRenderObjectWidget"

class "material::slider::_RenderValueIndicator" {
  -Animation<double> _valueIndicatorAnimation
  -_SliderState _state
  +bool sizedByParent
  +void attach()
  +void detach()
  +void paint()
  +Size computeDryLayout()
}

"material::slider::_RenderValueIndicator" o-- "animation::animation::Animation<double>"
"material::slider::_RenderValueIndicator" o-- "material::slider::_SliderState"
"rendering::box::RenderBox" <|-- "material::slider::_RenderValueIndicator"
"rendering::object::RelayoutWhenSystemFontsChangeMixin" <|-- "material::slider::_RenderValueIndicator"

class "material::slider::_SliderDefaultsM2" {
  +BuildContext context
  -ColorScheme _colors
  +Color? activeTrackColor
  +Color? inactiveTrackColor
  +Color? secondaryActiveTrackColor
  +Color? disabledActiveTrackColor
  +Color? disabledInactiveTrackColor
  +Color? disabledSecondaryActiveTrackColor
  +Color? activeTickMarkColor
  +Color? inactiveTickMarkColor
  +Color? disabledActiveTickMarkColor
  +Color? disabledInactiveTickMarkColor
  +Color? thumbColor
  +Color? disabledThumbColor
  +Color? overlayColor
  +TextStyle? valueIndicatorTextStyle
  +SliderComponentShape? valueIndicatorShape
}

"material::slider::_SliderDefaultsM2" o-- "widgets::framework::BuildContext"
"material::slider::_SliderDefaultsM2" o-- "material::color_scheme::ColorScheme"
"material::slider::_SliderDefaultsM2" o-- "dart::ui::Color"
"material::slider::_SliderDefaultsM2" o-- "painting::text_style::TextStyle"
"material::slider::_SliderDefaultsM2" o-- "material::slider_theme::SliderComponentShape"
"material::slider_theme::SliderThemeData" <|-- "material::slider::_SliderDefaultsM2"

class "material::slider::_SliderDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  +Color? activeTrackColor
  +Color? inactiveTrackColor
  +Color? secondaryActiveTrackColor
  +Color? disabledActiveTrackColor
  +Color? disabledInactiveTrackColor
  +Color? disabledSecondaryActiveTrackColor
  +Color? activeTickMarkColor
  +Color? inactiveTickMarkColor
  +Color? disabledActiveTickMarkColor
  +Color? disabledInactiveTickMarkColor
  +Color? thumbColor
  +Color? disabledThumbColor
  +Color? overlayColor
  +TextStyle? valueIndicatorTextStyle
  +SliderComponentShape? valueIndicatorShape
}

"material::slider::_SliderDefaultsM3" o-- "widgets::framework::BuildContext"
"material::slider::_SliderDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::slider::_SliderDefaultsM3" o-- "dart::ui::Color"
"material::slider::_SliderDefaultsM3" o-- "painting::text_style::TextStyle"
"material::slider::_SliderDefaultsM3" o-- "material::slider_theme::SliderComponentShape"
"material::slider_theme::SliderThemeData" <|-- "material::slider::_SliderDefaultsM3"

class "material::slider::_SliderType" {
  +int index
  {static} +List<_SliderType> values
  {static} +_SliderType material
  {static} +_SliderType adaptive
}

"material::slider::_SliderType" o-- "material::slider::_SliderType"
"dart::core::Enum" <|-- "material::slider::_SliderType"

class "material::slider::SliderInteraction" {
  +int index
  {static} +List<SliderInteraction> values
  {static} +SliderInteraction tapAndSlide
  {static} +SliderInteraction tapOnly
  {static} +SliderInteraction slideOnly
  {static} +SliderInteraction slideThumb
}

"material::slider::SliderInteraction" o-- "material::slider::SliderInteraction"
"dart::core::Enum" <|-- "material::slider::SliderInteraction"

class "material::slider::_SliderAdjustmentType" {
  +int index
  {static} +List<_SliderAdjustmentType> values
  {static} +_SliderAdjustmentType right
  {static} +_SliderAdjustmentType left
  {static} +_SliderAdjustmentType up
  {static} +_SliderAdjustmentType down
}

"material::slider::_SliderAdjustmentType" o-- "material::slider::_SliderAdjustmentType"
"dart::core::Enum" <|-- "material::slider::_SliderAdjustmentType"

class "material::tab_indicator::UnderlineTabIndicator" {
  +BorderRadius? borderRadius
  +BorderSide borderSide
  +EdgeInsetsGeometry insets
  +Decoration? lerpFrom()
  +Decoration? lerpTo()
  +BoxPainter createBoxPainter()
  -Rect _indicatorRectFor()
  +Path getClipPath()
}

"material::tab_indicator::UnderlineTabIndicator" o-- "painting::border_radius::BorderRadius"
"material::tab_indicator::UnderlineTabIndicator" o-- "painting::borders::BorderSide"
"material::tab_indicator::UnderlineTabIndicator" o-- "painting::edge_insets::EdgeInsetsGeometry"
"painting::decoration::Decoration" <|-- "material::tab_indicator::UnderlineTabIndicator"

class "material::tab_indicator::_UnderlinePainter" {
  +UnderlineTabIndicator decoration
  +BorderRadius? borderRadius
  +void paint()
}

"material::tab_indicator::_UnderlinePainter" o-- "material::tab_indicator::UnderlineTabIndicator"
"material::tab_indicator::_UnderlinePainter" o-- "painting::border_radius::BorderRadius"
"painting::decoration::BoxPainter" <|-- "material::tab_indicator::_UnderlinePainter"

class "material::no_splash::_NoSplashFactory" {
  +InteractiveInkFeature create()
}

"material::ink_well::InteractiveInkFeatureFactory" <|-- "material::no_splash::_NoSplashFactory"

class "material::no_splash::NoSplash" {
  {static} +InteractiveInkFeatureFactory splashFactory
  +void paintFeature()
}

"material::no_splash::NoSplash" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::ink_well::InteractiveInkFeature" <|-- "material::no_splash::NoSplash"

class "material::button_theme::ButtonTheme" {
  +ButtonThemeData data
  {static} +ButtonThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::button_theme::ButtonTheme" o-- "material::button_theme::ButtonThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::button_theme::ButtonTheme"

class "material::button_theme::ButtonThemeData" {
  +double minWidth
  +double height
  +ButtonTextTheme textTheme
  +ButtonBarLayoutBehavior layoutBehavior
  -EdgeInsetsGeometry? _padding
  -ShapeBorder? _shape
  +bool alignedDropdown
  -Color? _buttonColor
  -Color? _disabledColor
  -Color? _focusColor
  -Color? _hoverColor
  -Color? _highlightColor
  -Color? _splashColor
  +ColorScheme? colorScheme
  -MaterialTapTargetSize? _materialTapTargetSize
  +BoxConstraints constraints
  +EdgeInsetsGeometry padding
  +ShapeBorder shape
  +int hashCode
  +Brightness getBrightness()
  +ButtonTextTheme getTextTheme()
  +Color getDisabledTextColor()
  +Color getDisabledFillColor()
  +Color? getFillColor()
  +Color getTextColor()
  +Color getSplashColor()
  +Color getFocusColor()
  +Color getHoverColor()
  +Color getHighlightColor()
  +double getElevation()
  +double getFocusElevation()
  +double getHoverElevation()
  +double getHighlightElevation()
  +double getDisabledElevation()
  +EdgeInsetsGeometry getPadding()
  +ShapeBorder getShape()
  +Duration getAnimationDuration()
  +BoxConstraints getConstraints()
  +MaterialTapTargetSize getMaterialTapTargetSize()
  +ButtonThemeData copyWith()
  +bool ==()
  +void debugFillProperties()
}

"material::button_theme::ButtonThemeData" o-- "material::button_theme::ButtonTextTheme"
"material::button_theme::ButtonThemeData" o-- "material::button_theme::ButtonBarLayoutBehavior"
"material::button_theme::ButtonThemeData" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::button_theme::ButtonThemeData" o-- "painting::borders::ShapeBorder"
"material::button_theme::ButtonThemeData" o-- "dart::ui::Color"
"material::button_theme::ButtonThemeData" o-- "material::color_scheme::ColorScheme"
"material::button_theme::ButtonThemeData" o-- "material::theme_data::MaterialTapTargetSize"
"material::button_theme::ButtonThemeData" o-- "rendering::box::BoxConstraints"
"foundation::diagnostics::Diagnosticable" <|-- "material::button_theme::ButtonThemeData"

class "material::button_theme::ButtonTextTheme" {
  +int index
  {static} +List<ButtonTextTheme> values
  {static} +ButtonTextTheme normal
  {static} +ButtonTextTheme accent
  {static} +ButtonTextTheme primary
}

"material::button_theme::ButtonTextTheme" o-- "material::button_theme::ButtonTextTheme"
"dart::core::Enum" <|-- "material::button_theme::ButtonTextTheme"

class "material::button_theme::ButtonBarLayoutBehavior" {
  +int index
  {static} +List<ButtonBarLayoutBehavior> values
  {static} +ButtonBarLayoutBehavior constrained
  {static} +ButtonBarLayoutBehavior padded
}

"material::button_theme::ButtonBarLayoutBehavior" o-- "material::button_theme::ButtonBarLayoutBehavior"
"dart::core::Enum" <|-- "material::button_theme::ButtonBarLayoutBehavior"

class "material::arc::MaterialPointArcTween" {
  -bool _dirty
  -Offset? _center
  -double? _radius
  -double? _beginAngle
  -double? _endAngle
  +Offset? center
  +double? radius
  +double? beginAngle
  +double? endAngle
  +Offset? begin
  +Offset? end
  -void _initialize()
  +Offset lerp()
  +String toString()
}

"material::arc::MaterialPointArcTween" o-- "dart::ui::Offset"
"animation::tween::Tween" <|-- "material::arc::MaterialPointArcTween"

class "material::arc::_Diagonal" {
  +_CornerId beginId
  +_CornerId endId
}

"material::arc::_Diagonal" o-- "material::arc::_CornerId"

class "material::arc::MaterialRectArcTween" {
  -bool _dirty
  -MaterialPointArcTween _beginArc
  -MaterialPointArcTween _endArc
  +MaterialPointArcTween? beginArc
  +MaterialPointArcTween? endArc
  +Rect? begin
  +Rect? end
  -void _initialize()
  -double _diagonalSupport()
  -Offset _cornerFor()
  +Rect lerp()
  +String toString()
}

"material::arc::MaterialRectArcTween" o-- "material::arc::MaterialPointArcTween"
"material::arc::MaterialRectArcTween" o-- "dart::ui::Rect"
"animation::tween::RectTween" <|-- "material::arc::MaterialRectArcTween"

class "material::arc::MaterialRectCenterArcTween" {
  -bool _dirty
  -MaterialPointArcTween _centerArc
  +MaterialPointArcTween? centerArc
  +Rect? begin
  +Rect? end
  -void _initialize()
  +Rect lerp()
  +String toString()
}

"material::arc::MaterialRectCenterArcTween" o-- "material::arc::MaterialPointArcTween"
"material::arc::MaterialRectCenterArcTween" o-- "dart::ui::Rect"
"animation::tween::RectTween" <|-- "material::arc::MaterialRectCenterArcTween"

class "material::arc::_CornerId" {
  +int index
  {static} +List<_CornerId> values
  {static} +_CornerId topLeft
  {static} +_CornerId topRight
  {static} +_CornerId bottomLeft
  {static} +_CornerId bottomRight
}

"material::arc::_CornerId" o-- "material::arc::_CornerId"
"dart::core::Enum" <|-- "material::arc::_CornerId"

abstract class "material::progress_indicator::ProgressIndicator" {
  +double? value
  +Color? backgroundColor
  +Color? color
  +Animation<Color?>? valueColor
  +String? semanticsLabel
  +String? semanticsValue
  -Color _getValueColor()
  +void debugFillProperties()
  -Widget _buildSemanticsWrapper()
}

"material::progress_indicator::ProgressIndicator" o-- "dart::ui::Color"
"material::progress_indicator::ProgressIndicator" o-- "animation::animation::Animation<Color>"
"widgets::framework::StatefulWidget" <|-- "material::progress_indicator::ProgressIndicator"

class "material::progress_indicator::_LinearProgressIndicatorPainter" {
  +Color backgroundColor
  +Color valueColor
  +double? value
  +double animationValue
  +TextDirection textDirection
  +BorderRadiusGeometry indicatorBorderRadius
  {static} +Curve line1Head
  {static} +Curve line1Tail
  {static} +Curve line2Head
  {static} +Curve line2Tail
  +void paint()
  +bool shouldRepaint()
}

"material::progress_indicator::_LinearProgressIndicatorPainter" o-- "dart::ui::Color"
"material::progress_indicator::_LinearProgressIndicatorPainter" o-- "dart::ui::TextDirection"
"material::progress_indicator::_LinearProgressIndicatorPainter" o-- "painting::border_radius::BorderRadiusGeometry"
"material::progress_indicator::_LinearProgressIndicatorPainter" o-- "animation::curves::Curve"
"rendering::custom_paint::CustomPainter" <|-- "material::progress_indicator::_LinearProgressIndicatorPainter"

class "material::progress_indicator::LinearProgressIndicator" {
  +double? minHeight
  +BorderRadiusGeometry borderRadius
  +Color? backgroundColor
  +State<LinearProgressIndicator> createState()
}

"material::progress_indicator::LinearProgressIndicator" o-- "painting::border_radius::BorderRadiusGeometry"
"material::progress_indicator::LinearProgressIndicator" o-- "dart::ui::Color"
"material::progress_indicator::ProgressIndicator" <|-- "material::progress_indicator::LinearProgressIndicator"

class "material::progress_indicator::_LinearProgressIndicatorState" {
  -AnimationController _controller
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  -Widget _buildIndicator()
  +Widget build()
}

"material::progress_indicator::_LinearProgressIndicatorState" o-- "animation::animation_controller::AnimationController"
"widgets::framework::State" <|-- "material::progress_indicator::_LinearProgressIndicatorState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "material::progress_indicator::_LinearProgressIndicatorState"

class "material::progress_indicator::_CircularProgressIndicatorPainter" {
  +Color? backgroundColor
  +Color valueColor
  +double? value
  +double headValue
  +double tailValue
  +double offsetValue
  +double rotationValue
  +double strokeWidth
  +double strokeAlign
  +double arcStart
  +double arcSweep
  +StrokeCap? strokeCap
  {static} -double _twoPi
  {static} -double _epsilon
  {static} -double _sweep
  {static} -double _startAngle
  +void paint()
  +bool shouldRepaint()
}

"material::progress_indicator::_CircularProgressIndicatorPainter" o-- "dart::ui::Color"
"material::progress_indicator::_CircularProgressIndicatorPainter" o-- "dart::ui::StrokeCap"
"rendering::custom_paint::CustomPainter" <|-- "material::progress_indicator::_CircularProgressIndicatorPainter"

class "material::progress_indicator::CircularProgressIndicator" {
  -_ActivityIndicatorType _indicatorType
  +double strokeWidth
  +double strokeAlign
  +StrokeCap? strokeCap
  {static} +double strokeAlignInside
  {static} +double strokeAlignCenter
  {static} +double strokeAlignOutside
  +Color? backgroundColor
  +State<CircularProgressIndicator> createState()
}

"material::progress_indicator::CircularProgressIndicator" o-- "material::progress_indicator::_ActivityIndicatorType"
"material::progress_indicator::CircularProgressIndicator" o-- "dart::ui::StrokeCap"
"material::progress_indicator::CircularProgressIndicator" o-- "dart::ui::Color"
"material::progress_indicator::ProgressIndicator" <|-- "material::progress_indicator::CircularProgressIndicator"

class "material::progress_indicator::_CircularProgressIndicatorState" {
  {static} -int _pathCount
  {static} -int _rotationCount
  {static} -Animatable<double> _strokeHeadTween
  {static} -Animatable<double> _strokeTailTween
  {static} -Animatable<double> _offsetTween
  {static} -Animatable<double> _rotationTween
  -AnimationController _controller
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  -Widget _buildCupertinoIndicator()
  -Widget _buildMaterialIndicator()
  -Widget _buildAnimation()
  +Widget build()
}

"material::progress_indicator::_CircularProgressIndicatorState" o-- "animation::tween::Animatable<double>"
"material::progress_indicator::_CircularProgressIndicatorState" o-- "animation::animation_controller::AnimationController"
"widgets::framework::State" <|-- "material::progress_indicator::_CircularProgressIndicatorState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "material::progress_indicator::_CircularProgressIndicatorState"

class "material::progress_indicator::_RefreshProgressIndicatorPainter" {
  +double arrowheadScale
  +void paintArrowhead()
  +void paint()
}

"material::progress_indicator::_CircularProgressIndicatorPainter" <|-- "material::progress_indicator::_RefreshProgressIndicatorPainter"

class "material::progress_indicator::RefreshProgressIndicator" {
  +double elevation
  +EdgeInsetsGeometry indicatorMargin
  +EdgeInsetsGeometry indicatorPadding
  {static} +double defaultStrokeWidth
  +Color? backgroundColor
  +State<CircularProgressIndicator> createState()
}

"material::progress_indicator::RefreshProgressIndicator" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::progress_indicator::RefreshProgressIndicator" o-- "dart::ui::Color"
"material::progress_indicator::CircularProgressIndicator" <|-- "material::progress_indicator::RefreshProgressIndicator"

class "material::progress_indicator::_RefreshProgressIndicatorState" {
  {static} -double _indicatorSize
  {static} -double _strokeHeadInterval
  -Animatable<double> _convertTween
  -Animatable<double> _additionalRotationTween
  -double? _lastValue
  +RefreshProgressIndicator widget
  +Widget build()
  -Widget _buildAnimation()
  -Widget _buildMaterialIndicator()
}

"material::progress_indicator::_RefreshProgressIndicatorState" o-- "animation::tween::Animatable<double>"
"material::progress_indicator::_RefreshProgressIndicatorState" o-- "material::progress_indicator::RefreshProgressIndicator"
"material::progress_indicator::_CircularProgressIndicatorState" <|-- "material::progress_indicator::_RefreshProgressIndicatorState"

class "material::progress_indicator::_CircularProgressIndicatorDefaultsM2" {
  +BuildContext context
  -ColorScheme _colors
  +Color color
}

"material::progress_indicator::_CircularProgressIndicatorDefaultsM2" o-- "widgets::framework::BuildContext"
"material::progress_indicator::_CircularProgressIndicatorDefaultsM2" o-- "material::color_scheme::ColorScheme"
"material::progress_indicator::_CircularProgressIndicatorDefaultsM2" o-- "dart::ui::Color"
"material::progress_indicator_theme::ProgressIndicatorThemeData" <|-- "material::progress_indicator::_CircularProgressIndicatorDefaultsM2"

class "material::progress_indicator::_LinearProgressIndicatorDefaultsM2" {
  +BuildContext context
  -ColorScheme _colors
  +Color color
  +Color linearTrackColor
  +double linearMinHeight
}

"material::progress_indicator::_LinearProgressIndicatorDefaultsM2" o-- "widgets::framework::BuildContext"
"material::progress_indicator::_LinearProgressIndicatorDefaultsM2" o-- "material::color_scheme::ColorScheme"
"material::progress_indicator::_LinearProgressIndicatorDefaultsM2" o-- "dart::ui::Color"
"material::progress_indicator_theme::ProgressIndicatorThemeData" <|-- "material::progress_indicator::_LinearProgressIndicatorDefaultsM2"

class "material::progress_indicator::_CircularProgressIndicatorDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  +Color color
}

"material::progress_indicator::_CircularProgressIndicatorDefaultsM3" o-- "widgets::framework::BuildContext"
"material::progress_indicator::_CircularProgressIndicatorDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::progress_indicator::_CircularProgressIndicatorDefaultsM3" o-- "dart::ui::Color"
"material::progress_indicator_theme::ProgressIndicatorThemeData" <|-- "material::progress_indicator::_CircularProgressIndicatorDefaultsM3"

class "material::progress_indicator::_LinearProgressIndicatorDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  +Color color
  +Color linearTrackColor
  +double linearMinHeight
}

"material::progress_indicator::_LinearProgressIndicatorDefaultsM3" o-- "widgets::framework::BuildContext"
"material::progress_indicator::_LinearProgressIndicatorDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::progress_indicator::_LinearProgressIndicatorDefaultsM3" o-- "dart::ui::Color"
"material::progress_indicator_theme::ProgressIndicatorThemeData" <|-- "material::progress_indicator::_LinearProgressIndicatorDefaultsM3"

class "material::progress_indicator::_ActivityIndicatorType" {
  +int index
  {static} +List<_ActivityIndicatorType> values
  {static} +_ActivityIndicatorType material
  {static} +_ActivityIndicatorType adaptive
}

"material::progress_indicator::_ActivityIndicatorType" o-- "material::progress_indicator::_ActivityIndicatorType"
"dart::core::Enum" <|-- "material::progress_indicator::_ActivityIndicatorType"

class "material::list_tile::ListTile" {
  +Widget? leading
  +Widget? title
  +Widget? subtitle
  +Widget? trailing
  +bool isThreeLine
  +bool? dense
  +VisualDensity? visualDensity
  +ShapeBorder? shape
  +Color? selectedColor
  +Color? iconColor
  +Color? textColor
  +TextStyle? titleTextStyle
  +TextStyle? subtitleTextStyle
  +TextStyle? leadingAndTrailingTextStyle
  +ListTileStyle? style
  +EdgeInsetsGeometry? contentPadding
  +bool enabled
  +void Function()? onTap
  +void Function()? onLongPress
  +void Function(bool)? onFocusChange
  +MouseCursor? mouseCursor
  +bool selected
  +Color? focusColor
  +Color? hoverColor
  +Color? splashColor
  +FocusNode? focusNode
  +bool autofocus
  +Color? tileColor
  +Color? selectedTileColor
  +bool? enableFeedback
  +double? horizontalTitleGap
  +double? minVerticalPadding
  +double? minLeadingWidth
  +ListTileTitleAlignment? titleAlignment
  {static} +Iterable<Widget> divideTiles()
  -bool _isDenseLayout()
  -Color _tileBackgroundColor()
  +Widget build()
  +void debugFillProperties()
}

"material::list_tile::ListTile" o-- "widgets::framework::Widget"
"material::list_tile::ListTile" o-- "material::theme_data::VisualDensity"
"material::list_tile::ListTile" o-- "painting::borders::ShapeBorder"
"material::list_tile::ListTile" o-- "dart::ui::Color"
"material::list_tile::ListTile" o-- "painting::text_style::TextStyle"
"material::list_tile::ListTile" o-- "material::list_tile::ListTileStyle"
"material::list_tile::ListTile" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::list_tile::ListTile" o-- "gestures::tap::void Function()"
"material::list_tile::ListTile" o-- "gestures::long_press::void Function()"
"material::list_tile::ListTile" o-- "foundation::basic_types::void Function(bool)"
"material::list_tile::ListTile" o-- "services::mouse_cursor::MouseCursor"
"material::list_tile::ListTile" o-- "widgets::focus_manager::FocusNode"
"material::list_tile::ListTile" o-- "material::list_tile::ListTileTitleAlignment"
"widgets::framework::StatelessWidget" <|-- "material::list_tile::ListTile"

class "material::list_tile::_IndividualOverrides" {
  +Color? explicitColor
  +Color? enabledColor
  +Color? selectedColor
  +Color? disabledColor
  +Color? resolve()
}

"material::list_tile::_IndividualOverrides" o-- "dart::ui::Color"
"material::material_state::MaterialStateProperty" <|-- "material::list_tile::_IndividualOverrides"

class "material::list_tile::_ListTile" {
  +Widget? leading
  +Widget title
  +Widget? subtitle
  +Widget? trailing
  +bool isThreeLine
  +bool isDense
  +VisualDensity visualDensity
  +TextDirection textDirection
  +TextBaseline titleBaselineType
  +TextBaseline? subtitleBaselineType
  +double horizontalTitleGap
  +double minVerticalPadding
  +double minLeadingWidth
  +ListTileTitleAlignment titleAlignment
  +Iterable<_ListTileSlot> slots
  +Widget? childForSlot()
  +_RenderListTile createRenderObject()
  +void updateRenderObject()
}

"material::list_tile::_ListTile" o-- "widgets::framework::Widget"
"material::list_tile::_ListTile" o-- "material::theme_data::VisualDensity"
"material::list_tile::_ListTile" o-- "dart::ui::TextDirection"
"material::list_tile::_ListTile" o-- "dart::ui::TextBaseline"
"material::list_tile::_ListTile" o-- "material::list_tile::ListTileTitleAlignment"

class "material::list_tile::_RenderListTile" {
  -bool _isDense
  -VisualDensity _visualDensity
  -bool _isThreeLine
  -TextDirection _textDirection
  -TextBaseline _titleBaselineType
  -TextBaseline? _subtitleBaselineType
  -double _horizontalTitleGap
  -double _minVerticalPadding
  -double _minLeadingWidth
  -ListTileTitleAlignment _titleAlignment
  +RenderBox? leading
  +RenderBox? title
  +RenderBox? subtitle
  +RenderBox? trailing
  +Iterable<RenderBox> children
  +bool isDense
  +VisualDensity visualDensity
  +bool isThreeLine
  +TextDirection textDirection
  +TextBaseline titleBaselineType
  +TextBaseline? subtitleBaselineType
  +double horizontalTitleGap
  -double _effectiveHorizontalTitleGap
  +double minVerticalPadding
  +double minLeadingWidth
  +ListTileTitleAlignment titleAlignment
  +bool sizedByParent
  -double _defaultTileHeight
  {static} -double _minWidth()
  {static} -double _maxWidth()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double computeDistanceToActualBaseline()
  {static} -double? _boxBaseline()
  {static} -Size _layoutBox()
  {static} -void _positionBox()
  +Size computeDryLayout()
  +void performLayout()
  +void paint()
  +bool hitTestSelf()
  +bool hitTestChildren()
}

"material::list_tile::_RenderListTile" o-- "material::theme_data::VisualDensity"
"material::list_tile::_RenderListTile" o-- "dart::ui::TextDirection"
"material::list_tile::_RenderListTile" o-- "dart::ui::TextBaseline"
"material::list_tile::_RenderListTile" o-- "material::list_tile::ListTileTitleAlignment"
"material::list_tile::_RenderListTile" o-- "rendering::box::RenderBox"
"rendering::box::RenderBox" <|-- "material::list_tile::_RenderListTile"
"widgets::slotted_render_object_widget::SlottedContainerRenderObjectMixin" <|-- "material::list_tile::_RenderListTile"

class "material::list_tile::_LisTileDefaultsM2" {
  +BuildContext context
  -ThemeData _theme
  -TextTheme _textTheme
  +Color? tileColor
  +TextStyle? titleTextStyle
  +TextStyle? subtitleTextStyle
  +TextStyle? leadingAndTrailingTextStyle
  +Color? selectedColor
  +Color? iconColor
}

"material::list_tile::_LisTileDefaultsM2" o-- "widgets::framework::BuildContext"
"material::list_tile::_LisTileDefaultsM2" o-- "material::theme_data::ThemeData"
"material::list_tile::_LisTileDefaultsM2" o-- "material::text_theme::TextTheme"
"material::list_tile::_LisTileDefaultsM2" o-- "dart::ui::Color"
"material::list_tile::_LisTileDefaultsM2" o-- "painting::text_style::TextStyle"
"material::list_tile_theme::ListTileThemeData" <|-- "material::list_tile::_LisTileDefaultsM2"

class "material::list_tile::_LisTileDefaultsM3" {
  +BuildContext context
  -ThemeData _theme
  -ColorScheme _colors
  -TextTheme _textTheme
  +Color? tileColor
  +TextStyle? titleTextStyle
  +TextStyle? subtitleTextStyle
  +TextStyle? leadingAndTrailingTextStyle
  +Color? selectedColor
  +Color? iconColor
}

"material::list_tile::_LisTileDefaultsM3" o-- "widgets::framework::BuildContext"
"material::list_tile::_LisTileDefaultsM3" o-- "material::theme_data::ThemeData"
"material::list_tile::_LisTileDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::list_tile::_LisTileDefaultsM3" o-- "material::text_theme::TextTheme"
"material::list_tile::_LisTileDefaultsM3" o-- "dart::ui::Color"
"material::list_tile::_LisTileDefaultsM3" o-- "painting::text_style::TextStyle"
"material::list_tile_theme::ListTileThemeData" <|-- "material::list_tile::_LisTileDefaultsM3"

class "material::list_tile::ListTileStyle" {
  +int index
  {static} +List<ListTileStyle> values
  {static} +ListTileStyle list
  {static} +ListTileStyle drawer
}

"material::list_tile::ListTileStyle" o-- "material::list_tile::ListTileStyle"
"dart::core::Enum" <|-- "material::list_tile::ListTileStyle"

class "material::list_tile::ListTileControlAffinity" {
  +int index
  {static} +List<ListTileControlAffinity> values
  {static} +ListTileControlAffinity leading
  {static} +ListTileControlAffinity trailing
  {static} +ListTileControlAffinity platform
}

"material::list_tile::ListTileControlAffinity" o-- "material::list_tile::ListTileControlAffinity"
"dart::core::Enum" <|-- "material::list_tile::ListTileControlAffinity"

class "material::list_tile::ListTileTitleAlignment" {
  +int index
  {static} +List<ListTileTitleAlignment> values
  {static} +ListTileTitleAlignment threeLine
  {static} +ListTileTitleAlignment titleHeight
  {static} +ListTileTitleAlignment top
  {static} +ListTileTitleAlignment center
  {static} +ListTileTitleAlignment bottom
}

"material::list_tile::ListTileTitleAlignment" o-- "material::list_tile::ListTileTitleAlignment"
"dart::core::Enum" <|-- "material::list_tile::ListTileTitleAlignment"

class "material::list_tile::_ListTileSlot" {
  +int index
  {static} +List<_ListTileSlot> values
  {static} +_ListTileSlot leading
  {static} +_ListTileSlot title
  {static} +_ListTileSlot subtitle
  {static} +_ListTileSlot trailing
}

"material::list_tile::_ListTileSlot" o-- "material::list_tile::_ListTileSlot"
"dart::core::Enum" <|-- "material::list_tile::_ListTileSlot"

abstract class "material::floating_action_button_location::FloatingActionButtonLocation" {
  {static} +FloatingActionButtonLocation startTop
  {static} +FloatingActionButtonLocation miniStartTop
  {static} +FloatingActionButtonLocation centerTop
  {static} +FloatingActionButtonLocation miniCenterTop
  {static} +FloatingActionButtonLocation endTop
  {static} +FloatingActionButtonLocation miniEndTop
  {static} +FloatingActionButtonLocation startFloat
  {static} +FloatingActionButtonLocation miniStartFloat
  {static} +FloatingActionButtonLocation centerFloat
  {static} +FloatingActionButtonLocation miniCenterFloat
  {static} +FloatingActionButtonLocation endFloat
  {static} +FloatingActionButtonLocation miniEndFloat
  {static} +FloatingActionButtonLocation startDocked
  {static} +FloatingActionButtonLocation miniStartDocked
  {static} +FloatingActionButtonLocation centerDocked
  {static} +FloatingActionButtonLocation miniCenterDocked
  {static} +FloatingActionButtonLocation endDocked
  {static} +FloatingActionButtonLocation miniEndDocked
  {static} +FloatingActionButtonLocation endContained
  +Offset getOffset()
  +String toString()
}

"material::floating_action_button_location::FloatingActionButtonLocation" o-- "material::floating_action_button_location::FloatingActionButtonLocation"

abstract class "material::floating_action_button_location::StandardFabLocation" {
  +double getOffsetX()
  +double getOffsetY()
  +bool isMini()
  +Offset getOffset()
  {static} -double _leftOffsetX()
  {static} -double _rightOffsetX()
}

"material::floating_action_button_location::FloatingActionButtonLocation" <|-- "material::floating_action_button_location::StandardFabLocation"

class "material::floating_action_button_location::_StartTopFabLocation" {
  +String toString()
}

"material::floating_action_button_location::StandardFabLocation" <|-- "material::floating_action_button_location::_StartTopFabLocation"
"material::floating_action_button_location::FabStartOffsetX" <|-- "material::floating_action_button_location::_StartTopFabLocation"
"material::floating_action_button_location::FabTopOffsetY" <|-- "material::floating_action_button_location::_StartTopFabLocation"

class "material::floating_action_button_location::_MiniStartTopFabLocation" {
  +String toString()
}

"material::floating_action_button_location::StandardFabLocation" <|-- "material::floating_action_button_location::_MiniStartTopFabLocation"
"material::floating_action_button_location::FabMiniOffsetAdjustment" <|-- "material::floating_action_button_location::_MiniStartTopFabLocation"
"material::floating_action_button_location::FabStartOffsetX" <|-- "material::floating_action_button_location::_MiniStartTopFabLocation"
"material::floating_action_button_location::FabTopOffsetY" <|-- "material::floating_action_button_location::_MiniStartTopFabLocation"

class "material::floating_action_button_location::_CenterTopFabLocation" {
  +String toString()
}

"material::floating_action_button_location::StandardFabLocation" <|-- "material::floating_action_button_location::_CenterTopFabLocation"
"material::floating_action_button_location::FabCenterOffsetX" <|-- "material::floating_action_button_location::_CenterTopFabLocation"
"material::floating_action_button_location::FabTopOffsetY" <|-- "material::floating_action_button_location::_CenterTopFabLocation"

class "material::floating_action_button_location::_MiniCenterTopFabLocation" {
  +String toString()
}

"material::floating_action_button_location::StandardFabLocation" <|-- "material::floating_action_button_location::_MiniCenterTopFabLocation"
"material::floating_action_button_location::FabMiniOffsetAdjustment" <|-- "material::floating_action_button_location::_MiniCenterTopFabLocation"
"material::floating_action_button_location::FabCenterOffsetX" <|-- "material::floating_action_button_location::_MiniCenterTopFabLocation"
"material::floating_action_button_location::FabTopOffsetY" <|-- "material::floating_action_button_location::_MiniCenterTopFabLocation"

class "material::floating_action_button_location::_EndTopFabLocation" {
  +String toString()
}

"material::floating_action_button_location::StandardFabLocation" <|-- "material::floating_action_button_location::_EndTopFabLocation"
"material::floating_action_button_location::FabEndOffsetX" <|-- "material::floating_action_button_location::_EndTopFabLocation"
"material::floating_action_button_location::FabTopOffsetY" <|-- "material::floating_action_button_location::_EndTopFabLocation"

class "material::floating_action_button_location::_MiniEndTopFabLocation" {
  +String toString()
}

"material::floating_action_button_location::StandardFabLocation" <|-- "material::floating_action_button_location::_MiniEndTopFabLocation"
"material::floating_action_button_location::FabMiniOffsetAdjustment" <|-- "material::floating_action_button_location::_MiniEndTopFabLocation"
"material::floating_action_button_location::FabEndOffsetX" <|-- "material::floating_action_button_location::_MiniEndTopFabLocation"
"material::floating_action_button_location::FabTopOffsetY" <|-- "material::floating_action_button_location::_MiniEndTopFabLocation"

class "material::floating_action_button_location::_StartFloatFabLocation" {
  +String toString()
}

"material::floating_action_button_location::StandardFabLocation" <|-- "material::floating_action_button_location::_StartFloatFabLocation"
"material::floating_action_button_location::FabStartOffsetX" <|-- "material::floating_action_button_location::_StartFloatFabLocation"
"material::floating_action_button_location::FabFloatOffsetY" <|-- "material::floating_action_button_location::_StartFloatFabLocation"

class "material::floating_action_button_location::_MiniStartFloatFabLocation" {
  +String toString()
}

"material::floating_action_button_location::StandardFabLocation" <|-- "material::floating_action_button_location::_MiniStartFloatFabLocation"
"material::floating_action_button_location::FabMiniOffsetAdjustment" <|-- "material::floating_action_button_location::_MiniStartFloatFabLocation"
"material::floating_action_button_location::FabStartOffsetX" <|-- "material::floating_action_button_location::_MiniStartFloatFabLocation"
"material::floating_action_button_location::FabFloatOffsetY" <|-- "material::floating_action_button_location::_MiniStartFloatFabLocation"

class "material::floating_action_button_location::_CenterFloatFabLocation" {
  +String toString()
}

"material::floating_action_button_location::StandardFabLocation" <|-- "material::floating_action_button_location::_CenterFloatFabLocation"
"material::floating_action_button_location::FabCenterOffsetX" <|-- "material::floating_action_button_location::_CenterFloatFabLocation"
"material::floating_action_button_location::FabFloatOffsetY" <|-- "material::floating_action_button_location::_CenterFloatFabLocation"

class "material::floating_action_button_location::_MiniCenterFloatFabLocation" {
  +String toString()
}

"material::floating_action_button_location::StandardFabLocation" <|-- "material::floating_action_button_location::_MiniCenterFloatFabLocation"
"material::floating_action_button_location::FabMiniOffsetAdjustment" <|-- "material::floating_action_button_location::_MiniCenterFloatFabLocation"
"material::floating_action_button_location::FabCenterOffsetX" <|-- "material::floating_action_button_location::_MiniCenterFloatFabLocation"
"material::floating_action_button_location::FabFloatOffsetY" <|-- "material::floating_action_button_location::_MiniCenterFloatFabLocation"

class "material::floating_action_button_location::_EndFloatFabLocation" {
  +String toString()
}

"material::floating_action_button_location::StandardFabLocation" <|-- "material::floating_action_button_location::_EndFloatFabLocation"
"material::floating_action_button_location::FabEndOffsetX" <|-- "material::floating_action_button_location::_EndFloatFabLocation"
"material::floating_action_button_location::FabFloatOffsetY" <|-- "material::floating_action_button_location::_EndFloatFabLocation"

class "material::floating_action_button_location::_MiniEndFloatFabLocation" {
  +String toString()
}

"material::floating_action_button_location::StandardFabLocation" <|-- "material::floating_action_button_location::_MiniEndFloatFabLocation"
"material::floating_action_button_location::FabMiniOffsetAdjustment" <|-- "material::floating_action_button_location::_MiniEndFloatFabLocation"
"material::floating_action_button_location::FabEndOffsetX" <|-- "material::floating_action_button_location::_MiniEndFloatFabLocation"
"material::floating_action_button_location::FabFloatOffsetY" <|-- "material::floating_action_button_location::_MiniEndFloatFabLocation"

class "material::floating_action_button_location::_StartDockedFabLocation" {
  +String toString()
}

"material::floating_action_button_location::StandardFabLocation" <|-- "material::floating_action_button_location::_StartDockedFabLocation"
"material::floating_action_button_location::FabStartOffsetX" <|-- "material::floating_action_button_location::_StartDockedFabLocation"
"material::floating_action_button_location::FabDockedOffsetY" <|-- "material::floating_action_button_location::_StartDockedFabLocation"

class "material::floating_action_button_location::_MiniStartDockedFabLocation" {
  +String toString()
}

"material::floating_action_button_location::StandardFabLocation" <|-- "material::floating_action_button_location::_MiniStartDockedFabLocation"
"material::floating_action_button_location::FabMiniOffsetAdjustment" <|-- "material::floating_action_button_location::_MiniStartDockedFabLocation"
"material::floating_action_button_location::FabStartOffsetX" <|-- "material::floating_action_button_location::_MiniStartDockedFabLocation"
"material::floating_action_button_location::FabDockedOffsetY" <|-- "material::floating_action_button_location::_MiniStartDockedFabLocation"

class "material::floating_action_button_location::_CenterDockedFabLocation" {
  +String toString()
}

"material::floating_action_button_location::StandardFabLocation" <|-- "material::floating_action_button_location::_CenterDockedFabLocation"
"material::floating_action_button_location::FabCenterOffsetX" <|-- "material::floating_action_button_location::_CenterDockedFabLocation"
"material::floating_action_button_location::FabDockedOffsetY" <|-- "material::floating_action_button_location::_CenterDockedFabLocation"

class "material::floating_action_button_location::_MiniCenterDockedFabLocation" {
  +String toString()
}

"material::floating_action_button_location::StandardFabLocation" <|-- "material::floating_action_button_location::_MiniCenterDockedFabLocation"
"material::floating_action_button_location::FabMiniOffsetAdjustment" <|-- "material::floating_action_button_location::_MiniCenterDockedFabLocation"
"material::floating_action_button_location::FabCenterOffsetX" <|-- "material::floating_action_button_location::_MiniCenterDockedFabLocation"
"material::floating_action_button_location::FabDockedOffsetY" <|-- "material::floating_action_button_location::_MiniCenterDockedFabLocation"

class "material::floating_action_button_location::_EndDockedFabLocation" {
  +String toString()
}

"material::floating_action_button_location::StandardFabLocation" <|-- "material::floating_action_button_location::_EndDockedFabLocation"
"material::floating_action_button_location::FabEndOffsetX" <|-- "material::floating_action_button_location::_EndDockedFabLocation"
"material::floating_action_button_location::FabDockedOffsetY" <|-- "material::floating_action_button_location::_EndDockedFabLocation"

class "material::floating_action_button_location::_MiniEndDockedFabLocation" {
  +String toString()
}

"material::floating_action_button_location::StandardFabLocation" <|-- "material::floating_action_button_location::_MiniEndDockedFabLocation"
"material::floating_action_button_location::FabMiniOffsetAdjustment" <|-- "material::floating_action_button_location::_MiniEndDockedFabLocation"
"material::floating_action_button_location::FabEndOffsetX" <|-- "material::floating_action_button_location::_MiniEndDockedFabLocation"
"material::floating_action_button_location::FabDockedOffsetY" <|-- "material::floating_action_button_location::_MiniEndDockedFabLocation"

class "material::floating_action_button_location::_EndContainedFabLocation" {
  +String toString()
}

"material::floating_action_button_location::StandardFabLocation" <|-- "material::floating_action_button_location::_EndContainedFabLocation"
"material::floating_action_button_location::FabEndOffsetX" <|-- "material::floating_action_button_location::_EndContainedFabLocation"
"material::floating_action_button_location::FabContainedOffsetY" <|-- "material::floating_action_button_location::_EndContainedFabLocation"

abstract class "material::floating_action_button_location::FloatingActionButtonAnimator" {
  {static} +FloatingActionButtonAnimator scaling
  +Offset getOffset()
  +Animation<double> getScaleAnimation()
  +Animation<double> getRotationAnimation()
  +double getAnimationRestart()
  +String toString()
}

"material::floating_action_button_location::FloatingActionButtonAnimator" o-- "material::floating_action_button_location::FloatingActionButtonAnimator"

class "material::floating_action_button_location::_ScalingFabMotionAnimator" {
  {static} -Animatable<double> _rotationTween
  {static} -Animatable<double> _thresholdCenterTween
  +Offset getOffset()
  +Animation<double> getScaleAnimation()
  +Animation<double> getRotationAnimation()
  +double getAnimationRestart()
}

"material::floating_action_button_location::_ScalingFabMotionAnimator" o-- "animation::tween::Animatable<double>"
"material::floating_action_button_location::FloatingActionButtonAnimator" <|-- "material::floating_action_button_location::_ScalingFabMotionAnimator"

class "material::floating_action_button_location::_AnimationSwap" {
  +Animation<double> parent
  +double swapThreshold
  +T value
}

"material::floating_action_button_location::_AnimationSwap" o-- "animation::animation::Animation<double>"
"animation::animations::CompoundAnimation" <|-- "material::floating_action_button_location::_AnimationSwap"

abstract class "material::floating_action_button_location::FabTopOffsetY" {
  +double getOffsetY()
}

abstract class "material::floating_action_button_location::FabFloatOffsetY" {
  +double getOffsetY()
}

abstract class "material::floating_action_button_location::FabDockedOffsetY" {
  +double getOffsetY()
}

abstract class "material::floating_action_button_location::FabContainedOffsetY" {
  +double getOffsetY()
}

abstract class "material::floating_action_button_location::FabStartOffsetX" {
  +double getOffsetX()
}

abstract class "material::floating_action_button_location::FabCenterOffsetX" {
  +double getOffsetX()
}

abstract class "material::floating_action_button_location::FabEndOffsetX" {
  +double getOffsetX()
}

abstract class "material::floating_action_button_location::FabMiniOffsetAdjustment" {
  +bool isMini()
}

class "material::expansion_tile::ExpansionTileController" {
  -_ExpansionTileState? _state
  +bool isExpanded
  +void expand()
  +void collapse()
  {static} +ExpansionTileController of()
  {static} +ExpansionTileController? maybeOf()
}

"material::expansion_tile::ExpansionTileController" o-- "material::expansion_tile::_ExpansionTileState"

class "material::expansion_tile::ExpansionTile" {
  +Widget? leading
  +Widget title
  +Widget? subtitle
  +void Function(bool)? onExpansionChanged
  +List<Widget> children
  +Color? backgroundColor
  +Color? collapsedBackgroundColor
  +Widget? trailing
  +bool initiallyExpanded
  +bool maintainState
  +EdgeInsetsGeometry? tilePadding
  +Alignment? expandedAlignment
  +CrossAxisAlignment? expandedCrossAxisAlignment
  +EdgeInsetsGeometry? childrenPadding
  +Color? iconColor
  +Color? collapsedIconColor
  +Color? textColor
  +Color? collapsedTextColor
  +ShapeBorder? shape
  +ShapeBorder? collapsedShape
  +Clip? clipBehavior
  +ListTileControlAffinity? controlAffinity
  +ExpansionTileController? controller
  +State<ExpansionTile> createState()
}

"material::expansion_tile::ExpansionTile" o-- "widgets::framework::Widget"
"material::expansion_tile::ExpansionTile" o-- "foundation::basic_types::void Function(bool)"
"material::expansion_tile::ExpansionTile" o-- "dart::ui::Color"
"material::expansion_tile::ExpansionTile" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::expansion_tile::ExpansionTile" o-- "painting::alignment::Alignment"
"material::expansion_tile::ExpansionTile" o-- "rendering::flex::CrossAxisAlignment"
"material::expansion_tile::ExpansionTile" o-- "painting::borders::ShapeBorder"
"material::expansion_tile::ExpansionTile" o-- "dart::ui::Clip"
"material::expansion_tile::ExpansionTile" o-- "material::list_tile::ListTileControlAffinity"
"material::expansion_tile::ExpansionTile" o-- "material::expansion_tile::ExpansionTileController"
"widgets::framework::StatefulWidget" <|-- "material::expansion_tile::ExpansionTile"

class "material::expansion_tile::_ExpansionTileState" {
  {static} -Animatable<double> _easeOutTween
  {static} -Animatable<double> _easeInTween
  {static} -Animatable<double> _halfTween
  -ShapeBorderTween _borderTween
  -ColorTween _headerColorTween
  -ColorTween _iconColorTween
  -ColorTween _backgroundColorTween
  -AnimationController _animationController
  -Animation<double> _iconTurns
  -Animation<double> _heightFactor
  -Animation<ShapeBorder?> _border
  -Animation<Color?> _headerColor
  -Animation<Color?> _iconColor
  -Animation<Color?> _backgroundColor
  -bool _isExpanded
  -ExpansionTileController _tileController
  +void initState()
  +void dispose()
  -void _toggleExpansion()
  -void _handleTap()
  -ListTileControlAffinity _effectiveAffinity()
  -Widget? _buildIcon()
  -Widget? _buildLeadingIcon()
  -Widget? _buildTrailingIcon()
  -Widget _buildChildren()
  +void didUpdateWidget()
  +void didChangeDependencies()
  -void _updateShapeBorder()
  -void _updateHeaderColor()
  -void _updateIconColor()
  -void _updateBackgroundColor()
  +Widget build()
}

"material::expansion_tile::_ExpansionTileState" o-- "animation::tween::Animatable<double>"
"material::expansion_tile::_ExpansionTileState" o-- "material::material::ShapeBorderTween"
"material::expansion_tile::_ExpansionTileState" o-- "animation::tween::ColorTween"
"material::expansion_tile::_ExpansionTileState" o-- "animation::animation_controller::AnimationController"
"material::expansion_tile::_ExpansionTileState" o-- "animation::animation::Animation<double>"
"material::expansion_tile::_ExpansionTileState" o-- "animation::animation::Animation<ShapeBorder>"
"material::expansion_tile::_ExpansionTileState" o-- "animation::animation::Animation<Color>"
"material::expansion_tile::_ExpansionTileState" o-- "material::expansion_tile::ExpansionTileController"
"widgets::framework::State" <|-- "material::expansion_tile::_ExpansionTileState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "material::expansion_tile::_ExpansionTileState"

class "material::expansion_tile::_ExpansionTileDefaultsM2" {
  +BuildContext context
  -ThemeData _theme
  -ColorScheme _colorScheme
  +Color? textColor
  +Color? iconColor
  +Color? collapsedTextColor
  +Color? collapsedIconColor
}

"material::expansion_tile::_ExpansionTileDefaultsM2" o-- "widgets::framework::BuildContext"
"material::expansion_tile::_ExpansionTileDefaultsM2" o-- "material::theme_data::ThemeData"
"material::expansion_tile::_ExpansionTileDefaultsM2" o-- "material::color_scheme::ColorScheme"
"material::expansion_tile::_ExpansionTileDefaultsM2" o-- "dart::ui::Color"
"material::expansion_tile_theme::ExpansionTileThemeData" <|-- "material::expansion_tile::_ExpansionTileDefaultsM2"

class "material::expansion_tile::_ExpansionTileDefaultsM3" {
  +BuildContext context
  -ThemeData _theme
  -ColorScheme _colors
  +Color? textColor
  +Color? iconColor
  +Color? collapsedTextColor
  +Color? collapsedIconColor
}

"material::expansion_tile::_ExpansionTileDefaultsM3" o-- "widgets::framework::BuildContext"
"material::expansion_tile::_ExpansionTileDefaultsM3" o-- "material::theme_data::ThemeData"
"material::expansion_tile::_ExpansionTileDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::expansion_tile::_ExpansionTileDefaultsM3" o-- "dart::ui::Color"
"material::expansion_tile_theme::ExpansionTileThemeData" <|-- "material::expansion_tile::_ExpansionTileDefaultsM3"

class "material::bottom_sheet::BottomSheet" {
  +AnimationController? animationController
  +void Function() onClosing
  +Widget Function(BuildContext) builder
  +bool enableDrag
  +bool? showDragHandle
  +Color? dragHandleColor
  +Size? dragHandleSize
  +void Function(DragStartDetails)? onDragStart
  +void Function(DragEndDetails, {required bool isClosing})? onDragEnd
  +Color? backgroundColor
  +Color? shadowColor
  +double? elevation
  +ShapeBorder? shape
  +Clip? clipBehavior
  +BoxConstraints? constraints
  +State<BottomSheet> createState()
  {static} +AnimationController createAnimationController()
}

"material::bottom_sheet::BottomSheet" o-- "animation::animation_controller::AnimationController"
"material::bottom_sheet::BottomSheet" o-- "dart::ui::void Function()"
"material::bottom_sheet::BottomSheet" o-- "widgets::framework::Widget Function(BuildContext)"
"material::bottom_sheet::BottomSheet" o-- "dart::ui::Color"
"material::bottom_sheet::BottomSheet" o-- "dart::ui::Size"
"material::bottom_sheet::BottomSheet" o-- "material::bottom_sheet::void Function(DragStartDetails)"
"material::bottom_sheet::BottomSheet" o-- "material::bottom_sheet::void Function(DragEndDetails, {required bool isClosing})"
"material::bottom_sheet::BottomSheet" o-- "painting::borders::ShapeBorder"
"material::bottom_sheet::BottomSheet" o-- "dart::ui::Clip"
"material::bottom_sheet::BottomSheet" o-- "rendering::box::BoxConstraints"
"widgets::framework::StatefulWidget" <|-- "material::bottom_sheet::BottomSheet"

class "material::bottom_sheet::_BottomSheetState" {
  -GlobalKey<State<StatefulWidget>> _childKey
  +Set<MaterialState> dragHandleMaterialState
  -double _childHeight
  -bool _dismissUnderway
  -void _handleDragStart()
  -void _handleDragUpdate()
  -void _handleDragEnd()
  +bool extentChanged()
  -void _handleDragHandleHover()
  +Widget build()
}

"material::bottom_sheet::_BottomSheetState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::framework::State" <|-- "material::bottom_sheet::_BottomSheetState"

class "material::bottom_sheet::_DragHandle" {
  +void Function()? onSemanticsTap
  +void Function(bool) handleHover
  +Set<MaterialState> materialState
  +Color? dragHandleColor
  +Size? dragHandleSize
  +Widget build()
}

"material::bottom_sheet::_DragHandle" o-- "dart::ui::void Function()"
"material::bottom_sheet::_DragHandle" o-- "foundation::basic_types::void Function(bool)"
"material::bottom_sheet::_DragHandle" o-- "dart::ui::Color"
"material::bottom_sheet::_DragHandle" o-- "dart::ui::Size"
"widgets::framework::StatelessWidget" <|-- "material::bottom_sheet::_DragHandle"

class "material::bottom_sheet::_BottomSheetLayoutWithSizeListener" {
  +void Function(Size) onChildSizeChanged
  +double animationValue
  +bool isScrollControlled
  +double scrollControlDisabledMaxHeightRatio
  +_RenderBottomSheetLayoutWithSizeListener createRenderObject()
  +void updateRenderObject()
}

"material::bottom_sheet::_BottomSheetLayoutWithSizeListener" o-- "material::bottom_sheet::void Function(Size)"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "material::bottom_sheet::_BottomSheetLayoutWithSizeListener"

class "material::bottom_sheet::_RenderBottomSheetLayoutWithSizeListener" {
  -Size _lastSize
  -void Function(Size) _onChildSizeChanged
  -double _animationValue
  -bool _isScrollControlled
  -double _scrollControlDisabledMaxHeightRatio
  +void Function(Size) onChildSizeChanged
  +double animationValue
  +bool isScrollControlled
  +double scrollControlDisabledMaxHeightRatio
  -Size _getSize()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +Size computeDryLayout()
  -BoxConstraints _getConstraintsForChild()
  -Offset _getPositionForChild()
  +void performLayout()
}

"material::bottom_sheet::_RenderBottomSheetLayoutWithSizeListener" o-- "dart::ui::Size"
"material::bottom_sheet::_RenderBottomSheetLayoutWithSizeListener" o-- "material::bottom_sheet::void Function(Size)"
"rendering::shifted_box::RenderShiftedBox" <|-- "material::bottom_sheet::_RenderBottomSheetLayoutWithSizeListener"

class "material::bottom_sheet::_ModalBottomSheet" {
  +ModalBottomSheetRoute<T> route
  +bool isScrollControlled
  +double scrollControlDisabledMaxHeightRatio
  +Color? backgroundColor
  +double? elevation
  +ShapeBorder? shape
  +Clip? clipBehavior
  +BoxConstraints? constraints
  +bool enableDrag
  +bool showDragHandle
  +_ModalBottomSheetState<T> createState()
}

"material::bottom_sheet::_ModalBottomSheet" o-- "material::bottom_sheet::ModalBottomSheetRoute<T>"
"material::bottom_sheet::_ModalBottomSheet" o-- "dart::ui::Color"
"material::bottom_sheet::_ModalBottomSheet" o-- "painting::borders::ShapeBorder"
"material::bottom_sheet::_ModalBottomSheet" o-- "dart::ui::Clip"
"material::bottom_sheet::_ModalBottomSheet" o-- "rendering::box::BoxConstraints"
"widgets::framework::StatefulWidget" <|-- "material::bottom_sheet::_ModalBottomSheet"

class "material::bottom_sheet::_ModalBottomSheetState" {
  +ParametricCurve<double> animationCurve
  -String _getRouteLabel()
  -EdgeInsets _getNewClipDetails()
  +void handleDragStart()
  +void handleDragEnd()
  +Widget build()
}

"material::bottom_sheet::_ModalBottomSheetState" o-- "animation::curves::ParametricCurve<double>"
"widgets::framework::State" <|-- "material::bottom_sheet::_ModalBottomSheetState"

class "material::bottom_sheet::ModalBottomSheetRoute" {
  +Widget Function(BuildContext) builder
  +CapturedThemes? capturedThemes
  +bool isScrollControlled
  +double scrollControlDisabledMaxHeightRatio
  +Color? backgroundColor
  +double? elevation
  +ShapeBorder? shape
  +Clip? clipBehavior
  +BoxConstraints? constraints
  +Color? modalBarrierColor
  +bool isDismissible
  +bool enableDrag
  +bool? showDragHandle
  +AnimationController? transitionAnimationController
  +Offset? anchorPoint
  +bool useSafeArea
  +String? barrierOnTapHint
  -ValueNotifier<EdgeInsets> _clipDetailsNotifier
  +String? barrierLabel
  -AnimationController? _animationController
  +Duration transitionDuration
  +Duration reverseTransitionDuration
  +bool barrierDismissible
  +Color barrierColor
  +void dispose()
  -bool _didChangeBarrierSemanticsClip()
  +AnimationController createAnimationController()
  +Widget buildPage()
  +Widget buildModalBarrier()
}

"material::bottom_sheet::ModalBottomSheetRoute" o-- "widgets::framework::Widget Function(BuildContext)"
"material::bottom_sheet::ModalBottomSheetRoute" o-- "widgets::inherited_theme::CapturedThemes"
"material::bottom_sheet::ModalBottomSheetRoute" o-- "dart::ui::Color"
"material::bottom_sheet::ModalBottomSheetRoute" o-- "painting::borders::ShapeBorder"
"material::bottom_sheet::ModalBottomSheetRoute" o-- "dart::ui::Clip"
"material::bottom_sheet::ModalBottomSheetRoute" o-- "rendering::box::BoxConstraints"
"material::bottom_sheet::ModalBottomSheetRoute" o-- "animation::animation_controller::AnimationController"
"material::bottom_sheet::ModalBottomSheetRoute" o-- "dart::ui::Offset"
"material::bottom_sheet::ModalBottomSheetRoute" o-- "foundation::change_notifier::ValueNotifier<EdgeInsets>"
"widgets::routes::PopupRoute" <|-- "material::bottom_sheet::ModalBottomSheetRoute"

class "material::bottom_sheet::_BottomSheetSuspendedCurve" {
  +double startingPoint
  +Curve curve
  +double transform()
  +String toString()
}

"material::bottom_sheet::_BottomSheetSuspendedCurve" o-- "animation::curves::Curve"
"animation::curves::ParametricCurve" <|-- "material::bottom_sheet::_BottomSheetSuspendedCurve"

class "material::bottom_sheet::_BottomSheetGestureDetector" {
  +Widget child
  +void Function(DragStartDetails) onVerticalDragStart
  +void Function(DragUpdateDetails) onVerticalDragUpdate
  +void Function(DragEndDetails) onVerticalDragEnd
  +Widget build()
}

"material::bottom_sheet::_BottomSheetGestureDetector" o-- "widgets::framework::Widget"
"material::bottom_sheet::_BottomSheetGestureDetector" o-- "gestures::drag_details::void Function(DragStartDetails)"
"material::bottom_sheet::_BottomSheetGestureDetector" o-- "gestures::drag_details::void Function(DragUpdateDetails)"
"material::bottom_sheet::_BottomSheetGestureDetector" o-- "gestures::monodrag::void Function(DragEndDetails)"
"widgets::framework::StatelessWidget" <|-- "material::bottom_sheet::_BottomSheetGestureDetector"

class "material::bottom_sheet::_BottomSheetDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  +Color? backgroundColor
  +Color? surfaceTintColor
  +Color? shadowColor
  +Color? dragHandleColor
  +Size? dragHandleSize
  +BoxConstraints? constraints
}

"material::bottom_sheet::_BottomSheetDefaultsM3" o-- "widgets::framework::BuildContext"
"material::bottom_sheet::_BottomSheetDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::bottom_sheet::_BottomSheetDefaultsM3" o-- "dart::ui::Color"
"material::bottom_sheet::_BottomSheetDefaultsM3" o-- "dart::ui::Size"
"material::bottom_sheet::_BottomSheetDefaultsM3" o-- "rendering::box::BoxConstraints"
"material::bottom_sheet_theme::BottomSheetThemeData" <|-- "material::bottom_sheet::_BottomSheetDefaultsM3"

abstract class "material::action_buttons::_ActionButton" {
  +Widget icon
  +void Function()? onPressed
  +Color? color
  +ButtonStyle? style
  -String _getTooltip()
  -void _onPressedCallback()
  +Widget build()
}

"material::action_buttons::_ActionButton" o-- "widgets::framework::Widget"
"material::action_buttons::_ActionButton" o-- "dart::ui::void Function()"
"material::action_buttons::_ActionButton" o-- "dart::ui::Color"
"material::action_buttons::_ActionButton" o-- "material::button_style::ButtonStyle"
"widgets::framework::StatelessWidget" <|-- "material::action_buttons::_ActionButton"

class "material::action_buttons::_ActionIcon" {
  +Widget Function(BuildContext)? Function(ActionIconThemeData?) iconBuilderCallback
  +IconData Function(BuildContext) getIcon
  +String Function(MaterialLocalizations) getAndroidSemanticsLabel
  +Widget build()
}

"material::action_buttons::_ActionIcon" o-- "material::action_buttons::Widget Function(BuildContext) Function(ActionIconThemeData)"
"material::action_buttons::_ActionIcon" o-- "material::action_buttons::IconData Function(BuildContext)"
"material::action_buttons::_ActionIcon" o-- "material::action_buttons::String Function(MaterialLocalizations)"
"widgets::framework::StatelessWidget" <|-- "material::action_buttons::_ActionIcon"

class "material::action_buttons::BackButtonIcon" {
  +Widget build()
}

"widgets::framework::StatelessWidget" <|-- "material::action_buttons::BackButtonIcon"

class "material::action_buttons::BackButton" {
  -void _onPressedCallback()
  -String _getTooltip()
}

"material::action_buttons::_ActionButton" <|-- "material::action_buttons::BackButton"

class "material::action_buttons::CloseButtonIcon" {
  +Widget build()
}

"widgets::framework::StatelessWidget" <|-- "material::action_buttons::CloseButtonIcon"

class "material::action_buttons::CloseButton" {
  -void _onPressedCallback()
  -String _getTooltip()
}

"material::action_buttons::_ActionButton" <|-- "material::action_buttons::CloseButton"

class "material::action_buttons::DrawerButtonIcon" {
  +Widget build()
}

"widgets::framework::StatelessWidget" <|-- "material::action_buttons::DrawerButtonIcon"

class "material::action_buttons::DrawerButton" {
  -void _onPressedCallback()
  -String _getTooltip()
}

"material::action_buttons::_ActionButton" <|-- "material::action_buttons::DrawerButton"

class "material::action_buttons::EndDrawerButtonIcon" {
  +Widget build()
}

"widgets::framework::StatelessWidget" <|-- "material::action_buttons::EndDrawerButtonIcon"

class "material::action_buttons::EndDrawerButton" {
  -void _onPressedCallback()
  -String _getTooltip()
}

"material::action_buttons::_ActionButton" <|-- "material::action_buttons::EndDrawerButton"

class "material::text_selection::MaterialTextSelectionHandleControls" {
}

"material::text_selection::MaterialTextSelectionControls" <|-- "material::text_selection::MaterialTextSelectionHandleControls"

class "material::text_selection::MaterialTextSelectionControls" {
  +Size getHandleSize()
  +Widget buildToolbar()
  +Widget buildHandle()
  +Offset getHandleAnchor()
  +bool canSelectAll()
}

"widgets::text_selection::TextSelectionControls" <|-- "material::text_selection::MaterialTextSelectionControls"

class "material::text_selection::_TextSelectionToolbarItemData" {
  +String label
  +void Function() onPressed
}

"material::text_selection::_TextSelectionToolbarItemData" o-- "dart::ui::void Function()"

class "material::text_selection::_TextSelectionControlsToolbar" {
  +ValueListenable<ClipboardStatus>? clipboardStatus
  +TextSelectionDelegate delegate
  +List<dynamic> endpoints
  +Rect globalEditableRegion
  +void Function()? handleCut
  +void Function()? handleCopy
  +void Function()? handlePaste
  +void Function()? handleSelectAll
  +Offset selectionMidpoint
  +double textLineHeight
  +_TextSelectionControlsToolbarState createState()
}

"material::text_selection::_TextSelectionControlsToolbar" o-- "foundation::change_notifier::ValueListenable<ClipboardStatus>"
"material::text_selection::_TextSelectionControlsToolbar" o-- "services::text_input::TextSelectionDelegate"
"material::text_selection::_TextSelectionControlsToolbar" o-- "dart::ui::Rect"
"material::text_selection::_TextSelectionControlsToolbar" o-- "dart::ui::void Function()"
"material::text_selection::_TextSelectionControlsToolbar" o-- "dart::ui::Offset"
"widgets::framework::StatefulWidget" <|-- "material::text_selection::_TextSelectionControlsToolbar"

class "material::text_selection::_TextSelectionControlsToolbarState" {
  -void _onChangedClipboardStatus()
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"widgets::framework::State" <|-- "material::text_selection::_TextSelectionControlsToolbarState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::text_selection::_TextSelectionControlsToolbarState"

class "material::text_selection::_TextSelectionHandlePainter" {
  +Color color
  +void paint()
  +bool shouldRepaint()
}

"material::text_selection::_TextSelectionHandlePainter" o-- "dart::ui::Color"
"rendering::custom_paint::CustomPainter" <|-- "material::text_selection::_TextSelectionHandlePainter"

class "material::divider_theme::DividerThemeData" {
  +Color? color
  +double? space
  +double? thickness
  +double? indent
  +double? endIndent
  +int hashCode
  +DividerThemeData copyWith()
  {static} +DividerThemeData lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::divider_theme::DividerThemeData" o-- "dart::ui::Color"
"foundation::diagnostics::Diagnosticable" <|-- "material::divider_theme::DividerThemeData"

class "material::divider_theme::DividerTheme" {
  +DividerThemeData data
  {static} +DividerThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::divider_theme::DividerTheme" o-- "material::divider_theme::DividerThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::divider_theme::DividerTheme"

class "material::data_table_theme::DataTableThemeData" {
  +Decoration? decoration
  +MaterialStateProperty<Color?>? dataRowColor
  +double? dataRowMinHeight
  +double? dataRowMaxHeight
  +TextStyle? dataTextStyle
  +MaterialStateProperty<Color?>? headingRowColor
  +double? headingRowHeight
  +TextStyle? headingTextStyle
  +double? horizontalMargin
  +double? columnSpacing
  +double? dividerThickness
  +double? checkboxHorizontalMargin
  +MaterialStateProperty<MouseCursor?>? headingCellCursor
  +MaterialStateProperty<MouseCursor?>? dataRowCursor
  +double? dataRowHeight
  +int hashCode
  +DataTableThemeData copyWith()
  {static} +DataTableThemeData lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::data_table_theme::DataTableThemeData" o-- "painting::decoration::Decoration"
"material::data_table_theme::DataTableThemeData" o-- "material::material_state::MaterialStateProperty<Color>"
"material::data_table_theme::DataTableThemeData" o-- "painting::text_style::TextStyle"
"material::data_table_theme::DataTableThemeData" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"foundation::diagnostics::Diagnosticable" <|-- "material::data_table_theme::DataTableThemeData"

class "material::data_table_theme::DataTableTheme" {
  +DataTableThemeData data
  {static} +DataTableThemeData of()
  +bool updateShouldNotify()
}

"material::data_table_theme::DataTableTheme" o-- "material::data_table_theme::DataTableThemeData"
"widgets::framework::InheritedWidget" <|-- "material::data_table_theme::DataTableTheme"

class "material::adaptive_text_selection_toolbar::AdaptiveTextSelectionToolbar" {
  +List<dynamic>? buttonItems
  +List<Widget>? children
  +dynamic anchors
  {static} +String getButtonLabel()
  {static} +Iterable<Widget> getAdaptiveButtons()
  +Widget build()
}

"widgets::framework::StatelessWidget" <|-- "material::adaptive_text_selection_toolbar::AdaptiveTextSelectionToolbar"

abstract class "material::material_localizations::MaterialLocalizations" {
  +String openAppDrawerTooltip
  +String backButtonTooltip
  +String closeButtonTooltip
  +String deleteButtonTooltip
  +String moreButtonTooltip
  +String nextMonthTooltip
  +String previousMonthTooltip
  +String firstPageTooltip
  +String lastPageTooltip
  +String nextPageTooltip
  +String previousPageTooltip
  +String showMenuTooltip
  +String licensesPageTitle
  +String rowsPerPageTitle
  +String cancelButtonLabel
  +String closeButtonLabel
  +String continueButtonLabel
  +String copyButtonLabel
  +String cutButtonLabel
  +String scanTextButtonLabel
  +String okButtonLabel
  +String pasteButtonLabel
  +String selectAllButtonLabel
  +String lookUpButtonLabel
  +String searchWebButtonLabel
  +String shareButtonLabel
  +String viewLicensesButtonLabel
  +String anteMeridiemAbbreviation
  +String postMeridiemAbbreviation
  +String timePickerHourModeAnnouncement
  +String timePickerMinuteModeAnnouncement
  +String modalBarrierDismissLabel
  +String menuDismissLabel
  +String drawerLabel
  +String popupMenuLabel
  +String menuBarMenuLabel
  +String dialogLabel
  +String alertDialogLabel
  +String searchFieldLabel
  +String currentDateLabel
  +String scrimLabel
  +String bottomSheetLabel
  +ScriptCategory scriptCategory
  +List<String> narrowWeekdays
  +int firstDayOfWeekIndex
  +String dateSeparator
  +String dateHelpText
  +String selectYearSemanticsLabel
  +String unspecifiedDate
  +String unspecifiedDateRange
  +String dateInputLabel
  +String dateRangeStartLabel
  +String dateRangeEndLabel
  +String invalidDateFormatLabel
  +String invalidDateRangeLabel
  +String dateOutOfRangeLabel
  +String saveButtonLabel
  +String datePickerHelpText
  +String dateRangePickerHelpText
  +String calendarModeButtonLabel
  +String inputDateModeButtonLabel
  +String timePickerDialHelpText
  +String timePickerInputHelpText
  +String timePickerHourLabel
  +String timePickerMinuteLabel
  +String invalidTimeLabel
  +String dialModeButtonLabel
  +String inputTimeModeButtonLabel
  +String signedInLabel
  +String hideAccountsLabel
  +String showAccountsLabel
  +String reorderItemToStart
  +String reorderItemToEnd
  +String reorderItemUp
  +String reorderItemDown
  +String reorderItemLeft
  +String reorderItemRight
  +String expandedIconTapHint
  +String collapsedIconTapHint
  +String expansionTileExpandedHint
  +String expansionTileCollapsedHint
  +String expansionTileExpandedTapHint
  +String expansionTileCollapsedTapHint
  +String expandedHint
  +String collapsedHint
  +String refreshIndicatorSemanticLabel
  +String keyboardKeyAlt
  +String keyboardKeyAltGraph
  +String keyboardKeyBackspace
  +String keyboardKeyCapsLock
  +String keyboardKeyChannelDown
  +String keyboardKeyChannelUp
  +String keyboardKeyControl
  +String keyboardKeyDelete
  +String keyboardKeyEject
  +String keyboardKeyEnd
  +String keyboardKeyEscape
  +String keyboardKeyFn
  +String keyboardKeyHome
  +String keyboardKeyInsert
  +String keyboardKeyMeta
  +String keyboardKeyMetaMacOs
  +String keyboardKeyMetaWindows
  +String keyboardKeyNumLock
  +String keyboardKeyNumpad1
  +String keyboardKeyNumpad2
  +String keyboardKeyNumpad3
  +String keyboardKeyNumpad4
  +String keyboardKeyNumpad5
  +String keyboardKeyNumpad6
  +String keyboardKeyNumpad7
  +String keyboardKeyNumpad8
  +String keyboardKeyNumpad9
  +String keyboardKeyNumpad0
  +String keyboardKeyNumpadAdd
  +String keyboardKeyNumpadComma
  +String keyboardKeyNumpadDecimal
  +String keyboardKeyNumpadDivide
  +String keyboardKeyNumpadEnter
  +String keyboardKeyNumpadEqual
  +String keyboardKeyNumpadMultiply
  +String keyboardKeyNumpadParenLeft
  +String keyboardKeyNumpadParenRight
  +String keyboardKeyNumpadSubtract
  +String keyboardKeyPageDown
  +String keyboardKeyPageUp
  +String keyboardKeyPower
  +String keyboardKeyPowerOff
  +String keyboardKeyPrintScreen
  +String keyboardKeyScrollLock
  +String keyboardKeySelect
  +String keyboardKeyShift
  +String keyboardKeySpace
  +String aboutListTileTitle()
  +String licensesPackageDetailText()
  +String pageRowsInfoTitle()
  +String tabLabel()
  +String selectedRowCountTitle()
  +String scrimOnTapHint()
  +TimeOfDayFormat timeOfDayFormat()
  +String formatDecimal()
  +String formatHour()
  +String formatMinute()
  +String formatTimeOfDay()
  +String formatYear()
  +String formatCompactDate()
  +String formatShortDate()
  +String formatMediumDate()
  +String formatFullDate()
  +String formatMonthYear()
  +String formatShortMonthDay()
  +DateTime? parseCompactDate()
  +String dateRangeStartDateSemanticLabel()
  +String dateRangeEndDateSemanticLabel()
  +String remainingTextFieldCharacterCount()
  {static} +MaterialLocalizations of()
}

"material::material_localizations::MaterialLocalizations" o-- "material::typography::ScriptCategory"

class "material::material_localizations::_MaterialLocalizationsDelegate" {
  +bool isSupported()
  +Future<MaterialLocalizations> load()
  +bool shouldReload()
  +String toString()
}

"widgets::localizations::LocalizationsDelegate" <|-- "material::material_localizations::_MaterialLocalizationsDelegate"

class "material::material_localizations::DefaultMaterialLocalizations" {
  {static} -List<String> _shortWeekdays
  {static} -List<String> _weekdays
  {static} -List<String> _narrowWeekdays
  {static} -List<String> _shortMonths
  {static} -List<String> _months
  {static} +LocalizationsDelegate<MaterialLocalizations> delegate
  +List<String> narrowWeekdays
  +int firstDayOfWeekIndex
  +String dateSeparator
  +String dateHelpText
  +String selectYearSemanticsLabel
  +String unspecifiedDate
  +String unspecifiedDateRange
  +String dateInputLabel
  +String dateRangeStartLabel
  +String dateRangeEndLabel
  +String invalidDateFormatLabel
  +String invalidDateRangeLabel
  +String dateOutOfRangeLabel
  +String saveButtonLabel
  +String datePickerHelpText
  +String dateRangePickerHelpText
  +String calendarModeButtonLabel
  +String inputDateModeButtonLabel
  +String timePickerDialHelpText
  +String timePickerInputHelpText
  +String timePickerHourLabel
  +String timePickerMinuteLabel
  +String invalidTimeLabel
  +String dialModeButtonLabel
  +String inputTimeModeButtonLabel
  +String openAppDrawerTooltip
  +String backButtonTooltip
  +String closeButtonTooltip
  +String deleteButtonTooltip
  +String moreButtonTooltip
  +String nextMonthTooltip
  +String previousMonthTooltip
  +String nextPageTooltip
  +String previousPageTooltip
  +String firstPageTooltip
  +String lastPageTooltip
  +String showMenuTooltip
  +String drawerLabel
  +String menuBarMenuLabel
  +String popupMenuLabel
  +String dialogLabel
  +String alertDialogLabel
  +String searchFieldLabel
  +String currentDateLabel
  +String scrimLabel
  +String bottomSheetLabel
  +String licensesPageTitle
  +String rowsPerPageTitle
  +String cancelButtonLabel
  +String closeButtonLabel
  +String continueButtonLabel
  +String copyButtonLabel
  +String cutButtonLabel
  +String scanTextButtonLabel
  +String okButtonLabel
  +String pasteButtonLabel
  +String selectAllButtonLabel
  +String lookUpButtonLabel
  +String searchWebButtonLabel
  +String shareButtonLabel
  +String viewLicensesButtonLabel
  +String anteMeridiemAbbreviation
  +String postMeridiemAbbreviation
  +String timePickerHourModeAnnouncement
  +String timePickerMinuteModeAnnouncement
  +String modalBarrierDismissLabel
  +String menuDismissLabel
  +ScriptCategory scriptCategory
  +String signedInLabel
  +String hideAccountsLabel
  +String showAccountsLabel
  +String reorderItemUp
  +String reorderItemDown
  +String reorderItemLeft
  +String reorderItemRight
  +String reorderItemToEnd
  +String reorderItemToStart
  +String expandedIconTapHint
  +String collapsedIconTapHint
  +String expansionTileExpandedHint
  +String expansionTileCollapsedHint
  +String expansionTileExpandedTapHint
  +String expansionTileCollapsedTapHint
  +String expandedHint
  +String collapsedHint
  +String refreshIndicatorSemanticLabel
  +String keyboardKeyAlt
  +String keyboardKeyAltGraph
  +String keyboardKeyBackspace
  +String keyboardKeyCapsLock
  +String keyboardKeyChannelDown
  +String keyboardKeyChannelUp
  +String keyboardKeyControl
  +String keyboardKeyDelete
  +String keyboardKeyEject
  +String keyboardKeyEnd
  +String keyboardKeyEscape
  +String keyboardKeyFn
  +String keyboardKeyHome
  +String keyboardKeyInsert
  +String keyboardKeyMeta
  +String keyboardKeyMetaMacOs
  +String keyboardKeyMetaWindows
  +String keyboardKeyNumLock
  +String keyboardKeyNumpad1
  +String keyboardKeyNumpad2
  +String keyboardKeyNumpad3
  +String keyboardKeyNumpad4
  +String keyboardKeyNumpad5
  +String keyboardKeyNumpad6
  +String keyboardKeyNumpad7
  +String keyboardKeyNumpad8
  +String keyboardKeyNumpad9
  +String keyboardKeyNumpad0
  +String keyboardKeyNumpadAdd
  +String keyboardKeyNumpadComma
  +String keyboardKeyNumpadDecimal
  +String keyboardKeyNumpadDivide
  +String keyboardKeyNumpadEnter
  +String keyboardKeyNumpadEqual
  +String keyboardKeyNumpadMultiply
  +String keyboardKeyNumpadParenLeft
  +String keyboardKeyNumpadParenRight
  +String keyboardKeyNumpadSubtract
  +String keyboardKeyPageDown
  +String keyboardKeyPageUp
  +String keyboardKeyPower
  +String keyboardKeyPowerOff
  +String keyboardKeyPrintScreen
  +String keyboardKeyScrollLock
  +String keyboardKeySelect
  +String keyboardKeyShift
  +String keyboardKeySpace
  -int _getDaysInMonth()
  +String formatHour()
  -String _formatTwoDigitZeroPad()
  +String formatMinute()
  +String formatYear()
  +String formatCompactDate()
  +String formatShortDate()
  +String formatMediumDate()
  +String formatFullDate()
  +String formatMonthYear()
  +String formatShortMonthDay()
  +DateTime? parseCompactDate()
  +String dateRangeStartDateSemanticLabel()
  +String dateRangeEndDateSemanticLabel()
  -String _formatDayPeriod()
  +String formatDecimal()
  +String formatTimeOfDay()
  +String scrimOnTapHint()
  +String aboutListTileTitle()
  +String licensesPackageDetailText()
  +String pageRowsInfoTitle()
  +String tabLabel()
  +String selectedRowCountTitle()
  +TimeOfDayFormat timeOfDayFormat()
  {static} +Future<MaterialLocalizations> load()
  +String remainingTextFieldCharacterCount()
}

"material::material_localizations::DefaultMaterialLocalizations" o-- "widgets::localizations::LocalizationsDelegate<MaterialLocalizations>"
"material::material_localizations::DefaultMaterialLocalizations" o-- "material::typography::ScriptCategory"
"material::material_localizations::MaterialLocalizations" <|-- "material::material_localizations::DefaultMaterialLocalizations"

class "material::typography::Typography" {
  +TextTheme black
  +TextTheme white
  +TextTheme englishLike
  +TextTheme dense
  +TextTheme tall
  {static} +TextTheme blackMountainView
  {static} +TextTheme whiteMountainView
  {static} +TextTheme blackRedmond
  {static} +TextTheme whiteRedmond
  {static} -List<String> _helsinkiFontFallbacks
  {static} +TextTheme blackHelsinki
  {static} +TextTheme whiteHelsinki
  {static} +TextTheme blackCupertino
  {static} +TextTheme whiteCupertino
  {static} +TextTheme blackRedwoodCity
  {static} +TextTheme whiteRedwoodCity
  {static} +TextTheme englishLike2014
  {static} +TextTheme englishLike2018
  {static} +TextTheme dense2014
  {static} +TextTheme dense2018
  {static} +TextTheme tall2014
  {static} +TextTheme tall2018
  {static} +TextTheme englishLike2021
  {static} +TextTheme dense2021
  {static} +TextTheme tall2021
  +int hashCode
  +TextTheme geometryThemeFor()
  +Typography copyWith()
  {static} +Typography lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::typography::Typography" o-- "material::text_theme::TextTheme"
"foundation::diagnostics::Diagnosticable" <|-- "material::typography::Typography"

class "material::typography::_M3Typography" {
  {static} +TextTheme englishLike
  {static} +TextTheme dense
  {static} +TextTheme tall
}

"material::typography::_M3Typography" o-- "material::text_theme::TextTheme"

class "material::typography::ScriptCategory" {
  +int index
  {static} +List<ScriptCategory> values
  {static} +ScriptCategory englishLike
  {static} +ScriptCategory dense
  {static} +ScriptCategory tall
}

"material::typography::ScriptCategory" o-- "material::typography::ScriptCategory"
"dart::core::Enum" <|-- "material::typography::ScriptCategory"

class "material::outlined_button::OutlinedButton" {
  {static} +ButtonStyle styleFrom()
  +ButtonStyle defaultStyleOf()
  +ButtonStyle? themeStyleOf()
}

"material::button_style_button::ButtonStyleButton" <|-- "material::outlined_button::OutlinedButton"

class "material::outlined_button::_OutlinedButtonDefaultColor" {
  +Color? color
  +Color? disabled
  +Color? resolve()
}

"material::outlined_button::_OutlinedButtonDefaultColor" o-- "dart::ui::Color"
"material::material_state::MaterialStateProperty" <|-- "material::outlined_button::_OutlinedButtonDefaultColor"
"foundation::diagnostics::Diagnosticable" <|-- "material::outlined_button::_OutlinedButtonDefaultColor"

class "material::outlined_button::_OutlinedButtonDefaultOverlay" {
  +Color foreground
  +Color? resolve()
}

"material::outlined_button::_OutlinedButtonDefaultOverlay" o-- "dart::ui::Color"
"material::material_state::MaterialStateProperty" <|-- "material::outlined_button::_OutlinedButtonDefaultOverlay"
"foundation::diagnostics::Diagnosticable" <|-- "material::outlined_button::_OutlinedButtonDefaultOverlay"

class "material::outlined_button::_OutlinedButtonDefaultMouseCursor" {
  +MouseCursor? enabledCursor
  +MouseCursor? disabledCursor
  +MouseCursor? resolve()
}

"material::outlined_button::_OutlinedButtonDefaultMouseCursor" o-- "services::mouse_cursor::MouseCursor"
"material::material_state::MaterialStateProperty" <|-- "material::outlined_button::_OutlinedButtonDefaultMouseCursor"
"foundation::diagnostics::Diagnosticable" <|-- "material::outlined_button::_OutlinedButtonDefaultMouseCursor"

class "material::outlined_button::_OutlinedButtonWithIcon" {
  +ButtonStyle defaultStyleOf()
}

"material::outlined_button::OutlinedButton" <|-- "material::outlined_button::_OutlinedButtonWithIcon"

class "material::outlined_button::_OutlinedButtonWithIconChild" {
  +Widget label
  +Widget icon
  +Widget build()
}

"material::outlined_button::_OutlinedButtonWithIconChild" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::outlined_button::_OutlinedButtonWithIconChild"

class "material::outlined_button::_OutlinedButtonDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  +MaterialStateProperty<TextStyle?> textStyle
  +MaterialStateProperty<Color?>? backgroundColor
  +MaterialStateProperty<Color?>? foregroundColor
  +MaterialStateProperty<Color?>? overlayColor
  +MaterialStateProperty<Color>? shadowColor
  +MaterialStateProperty<Color>? surfaceTintColor
  +MaterialStateProperty<double>? elevation
  +MaterialStateProperty<EdgeInsetsGeometry>? padding
  +MaterialStateProperty<Size>? minimumSize
  +MaterialStateProperty<Size>? maximumSize
  +MaterialStateProperty<BorderSide>? side
  +MaterialStateProperty<OutlinedBorder>? shape
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +VisualDensity? visualDensity
  +MaterialTapTargetSize? tapTargetSize
  +InteractiveInkFeatureFactory? splashFactory
}

"material::outlined_button::_OutlinedButtonDefaultsM3" o-- "widgets::framework::BuildContext"
"material::outlined_button::_OutlinedButtonDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::outlined_button::_OutlinedButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<TextStyle>"
"material::outlined_button::_OutlinedButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::outlined_button::_OutlinedButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<double>"
"material::outlined_button::_OutlinedButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<EdgeInsetsGeometry>"
"material::outlined_button::_OutlinedButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Size>"
"material::outlined_button::_OutlinedButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<BorderSide>"
"material::outlined_button::_OutlinedButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<OutlinedBorder>"
"material::outlined_button::_OutlinedButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::outlined_button::_OutlinedButtonDefaultsM3" o-- "material::theme_data::VisualDensity"
"material::outlined_button::_OutlinedButtonDefaultsM3" o-- "material::theme_data::MaterialTapTargetSize"
"material::outlined_button::_OutlinedButtonDefaultsM3" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::button_style::ButtonStyle" <|-- "material::outlined_button::_OutlinedButtonDefaultsM3"

class "material::divider::Divider" {
  +double? height
  +double? thickness
  +double? indent
  +double? endIndent
  +Color? color
  {static} +BorderSide createBorderSide()
  +Widget build()
}

"material::divider::Divider" o-- "dart::ui::Color"
"widgets::framework::StatelessWidget" <|-- "material::divider::Divider"

class "material::divider::VerticalDivider" {
  +double? width
  +double? thickness
  +double? indent
  +double? endIndent
  +Color? color
  +Widget build()
}

"material::divider::VerticalDivider" o-- "dart::ui::Color"
"widgets::framework::StatelessWidget" <|-- "material::divider::VerticalDivider"

class "material::divider::_DividerDefaultsM2" {
  +BuildContext context
  +Color? color
}

"material::divider::_DividerDefaultsM2" o-- "widgets::framework::BuildContext"
"material::divider::_DividerDefaultsM2" o-- "dart::ui::Color"
"material::divider_theme::DividerThemeData" <|-- "material::divider::_DividerDefaultsM2"

class "material::divider::_DividerDefaultsM3" {
  +BuildContext context
  +Color? color
}

"material::divider::_DividerDefaultsM3" o-- "widgets::framework::BuildContext"
"material::divider::_DividerDefaultsM3" o-- "dart::ui::Color"
"material::divider_theme::DividerThemeData" <|-- "material::divider::_DividerDefaultsM3"

class "material::slider_theme::SliderTheme" {
  +SliderThemeData data
  {static} +SliderThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::slider_theme::SliderTheme" o-- "material::slider_theme::SliderThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::slider_theme::SliderTheme"

class "material::slider_theme::SliderThemeData" {
  +double? trackHeight
  +Color? activeTrackColor
  +Color? inactiveTrackColor
  +Color? secondaryActiveTrackColor
  +Color? disabledActiveTrackColor
  +Color? disabledSecondaryActiveTrackColor
  +Color? disabledInactiveTrackColor
  +Color? activeTickMarkColor
  +Color? inactiveTickMarkColor
  +Color? disabledActiveTickMarkColor
  +Color? disabledInactiveTickMarkColor
  +Color? thumbColor
  +Color? overlappingShapeStrokeColor
  +Color? disabledThumbColor
  +Color? overlayColor
  +Color? valueIndicatorColor
  +SliderComponentShape? overlayShape
  +SliderTickMarkShape? tickMarkShape
  +SliderComponentShape? thumbShape
  +SliderTrackShape? trackShape
  +SliderComponentShape? valueIndicatorShape
  +RangeSliderTickMarkShape? rangeTickMarkShape
  +RangeSliderThumbShape? rangeThumbShape
  +RangeSliderTrackShape? rangeTrackShape
  +RangeSliderValueIndicatorShape? rangeValueIndicatorShape
  +ShowValueIndicator? showValueIndicator
  +TextStyle? valueIndicatorTextStyle
  +double? minThumbSeparation
  +Thumb? Function(TextDirection, RangeValues, double, Size, Size, double)? thumbSelector
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +SliderInteraction? allowedInteraction
  +int hashCode
  +SliderThemeData copyWith()
  {static} +SliderThemeData lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::slider_theme::SliderThemeData" o-- "dart::ui::Color"
"material::slider_theme::SliderThemeData" o-- "material::slider_theme::SliderComponentShape"
"material::slider_theme::SliderThemeData" o-- "material::slider_theme::SliderTickMarkShape"
"material::slider_theme::SliderThemeData" o-- "material::slider_theme::SliderTrackShape"
"material::slider_theme::SliderThemeData" o-- "material::slider_theme::RangeSliderTickMarkShape"
"material::slider_theme::SliderThemeData" o-- "material::slider_theme::RangeSliderThumbShape"
"material::slider_theme::SliderThemeData" o-- "material::slider_theme::RangeSliderTrackShape"
"material::slider_theme::SliderThemeData" o-- "material::slider_theme::RangeSliderValueIndicatorShape"
"material::slider_theme::SliderThemeData" o-- "material::slider_theme::ShowValueIndicator"
"material::slider_theme::SliderThemeData" o-- "painting::text_style::TextStyle"
"material::slider_theme::SliderThemeData" o-- "material::slider_theme::Thumb Function(TextDirection, RangeValues, double, Size, Size, double)"
"material::slider_theme::SliderThemeData" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::slider_theme::SliderThemeData" o-- "material::slider::SliderInteraction"
"foundation::diagnostics::Diagnosticable" <|-- "material::slider_theme::SliderThemeData"

abstract class "material::slider_theme::SliderComponentShape" {
  {static} +SliderComponentShape noThumb
  {static} +SliderComponentShape noOverlay
  +Size getPreferredSize()
  +void paint()
}

"material::slider_theme::SliderComponentShape" o-- "material::slider_theme::SliderComponentShape"

abstract class "material::slider_theme::SliderTickMarkShape" {
  {static} +SliderTickMarkShape noTickMark
  +Size getPreferredSize()
  +void paint()
}

"material::slider_theme::SliderTickMarkShape" o-- "material::slider_theme::SliderTickMarkShape"

abstract class "material::slider_theme::SliderTrackShape" {
  +Rect getPreferredRect()
  +void paint()
}

abstract class "material::slider_theme::RangeSliderThumbShape" {
  +Size getPreferredSize()
  +void paint()
}

abstract class "material::slider_theme::RangeSliderValueIndicatorShape" {
  +Size getPreferredSize()
  +double getHorizontalShift()
  +void paint()
}

abstract class "material::slider_theme::RangeSliderTickMarkShape" {
  +Size getPreferredSize()
  +void paint()
}

abstract class "material::slider_theme::RangeSliderTrackShape" {
  +Rect getPreferredRect()
  +void paint()
}

class "material::slider_theme::RectangularSliderTrackShape" {
  +void paint()
}

"material::slider_theme::SliderTrackShape" <|-- "material::slider_theme::RectangularSliderTrackShape"
"material::slider_theme::BaseSliderTrackShape" <|-- "material::slider_theme::RectangularSliderTrackShape"

class "material::slider_theme::RoundedRectSliderTrackShape" {
  +void paint()
}

"material::slider_theme::SliderTrackShape" <|-- "material::slider_theme::RoundedRectSliderTrackShape"
"material::slider_theme::BaseSliderTrackShape" <|-- "material::slider_theme::RoundedRectSliderTrackShape"

class "material::slider_theme::RectangularRangeSliderTrackShape" {
  +void paint()
}

"material::slider_theme::RangeSliderTrackShape" <|-- "material::slider_theme::RectangularRangeSliderTrackShape"
"material::slider_theme::BaseRangeSliderTrackShape" <|-- "material::slider_theme::RectangularRangeSliderTrackShape"

class "material::slider_theme::RoundedRectRangeSliderTrackShape" {
  +void paint()
}

"material::slider_theme::RangeSliderTrackShape" <|-- "material::slider_theme::RoundedRectRangeSliderTrackShape"
"material::slider_theme::BaseRangeSliderTrackShape" <|-- "material::slider_theme::RoundedRectRangeSliderTrackShape"

class "material::slider_theme::RoundSliderTickMarkShape" {
  +double? tickMarkRadius
  +Size getPreferredSize()
  +void paint()
}

"material::slider_theme::SliderTickMarkShape" <|-- "material::slider_theme::RoundSliderTickMarkShape"

class "material::slider_theme::RoundRangeSliderTickMarkShape" {
  +double? tickMarkRadius
  +Size getPreferredSize()
  +void paint()
}

"material::slider_theme::RangeSliderTickMarkShape" <|-- "material::slider_theme::RoundRangeSliderTickMarkShape"

class "material::slider_theme::_EmptySliderTickMarkShape" {
  +Size getPreferredSize()
  +void paint()
}

"material::slider_theme::SliderTickMarkShape" <|-- "material::slider_theme::_EmptySliderTickMarkShape"

class "material::slider_theme::_EmptySliderComponentShape" {
  +Size getPreferredSize()
  +void paint()
}

"material::slider_theme::SliderComponentShape" <|-- "material::slider_theme::_EmptySliderComponentShape"

class "material::slider_theme::RoundSliderThumbShape" {
  +double enabledThumbRadius
  +double? disabledThumbRadius
  +double elevation
  +double pressedElevation
  -double _disabledThumbRadius
  +Size getPreferredSize()
  +void paint()
}

"material::slider_theme::SliderComponentShape" <|-- "material::slider_theme::RoundSliderThumbShape"

class "material::slider_theme::RoundRangeSliderThumbShape" {
  +double enabledThumbRadius
  +double? disabledThumbRadius
  +double elevation
  +double pressedElevation
  -double _disabledThumbRadius
  +Size getPreferredSize()
  +void paint()
}

"material::slider_theme::RangeSliderThumbShape" <|-- "material::slider_theme::RoundRangeSliderThumbShape"

class "material::slider_theme::RoundSliderOverlayShape" {
  +double overlayRadius
  +Size getPreferredSize()
  +void paint()
}

"material::slider_theme::SliderComponentShape" <|-- "material::slider_theme::RoundSliderOverlayShape"

class "material::slider_theme::RectangularSliderValueIndicatorShape" {
  {static} -_RectangularSliderValueIndicatorPathPainter _pathPainter
  +Size getPreferredSize()
  +void paint()
}

"material::slider_theme::RectangularSliderValueIndicatorShape" o-- "material::slider_theme::_RectangularSliderValueIndicatorPathPainter"
"material::slider_theme::SliderComponentShape" <|-- "material::slider_theme::RectangularSliderValueIndicatorShape"

class "material::slider_theme::RectangularRangeSliderValueIndicatorShape" {
  {static} -_RectangularSliderValueIndicatorPathPainter _pathPainter
  +Size getPreferredSize()
  +double getHorizontalShift()
  +void paint()
}

"material::slider_theme::RectangularRangeSliderValueIndicatorShape" o-- "material::slider_theme::_RectangularSliderValueIndicatorPathPainter"
"material::slider_theme::RangeSliderValueIndicatorShape" <|-- "material::slider_theme::RectangularRangeSliderValueIndicatorShape"

class "material::slider_theme::_RectangularSliderValueIndicatorPathPainter" {
  {static} -double _triangleHeight
  {static} -double _labelPadding
  {static} -double _preferredHeight
  {static} -double _minLabelWidth
  {static} -double _bottomTipYOffset
  {static} -double _preferredHalfHeight
  {static} -double _upperRectRadius
  +Size getPreferredSize()
  +double getHorizontalShift()
  -double _upperRectangleWidth()
  +void paint()
}

class "material::slider_theme::PaddleSliderValueIndicatorShape" {
  {static} -_PaddleSliderValueIndicatorPathPainter _pathPainter
  +Size getPreferredSize()
  +void paint()
}

"material::slider_theme::PaddleSliderValueIndicatorShape" o-- "material::slider_theme::_PaddleSliderValueIndicatorPathPainter"
"material::slider_theme::SliderComponentShape" <|-- "material::slider_theme::PaddleSliderValueIndicatorShape"

class "material::slider_theme::PaddleRangeSliderValueIndicatorShape" {
  {static} -_PaddleSliderValueIndicatorPathPainter _pathPainter
  +Size getPreferredSize()
  +double getHorizontalShift()
  +void paint()
}

"material::slider_theme::PaddleRangeSliderValueIndicatorShape" o-- "material::slider_theme::_PaddleSliderValueIndicatorPathPainter"
"material::slider_theme::RangeSliderValueIndicatorShape" <|-- "material::slider_theme::PaddleRangeSliderValueIndicatorShape"

class "material::slider_theme::_PaddleSliderValueIndicatorPathPainter" {
  {static} -double _topLobeRadius
  {static} -double _minLabelWidth
  {static} -double _bottomLobeRadius
  {static} -double _labelPadding
  {static} -double _distanceBetweenTopBottomCenters
  {static} -double _middleNeckWidth
  {static} -double _bottomNeckRadius
  {static} -double _neckTriangleBase
  {static} -double _rightBottomNeckCenterX
  {static} -double _rightBottomNeckAngleStart
  {static} -Offset _topLobeCenter
  {static} -double _topNeckRadius
  {static} -double _neckTriangleHypotenuse
  {static} -double _twoSeventyDegrees
  {static} -double _ninetyDegrees
  {static} -double _thirtyDegrees
  {static} -double _preferredHeight
  {static} -bool _debuggingLabelLocation
  +Size getPreferredSize()
  {static} -void _addArc()
  +double getHorizontalShift()
  -double _getIdealOffset()
  +void paint()
}

"material::slider_theme::_PaddleSliderValueIndicatorPathPainter" o-- "dart::ui::Offset"

class "material::slider_theme::RangeValues" {
  +double start
  +double end
  +int hashCode
  +bool ==()
  +String toString()
}

class "material::slider_theme::RangeLabels" {
  +String start
  +String end
  +int hashCode
  +bool ==()
  +String toString()
}

class "material::slider_theme::DropSliderValueIndicatorShape" {
  {static} -_DropSliderValueIndicatorPathPainter _pathPainter
  +Size getPreferredSize()
  +void paint()
}

"material::slider_theme::DropSliderValueIndicatorShape" o-- "material::slider_theme::_DropSliderValueIndicatorPathPainter"
"material::slider_theme::SliderComponentShape" <|-- "material::slider_theme::DropSliderValueIndicatorShape"

class "material::slider_theme::_DropSliderValueIndicatorPathPainter" {
  {static} -double _triangleHeight
  {static} -double _labelPadding
  {static} -double _preferredHeight
  {static} -double _minLabelWidth
  {static} -double _minRectHeight
  {static} -double _rectYOffset
  {static} -double _bottomTipYOffset
  {static} -double _preferredHalfHeight
  {static} -double _upperRectRadius
  +Size getPreferredSize()
  +double getHorizontalShift()
  -double _upperRectangleWidth()
  -BorderRadius _adjustBorderRadius()
  +void paint()
}

class "material::slider_theme::ShowValueIndicator" {
  +int index
  {static} +List<ShowValueIndicator> values
  {static} +ShowValueIndicator onlyForDiscrete
  {static} +ShowValueIndicator onlyForContinuous
  {static} +ShowValueIndicator always
  {static} +ShowValueIndicator never
}

"material::slider_theme::ShowValueIndicator" o-- "material::slider_theme::ShowValueIndicator"
"dart::core::Enum" <|-- "material::slider_theme::ShowValueIndicator"

class "material::slider_theme::Thumb" {
  +int index
  {static} +List<Thumb> values
  {static} +Thumb start
  {static} +Thumb end
}

"material::slider_theme::Thumb" o-- "material::slider_theme::Thumb"
"dart::core::Enum" <|-- "material::slider_theme::Thumb"

abstract class "material::slider_theme::BaseSliderTrackShape" {
  +Rect getPreferredRect()
}

abstract class "material::slider_theme::BaseRangeSliderTrackShape" {
  +Rect getPreferredRect()
}

class "material::chip_theme::ChipTheme" {
  +ChipThemeData data
  {static} +ChipThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::chip_theme::ChipTheme" o-- "material::chip_theme::ChipThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::chip_theme::ChipTheme"

class "material::chip_theme::ChipThemeData" {
  +MaterialStateProperty<Color?>? color
  +Color? backgroundColor
  +Color? deleteIconColor
  +Color? disabledColor
  +Color? selectedColor
  +Color? secondarySelectedColor
  +Color? shadowColor
  +Color? surfaceTintColor
  +Color? selectedShadowColor
  +bool? showCheckmark
  +Color? checkmarkColor
  +EdgeInsetsGeometry? labelPadding
  +EdgeInsetsGeometry? padding
  +BorderSide? side
  +OutlinedBorder? shape
  +TextStyle? labelStyle
  +TextStyle? secondaryLabelStyle
  +Brightness? brightness
  +double? elevation
  +double? pressElevation
  +IconThemeData? iconTheme
  +int hashCode
  +ChipThemeData copyWith()
  {static} +ChipThemeData? lerp()
  {static} -BorderSide? _lerpSides()
  {static} -OutlinedBorder? _lerpShapes()
  +bool ==()
  +void debugFillProperties()
}

"material::chip_theme::ChipThemeData" o-- "material::material_state::MaterialStateProperty<Color>"
"material::chip_theme::ChipThemeData" o-- "dart::ui::Color"
"material::chip_theme::ChipThemeData" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::chip_theme::ChipThemeData" o-- "painting::borders::BorderSide"
"material::chip_theme::ChipThemeData" o-- "painting::borders::OutlinedBorder"
"material::chip_theme::ChipThemeData" o-- "painting::text_style::TextStyle"
"material::chip_theme::ChipThemeData" o-- "dart::ui::Brightness"
"material::chip_theme::ChipThemeData" o-- "widgets::icon_theme_data::IconThemeData"
"foundation::diagnostics::Diagnosticable" <|-- "material::chip_theme::ChipThemeData"

class "material::ink_sparkle::InkSparkle" {
  {static} -Duration _animationDuration
  {static} -double _targetRadiusMultiplier
  {static} -double _rotateRight
  {static} -double _rotateLeft
  {static} -double _noiseDensity
  -AnimationController _animationController
  -Animation<Vector2> _center
  -Animation<double> _radiusScale
  -Animation<double> _alpha
  -Animation<double> _sparkleAlpha
  -double _turbulenceSeed
  -Color _color
  -Offset _position
  -BorderRadius _borderRadius
  -double _targetRadius
  -Rect Function()? _clipCallback
  -TextDirection _textDirection
  -dynamic _fragmentShader
  -bool _fragmentShaderInitialized
  {static} +InteractiveInkFeatureFactory splashFactory
  {static} +InteractiveInkFeatureFactory constantTurbulenceSeedSplashFactory
  -double _width
  -double _height
  -void _handleStatusChanged()
  +void dispose()
  +void paintFeature()
  -void _updateFragmentShader()
  -void _transformCanvas()
  -void _clipCanvas()
}

"material::ink_sparkle::InkSparkle" o-- "animation::animation_controller::AnimationController"
"material::ink_sparkle::InkSparkle" o-- "animation::animation::Animation<Vector2>"
"material::ink_sparkle::InkSparkle" o-- "animation::animation::Animation<double>"
"material::ink_sparkle::InkSparkle" o-- "dart::ui::Color"
"material::ink_sparkle::InkSparkle" o-- "dart::ui::Offset"
"material::ink_sparkle::InkSparkle" o-- "painting::border_radius::BorderRadius"
"material::ink_sparkle::InkSparkle" o-- "material::material::Rect Function()"
"material::ink_sparkle::InkSparkle" o-- "dart::ui::TextDirection"
"material::ink_sparkle::InkSparkle" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::ink_well::InteractiveInkFeature" <|-- "material::ink_sparkle::InkSparkle"

class "material::ink_sparkle::_InkSparkleFactory" {
  {static} -bool _initCalled
  {static} -FragmentProgram? _program
  +double? turbulenceSeed
  {static} +void initializeShader()
  +InteractiveInkFeature create()
}

"material::ink_sparkle::_InkSparkleFactory" o-- "dart::ui::FragmentProgram"
"material::ink_well::InteractiveInkFeatureFactory" <|-- "material::ink_sparkle::_InkSparkleFactory"

abstract class "material::mergeable_material::MergeableMaterialItem" {
  +LocalKey key
}

"material::mergeable_material::MergeableMaterialItem" o-- "foundation::key::LocalKey"

class "material::mergeable_material::MaterialSlice" {
  +Widget child
  +Color? color
  +String toString()
}

"material::mergeable_material::MaterialSlice" o-- "widgets::framework::Widget"
"material::mergeable_material::MaterialSlice" o-- "dart::ui::Color"
"material::mergeable_material::MergeableMaterialItem" <|-- "material::mergeable_material::MaterialSlice"

class "material::mergeable_material::MaterialGap" {
  +double size
  +String toString()
}

"material::mergeable_material::MergeableMaterialItem" <|-- "material::mergeable_material::MaterialGap"

class "material::mergeable_material::MergeableMaterial" {
  +List<MergeableMaterialItem> children
  +Axis mainAxis
  +double elevation
  +bool hasDividers
  +Color? dividerColor
  +void debugFillProperties()
  +State<MergeableMaterial> createState()
}

"material::mergeable_material::MergeableMaterial" o-- "painting::basic_types::Axis"
"material::mergeable_material::MergeableMaterial" o-- "dart::ui::Color"
"widgets::framework::StatefulWidget" <|-- "material::mergeable_material::MergeableMaterial"

class "material::mergeable_material::_AnimationTuple" {
  +AnimationController controller
  +CurvedAnimation startAnimation
  +CurvedAnimation endAnimation
  +CurvedAnimation gapAnimation
  +double gapStart
}

"material::mergeable_material::_AnimationTuple" o-- "animation::animation_controller::AnimationController"
"material::mergeable_material::_AnimationTuple" o-- "animation::animations::CurvedAnimation"

class "material::mergeable_material::_MergeableMaterialState" {
  -List<MergeableMaterialItem> _children
  -Map<LocalKey, _AnimationTuple?> _animationTuples
  +void initState()
  -void _initGap()
  +void dispose()
  -void _handleTick()
  -bool _debugHasConsecutiveGaps()
  -bool _debugGapsAreValid()
  -void _insertChild()
  -void _removeChild()
  -bool _isClosingGap()
  -void _removeEmptyGaps()
  +void didUpdateWidget()
  -BorderRadius _borderRadius()
  -double _getGapSize()
  -bool _willNeedDivider()
  +Widget build()
}

"widgets::framework::State" <|-- "material::mergeable_material::_MergeableMaterialState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::mergeable_material::_MergeableMaterialState"

class "material::mergeable_material::_MergeableMaterialSliceKey" {
  +LocalKey value
  +int hashCode
  +bool ==()
  +String toString()
}

"material::mergeable_material::_MergeableMaterialSliceKey" o-- "foundation::key::LocalKey"
"widgets::framework::GlobalKey" <|-- "material::mergeable_material::_MergeableMaterialSliceKey"

class "material::mergeable_material::_MergeableMaterialListBody" {
  +List<MergeableMaterialItem> items
  +double elevation
  -AxisDirection _getDirection()
  +RenderListBody createRenderObject()
  +void updateRenderObject()
}

"widgets::basic::ListBody" <|-- "material::mergeable_material::_MergeableMaterialListBody"

class "material::mergeable_material::_RenderMergeableMaterialListBody" {
  -double _elevation
  +double elevation
  -void _paintShadows()
  +void paint()
}

"rendering::list_body::RenderListBody" <|-- "material::mergeable_material::_RenderMergeableMaterialListBody"

class "material::icon_button_theme::IconButtonThemeData" {
  +ButtonStyle? style
  +int hashCode
  {static} +IconButtonThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::icon_button_theme::IconButtonThemeData" o-- "material::button_style::ButtonStyle"
"foundation::diagnostics::Diagnosticable" <|-- "material::icon_button_theme::IconButtonThemeData"

class "material::icon_button_theme::IconButtonTheme" {
  +IconButtonThemeData data
  {static} +IconButtonThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::icon_button_theme::IconButtonTheme" o-- "material::icon_button_theme::IconButtonThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::icon_button_theme::IconButtonTheme"

abstract class "material::motion::Durations" {
  {static} +Duration short1
  {static} +Duration short2
  {static} +Duration short3
  {static} +Duration short4
  {static} +Duration medium1
  {static} +Duration medium2
  {static} +Duration medium3
  {static} +Duration medium4
  {static} +Duration long1
  {static} +Duration long2
  {static} +Duration long3
  {static} +Duration long4
  {static} +Duration extralong1
  {static} +Duration extralong2
  {static} +Duration extralong3
  {static} +Duration extralong4
}

abstract class "material::motion::Easing" {
  {static} +Curve emphasizedAccelerate
  {static} +Curve emphasizedDecelerate
  {static} +Curve linear
  {static} +Curve standard
  {static} +Curve standardAccelerate
  {static} +Curve standardDecelerate
  {static} +Curve legacyDecelerate
  {static} +Curve legacyAccelerate
  {static} +Curve legacy
}

"material::motion::Easing" o-- "animation::curves::Curve"

class "material::drawer::Drawer" {
  +Color? backgroundColor
  +double? elevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +ShapeBorder? shape
  +double? width
  +Widget? child
  +String? semanticLabel
  +Clip? clipBehavior
  +Widget build()
}

"material::drawer::Drawer" o-- "dart::ui::Color"
"material::drawer::Drawer" o-- "painting::borders::ShapeBorder"
"material::drawer::Drawer" o-- "widgets::framework::Widget"
"material::drawer::Drawer" o-- "dart::ui::Clip"
"widgets::framework::StatelessWidget" <|-- "material::drawer::Drawer"

class "material::drawer::_DrawerControllerScope" {
  +DrawerController controller
  +bool updateShouldNotify()
}

"material::drawer::_DrawerControllerScope" o-- "material::drawer::DrawerController"
"widgets::framework::InheritedWidget" <|-- "material::drawer::_DrawerControllerScope"

class "material::drawer::DrawerController" {
  +Widget child
  +DrawerAlignment alignment
  +void Function(bool)? drawerCallback
  +DragStartBehavior dragStartBehavior
  +Color? scrimColor
  +bool enableOpenDragGesture
  +double? edgeDragWidth
  +bool isDrawerOpen
  {static} +DrawerController? maybeOf()
  {static} +DrawerController of()
  +DrawerControllerState createState()
}

"material::drawer::DrawerController" o-- "widgets::framework::Widget"
"material::drawer::DrawerController" o-- "material::drawer::DrawerAlignment"
"material::drawer::DrawerController" o-- "material::drawer::void Function(bool)"
"material::drawer::DrawerController" o-- "gestures::recognizer::DragStartBehavior"
"material::drawer::DrawerController" o-- "dart::ui::Color"
"widgets::framework::StatefulWidget" <|-- "material::drawer::DrawerController"

class "material::drawer::DrawerControllerState" {
  -LocalHistoryEntry? _historyEntry
  -FocusScopeNode _focusScopeNode
  -AnimationController _controller
  -GlobalKey<State<StatefulWidget>> _drawerKey
  -bool _previouslyOpened
  -ColorTween _scrimColorTween
  -GlobalKey<State<StatefulWidget>> _gestureDetectorKey
  -double _width
  -AlignmentDirectional _drawerOuterAlignment
  -AlignmentDirectional _drawerInnerAlignment
  +void initState()
  +void dispose()
  +void didChangeDependencies()
  +void didUpdateWidget()
  -void _animationChanged()
  -void _ensureHistoryEntry()
  -void _animationStatusChanged()
  -void _handleHistoryEntryRemoved()
  -void _handleDragDown()
  -void _handleDragCancel()
  -void _move()
  -void _settle()
  +void open()
  +void close()
  -ColorTween _buildScrimColorTween()
  -Widget _buildDrawer()
  +Widget build()
}

"material::drawer::DrawerControllerState" o-- "widgets::routes::LocalHistoryEntry"
"material::drawer::DrawerControllerState" o-- "widgets::focus_manager::FocusScopeNode"
"material::drawer::DrawerControllerState" o-- "animation::animation_controller::AnimationController"
"material::drawer::DrawerControllerState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"material::drawer::DrawerControllerState" o-- "animation::tween::ColorTween"
"material::drawer::DrawerControllerState" o-- "painting::alignment::AlignmentDirectional"
"widgets::framework::State" <|-- "material::drawer::DrawerControllerState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "material::drawer::DrawerControllerState"

class "material::drawer::_DrawerDefaultsM2" {
  +BuildContext context
  +Color? shadowColor
}

"material::drawer::_DrawerDefaultsM2" o-- "widgets::framework::BuildContext"
"material::drawer::_DrawerDefaultsM2" o-- "dart::ui::Color"
"material::drawer_theme::DrawerThemeData" <|-- "material::drawer::_DrawerDefaultsM2"

class "material::drawer::_DrawerDefaultsM3" {
  +BuildContext context
  +TextDirection direction
  +Color? backgroundColor
  +Color? surfaceTintColor
  +Color? shadowColor
  +ShapeBorder? shape
  +ShapeBorder? endShape
}

"material::drawer::_DrawerDefaultsM3" o-- "widgets::framework::BuildContext"
"material::drawer::_DrawerDefaultsM3" o-- "dart::ui::TextDirection"
"material::drawer::_DrawerDefaultsM3" o-- "dart::ui::Color"
"material::drawer::_DrawerDefaultsM3" o-- "painting::borders::ShapeBorder"
"material::drawer_theme::DrawerThemeData" <|-- "material::drawer::_DrawerDefaultsM3"

class "material::drawer::DrawerAlignment" {
  +int index
  {static} +List<DrawerAlignment> values
  {static} +DrawerAlignment start
  {static} +DrawerAlignment end
}

"material::drawer::DrawerAlignment" o-- "material::drawer::DrawerAlignment"
"dart::core::Enum" <|-- "material::drawer::DrawerAlignment"

class "material::desktop_text_selection::_DesktopTextSelectionHandleControls" {
}

"material::desktop_text_selection::DesktopTextSelectionControls" <|-- "material::desktop_text_selection::_DesktopTextSelectionHandleControls"

class "material::desktop_text_selection::DesktopTextSelectionControls" {
  +Size getHandleSize()
  +Widget buildToolbar()
  +Widget buildHandle()
  +Offset getHandleAnchor()
  +bool canSelectAll()
  +void handleSelectAll()
}

"widgets::text_selection::TextSelectionControls" <|-- "material::desktop_text_selection::DesktopTextSelectionControls"

class "material::desktop_text_selection::_DesktopTextSelectionControlsToolbar" {
  +ValueListenable<ClipboardStatus>? clipboardStatus
  +List<dynamic> endpoints
  +Rect globalEditableRegion
  +void Function()? handleCopy
  +void Function()? handleCut
  +void Function()? handlePaste
  +void Function()? handleSelectAll
  +Offset? lastSecondaryTapDownPosition
  +Offset selectionMidpoint
  +double textLineHeight
  +_DesktopTextSelectionControlsToolbarState createState()
}

"material::desktop_text_selection::_DesktopTextSelectionControlsToolbar" o-- "foundation::change_notifier::ValueListenable<ClipboardStatus>"
"material::desktop_text_selection::_DesktopTextSelectionControlsToolbar" o-- "dart::ui::Rect"
"material::desktop_text_selection::_DesktopTextSelectionControlsToolbar" o-- "dart::ui::void Function()"
"material::desktop_text_selection::_DesktopTextSelectionControlsToolbar" o-- "dart::ui::Offset"
"widgets::framework::StatefulWidget" <|-- "material::desktop_text_selection::_DesktopTextSelectionControlsToolbar"

class "material::desktop_text_selection::_DesktopTextSelectionControlsToolbarState" {
  -void _onChangedClipboardStatus()
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"widgets::framework::State" <|-- "material::desktop_text_selection::_DesktopTextSelectionControlsToolbarState"

class "material::expansion_tile_theme::ExpansionTileThemeData" {
  +Color? backgroundColor
  +Color? collapsedBackgroundColor
  +EdgeInsetsGeometry? tilePadding
  +AlignmentGeometry? expandedAlignment
  +EdgeInsetsGeometry? childrenPadding
  +Color? iconColor
  +Color? collapsedIconColor
  +Color? textColor
  +Color? collapsedTextColor
  +ShapeBorder? shape
  +ShapeBorder? collapsedShape
  +Clip? clipBehavior
  +int hashCode
  +ExpansionTileThemeData copyWith()
  {static} +ExpansionTileThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::expansion_tile_theme::ExpansionTileThemeData" o-- "dart::ui::Color"
"material::expansion_tile_theme::ExpansionTileThemeData" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::expansion_tile_theme::ExpansionTileThemeData" o-- "painting::alignment::AlignmentGeometry"
"material::expansion_tile_theme::ExpansionTileThemeData" o-- "painting::borders::ShapeBorder"
"material::expansion_tile_theme::ExpansionTileThemeData" o-- "dart::ui::Clip"
"foundation::diagnostics::Diagnosticable" <|-- "material::expansion_tile_theme::ExpansionTileThemeData"

class "material::expansion_tile_theme::ExpansionTileTheme" {
  +ExpansionTileThemeData data
  {static} +ExpansionTileThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::expansion_tile_theme::ExpansionTileTheme" o-- "material::expansion_tile_theme::ExpansionTileThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::expansion_tile_theme::ExpansionTileTheme"

abstract class "material::date::DateUtils" {
  {static} +DateTime dateOnly()
  {static} +DateTimeRange datesOnly()
  {static} +bool isSameDay()
  {static} +bool isSameMonth()
  {static} +int monthDelta()
  {static} +DateTime addMonthsToMonthDate()
  {static} +DateTime addDaysToDate()
  {static} +int firstDayOffset()
  {static} +int getDaysInMonth()
}

class "material::date::DateTimeRange" {
  +DateTime start
  +DateTime end
  +Duration duration
  +int hashCode
  +bool ==()
  +String toString()
}

class "material::date::DatePickerEntryMode" {
  +int index
  {static} +List<DatePickerEntryMode> values
  {static} +DatePickerEntryMode calendar
  {static} +DatePickerEntryMode input
  {static} +DatePickerEntryMode calendarOnly
  {static} +DatePickerEntryMode inputOnly
}

"material::date::DatePickerEntryMode" o-- "material::date::DatePickerEntryMode"
"dart::core::Enum" <|-- "material::date::DatePickerEntryMode"

class "material::date::DatePickerMode" {
  +int index
  {static} +List<DatePickerMode> values
  {static} +DatePickerMode day
  {static} +DatePickerMode year
}

"material::date::DatePickerMode" o-- "material::date::DatePickerMode"
"dart::core::Enum" <|-- "material::date::DatePickerMode"

class "material::magnifier::TextMagnifier" {
  {static} +dynamic adaptiveMagnifierConfiguration
  {static} +Duration jumpBetweenLinesAnimationDuration
  +ValueNotifier<dynamic> magnifierInfo
  +State<TextMagnifier> createState()
}

"material::magnifier::TextMagnifier" o-- "foundation::change_notifier::ValueNotifier<dynamic>"
"widgets::framework::StatefulWidget" <|-- "material::magnifier::TextMagnifier"

class "material::magnifier::_TextMagnifierState" {
  -Offset? _magnifierPosition
  -Timer? _positionShouldBeAnimatedTimer
  -Offset _extraFocalPointOffset
  -bool _positionShouldBeAnimated
  +void initState()
  +void dispose()
  +void didChangeDependencies()
  +void didUpdateWidget()
  -void _determineMagnifierPositionAndFocalPoint()
  +Widget build()
}

"material::magnifier::_TextMagnifierState" o-- "dart::ui::Offset"
"material::magnifier::_TextMagnifierState" o-- "dart::async::Timer"
"widgets::framework::State" <|-- "material::magnifier::_TextMagnifierState"

class "material::magnifier::Magnifier" {
  {static} +Size kDefaultMagnifierSize
  {static} +double kStandardVerticalFocalPointShift
  {static} -double _borderRadius
  {static} -double _magnification
  +Offset additionalFocalPointOffset
  +BorderRadius borderRadius
  +Color filmColor
  +List<BoxShadow> shadows
  +Size size
  +Widget build()
}

"material::magnifier::Magnifier" o-- "dart::ui::Size"
"material::magnifier::Magnifier" o-- "dart::ui::Offset"
"material::magnifier::Magnifier" o-- "painting::border_radius::BorderRadius"
"material::magnifier::Magnifier" o-- "dart::ui::Color"
"widgets::framework::StatelessWidget" <|-- "material::magnifier::Magnifier"

class "material::snack_bar_theme::SnackBarThemeData" {
  +Color? backgroundColor
  +Color? actionTextColor
  +Color? disabledActionTextColor
  +TextStyle? contentTextStyle
  +double? elevation
  +ShapeBorder? shape
  +SnackBarBehavior? behavior
  +double? width
  +EdgeInsets? insetPadding
  +bool? showCloseIcon
  +Color? closeIconColor
  +double? actionOverflowThreshold
  +Color? actionBackgroundColor
  +Color? disabledActionBackgroundColor
  +int hashCode
  +SnackBarThemeData copyWith()
  {static} +SnackBarThemeData lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::snack_bar_theme::SnackBarThemeData" o-- "dart::ui::Color"
"material::snack_bar_theme::SnackBarThemeData" o-- "painting::text_style::TextStyle"
"material::snack_bar_theme::SnackBarThemeData" o-- "painting::borders::ShapeBorder"
"material::snack_bar_theme::SnackBarThemeData" o-- "material::snack_bar_theme::SnackBarBehavior"
"material::snack_bar_theme::SnackBarThemeData" o-- "painting::edge_insets::EdgeInsets"
"foundation::diagnostics::Diagnosticable" <|-- "material::snack_bar_theme::SnackBarThemeData"

class "material::snack_bar_theme::SnackBarBehavior" {
  +int index
  {static} +List<SnackBarBehavior> values
  {static} +SnackBarBehavior fixed
  {static} +SnackBarBehavior floating
}

"material::snack_bar_theme::SnackBarBehavior" o-- "material::snack_bar_theme::SnackBarBehavior"
"dart::core::Enum" <|-- "material::snack_bar_theme::SnackBarBehavior"

abstract class "material::theme_data::ThemeExtension" {
  +Object type
  +ThemeExtension<T> copyWith()
  +ThemeExtension<T> lerp()
}

class "material::theme_data::ThemeData" {
  +bool applyElevationOverlayColor
  +NoDefaultCupertinoThemeData? cupertinoOverrideTheme
  +Map<Object, ThemeExtension<dynamic>> extensions
  +InputDecorationTheme inputDecorationTheme
  +MaterialTapTargetSize materialTapTargetSize
  +PageTransitionsTheme pageTransitionsTheme
  +TargetPlatform platform
  +ScrollbarThemeData scrollbarTheme
  +InteractiveInkFeatureFactory splashFactory
  +bool useMaterial3
  +VisualDensity visualDensity
  -Color? _bottomAppBarColor
  +Color canvasColor
  +Color cardColor
  +ColorScheme colorScheme
  +Color dialogBackgroundColor
  +Color disabledColor
  +Color dividerColor
  +Color focusColor
  +Color highlightColor
  +Color hintColor
  +Color hoverColor
  +Color indicatorColor
  +Color primaryColor
  +Color primaryColorDark
  +Color primaryColorLight
  +Color scaffoldBackgroundColor
  +Color secondaryHeaderColor
  -Color? _selectedRowColor
  +Color shadowColor
  +Color splashColor
  +Color unselectedWidgetColor
  +IconThemeData iconTheme
  +IconThemeData primaryIconTheme
  +TextTheme primaryTextTheme
  +TextTheme textTheme
  +Typography typography
  +ActionIconThemeData? actionIconTheme
  +AppBarTheme appBarTheme
  +BadgeThemeData badgeTheme
  +MaterialBannerThemeData bannerTheme
  +BottomAppBarTheme bottomAppBarTheme
  +BottomNavigationBarThemeData bottomNavigationBarTheme
  +BottomSheetThemeData bottomSheetTheme
  +ButtonBarThemeData buttonBarTheme
  +ButtonThemeData buttonTheme
  +CardTheme cardTheme
  +CheckboxThemeData checkboxTheme
  +ChipThemeData chipTheme
  +DataTableThemeData dataTableTheme
  +DatePickerThemeData datePickerTheme
  +DialogTheme dialogTheme
  +DividerThemeData dividerTheme
  +DrawerThemeData drawerTheme
  +DropdownMenuThemeData dropdownMenuTheme
  +ElevatedButtonThemeData elevatedButtonTheme
  +ExpansionTileThemeData expansionTileTheme
  +FilledButtonThemeData filledButtonTheme
  +FloatingActionButtonThemeData floatingActionButtonTheme
  +IconButtonThemeData iconButtonTheme
  +ListTileThemeData listTileTheme
  +MenuBarThemeData menuBarTheme
  +MenuButtonThemeData menuButtonTheme
  +MenuThemeData menuTheme
  +NavigationBarThemeData navigationBarTheme
  +NavigationDrawerThemeData navigationDrawerTheme
  +NavigationRailThemeData navigationRailTheme
  +OutlinedButtonThemeData outlinedButtonTheme
  +PopupMenuThemeData popupMenuTheme
  +ProgressIndicatorThemeData progressIndicatorTheme
  +RadioThemeData radioTheme
  +SearchBarThemeData searchBarTheme
  +SearchViewThemeData searchViewTheme
  +SegmentedButtonThemeData segmentedButtonTheme
  +SliderThemeData sliderTheme
  +SnackBarThemeData snackBarTheme
  +SwitchThemeData switchTheme
  +TabBarTheme tabBarTheme
  +TextButtonThemeData textButtonTheme
  +TextSelectionThemeData textSelectionTheme
  +TimePickerThemeData timePickerTheme
  +ToggleButtonsThemeData toggleButtonsTheme
  +TooltipThemeData tooltipTheme
  -Color? _errorColor
  -Color? _backgroundColor
  -Color? _toggleableActiveColor
  {static} -int _localizedThemeDataCacheSize
  {static} -_FifoCache<_IdentityThemeDataCacheKey, ThemeData> _localizedThemeDataCache
  +Brightness brightness
  +Color bottomAppBarColor
  +Color selectedRowColor
  +Color errorColor
  +Color backgroundColor
  +Color toggleableActiveColor
  +int hashCode
  +T? extension()
  +ThemeData copyWith()
  {static} +ThemeData localize()
  {static} +Brightness estimateBrightnessForColor()
  {static} -Map<Object, ThemeExtension<dynamic>> _lerpThemeExtensions()
  {static} -Map<Object, ThemeExtension<dynamic>> _themeExtensionIterableToMap()
  {static} +ThemeData lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::theme_data::ThemeData" o-- "cupertino::theme::NoDefaultCupertinoThemeData"
"material::theme_data::ThemeData" o-- "material::input_decorator::InputDecorationTheme"
"material::theme_data::ThemeData" o-- "material::theme_data::MaterialTapTargetSize"
"material::theme_data::ThemeData" o-- "material::page_transitions_theme::PageTransitionsTheme"
"material::theme_data::ThemeData" o-- "foundation::platform::TargetPlatform"
"material::theme_data::ThemeData" o-- "material::scrollbar_theme::ScrollbarThemeData"
"material::theme_data::ThemeData" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::theme_data::ThemeData" o-- "material::theme_data::VisualDensity"
"material::theme_data::ThemeData" o-- "dart::ui::Color"
"material::theme_data::ThemeData" o-- "material::color_scheme::ColorScheme"
"material::theme_data::ThemeData" o-- "widgets::icon_theme_data::IconThemeData"
"material::theme_data::ThemeData" o-- "material::text_theme::TextTheme"
"material::theme_data::ThemeData" o-- "material::typography::Typography"
"material::theme_data::ThemeData" o-- "material::action_icons_theme::ActionIconThemeData"
"material::theme_data::ThemeData" o-- "material::app_bar_theme::AppBarTheme"
"material::theme_data::ThemeData" o-- "material::badge_theme::BadgeThemeData"
"material::theme_data::ThemeData" o-- "material::banner_theme::MaterialBannerThemeData"
"material::theme_data::ThemeData" o-- "material::bottom_app_bar_theme::BottomAppBarTheme"
"material::theme_data::ThemeData" o-- "material::bottom_navigation_bar_theme::BottomNavigationBarThemeData"
"material::theme_data::ThemeData" o-- "material::bottom_sheet_theme::BottomSheetThemeData"
"material::theme_data::ThemeData" o-- "material::button_bar_theme::ButtonBarThemeData"
"material::theme_data::ThemeData" o-- "material::button_theme::ButtonThemeData"
"material::theme_data::ThemeData" o-- "material::card_theme::CardTheme"
"material::theme_data::ThemeData" o-- "material::checkbox_theme::CheckboxThemeData"
"material::theme_data::ThemeData" o-- "material::chip_theme::ChipThemeData"
"material::theme_data::ThemeData" o-- "material::data_table_theme::DataTableThemeData"
"material::theme_data::ThemeData" o-- "material::date_picker_theme::DatePickerThemeData"
"material::theme_data::ThemeData" o-- "material::dialog_theme::DialogTheme"
"material::theme_data::ThemeData" o-- "material::divider_theme::DividerThemeData"
"material::theme_data::ThemeData" o-- "material::drawer_theme::DrawerThemeData"
"material::theme_data::ThemeData" o-- "material::dropdown_menu_theme::DropdownMenuThemeData"
"material::theme_data::ThemeData" o-- "material::elevated_button_theme::ElevatedButtonThemeData"
"material::theme_data::ThemeData" o-- "material::expansion_tile_theme::ExpansionTileThemeData"
"material::theme_data::ThemeData" o-- "material::filled_button_theme::FilledButtonThemeData"
"material::theme_data::ThemeData" o-- "material::floating_action_button_theme::FloatingActionButtonThemeData"
"material::theme_data::ThemeData" o-- "material::icon_button_theme::IconButtonThemeData"
"material::theme_data::ThemeData" o-- "material::list_tile_theme::ListTileThemeData"
"material::theme_data::ThemeData" o-- "material::menu_bar_theme::MenuBarThemeData"
"material::theme_data::ThemeData" o-- "material::menu_button_theme::MenuButtonThemeData"
"material::theme_data::ThemeData" o-- "material::menu_theme::MenuThemeData"
"material::theme_data::ThemeData" o-- "material::navigation_bar_theme::NavigationBarThemeData"
"material::theme_data::ThemeData" o-- "material::navigation_drawer_theme::NavigationDrawerThemeData"
"material::theme_data::ThemeData" o-- "material::navigation_rail_theme::NavigationRailThemeData"
"material::theme_data::ThemeData" o-- "material::outlined_button_theme::OutlinedButtonThemeData"
"material::theme_data::ThemeData" o-- "material::popup_menu_theme::PopupMenuThemeData"
"material::theme_data::ThemeData" o-- "material::progress_indicator_theme::ProgressIndicatorThemeData"
"material::theme_data::ThemeData" o-- "material::radio_theme::RadioThemeData"
"material::theme_data::ThemeData" o-- "material::search_bar_theme::SearchBarThemeData"
"material::theme_data::ThemeData" o-- "material::search_view_theme::SearchViewThemeData"
"material::theme_data::ThemeData" o-- "material::segmented_button_theme::SegmentedButtonThemeData"
"material::theme_data::ThemeData" o-- "material::slider_theme::SliderThemeData"
"material::theme_data::ThemeData" o-- "material::snack_bar_theme::SnackBarThemeData"
"material::theme_data::ThemeData" o-- "material::switch_theme::SwitchThemeData"
"material::theme_data::ThemeData" o-- "material::tab_bar_theme::TabBarTheme"
"material::theme_data::ThemeData" o-- "material::text_button_theme::TextButtonThemeData"
"material::theme_data::ThemeData" o-- "material::text_selection_theme::TextSelectionThemeData"
"material::theme_data::ThemeData" o-- "material::time_picker_theme::TimePickerThemeData"
"material::theme_data::ThemeData" o-- "material::toggle_buttons_theme::ToggleButtonsThemeData"
"material::theme_data::ThemeData" o-- "material::tooltip_theme::TooltipThemeData"
"material::theme_data::ThemeData" o-- "material::theme_data::_FifoCache<_IdentityThemeDataCacheKey, ThemeData>"
"material::theme_data::ThemeData" o-- "dart::ui::Brightness"
"foundation::diagnostics::Diagnosticable" <|-- "material::theme_data::ThemeData"

class "material::theme_data::MaterialBasedCupertinoThemeData" {
  -ThemeData _materialTheme
  -NoDefaultCupertinoThemeData _cupertinoOverrideTheme
  +Brightness brightness
  +Color primaryColor
  +Color primaryContrastingColor
  +Color scaffoldBackgroundColor
  +MaterialBasedCupertinoThemeData copyWith()
  +CupertinoThemeData resolveFrom()
}

"material::theme_data::MaterialBasedCupertinoThemeData" o-- "material::theme_data::ThemeData"
"material::theme_data::MaterialBasedCupertinoThemeData" o-- "cupertino::theme::NoDefaultCupertinoThemeData"
"material::theme_data::MaterialBasedCupertinoThemeData" o-- "dart::ui::Brightness"
"material::theme_data::MaterialBasedCupertinoThemeData" o-- "dart::ui::Color"
"cupertino::theme::CupertinoThemeData" <|-- "material::theme_data::MaterialBasedCupertinoThemeData"

class "material::theme_data::_IdentityThemeDataCacheKey" {
  +ThemeData baseTheme
  +TextTheme localTextGeometry
  +int hashCode
  +bool ==()
}

"material::theme_data::_IdentityThemeDataCacheKey" o-- "material::theme_data::ThemeData"
"material::theme_data::_IdentityThemeDataCacheKey" o-- "material::text_theme::TextTheme"

class "material::theme_data::_FifoCache" {
  -Map<K, V> _cache
  -int _maximumSize
  +V putIfAbsent()
}

class "material::theme_data::VisualDensity" {
  {static} +double minimumDensity
  {static} +double maximumDensity
  {static} +VisualDensity standard
  {static} +VisualDensity comfortable
  {static} +VisualDensity compact
  +double horizontal
  +double vertical
  {static} +VisualDensity adaptivePlatformDensity
  +Offset baseSizeAdjustment
  +int hashCode
  {static} +VisualDensity defaultDensityForPlatform()
  +VisualDensity copyWith()
  {static} +VisualDensity lerp()
  +BoxConstraints effectiveConstraints()
  +bool ==()
  +void debugFillProperties()
  +String toStringShort()
}

"material::theme_data::VisualDensity" o-- "material::theme_data::VisualDensity"
"material::theme_data::VisualDensity" o-- "dart::ui::Offset"
"foundation::diagnostics::Diagnosticable" <|-- "material::theme_data::VisualDensity"

class "material::theme_data::MaterialTapTargetSize" {
  +int index
  {static} +List<MaterialTapTargetSize> values
  {static} +MaterialTapTargetSize padded
  {static} +MaterialTapTargetSize shrinkWrap
}

"material::theme_data::MaterialTapTargetSize" o-- "material::theme_data::MaterialTapTargetSize"
"dart::core::Enum" <|-- "material::theme_data::MaterialTapTargetSize"

class "material::flexible_space_bar::FlexibleSpaceBar" {
  +Widget? title
  +Widget? background
  +bool? centerTitle
  +CollapseMode collapseMode
  +List<StretchMode> stretchModes
  +EdgeInsetsGeometry? titlePadding
  +double expandedTitleScale
  {static} +Widget createSettings()
  +State<FlexibleSpaceBar> createState()
}

"material::flexible_space_bar::FlexibleSpaceBar" o-- "widgets::framework::Widget"
"material::flexible_space_bar::FlexibleSpaceBar" o-- "material::flexible_space_bar::CollapseMode"
"material::flexible_space_bar::FlexibleSpaceBar" o-- "painting::edge_insets::EdgeInsetsGeometry"
"widgets::framework::StatefulWidget" <|-- "material::flexible_space_bar::FlexibleSpaceBar"

class "material::flexible_space_bar::_FlexibleSpaceBarState" {
  -bool _getEffectiveCenterTitle()
  -Alignment _getTitleAlignment()
  -double _getCollapsePadding()
  +Widget build()
}

"widgets::framework::State" <|-- "material::flexible_space_bar::_FlexibleSpaceBarState"

class "material::flexible_space_bar::FlexibleSpaceBarSettings" {
  +double toolbarOpacity
  +double minExtent
  +double maxExtent
  +double currentExtent
  +bool? isScrolledUnder
  +bool? hasLeading
  +bool updateShouldNotify()
}

"widgets::framework::InheritedWidget" <|-- "material::flexible_space_bar::FlexibleSpaceBarSettings"

class "material::flexible_space_bar::_FlexibleSpaceHeaderOpacity" {
  +double opacity
  +bool alwaysIncludeSemantics
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "material::flexible_space_bar::_FlexibleSpaceHeaderOpacity"

class "material::flexible_space_bar::_RenderFlexibleSpaceHeaderOpacity" {
  +bool isRepaintBoundary
  +void paint()
}

"rendering::proxy_box::RenderOpacity" <|-- "material::flexible_space_bar::_RenderFlexibleSpaceHeaderOpacity"

class "material::flexible_space_bar::CollapseMode" {
  +int index
  {static} +List<CollapseMode> values
  {static} +CollapseMode parallax
  {static} +CollapseMode pin
  {static} +CollapseMode none
}

"material::flexible_space_bar::CollapseMode" o-- "material::flexible_space_bar::CollapseMode"
"dart::core::Enum" <|-- "material::flexible_space_bar::CollapseMode"

class "material::flexible_space_bar::StretchMode" {
  +int index
  {static} +List<StretchMode> values
  {static} +StretchMode zoomBackground
  {static} +StretchMode blurBackground
  {static} +StretchMode fadeTitle
}

"material::flexible_space_bar::StretchMode" o-- "material::flexible_space_bar::StretchMode"
"dart::core::Enum" <|-- "material::flexible_space_bar::StretchMode"

class "material::navigation_bar_theme::NavigationBarThemeData" {
  +double? height
  +Color? backgroundColor
  +double? elevation
  +Color? shadowColor
  +Color? surfaceTintColor
  +Color? indicatorColor
  +ShapeBorder? indicatorShape
  +MaterialStateProperty<TextStyle?>? labelTextStyle
  +MaterialStateProperty<IconThemeData?>? iconTheme
  +NavigationDestinationLabelBehavior? labelBehavior
  +MaterialStateProperty<Color?>? overlayColor
  +int hashCode
  +NavigationBarThemeData copyWith()
  {static} +NavigationBarThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::navigation_bar_theme::NavigationBarThemeData" o-- "dart::ui::Color"
"material::navigation_bar_theme::NavigationBarThemeData" o-- "painting::borders::ShapeBorder"
"material::navigation_bar_theme::NavigationBarThemeData" o-- "material::material_state::MaterialStateProperty<TextStyle>"
"material::navigation_bar_theme::NavigationBarThemeData" o-- "material::material_state::MaterialStateProperty<IconThemeData>"
"material::navigation_bar_theme::NavigationBarThemeData" o-- "material::navigation_bar::NavigationDestinationLabelBehavior"
"material::navigation_bar_theme::NavigationBarThemeData" o-- "material::material_state::MaterialStateProperty<Color>"
"foundation::diagnostics::Diagnosticable" <|-- "material::navigation_bar_theme::NavigationBarThemeData"

class "material::navigation_bar_theme::NavigationBarTheme" {
  +NavigationBarThemeData data
  {static} +NavigationBarThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::navigation_bar_theme::NavigationBarTheme" o-- "material::navigation_bar_theme::NavigationBarThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::navigation_bar_theme::NavigationBarTheme"

class "material::spell_check_suggestions_toolbar_layout_delegate::SpellCheckSuggestionsToolbarLayoutDelegate" {
  +Offset anchor
  +BoxConstraints getConstraintsForChild()
  +Offset getPositionForChild()
  +bool shouldRelayout()
}

"material::spell_check_suggestions_toolbar_layout_delegate::SpellCheckSuggestionsToolbarLayoutDelegate" o-- "dart::ui::Offset"
"rendering::shifted_box::SingleChildLayoutDelegate" <|-- "material::spell_check_suggestions_toolbar_layout_delegate::SpellCheckSuggestionsToolbarLayoutDelegate"

class "material::switch::Switch" {
  +bool value
  +void Function(bool)? onChanged
  +Color? activeColor
  +Color? activeTrackColor
  +Color? inactiveThumbColor
  +Color? inactiveTrackColor
  +ImageProvider<Object>? activeThumbImage
  +void Function(Object, StackTrace?)? onActiveThumbImageError
  +ImageProvider<Object>? inactiveThumbImage
  +void Function(Object, StackTrace?)? onInactiveThumbImageError
  +MaterialStateProperty<Color?>? thumbColor
  +MaterialStateProperty<Color?>? trackColor
  +MaterialStateProperty<Color?>? trackOutlineColor
  +MaterialStateProperty<double?>? trackOutlineWidth
  +MaterialStateProperty<Icon?>? thumbIcon
  +MaterialTapTargetSize? materialTapTargetSize
  -_SwitchType _switchType
  +bool? applyCupertinoTheme
  +DragStartBehavior dragStartBehavior
  +MouseCursor? mouseCursor
  +Color? focusColor
  +Color? hoverColor
  +MaterialStateProperty<Color?>? overlayColor
  +double? splashRadius
  +FocusNode? focusNode
  +void Function(bool)? onFocusChange
  +bool autofocus
  -Size _getSwitchSize()
  -Widget _buildCupertinoSwitch()
  -Widget _buildMaterialSwitch()
  +Widget build()
  +void debugFillProperties()
}

"material::switch::Switch" o-- "foundation::basic_types::void Function(bool)"
"material::switch::Switch" o-- "dart::ui::Color"
"material::switch::Switch" o-- "painting::image_provider::ImageProvider<Object>"
"material::switch::Switch" o-- "painting::image_stream::void Function(Object, StackTrace)"
"material::switch::Switch" o-- "material::material_state::MaterialStateProperty<Color>"
"material::switch::Switch" o-- "material::material_state::MaterialStateProperty<double>"
"material::switch::Switch" o-- "material::material_state::MaterialStateProperty<Icon>"
"material::switch::Switch" o-- "material::theme_data::MaterialTapTargetSize"
"material::switch::Switch" o-- "material::switch::_SwitchType"
"material::switch::Switch" o-- "gestures::recognizer::DragStartBehavior"
"material::switch::Switch" o-- "services::mouse_cursor::MouseCursor"
"material::switch::Switch" o-- "widgets::focus_manager::FocusNode"
"widgets::framework::StatelessWidget" <|-- "material::switch::Switch"

class "material::switch::_MaterialSwitch" {
  +bool value
  +void Function(bool)? onChanged
  +Color? activeColor
  +Color? activeTrackColor
  +Color? inactiveThumbColor
  +Color? inactiveTrackColor
  +ImageProvider<Object>? activeThumbImage
  +void Function(Object, StackTrace?)? onActiveThumbImageError
  +ImageProvider<Object>? inactiveThumbImage
  +void Function(Object, StackTrace?)? onInactiveThumbImageError
  +MaterialStateProperty<Color?>? thumbColor
  +MaterialStateProperty<Color?>? trackColor
  +MaterialStateProperty<Color?>? trackOutlineColor
  +MaterialStateProperty<double?>? trackOutlineWidth
  +MaterialStateProperty<Icon?>? thumbIcon
  +MaterialTapTargetSize? materialTapTargetSize
  +DragStartBehavior dragStartBehavior
  +MouseCursor? mouseCursor
  +Color? focusColor
  +Color? hoverColor
  +MaterialStateProperty<Color?>? overlayColor
  +double? splashRadius
  +FocusNode? focusNode
  +void Function(bool)? onFocusChange
  +bool autofocus
  +Size size
  +State<StatefulWidget> createState()
}

"material::switch::_MaterialSwitch" o-- "foundation::basic_types::void Function(bool)"
"material::switch::_MaterialSwitch" o-- "dart::ui::Color"
"material::switch::_MaterialSwitch" o-- "painting::image_provider::ImageProvider<Object>"
"material::switch::_MaterialSwitch" o-- "painting::image_stream::void Function(Object, StackTrace)"
"material::switch::_MaterialSwitch" o-- "material::material_state::MaterialStateProperty<Color>"
"material::switch::_MaterialSwitch" o-- "material::material_state::MaterialStateProperty<double>"
"material::switch::_MaterialSwitch" o-- "material::material_state::MaterialStateProperty<Icon>"
"material::switch::_MaterialSwitch" o-- "material::theme_data::MaterialTapTargetSize"
"material::switch::_MaterialSwitch" o-- "gestures::recognizer::DragStartBehavior"
"material::switch::_MaterialSwitch" o-- "services::mouse_cursor::MouseCursor"
"material::switch::_MaterialSwitch" o-- "widgets::focus_manager::FocusNode"
"material::switch::_MaterialSwitch" o-- "dart::ui::Size"
"widgets::framework::StatefulWidget" <|-- "material::switch::_MaterialSwitch"

class "material::switch::_MaterialSwitchState" {
  -_SwitchPainter _painter
  -bool _needsPositionAnimation
  +void Function(bool?)? onChanged
  +bool tristate
  +bool? value
  -MaterialStateProperty<Color?> _widgetThumbColor
  -MaterialStateProperty<Color?> _widgetTrackColor
  -double _trackInnerLength
  +void didUpdateWidget()
  +void dispose()
  -void _handleDragStart()
  -void _handleDragUpdate()
  -void _handleDragEnd()
  -void _handleChanged()
  +Widget build()
}

"material::switch::_MaterialSwitchState" o-- "material::switch::_SwitchPainter"
"material::switch::_MaterialSwitchState" o-- "foundation::basic_types::void Function(bool)"
"material::switch::_MaterialSwitchState" o-- "material::material_state::MaterialStateProperty<Color>"
"widgets::framework::State" <|-- "material::switch::_MaterialSwitchState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::switch::_MaterialSwitchState"
"material::toggleable::ToggleableStateMixin" <|-- "material::switch::_MaterialSwitchState"

class "material::switch::_SwitchPainter" {
  -AnimationController? _positionController
  -Icon? _activeIcon
  -Icon? _inactiveIcon
  -IconThemeData? _iconTheme
  -Color? _activeIconColor
  -Color? _inactiveIconColor
  -Color? _activePressedColor
  -Color? _inactivePressedColor
  -double? _activeThumbRadius
  -double? _inactiveThumbRadius
  -double? _pressedThumbRadius
  -double? _thumbOffset
  -Size? _transitionalThumbSize
  -double? _trackHeight
  -double? _trackWidth
  -ImageProvider<Object>? _activeThumbImage
  -void Function(Object, StackTrace?)? _onActiveThumbImageError
  -ImageProvider<Object>? _inactiveThumbImage
  -void Function(Object, StackTrace?)? _onInactiveThumbImageError
  -Color? _activeTrackColor
  -Color? _activeTrackOutlineColor
  -Color? _inactiveTrackOutlineColor
  -double? _activeTrackOutlineWidth
  -double? _inactiveTrackOutlineWidth
  -Color? _inactiveTrackColor
  -ImageConfiguration? _configuration
  -TextDirection? _textDirection
  -Color? _surfaceColor
  -bool? _isInteractive
  -double? _trackInnerLength
  -List<BoxShadow>? _thumbShadow
  -Color? _cachedThumbColor
  -ImageProvider<Object>? _cachedThumbImage
  -void Function(Object, StackTrace?)? _cachedThumbErrorListener
  -BoxPainter? _cachedThumbPainter
  -bool _isPainting
  -bool _stopPressAnimation
  -double? _pressedInactiveThumbRadius
  -double? _pressedActiveThumbRadius
  +AnimationController positionController
  +Icon? activeIcon
  +Icon? inactiveIcon
  +IconThemeData? iconTheme
  +Color activeIconColor
  +Color inactiveIconColor
  +Color activePressedColor
  +Color inactivePressedColor
  +double activeThumbRadius
  +double inactiveThumbRadius
  +double pressedThumbRadius
  +double? thumbOffset
  +Size transitionalThumbSize
  +double trackHeight
  +double trackWidth
  +ImageProvider<Object>? activeThumbImage
  +void Function(Object, StackTrace?)? onActiveThumbImageError
  +ImageProvider<Object>? inactiveThumbImage
  +void Function(Object, StackTrace?)? onInactiveThumbImageError
  +Color activeTrackColor
  +Color? activeTrackOutlineColor
  +Color? inactiveTrackOutlineColor
  +double? activeTrackOutlineWidth
  +double? inactiveTrackOutlineWidth
  +Color inactiveTrackColor
  +ImageConfiguration configuration
  +TextDirection textDirection
  +Color surfaceColor
  +bool isInteractive
  +double trackInnerLength
  +List<BoxShadow>? thumbShadow
  -ShapeDecoration _createDefaultThumbDecoration()
  -void _handleDecorationChanged()
  +void paint()
  -Offset _computeTrackPaintOffset()
  -Offset _computeThumbPaintOffset()
  -void _paintTrackWith()
  -void _paintThumbWith()
  +void dispose()
}

"material::switch::_SwitchPainter" o-- "animation::animation_controller::AnimationController"
"material::switch::_SwitchPainter" o-- "widgets::icon::Icon"
"material::switch::_SwitchPainter" o-- "widgets::icon_theme_data::IconThemeData"
"material::switch::_SwitchPainter" o-- "dart::ui::Color"
"material::switch::_SwitchPainter" o-- "dart::ui::Size"
"material::switch::_SwitchPainter" o-- "painting::image_provider::ImageProvider<Object>"
"material::switch::_SwitchPainter" o-- "painting::image_stream::void Function(Object, StackTrace)"
"material::switch::_SwitchPainter" o-- "painting::image_provider::ImageConfiguration"
"material::switch::_SwitchPainter" o-- "dart::ui::TextDirection"
"material::switch::_SwitchPainter" o-- "painting::decoration::BoxPainter"
"material::toggleable::ToggleablePainter" <|-- "material::switch::_SwitchPainter"

class "material::switch::_SwitchConfigM2" {
  +double activeThumbRadius
  +MaterialStateProperty<Color> iconColor
  +double inactiveThumbRadius
  +double pressedThumbRadius
  +double switchHeight
  +double switchHeightCollapsed
  +double switchWidth
  +double thumbRadiusWithIcon
  +List<BoxShadow>? thumbShadow
  +double trackHeight
  +double trackWidth
  +double thumbOffset
  +Size transitionalThumbSize
  +int toggleDuration
}

"material::switch::_SwitchConfigM2" o-- "material::material_state::MaterialStateProperty<Color>"
"material::switch::_SwitchConfigM2" o-- "dart::ui::Size"
"material::switch::_SwitchConfig" <|-- "material::switch::_SwitchConfigM2"

class "material::switch::_SwitchDefaultsM2" {
  -ThemeData _theme
  -ColorScheme _colors
  +MaterialStateProperty<Color> thumbColor
  +MaterialStateProperty<Color> trackColor
  +MaterialStateProperty<Color?>? trackOutlineColor
  +MaterialTapTargetSize materialTapTargetSize
  +MaterialStateProperty<MouseCursor> mouseCursor
  +MaterialStateProperty<Color?> overlayColor
  +double splashRadius
}

"material::switch::_SwitchDefaultsM2" o-- "material::theme_data::ThemeData"
"material::switch::_SwitchDefaultsM2" o-- "material::color_scheme::ColorScheme"
"material::switch::_SwitchDefaultsM2" o-- "material::material_state::MaterialStateProperty<Color>"
"material::switch::_SwitchDefaultsM2" o-- "material::theme_data::MaterialTapTargetSize"
"material::switch::_SwitchDefaultsM2" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::switch_theme::SwitchThemeData" <|-- "material::switch::_SwitchDefaultsM2"

class "material::switch::_SwitchDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  +MaterialStateProperty<Color> thumbColor
  +MaterialStateProperty<Color> trackColor
  +MaterialStateProperty<Color?> trackOutlineColor
  +MaterialStateProperty<Color?> overlayColor
  +MaterialStatePropertyAll<double> trackOutlineWidth
  +double splashRadius
}

"material::switch::_SwitchDefaultsM3" o-- "widgets::framework::BuildContext"
"material::switch::_SwitchDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::switch::_SwitchDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::switch::_SwitchDefaultsM3" o-- "material::material_state::MaterialStatePropertyAll<double>"
"material::switch_theme::SwitchThemeData" <|-- "material::switch::_SwitchDefaultsM3"

class "material::switch::_SwitchConfigM3" {
  +BuildContext context
  -ColorScheme _colors
  {static} +double iconSize
  +double activeThumbRadius
  +MaterialStateProperty<Color> iconColor
  +double inactiveThumbRadius
  +double pressedThumbRadius
  +double switchHeight
  +double switchHeightCollapsed
  +double switchWidth
  +double thumbRadiusWithIcon
  +List<BoxShadow>? thumbShadow
  +double trackHeight
  +double trackWidth
  +Size transitionalThumbSize
  +int toggleDuration
  +double? thumbOffset
}

"material::switch::_SwitchConfigM3" o-- "widgets::framework::BuildContext"
"material::switch::_SwitchConfigM3" o-- "material::color_scheme::ColorScheme"
"material::switch::_SwitchConfigM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::switch::_SwitchConfigM3" o-- "dart::ui::Size"
"material::switch::_SwitchConfig" <|-- "material::switch::_SwitchConfigM3"

class "material::switch::_SwitchType" {
  +int index
  {static} +List<_SwitchType> values
  {static} +_SwitchType material
  {static} +_SwitchType adaptive
}

"material::switch::_SwitchType" o-- "material::switch::_SwitchType"
"dart::core::Enum" <|-- "material::switch::_SwitchType"

abstract class "material::switch::_SwitchConfig" {
  +double trackHeight
  +double trackWidth
  +double switchWidth
  +double switchHeight
  +double switchHeightCollapsed
  +double activeThumbRadius
  +double inactiveThumbRadius
  +double pressedThumbRadius
  +double thumbRadiusWithIcon
  +List<BoxShadow>? thumbShadow
  +MaterialStateProperty<Color> iconColor
  +double? thumbOffset
  +Size transitionalThumbSize
  +int toggleDuration
}

"material::switch::_SwitchConfig" o-- "material::material_state::MaterialStateProperty<Color>"
"material::switch::_SwitchConfig" o-- "dart::ui::Size"

abstract class "material::button_style_button::ButtonStyleButton" {
  +void Function()? onPressed
  +void Function()? onLongPress
  +void Function(bool)? onHover
  +void Function(bool)? onFocusChange
  +ButtonStyle? style
  +Clip clipBehavior
  +FocusNode? focusNode
  +bool autofocus
  +MaterialStatesController? statesController
  +bool? isSemanticButton
  +Widget? child
  +bool enabled
  #ButtonStyle defaultStyleOf()
  #ButtonStyle? themeStyleOf()
  +State<ButtonStyleButton> createState()
  +void debugFillProperties()
  {static} +MaterialStateProperty<T>? allOrNull()
  {static} +EdgeInsetsGeometry scaledPadding()
}

"material::button_style_button::ButtonStyleButton" o-- "dart::ui::void Function()"
"material::button_style_button::ButtonStyleButton" o-- "foundation::basic_types::void Function(bool)"
"material::button_style_button::ButtonStyleButton" o-- "material::button_style::ButtonStyle"
"material::button_style_button::ButtonStyleButton" o-- "dart::ui::Clip"
"material::button_style_button::ButtonStyleButton" o-- "widgets::focus_manager::FocusNode"
"material::button_style_button::ButtonStyleButton" o-- "material::material_state::MaterialStatesController"
"material::button_style_button::ButtonStyleButton" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "material::button_style_button::ButtonStyleButton"

class "material::button_style_button::_ButtonStyleState" {
  +AnimationController? controller
  +double? elevation
  +Color? backgroundColor
  +MaterialStatesController? internalStatesController
  +MaterialStatesController statesController
  +void handleStatesControllerChange()
  +void initStatesController()
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"material::button_style_button::_ButtonStyleState" o-- "animation::animation_controller::AnimationController"
"material::button_style_button::_ButtonStyleState" o-- "dart::ui::Color"
"material::button_style_button::_ButtonStyleState" o-- "material::material_state::MaterialStatesController"
"widgets::framework::State" <|-- "material::button_style_button::_ButtonStyleState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::button_style_button::_ButtonStyleState"

class "material::button_style_button::_MouseCursor" {
  +MouseCursor? Function(Set<MaterialState>) resolveCallback
  +String debugDescription
  +MouseCursor resolve()
}

"material::button_style_button::_MouseCursor" o-- "material::material_state::MouseCursor Function(Set<MaterialState>)"
"material::material_state::MaterialStateMouseCursor" <|-- "material::button_style_button::_MouseCursor"

class "material::button_style_button::_InputPadding" {
  +Size minSize
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"material::button_style_button::_InputPadding" o-- "dart::ui::Size"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "material::button_style_button::_InputPadding"

class "material::button_style_button::_RenderInputPadding" {
  -Size _minSize
  +Size minSize
  +double computeMinIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicWidth()
  +double computeMaxIntrinsicHeight()
  -Size _computeSize()
  +Size computeDryLayout()
  +void performLayout()
  +bool hitTest()
}

"material::button_style_button::_RenderInputPadding" o-- "dart::ui::Size"
"rendering::shifted_box::RenderShiftedBox" <|-- "material::button_style_button::_RenderInputPadding"

class "material::scrollbar::Scrollbar" {
  +Widget child
  +ScrollController? controller
  +bool? thumbVisibility
  +bool? trackVisibility
  +bool? showTrackOnHover
  +double? thickness
  +Radius? radius
  +bool? interactive
  +bool Function(ScrollNotification)? notificationPredicate
  +ScrollbarOrientation? scrollbarOrientation
  +Widget build()
}

"material::scrollbar::Scrollbar" o-- "widgets::framework::Widget"
"material::scrollbar::Scrollbar" o-- "widgets::scroll_controller::ScrollController"
"material::scrollbar::Scrollbar" o-- "dart::ui::Radius"
"material::scrollbar::Scrollbar" o-- "widgets::scroll_notification::bool Function(ScrollNotification)"
"material::scrollbar::Scrollbar" o-- "widgets::scrollbar::ScrollbarOrientation"
"widgets::framework::StatelessWidget" <|-- "material::scrollbar::Scrollbar"

class "material::scrollbar::_MaterialScrollbar" {
  +bool? showTrackOnHover
  +_MaterialScrollbarState createState()
}

"widgets::scrollbar::RawScrollbar" <|-- "material::scrollbar::_MaterialScrollbar"

class "material::scrollbar::_MaterialScrollbarState" {
  -AnimationController _hoverAnimationController
  -bool _dragIsActive
  -bool _hoverIsActive
  -ColorScheme _colorScheme
  -ScrollbarThemeData _scrollbarTheme
  -bool _useAndroidScrollbar
  +bool showScrollbar
  +bool enableGestures
  -bool _showTrackOnHover
  -MaterialStateProperty<bool> _trackVisibility
  -Set<MaterialState> _states
  -MaterialStateProperty<Color> _thumbColor
  -MaterialStateProperty<Color> _trackColor
  -MaterialStateProperty<Color> _trackBorderColor
  -MaterialStateProperty<double> _thickness
  +void initState()
  +void didChangeDependencies()
  +void updateScrollbarPainter()
  +void handleThumbPressStart()
  +void handleThumbPressEnd()
  +void handleHover()
  +void handleHoverExit()
  +void dispose()
}

"material::scrollbar::_MaterialScrollbarState" o-- "animation::animation_controller::AnimationController"
"material::scrollbar::_MaterialScrollbarState" o-- "material::color_scheme::ColorScheme"
"material::scrollbar::_MaterialScrollbarState" o-- "material::scrollbar_theme::ScrollbarThemeData"
"material::scrollbar::_MaterialScrollbarState" o-- "material::material_state::MaterialStateProperty<bool>"
"material::scrollbar::_MaterialScrollbarState" o-- "material::material_state::MaterialStateProperty<Color>"
"material::scrollbar::_MaterialScrollbarState" o-- "material::material_state::MaterialStateProperty<double>"
"widgets::scrollbar::RawScrollbarState" <|-- "material::scrollbar::_MaterialScrollbarState"

class "material::button_style::ButtonStyle" {
  +MaterialStateProperty<TextStyle?>? textStyle
  +MaterialStateProperty<Color?>? backgroundColor
  +MaterialStateProperty<Color?>? foregroundColor
  +MaterialStateProperty<Color?>? overlayColor
  +MaterialStateProperty<Color?>? shadowColor
  +MaterialStateProperty<Color?>? surfaceTintColor
  +MaterialStateProperty<double?>? elevation
  +MaterialStateProperty<EdgeInsetsGeometry?>? padding
  +MaterialStateProperty<Size?>? minimumSize
  +MaterialStateProperty<Size?>? fixedSize
  +MaterialStateProperty<Size?>? maximumSize
  +MaterialStateProperty<Color?>? iconColor
  +MaterialStateProperty<double?>? iconSize
  +MaterialStateProperty<BorderSide?>? side
  +MaterialStateProperty<OutlinedBorder?>? shape
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +VisualDensity? visualDensity
  +MaterialTapTargetSize? tapTargetSize
  +Duration? animationDuration
  +bool? enableFeedback
  +AlignmentGeometry? alignment
  +InteractiveInkFeatureFactory? splashFactory
  +int hashCode
  +ButtonStyle copyWith()
  +ButtonStyle merge()
  +bool ==()
  +void debugFillProperties()
  {static} +ButtonStyle? lerp()
  {static} -MaterialStateProperty<BorderSide?>? _lerpSides()
}

"material::button_style::ButtonStyle" o-- "material::material_state::MaterialStateProperty<TextStyle>"
"material::button_style::ButtonStyle" o-- "material::material_state::MaterialStateProperty<Color>"
"material::button_style::ButtonStyle" o-- "material::material_state::MaterialStateProperty<double>"
"material::button_style::ButtonStyle" o-- "material::material_state::MaterialStateProperty<EdgeInsetsGeometry>"
"material::button_style::ButtonStyle" o-- "material::material_state::MaterialStateProperty<Size>"
"material::button_style::ButtonStyle" o-- "material::material_state::MaterialStateProperty<BorderSide>"
"material::button_style::ButtonStyle" o-- "material::material_state::MaterialStateProperty<OutlinedBorder>"
"material::button_style::ButtonStyle" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::button_style::ButtonStyle" o-- "material::theme_data::VisualDensity"
"material::button_style::ButtonStyle" o-- "material::theme_data::MaterialTapTargetSize"
"material::button_style::ButtonStyle" o-- "painting::alignment::AlignmentGeometry"
"material::button_style::ButtonStyle" o-- "material::ink_well::InteractiveInkFeatureFactory"
"foundation::diagnostics::Diagnosticable" <|-- "material::button_style::ButtonStyle"

class "material::button_style::_LerpSides" {
  +MaterialStateProperty<BorderSide?>? a
  +MaterialStateProperty<BorderSide?>? b
  +double t
  +BorderSide? resolve()
}

"material::button_style::_LerpSides" o-- "material::material_state::MaterialStateProperty<BorderSide>"
"material::material_state::MaterialStateProperty" <|-- "material::button_style::_LerpSides"

class "material::animated_icons::AnimatedIcon" {
  +Animation<double> progress
  +Color? color
  +double? size
  +AnimatedIconData icon
  +String? semanticLabel
  +TextDirection? textDirection
  {static} -Path _pathFactory()
  +Widget build()
}

"material::animated_icons::AnimatedIcon" o-- "animation::animation::Animation<double>"
"material::animated_icons::AnimatedIcon" o-- "dart::ui::Color"
"material::animated_icons::AnimatedIcon" o-- "material::animated_icons::AnimatedIconData"
"material::animated_icons::AnimatedIcon" o-- "dart::ui::TextDirection"
"widgets::framework::StatelessWidget" <|-- "material::animated_icons::AnimatedIcon"

class "material::animated_icons::_AnimatedIconPainter" {
  +List<_PathFrames> paths
  +Animation<double> progress
  +Color color
  +double scale
  +bool shouldMirror
  +Path Function() uiPathFactory
  +List<CustomPainterSemantics> Function(Size)? semanticsBuilder
  +void paint()
  +bool shouldRepaint()
  +bool? hitTest()
  +bool shouldRebuildSemantics()
}

"material::animated_icons::_AnimatedIconPainter" o-- "animation::animation::Animation<double>"
"material::animated_icons::_AnimatedIconPainter" o-- "dart::ui::Color"
"material::animated_icons::_AnimatedIconPainter" o-- "material::animated_icons::Path Function()"
"material::animated_icons::_AnimatedIconPainter" o-- "rendering::custom_paint::List<CustomPainterSemantics> Function(Size)"
"rendering::custom_paint::CustomPainter" <|-- "material::animated_icons::_AnimatedIconPainter"

class "material::animated_icons::_PathFrames" {
  +List<_PathCommand> commands
  +List<double> opacities
  +void paint()
}

abstract class "material::animated_icons::_PathCommand" {
  +void apply()
}

class "material::animated_icons::_PathMoveTo" {
  +List<Offset> points
  +void apply()
}

"material::animated_icons::_PathCommand" <|-- "material::animated_icons::_PathMoveTo"

class "material::animated_icons::_PathCubicTo" {
  +List<Offset> controlPoints2
  +List<Offset> controlPoints1
  +List<Offset> targetPoints
  +void apply()
}

"material::animated_icons::_PathCommand" <|-- "material::animated_icons::_PathCubicTo"

class "material::animated_icons::_PathLineTo" {
  +List<Offset> points
  +void apply()
}

"material::animated_icons::_PathCommand" <|-- "material::animated_icons::_PathLineTo"

class "material::animated_icons::_PathClose" {
  +void apply()
}

"material::animated_icons::_PathCommand" <|-- "material::animated_icons::_PathClose"

abstract class "material::animated_icons::AnimatedIcons" {
  {static} +AnimatedIconData add_event
  {static} +AnimatedIconData arrow_menu
  {static} +AnimatedIconData close_menu
  {static} +AnimatedIconData ellipsis_search
  {static} +AnimatedIconData event_add
  {static} +AnimatedIconData home_menu
  {static} +AnimatedIconData list_view
  {static} +AnimatedIconData menu_arrow
  {static} +AnimatedIconData menu_close
  {static} +AnimatedIconData menu_home
  {static} +AnimatedIconData pause_play
  {static} +AnimatedIconData play_pause
  {static} +AnimatedIconData search_ellipsis
  {static} +AnimatedIconData view_list
}

"material::animated_icons::AnimatedIcons" o-- "material::animated_icons::AnimatedIconData"

abstract class "material::animated_icons::AnimatedIconData" {
  +bool matchTextDirection
}

class "material::animated_icons::_AnimatedIconData" {
  +Size size
  +List<_PathFrames> paths
  +bool matchTextDirection
}

"material::animated_icons::_AnimatedIconData" o-- "dart::ui::Size"
"material::animated_icons::AnimatedIconData" <|-- "material::animated_icons::_AnimatedIconData"

class "material::bottom_navigation_bar::BottomNavigationBar" {
  +List<BottomNavigationBarItem> items
  +void Function(int)? onTap
  +int currentIndex
  +double? elevation
  +BottomNavigationBarType? type
  +Color? backgroundColor
  +double iconSize
  +Color? selectedItemColor
  +Color? unselectedItemColor
  +IconThemeData? selectedIconTheme
  +IconThemeData? unselectedIconTheme
  +TextStyle? selectedLabelStyle
  +TextStyle? unselectedLabelStyle
  +double selectedFontSize
  +double unselectedFontSize
  +bool? showUnselectedLabels
  +bool? showSelectedLabels
  +MouseCursor? mouseCursor
  +bool? enableFeedback
  +BottomNavigationBarLandscapeLayout? landscapeLayout
  +bool useLegacyColorScheme
  +Color? fixedColor
  +State<BottomNavigationBar> createState()
}

"material::bottom_navigation_bar::BottomNavigationBar" o-- "foundation::basic_types::void Function(int)"
"material::bottom_navigation_bar::BottomNavigationBar" o-- "material::bottom_navigation_bar::BottomNavigationBarType"
"material::bottom_navigation_bar::BottomNavigationBar" o-- "dart::ui::Color"
"material::bottom_navigation_bar::BottomNavigationBar" o-- "widgets::icon_theme_data::IconThemeData"
"material::bottom_navigation_bar::BottomNavigationBar" o-- "painting::text_style::TextStyle"
"material::bottom_navigation_bar::BottomNavigationBar" o-- "services::mouse_cursor::MouseCursor"
"material::bottom_navigation_bar::BottomNavigationBar" o-- "material::bottom_navigation_bar::BottomNavigationBarLandscapeLayout"
"widgets::framework::StatefulWidget" <|-- "material::bottom_navigation_bar::BottomNavigationBar"

class "material::bottom_navigation_bar::_BottomNavigationTile" {
  +BottomNavigationBarType type
  +BottomNavigationBarItem item
  +Animation<double> animation
  +double iconSize
  +void Function()? onTap
  +ColorTween? labelColorTween
  +ColorTween? iconColorTween
  +double? flex
  +bool selected
  +IconThemeData? selectedIconTheme
  +IconThemeData? unselectedIconTheme
  +TextStyle selectedLabelStyle
  +TextStyle unselectedLabelStyle
  +String? indexLabel
  +bool showSelectedLabels
  +bool showUnselectedLabels
  +MouseCursor mouseCursor
  +bool enableFeedback
  +BottomNavigationBarLandscapeLayout layout
  +Widget build()
}

"material::bottom_navigation_bar::_BottomNavigationTile" o-- "material::bottom_navigation_bar::BottomNavigationBarType"
"material::bottom_navigation_bar::_BottomNavigationTile" o-- "widgets::bottom_navigation_bar_item::BottomNavigationBarItem"
"material::bottom_navigation_bar::_BottomNavigationTile" o-- "animation::animation::Animation<double>"
"material::bottom_navigation_bar::_BottomNavigationTile" o-- "dart::ui::void Function()"
"material::bottom_navigation_bar::_BottomNavigationTile" o-- "animation::tween::ColorTween"
"material::bottom_navigation_bar::_BottomNavigationTile" o-- "widgets::icon_theme_data::IconThemeData"
"material::bottom_navigation_bar::_BottomNavigationTile" o-- "painting::text_style::TextStyle"
"material::bottom_navigation_bar::_BottomNavigationTile" o-- "services::mouse_cursor::MouseCursor"
"material::bottom_navigation_bar::_BottomNavigationTile" o-- "material::bottom_navigation_bar::BottomNavigationBarLandscapeLayout"
"widgets::framework::StatelessWidget" <|-- "material::bottom_navigation_bar::_BottomNavigationTile"

class "material::bottom_navigation_bar::_Tile" {
  +BottomNavigationBarLandscapeLayout layout
  +Widget icon
  +Widget label
  +Widget build()
}

"material::bottom_navigation_bar::_Tile" o-- "material::bottom_navigation_bar::BottomNavigationBarLandscapeLayout"
"material::bottom_navigation_bar::_Tile" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::bottom_navigation_bar::_Tile"

class "material::bottom_navigation_bar::_TileIcon" {
  +ColorTween colorTween
  +Animation<double> animation
  +double iconSize
  +bool selected
  +BottomNavigationBarItem item
  +IconThemeData? selectedIconTheme
  +IconThemeData? unselectedIconTheme
  +Widget build()
}

"material::bottom_navigation_bar::_TileIcon" o-- "animation::tween::ColorTween"
"material::bottom_navigation_bar::_TileIcon" o-- "animation::animation::Animation<double>"
"material::bottom_navigation_bar::_TileIcon" o-- "widgets::bottom_navigation_bar_item::BottomNavigationBarItem"
"material::bottom_navigation_bar::_TileIcon" o-- "widgets::icon_theme_data::IconThemeData"
"widgets::framework::StatelessWidget" <|-- "material::bottom_navigation_bar::_TileIcon"

class "material::bottom_navigation_bar::_Label" {
  +ColorTween colorTween
  +Animation<double> animation
  +BottomNavigationBarItem item
  +TextStyle selectedLabelStyle
  +TextStyle unselectedLabelStyle
  +bool showSelectedLabels
  +bool showUnselectedLabels
  +Widget build()
}

"material::bottom_navigation_bar::_Label" o-- "animation::tween::ColorTween"
"material::bottom_navigation_bar::_Label" o-- "animation::animation::Animation<double>"
"material::bottom_navigation_bar::_Label" o-- "widgets::bottom_navigation_bar_item::BottomNavigationBarItem"
"material::bottom_navigation_bar::_Label" o-- "painting::text_style::TextStyle"
"widgets::framework::StatelessWidget" <|-- "material::bottom_navigation_bar::_Label"

class "material::bottom_navigation_bar::_BottomNavigationBarState" {
  -List<AnimationController> _controllers
  -List<CurvedAnimation> _animations
  -Queue<_Circle> _circles
  -Color? _backgroundColor
  {static} -Animatable<double> _flexTween
  -BottomNavigationBarType _effectiveType
  -bool _defaultShowUnselected
  -void _resetState()
  +void initState()
  -void _rebuild()
  +void dispose()
  -double _evaluateFlex()
  -void _pushCircle()
  +void didUpdateWidget()
  {static} -TextStyle _effectiveTextStyle()
  {static} -IconThemeData _effectiveIconTheme()
  -List<Widget> _createTiles()
  +Widget build()
}

"material::bottom_navigation_bar::_BottomNavigationBarState" o-- "dart::collection::Queue<_Circle>"
"material::bottom_navigation_bar::_BottomNavigationBarState" o-- "dart::ui::Color"
"material::bottom_navigation_bar::_BottomNavigationBarState" o-- "animation::tween::Animatable<double>"
"material::bottom_navigation_bar::_BottomNavigationBarState" o-- "material::bottom_navigation_bar::BottomNavigationBarType"
"widgets::framework::State" <|-- "material::bottom_navigation_bar::_BottomNavigationBarState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "material::bottom_navigation_bar::_BottomNavigationBarState"

class "material::bottom_navigation_bar::_Bar" {
  +Widget child
  +BottomNavigationBarLandscapeLayout layout
  +double elevation
  +Color? color
  +Widget build()
}

"material::bottom_navigation_bar::_Bar" o-- "widgets::framework::Widget"
"material::bottom_navigation_bar::_Bar" o-- "material::bottom_navigation_bar::BottomNavigationBarLandscapeLayout"
"material::bottom_navigation_bar::_Bar" o-- "dart::ui::Color"
"widgets::framework::StatelessWidget" <|-- "material::bottom_navigation_bar::_Bar"

class "material::bottom_navigation_bar::_Circle" {
  +_BottomNavigationBarState state
  +int index
  +Color color
  +AnimationController controller
  +CurvedAnimation animation
  +double horizontalLeadingOffset
  +void dispose()
}

"material::bottom_navigation_bar::_Circle" o-- "material::bottom_navigation_bar::_BottomNavigationBarState"
"material::bottom_navigation_bar::_Circle" o-- "dart::ui::Color"
"material::bottom_navigation_bar::_Circle" o-- "animation::animation_controller::AnimationController"
"material::bottom_navigation_bar::_Circle" o-- "animation::animations::CurvedAnimation"

class "material::bottom_navigation_bar::_RadialPainter" {
  +List<_Circle> circles
  +TextDirection textDirection
  {static} -double _maxRadius()
  +bool shouldRepaint()
  +void paint()
}

"material::bottom_navigation_bar::_RadialPainter" o-- "dart::ui::TextDirection"
"rendering::custom_paint::CustomPainter" <|-- "material::bottom_navigation_bar::_RadialPainter"

class "material::bottom_navigation_bar::BottomNavigationBarType" {
  +int index
  {static} +List<BottomNavigationBarType> values
  {static} +BottomNavigationBarType fixed
  {static} +BottomNavigationBarType shifting
}

"material::bottom_navigation_bar::BottomNavigationBarType" o-- "material::bottom_navigation_bar::BottomNavigationBarType"
"dart::core::Enum" <|-- "material::bottom_navigation_bar::BottomNavigationBarType"

class "material::bottom_navigation_bar::BottomNavigationBarLandscapeLayout" {
  +int index
  {static} +List<BottomNavigationBarLandscapeLayout> values
  {static} +BottomNavigationBarLandscapeLayout spread
  {static} +BottomNavigationBarLandscapeLayout centered
  {static} +BottomNavigationBarLandscapeLayout linear
}

"material::bottom_navigation_bar::BottomNavigationBarLandscapeLayout" o-- "material::bottom_navigation_bar::BottomNavigationBarLandscapeLayout"
"dart::core::Enum" <|-- "material::bottom_navigation_bar::BottomNavigationBarLandscapeLayout"

class "material::app::MaterialApp" {
  +GlobalKey<NavigatorState>? navigatorKey
  +GlobalKey<ScaffoldMessengerState>? scaffoldMessengerKey
  +Widget? home
  +Map<String, Widget Function(BuildContext)>? routes
  +String? initialRoute
  +Route<dynamic>? Function(RouteSettings)? onGenerateRoute
  +List<Route<dynamic>> Function(String)? onGenerateInitialRoutes
  +Route<dynamic>? Function(RouteSettings)? onUnknownRoute
  +bool Function(dynamic)? onNavigationNotification
  +List<NavigatorObserver>? navigatorObservers
  +RouteInformationProvider? routeInformationProvider
  +RouteInformationParser<Object>? routeInformationParser
  +RouterDelegate<Object>? routerDelegate
  +BackButtonDispatcher? backButtonDispatcher
  +RouterConfig<Object>? routerConfig
  +Widget Function(BuildContext, Widget?)? builder
  +String title
  +String Function(BuildContext)? onGenerateTitle
  +ThemeData? theme
  +ThemeData? darkTheme
  +ThemeData? highContrastTheme
  +ThemeData? highContrastDarkTheme
  +ThemeMode? themeMode
  +Duration themeAnimationDuration
  +Curve themeAnimationCurve
  +Color? color
  +Locale? locale
  +Iterable<LocalizationsDelegate<dynamic>>? localizationsDelegates
  +Locale? Function(List<Locale>?, Iterable<Locale>)? localeListResolutionCallback
  +Locale? Function(Locale?, Iterable<Locale>)? localeResolutionCallback
  +Iterable<Locale> supportedLocales
  +bool showPerformanceOverlay
  +bool checkerboardRasterCacheImages
  +bool checkerboardOffscreenLayers
  +bool showSemanticsDebugger
  +bool debugShowCheckedModeBanner
  +Map<ShortcutActivator, Intent>? shortcuts
  +Map<Type, Action<Intent>>? actions
  +String? restorationScopeId
  +ScrollBehavior? scrollBehavior
  +bool debugShowMaterialGrid
  +bool useInheritedMediaQuery
  +State<MaterialApp> createState()
  {static} +HeroController createMaterialHeroController()
}

"material::app::MaterialApp" o-- "widgets::framework::GlobalKey<NavigatorState>"
"material::app::MaterialApp" o-- "widgets::framework::GlobalKey<ScaffoldMessengerState>"
"material::app::MaterialApp" o-- "widgets::framework::Widget"
"material::app::MaterialApp" o-- "widgets::navigator::Route<dynamic> Function(RouteSettings)"
"material::app::MaterialApp" o-- "widgets::app::List<Route<dynamic>> Function(String)"
"material::app::MaterialApp" o-- "widgets::notification_listener::bool Function(dynamic)"
"material::app::MaterialApp" o-- "widgets::router::RouteInformationProvider"
"material::app::MaterialApp" o-- "widgets::router::RouteInformationParser<Object>"
"material::app::MaterialApp" o-- "widgets::router::RouterDelegate<Object>"
"material::app::MaterialApp" o-- "widgets::router::BackButtonDispatcher"
"material::app::MaterialApp" o-- "widgets::router::RouterConfig<Object>"
"material::app::MaterialApp" o-- "widgets::framework::Widget Function(BuildContext, Widget)"
"material::app::MaterialApp" o-- "widgets::app::String Function(BuildContext)"
"material::app::MaterialApp" o-- "material::theme_data::ThemeData"
"material::app::MaterialApp" o-- "material::app::ThemeMode"
"material::app::MaterialApp" o-- "animation::curves::Curve"
"material::app::MaterialApp" o-- "dart::ui::Color"
"material::app::MaterialApp" o-- "dart::ui::Locale"
"material::app::MaterialApp" o-- "widgets::app::Locale Function(List<Locale>, Iterable<Locale>)"
"material::app::MaterialApp" o-- "widgets::app::Locale Function(Locale, Iterable<Locale>)"
"material::app::MaterialApp" o-- "widgets::scroll_configuration::ScrollBehavior"
"widgets::framework::StatefulWidget" <|-- "material::app::MaterialApp"

class "material::app::MaterialScrollBehavior" {
  +TargetPlatform getPlatform()
  +Widget buildScrollbar()
  +Widget buildOverscrollIndicator()
}

"widgets::scroll_configuration::ScrollBehavior" <|-- "material::app::MaterialScrollBehavior"

class "material::app::_MaterialAppState" {
  -HeroController _heroController
  -bool _usesRouter
  -Iterable<LocalizationsDelegate<dynamic>> _localizationsDelegates
  +void initState()
  +void dispose()
  -Widget _inspectorSelectButtonBuilder()
  -ThemeData _themeBuilder()
  -Widget _materialBuilder()
  -Widget _buildWidgetApp()
  +Widget build()
}

"material::app::_MaterialAppState" o-- "widgets::heroes::HeroController"
"widgets::framework::State" <|-- "material::app::_MaterialAppState"

class "material::app::ThemeMode" {
  +int index
  {static} +List<ThemeMode> values
  {static} +ThemeMode system
  {static} +ThemeMode light
  {static} +ThemeMode dark
}

"material::app::ThemeMode" o-- "material::app::ThemeMode"
"dart::core::Enum" <|-- "material::app::ThemeMode"

class "material::search_bar_theme::SearchBarThemeData" {
  +MaterialStateProperty<double?>? elevation
  +MaterialStateProperty<Color?>? backgroundColor
  +MaterialStateProperty<Color?>? shadowColor
  +MaterialStateProperty<Color?>? surfaceTintColor
  +MaterialStateProperty<Color?>? overlayColor
  +MaterialStateProperty<BorderSide?>? side
  +MaterialStateProperty<OutlinedBorder?>? shape
  +MaterialStateProperty<EdgeInsetsGeometry?>? padding
  +MaterialStateProperty<TextStyle?>? textStyle
  +MaterialStateProperty<TextStyle?>? hintStyle
  +BoxConstraints? constraints
  +dynamic textCapitalization
  +int hashCode
  +SearchBarThemeData copyWith()
  {static} +SearchBarThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
  {static} -MaterialStateProperty<BorderSide?>? _lerpSides()
}

"material::search_bar_theme::SearchBarThemeData" o-- "material::material_state::MaterialStateProperty<double>"
"material::search_bar_theme::SearchBarThemeData" o-- "material::material_state::MaterialStateProperty<Color>"
"material::search_bar_theme::SearchBarThemeData" o-- "material::material_state::MaterialStateProperty<BorderSide>"
"material::search_bar_theme::SearchBarThemeData" o-- "material::material_state::MaterialStateProperty<OutlinedBorder>"
"material::search_bar_theme::SearchBarThemeData" o-- "material::material_state::MaterialStateProperty<EdgeInsetsGeometry>"
"material::search_bar_theme::SearchBarThemeData" o-- "material::material_state::MaterialStateProperty<TextStyle>"
"material::search_bar_theme::SearchBarThemeData" o-- "rendering::box::BoxConstraints"
"foundation::diagnostics::Diagnosticable" <|-- "material::search_bar_theme::SearchBarThemeData"

class "material::search_bar_theme::_LerpSides" {
  +MaterialStateProperty<BorderSide?>? a
  +MaterialStateProperty<BorderSide?>? b
  +double t
  +BorderSide? resolve()
}

"material::search_bar_theme::_LerpSides" o-- "material::material_state::MaterialStateProperty<BorderSide>"
"material::material_state::MaterialStateProperty" <|-- "material::search_bar_theme::_LerpSides"

class "material::search_bar_theme::SearchBarTheme" {
  +SearchBarThemeData data
  {static} +SearchBarThemeData of()
  +bool updateShouldNotify()
}

"material::search_bar_theme::SearchBarTheme" o-- "material::search_bar_theme::SearchBarThemeData"
"widgets::framework::InheritedWidget" <|-- "material::search_bar_theme::SearchBarTheme"

class "material::icons::PlatformAdaptiveIcons" {
  +IconData arrow_back
  +IconData arrow_back_outlined
  +IconData arrow_back_rounded
  +IconData arrow_back_sharp
  +IconData arrow_forward
  +IconData arrow_forward_outlined
  +IconData arrow_forward_rounded
  +IconData arrow_forward_sharp
  +IconData flip_camera
  +IconData flip_camera_outlined
  +IconData flip_camera_rounded
  +IconData flip_camera_sharp
  +IconData more
  +IconData more_outlined
  +IconData more_rounded
  +IconData more_sharp
  +IconData share
  +IconData share_outlined
  +IconData share_rounded
  +IconData share_sharp
  {static} -bool _isCupertino()
}

"material::icons::PlatformAdaptiveIcons" o-- "widgets::icon_data::IconData"
"material::icons::Icons" <|-- "material::icons::PlatformAdaptiveIcons"

abstract class "material::icons::Icons" {
  {static} +IconData ten_k
  {static} +IconData ten_k_sharp
  {static} +IconData ten_k_rounded
  {static} +IconData ten_k_outlined
  {static} +IconData ten_mp
  {static} +IconData ten_mp_sharp
  {static} +IconData ten_mp_rounded
  {static} +IconData ten_mp_outlined
  {static} +IconData eleven_mp
  {static} +IconData eleven_mp_sharp
  {static} +IconData eleven_mp_rounded
  {static} +IconData eleven_mp_outlined
  {static} +IconData onetwothree
  {static} +IconData onetwothree_sharp
  {static} +IconData onetwothree_rounded
  {static} +IconData onetwothree_outlined
  {static} +IconData twelve_mp
  {static} +IconData twelve_mp_sharp
  {static} +IconData twelve_mp_rounded
  {static} +IconData twelve_mp_outlined
  {static} +IconData thirteen_mp
  {static} +IconData thirteen_mp_sharp
  {static} +IconData thirteen_mp_rounded
  {static} +IconData thirteen_mp_outlined
  {static} +IconData fourteen_mp
  {static} +IconData fourteen_mp_sharp
  {static} +IconData fourteen_mp_rounded
  {static} +IconData fourteen_mp_outlined
  {static} +IconData fifteen_mp
  {static} +IconData fifteen_mp_sharp
  {static} +IconData fifteen_mp_rounded
  {static} +IconData fifteen_mp_outlined
  {static} +IconData sixteen_mp
  {static} +IconData sixteen_mp_sharp
  {static} +IconData sixteen_mp_rounded
  {static} +IconData sixteen_mp_outlined
  {static} +IconData seventeen_mp
  {static} +IconData seventeen_mp_sharp
  {static} +IconData seventeen_mp_rounded
  {static} +IconData seventeen_mp_outlined
  {static} +IconData eighteen_up_rating
  {static} +IconData eighteen_up_rating_sharp
  {static} +IconData eighteen_up_rating_rounded
  {static} +IconData eighteen_up_rating_outlined
  {static} +IconData eighteen_mp
  {static} +IconData eighteen_mp_sharp
  {static} +IconData eighteen_mp_rounded
  {static} +IconData eighteen_mp_outlined
  {static} +IconData nineteen_mp
  {static} +IconData nineteen_mp_sharp
  {static} +IconData nineteen_mp_rounded
  {static} +IconData nineteen_mp_outlined
  {static} +IconData one_k
  {static} +IconData one_k_sharp
  {static} +IconData one_k_rounded
  {static} +IconData one_k_outlined
  {static} +IconData one_k_plus
  {static} +IconData one_k_plus_sharp
  {static} +IconData one_k_plus_rounded
  {static} +IconData one_k_plus_outlined
  {static} +IconData one_x_mobiledata
  {static} +IconData one_x_mobiledata_sharp
  {static} +IconData one_x_mobiledata_rounded
  {static} +IconData one_x_mobiledata_outlined
  {static} +IconData twenty_mp
  {static} +IconData twenty_mp_sharp
  {static} +IconData twenty_mp_rounded
  {static} +IconData twenty_mp_outlined
  {static} +IconData twenty_one_mp
  {static} +IconData twenty_one_mp_sharp
  {static} +IconData twenty_one_mp_rounded
  {static} +IconData twenty_one_mp_outlined
  {static} +IconData twenty_two_mp
  {static} +IconData twenty_two_mp_sharp
  {static} +IconData twenty_two_mp_rounded
  {static} +IconData twenty_two_mp_outlined
  {static} +IconData twenty_three_mp
  {static} +IconData twenty_three_mp_sharp
  {static} +IconData twenty_three_mp_rounded
  {static} +IconData twenty_three_mp_outlined
  {static} +IconData twenty_four_mp
  {static} +IconData twenty_four_mp_sharp
  {static} +IconData twenty_four_mp_rounded
  {static} +IconData twenty_four_mp_outlined
  {static} +IconData two_k
  {static} +IconData two_k_sharp
  {static} +IconData two_k_rounded
  {static} +IconData two_k_outlined
  {static} +IconData two_k_plus
  {static} +IconData two_k_plus_sharp
  {static} +IconData two_k_plus_rounded
  {static} +IconData two_k_plus_outlined
  {static} +IconData two_mp
  {static} +IconData two_mp_sharp
  {static} +IconData two_mp_rounded
  {static} +IconData two_mp_outlined
  {static} +IconData thirty_fps
  {static} +IconData thirty_fps_sharp
  {static} +IconData thirty_fps_rounded
  {static} +IconData thirty_fps_outlined
  {static} +IconData thirty_fps_select
  {static} +IconData thirty_fps_select_sharp
  {static} +IconData thirty_fps_select_rounded
  {static} +IconData thirty_fps_select_outlined
  {static} +IconData threesixty
  {static} +IconData threesixty_sharp
  {static} +IconData threesixty_rounded
  {static} +IconData threesixty_outlined
  {static} +IconData threed_rotation
  {static} +IconData threed_rotation_sharp
  {static} +IconData threed_rotation_rounded
  {static} +IconData threed_rotation_outlined
  {static} +IconData three_g_mobiledata
  {static} +IconData three_g_mobiledata_sharp
  {static} +IconData three_g_mobiledata_rounded
  {static} +IconData three_g_mobiledata_outlined
  {static} +IconData three_k
  {static} +IconData three_k_sharp
  {static} +IconData three_k_rounded
  {static} +IconData three_k_outlined
  {static} +IconData three_k_plus
  {static} +IconData three_k_plus_sharp
  {static} +IconData three_k_plus_rounded
  {static} +IconData three_k_plus_outlined
  {static} +IconData three_mp
  {static} +IconData three_mp_sharp
  {static} +IconData three_mp_rounded
  {static} +IconData three_mp_outlined
  {static} +IconData three_p
  {static} +IconData three_p_sharp
  {static} +IconData three_p_rounded
  {static} +IconData three_p_outlined
  {static} +IconData four_g_mobiledata
  {static} +IconData four_g_mobiledata_sharp
  {static} +IconData four_g_mobiledata_rounded
  {static} +IconData four_g_mobiledata_outlined
  {static} +IconData four_g_plus_mobiledata
  {static} +IconData four_g_plus_mobiledata_sharp
  {static} +IconData four_g_plus_mobiledata_rounded
  {static} +IconData four_g_plus_mobiledata_outlined
  {static} +IconData four_k
  {static} +IconData four_k_sharp
  {static} +IconData four_k_rounded
  {static} +IconData four_k_outlined
  {static} +IconData four_k_plus
  {static} +IconData four_k_plus_sharp
  {static} +IconData four_k_plus_rounded
  {static} +IconData four_k_plus_outlined
  {static} +IconData four_mp
  {static} +IconData four_mp_sharp
  {static} +IconData four_mp_rounded
  {static} +IconData four_mp_outlined
  {static} +IconData five_g
  {static} +IconData five_g_sharp
  {static} +IconData five_g_rounded
  {static} +IconData five_g_outlined
  {static} +IconData five_k
  {static} +IconData five_k_sharp
  {static} +IconData five_k_rounded
  {static} +IconData five_k_outlined
  {static} +IconData five_k_plus
  {static} +IconData five_k_plus_sharp
  {static} +IconData five_k_plus_rounded
  {static} +IconData five_k_plus_outlined
  {static} +IconData five_mp
  {static} +IconData five_mp_sharp
  {static} +IconData five_mp_rounded
  {static} +IconData five_mp_outlined
  {static} +IconData sixty_fps
  {static} +IconData sixty_fps_sharp
  {static} +IconData sixty_fps_rounded
  {static} +IconData sixty_fps_outlined
  {static} +IconData sixty_fps_select
  {static} +IconData sixty_fps_select_sharp
  {static} +IconData sixty_fps_select_rounded
  {static} +IconData sixty_fps_select_outlined
  {static} +IconData six_ft_apart
  {static} +IconData six_ft_apart_sharp
  {static} +IconData six_ft_apart_rounded
  {static} +IconData six_ft_apart_outlined
  {static} +IconData six_k
  {static} +IconData six_k_sharp
  {static} +IconData six_k_rounded
  {static} +IconData six_k_outlined
  {static} +IconData six_k_plus
  {static} +IconData six_k_plus_sharp
  {static} +IconData six_k_plus_rounded
  {static} +IconData six_k_plus_outlined
  {static} +IconData six_mp
  {static} +IconData six_mp_sharp
  {static} +IconData six_mp_rounded
  {static} +IconData six_mp_outlined
  {static} +IconData seven_k
  {static} +IconData seven_k_sharp
  {static} +IconData seven_k_rounded
  {static} +IconData seven_k_outlined
  {static} +IconData seven_k_plus
  {static} +IconData seven_k_plus_sharp
  {static} +IconData seven_k_plus_rounded
  {static} +IconData seven_k_plus_outlined
  {static} +IconData seven_mp
  {static} +IconData seven_mp_sharp
  {static} +IconData seven_mp_rounded
  {static} +IconData seven_mp_outlined
  {static} +IconData eight_k
  {static} +IconData eight_k_sharp
  {static} +IconData eight_k_rounded
  {static} +IconData eight_k_outlined
  {static} +IconData eight_k_plus
  {static} +IconData eight_k_plus_sharp
  {static} +IconData eight_k_plus_rounded
  {static} +IconData eight_k_plus_outlined
  {static} +IconData eight_mp
  {static} +IconData eight_mp_sharp
  {static} +IconData eight_mp_rounded
  {static} +IconData eight_mp_outlined
  {static} +IconData nine_k
  {static} +IconData nine_k_sharp
  {static} +IconData nine_k_rounded
  {static} +IconData nine_k_outlined
  {static} +IconData nine_k_plus
  {static} +IconData nine_k_plus_sharp
  {static} +IconData nine_k_plus_rounded
  {static} +IconData nine_k_plus_outlined
  {static} +IconData nine_mp
  {static} +IconData nine_mp_sharp
  {static} +IconData nine_mp_rounded
  {static} +IconData nine_mp_outlined
  {static} +IconData abc
  {static} +IconData abc_sharp
  {static} +IconData abc_rounded
  {static} +IconData abc_outlined
  {static} +IconData ac_unit
  {static} +IconData ac_unit_sharp
  {static} +IconData ac_unit_rounded
  {static} +IconData ac_unit_outlined
  {static} +IconData access_alarm
  {static} +IconData access_alarm_sharp
  {static} +IconData access_alarm_rounded
  {static} +IconData access_alarm_outlined
  {static} +IconData access_alarms
  {static} +IconData access_alarms_sharp
  {static} +IconData access_alarms_rounded
  {static} +IconData access_alarms_outlined
  {static} +IconData access_time
  {static} +IconData access_time_sharp
  {static} +IconData access_time_rounded
  {static} +IconData access_time_outlined
  {static} +IconData access_time_filled
  {static} +IconData access_time_filled_sharp
  {static} +IconData access_time_filled_rounded
  {static} +IconData access_time_filled_outlined
  {static} +IconData accessibility
  {static} +IconData accessibility_sharp
  {static} +IconData accessibility_rounded
  {static} +IconData accessibility_outlined
  {static} +IconData accessibility_new
  {static} +IconData accessibility_new_sharp
  {static} +IconData accessibility_new_rounded
  {static} +IconData accessibility_new_outlined
  {static} +IconData accessible
  {static} +IconData accessible_sharp
  {static} +IconData accessible_rounded
  {static} +IconData accessible_outlined
  {static} +IconData accessible_forward
  {static} +IconData accessible_forward_sharp
  {static} +IconData accessible_forward_rounded
  {static} +IconData accessible_forward_outlined
  {static} +IconData account_balance
  {static} +IconData account_balance_sharp
  {static} +IconData account_balance_rounded
  {static} +IconData account_balance_outlined
  {static} +IconData account_balance_wallet
  {static} +IconData account_balance_wallet_sharp
  {static} +IconData account_balance_wallet_rounded
  {static} +IconData account_balance_wallet_outlined
  {static} +IconData account_box
  {static} +IconData account_box_sharp
  {static} +IconData account_box_rounded
  {static} +IconData account_box_outlined
  {static} +IconData account_circle
  {static} +IconData account_circle_sharp
  {static} +IconData account_circle_rounded
  {static} +IconData account_circle_outlined
  {static} +IconData account_tree
  {static} +IconData account_tree_sharp
  {static} +IconData account_tree_rounded
  {static} +IconData account_tree_outlined
  {static} +IconData ad_units
  {static} +IconData ad_units_sharp
  {static} +IconData ad_units_rounded
  {static} +IconData ad_units_outlined
  {static} +IconData adb
  {static} +IconData adb_sharp
  {static} +IconData adb_rounded
  {static} +IconData adb_outlined
  {static} +IconData add
  {static} +IconData add_sharp
  {static} +IconData add_rounded
  {static} +IconData add_outlined
  {static} +IconData add_a_photo
  {static} +IconData add_a_photo_sharp
  {static} +IconData add_a_photo_rounded
  {static} +IconData add_a_photo_outlined
  {static} +IconData add_alarm
  {static} +IconData add_alarm_sharp
  {static} +IconData add_alarm_rounded
  {static} +IconData add_alarm_outlined
  {static} +IconData add_alert
  {static} +IconData add_alert_sharp
  {static} +IconData add_alert_rounded
  {static} +IconData add_alert_outlined
  {static} +IconData add_box
  {static} +IconData add_box_sharp
  {static} +IconData add_box_rounded
  {static} +IconData add_box_outlined
  {static} +IconData add_business
  {static} +IconData add_business_sharp
  {static} +IconData add_business_rounded
  {static} +IconData add_business_outlined
  {static} +IconData add_call
  {static} +IconData add_card
  {static} +IconData add_card_sharp
  {static} +IconData add_card_rounded
  {static} +IconData add_card_outlined
  {static} +IconData add_chart
  {static} +IconData add_chart_sharp
  {static} +IconData add_chart_rounded
  {static} +IconData add_chart_outlined
  {static} +IconData add_circle
  {static} +IconData add_circle_sharp
  {static} +IconData add_circle_rounded
  {static} +IconData add_circle_outlined
  {static} +IconData add_circle_outline
  {static} +IconData add_circle_outline_sharp
  {static} +IconData add_circle_outline_rounded
  {static} +IconData add_circle_outline_outlined
  {static} +IconData add_comment
  {static} +IconData add_comment_sharp
  {static} +IconData add_comment_rounded
  {static} +IconData add_comment_outlined
  {static} +IconData add_home
  {static} +IconData add_home_sharp
  {static} +IconData add_home_rounded
  {static} +IconData add_home_outlined
  {static} +IconData add_home_work
  {static} +IconData add_home_work_sharp
  {static} +IconData add_home_work_rounded
  {static} +IconData add_home_work_outlined
  {static} +IconData add_ic_call
  {static} +IconData add_ic_call_sharp
  {static} +IconData add_ic_call_rounded
  {static} +IconData add_ic_call_outlined
  {static} +IconData add_link
  {static} +IconData add_link_sharp
  {static} +IconData add_link_rounded
  {static} +IconData add_link_outlined
  {static} +IconData add_location
  {static} +IconData add_location_sharp
  {static} +IconData add_location_rounded
  {static} +IconData add_location_outlined
  {static} +IconData add_location_alt
  {static} +IconData add_location_alt_sharp
  {static} +IconData add_location_alt_rounded
  {static} +IconData add_location_alt_outlined
  {static} +IconData add_moderator
  {static} +IconData add_moderator_sharp
  {static} +IconData add_moderator_rounded
  {static} +IconData add_moderator_outlined
  {static} +IconData add_photo_alternate
  {static} +IconData add_photo_alternate_sharp
  {static} +IconData add_photo_alternate_rounded
  {static} +IconData add_photo_alternate_outlined
  {static} +IconData add_reaction
  {static} +IconData add_reaction_sharp
  {static} +IconData add_reaction_rounded
  {static} +IconData add_reaction_outlined
  {static} +IconData add_road
  {static} +IconData add_road_sharp
  {static} +IconData add_road_rounded
  {static} +IconData add_road_outlined
  {static} +IconData add_shopping_cart
  {static} +IconData add_shopping_cart_sharp
  {static} +IconData add_shopping_cart_rounded
  {static} +IconData add_shopping_cart_outlined
  {static} +IconData add_task
  {static} +IconData add_task_sharp
  {static} +IconData add_task_rounded
  {static} +IconData add_task_outlined
  {static} +IconData add_to_drive
  {static} +IconData add_to_drive_sharp
  {static} +IconData add_to_drive_rounded
  {static} +IconData add_to_drive_outlined
  {static} +IconData add_to_home_screen
  {static} +IconData add_to_home_screen_sharp
  {static} +IconData add_to_home_screen_rounded
  {static} +IconData add_to_home_screen_outlined
  {static} +IconData add_to_photos
  {static} +IconData add_to_photos_sharp
  {static} +IconData add_to_photos_rounded
  {static} +IconData add_to_photos_outlined
  {static} +IconData add_to_queue
  {static} +IconData add_to_queue_sharp
  {static} +IconData add_to_queue_rounded
  {static} +IconData add_to_queue_outlined
  {static} +IconData addchart
  {static} +IconData addchart_sharp
  {static} +IconData addchart_rounded
  {static} +IconData addchart_outlined
  {static} +IconData adf_scanner
  {static} +IconData adf_scanner_sharp
  {static} +IconData adf_scanner_rounded
  {static} +IconData adf_scanner_outlined
  {static} +IconData adjust
  {static} +IconData adjust_sharp
  {static} +IconData adjust_rounded
  {static} +IconData adjust_outlined
  {static} +IconData admin_panel_settings
  {static} +IconData admin_panel_settings_sharp
  {static} +IconData admin_panel_settings_rounded
  {static} +IconData admin_panel_settings_outlined
  {static} +IconData adobe
  {static} +IconData adobe_sharp
  {static} +IconData adobe_rounded
  {static} +IconData adobe_outlined
  {static} +IconData ads_click
  {static} +IconData ads_click_sharp
  {static} +IconData ads_click_rounded
  {static} +IconData ads_click_outlined
  {static} +IconData agriculture
  {static} +IconData agriculture_sharp
  {static} +IconData agriculture_rounded
  {static} +IconData agriculture_outlined
  {static} +IconData air
  {static} +IconData air_sharp
  {static} +IconData air_rounded
  {static} +IconData air_outlined
  {static} +IconData airline_seat_flat
  {static} +IconData airline_seat_flat_sharp
  {static} +IconData airline_seat_flat_rounded
  {static} +IconData airline_seat_flat_outlined
  {static} +IconData airline_seat_flat_angled
  {static} +IconData airline_seat_flat_angled_sharp
  {static} +IconData airline_seat_flat_angled_rounded
  {static} +IconData airline_seat_flat_angled_outlined
  {static} +IconData airline_seat_individual_suite
  {static} +IconData airline_seat_individual_suite_sharp
  {static} +IconData airline_seat_individual_suite_rounded
  {static} +IconData airline_seat_individual_suite_outlined
  {static} +IconData airline_seat_legroom_extra
  {static} +IconData airline_seat_legroom_extra_sharp
  {static} +IconData airline_seat_legroom_extra_rounded
  {static} +IconData airline_seat_legroom_extra_outlined
  {static} +IconData airline_seat_legroom_normal
  {static} +IconData airline_seat_legroom_normal_sharp
  {static} +IconData airline_seat_legroom_normal_rounded
  {static} +IconData airline_seat_legroom_normal_outlined
  {static} +IconData airline_seat_legroom_reduced
  {static} +IconData airline_seat_legroom_reduced_sharp
  {static} +IconData airline_seat_legroom_reduced_rounded
  {static} +IconData airline_seat_legroom_reduced_outlined
  {static} +IconData airline_seat_recline_extra
  {static} +IconData airline_seat_recline_extra_sharp
  {static} +IconData airline_seat_recline_extra_rounded
  {static} +IconData airline_seat_recline_extra_outlined
  {static} +IconData airline_seat_recline_normal
  {static} +IconData airline_seat_recline_normal_sharp
  {static} +IconData airline_seat_recline_normal_rounded
  {static} +IconData airline_seat_recline_normal_outlined
  {static} +IconData airline_stops
  {static} +IconData airline_stops_sharp
  {static} +IconData airline_stops_rounded
  {static} +IconData airline_stops_outlined
  {static} +IconData airlines
  {static} +IconData airlines_sharp
  {static} +IconData airlines_rounded
  {static} +IconData airlines_outlined
  {static} +IconData airplane_ticket
  {static} +IconData airplane_ticket_sharp
  {static} +IconData airplane_ticket_rounded
  {static} +IconData airplane_ticket_outlined
  {static} +IconData airplanemode_active
  {static} +IconData airplanemode_active_sharp
  {static} +IconData airplanemode_active_rounded
  {static} +IconData airplanemode_active_outlined
  {static} +IconData airplanemode_inactive
  {static} +IconData airplanemode_inactive_sharp
  {static} +IconData airplanemode_inactive_rounded
  {static} +IconData airplanemode_inactive_outlined
  {static} +IconData airplanemode_off
  {static} +IconData airplanemode_off_sharp
  {static} +IconData airplanemode_off_rounded
  {static} +IconData airplanemode_off_outlined
  {static} +IconData airplanemode_on
  {static} +IconData airplanemode_on_sharp
  {static} +IconData airplanemode_on_rounded
  {static} +IconData airplanemode_on_outlined
  {static} +IconData airplay
  {static} +IconData airplay_sharp
  {static} +IconData airplay_rounded
  {static} +IconData airplay_outlined
  {static} +IconData airport_shuttle
  {static} +IconData airport_shuttle_sharp
  {static} +IconData airport_shuttle_rounded
  {static} +IconData airport_shuttle_outlined
  {static} +IconData alarm
  {static} +IconData alarm_sharp
  {static} +IconData alarm_rounded
  {static} +IconData alarm_outlined
  {static} +IconData alarm_add
  {static} +IconData alarm_add_sharp
  {static} +IconData alarm_add_rounded
  {static} +IconData alarm_add_outlined
  {static} +IconData alarm_off
  {static} +IconData alarm_off_sharp
  {static} +IconData alarm_off_rounded
  {static} +IconData alarm_off_outlined
  {static} +IconData alarm_on
  {static} +IconData alarm_on_sharp
  {static} +IconData alarm_on_rounded
  {static} +IconData alarm_on_outlined
  {static} +IconData album
  {static} +IconData album_sharp
  {static} +IconData album_rounded
  {static} +IconData album_outlined
  {static} +IconData align_horizontal_center
  {static} +IconData align_horizontal_center_sharp
  {static} +IconData align_horizontal_center_rounded
  {static} +IconData align_horizontal_center_outlined
  {static} +IconData align_horizontal_left
  {static} +IconData align_horizontal_left_sharp
  {static} +IconData align_horizontal_left_rounded
  {static} +IconData align_horizontal_left_outlined
  {static} +IconData align_horizontal_right
  {static} +IconData align_horizontal_right_sharp
  {static} +IconData align_horizontal_right_rounded
  {static} +IconData align_horizontal_right_outlined
  {static} +IconData align_vertical_bottom
  {static} +IconData align_vertical_bottom_sharp
  {static} +IconData align_vertical_bottom_rounded
  {static} +IconData align_vertical_bottom_outlined
  {static} +IconData align_vertical_center
  {static} +IconData align_vertical_center_sharp
  {static} +IconData align_vertical_center_rounded
  {static} +IconData align_vertical_center_outlined
  {static} +IconData align_vertical_top
  {static} +IconData align_vertical_top_sharp
  {static} +IconData align_vertical_top_rounded
  {static} +IconData align_vertical_top_outlined
  {static} +IconData all_inbox
  {static} +IconData all_inbox_sharp
  {static} +IconData all_inbox_rounded
  {static} +IconData all_inbox_outlined
  {static} +IconData all_inclusive
  {static} +IconData all_inclusive_sharp
  {static} +IconData all_inclusive_rounded
  {static} +IconData all_inclusive_outlined
  {static} +IconData all_out
  {static} +IconData all_out_sharp
  {static} +IconData all_out_rounded
  {static} +IconData all_out_outlined
  {static} +IconData alt_route
  {static} +IconData alt_route_sharp
  {static} +IconData alt_route_rounded
  {static} +IconData alt_route_outlined
  {static} +IconData alternate_email
  {static} +IconData alternate_email_sharp
  {static} +IconData alternate_email_rounded
  {static} +IconData alternate_email_outlined
  {static} +IconData amp_stories
  {static} +IconData amp_stories_sharp
  {static} +IconData amp_stories_rounded
  {static} +IconData amp_stories_outlined
  {static} +IconData analytics
  {static} +IconData analytics_sharp
  {static} +IconData analytics_rounded
  {static} +IconData analytics_outlined
  {static} +IconData anchor
  {static} +IconData anchor_sharp
  {static} +IconData anchor_rounded
  {static} +IconData anchor_outlined
  {static} +IconData android
  {static} +IconData android_sharp
  {static} +IconData android_rounded
  {static} +IconData android_outlined
  {static} +IconData animation
  {static} +IconData animation_sharp
  {static} +IconData animation_rounded
  {static} +IconData animation_outlined
  {static} +IconData announcement
  {static} +IconData announcement_sharp
  {static} +IconData announcement_rounded
  {static} +IconData announcement_outlined
  {static} +IconData aod
  {static} +IconData aod_sharp
  {static} +IconData aod_rounded
  {static} +IconData aod_outlined
  {static} +IconData apartment
  {static} +IconData apartment_sharp
  {static} +IconData apartment_rounded
  {static} +IconData apartment_outlined
  {static} +IconData api
  {static} +IconData api_sharp
  {static} +IconData api_rounded
  {static} +IconData api_outlined
  {static} +IconData app_blocking
  {static} +IconData app_blocking_sharp
  {static} +IconData app_blocking_rounded
  {static} +IconData app_blocking_outlined
  {static} +IconData app_registration
  {static} +IconData app_registration_sharp
  {static} +IconData app_registration_rounded
  {static} +IconData app_registration_outlined
  {static} +IconData app_settings_alt
  {static} +IconData app_settings_alt_sharp
  {static} +IconData app_settings_alt_rounded
  {static} +IconData app_settings_alt_outlined
  {static} +IconData app_shortcut
  {static} +IconData app_shortcut_sharp
  {static} +IconData app_shortcut_rounded
  {static} +IconData app_shortcut_outlined
  {static} +IconData apple
  {static} +IconData apple_sharp
  {static} +IconData apple_rounded
  {static} +IconData apple_outlined
  {static} +IconData approval
  {static} +IconData approval_sharp
  {static} +IconData approval_rounded
  {static} +IconData approval_outlined
  {static} +IconData apps
  {static} +IconData apps_sharp
  {static} +IconData apps_rounded
  {static} +IconData apps_outlined
  {static} +IconData apps_outage
  {static} +IconData apps_outage_sharp
  {static} +IconData apps_outage_rounded
  {static} +IconData apps_outage_outlined
  {static} +IconData architecture
  {static} +IconData architecture_sharp
  {static} +IconData architecture_rounded
  {static} +IconData architecture_outlined
  {static} +IconData archive
  {static} +IconData archive_sharp
  {static} +IconData archive_rounded
  {static} +IconData archive_outlined
  {static} +IconData area_chart
  {static} +IconData area_chart_sharp
  {static} +IconData area_chart_rounded
  {static} +IconData area_chart_outlined
  {static} +IconData arrow_back
  {static} +IconData arrow_back_sharp
  {static} +IconData arrow_back_rounded
  {static} +IconData arrow_back_outlined
  {static} +IconData arrow_back_ios
  {static} +IconData arrow_back_ios_sharp
  {static} +IconData arrow_back_ios_rounded
  {static} +IconData arrow_back_ios_outlined
  {static} +IconData arrow_back_ios_new
  {static} +IconData arrow_back_ios_new_sharp
  {static} +IconData arrow_back_ios_new_rounded
  {static} +IconData arrow_back_ios_new_outlined
  {static} +IconData arrow_circle_down
  {static} +IconData arrow_circle_down_sharp
  {static} +IconData arrow_circle_down_rounded
  {static} +IconData arrow_circle_down_outlined
  {static} +IconData arrow_circle_left
  {static} +IconData arrow_circle_left_sharp
  {static} +IconData arrow_circle_left_rounded
  {static} +IconData arrow_circle_left_outlined
  {static} +IconData arrow_circle_right
  {static} +IconData arrow_circle_right_sharp
  {static} +IconData arrow_circle_right_rounded
  {static} +IconData arrow_circle_right_outlined
  {static} +IconData arrow_circle_up
  {static} +IconData arrow_circle_up_sharp
  {static} +IconData arrow_circle_up_rounded
  {static} +IconData arrow_circle_up_outlined
  {static} +IconData arrow_downward
  {static} +IconData arrow_downward_sharp
  {static} +IconData arrow_downward_rounded
  {static} +IconData arrow_downward_outlined
  {static} +IconData arrow_drop_down
  {static} +IconData arrow_drop_down_sharp
  {static} +IconData arrow_drop_down_rounded
  {static} +IconData arrow_drop_down_outlined
  {static} +IconData arrow_drop_down_circle
  {static} +IconData arrow_drop_down_circle_sharp
  {static} +IconData arrow_drop_down_circle_rounded
  {static} +IconData arrow_drop_down_circle_outlined
  {static} +IconData arrow_drop_up
  {static} +IconData arrow_drop_up_sharp
  {static} +IconData arrow_drop_up_rounded
  {static} +IconData arrow_drop_up_outlined
  {static} +IconData arrow_forward
  {static} +IconData arrow_forward_sharp
  {static} +IconData arrow_forward_rounded
  {static} +IconData arrow_forward_outlined
  {static} +IconData arrow_forward_ios
  {static} +IconData arrow_forward_ios_sharp
  {static} +IconData arrow_forward_ios_rounded
  {static} +IconData arrow_forward_ios_outlined
  {static} +IconData arrow_left
  {static} +IconData arrow_left_sharp
  {static} +IconData arrow_left_rounded
  {static} +IconData arrow_left_outlined
  {static} +IconData arrow_outward
  {static} +IconData arrow_outward_sharp
  {static} +IconData arrow_outward_rounded
  {static} +IconData arrow_outward_outlined
  {static} +IconData arrow_right
  {static} +IconData arrow_right_sharp
  {static} +IconData arrow_right_rounded
  {static} +IconData arrow_right_outlined
  {static} +IconData arrow_right_alt
  {static} +IconData arrow_right_alt_sharp
  {static} +IconData arrow_right_alt_rounded
  {static} +IconData arrow_right_alt_outlined
  {static} +IconData arrow_upward
  {static} +IconData arrow_upward_sharp
  {static} +IconData arrow_upward_rounded
  {static} +IconData arrow_upward_outlined
  {static} +IconData art_track
  {static} +IconData art_track_sharp
  {static} +IconData art_track_rounded
  {static} +IconData art_track_outlined
  {static} +IconData article
  {static} +IconData article_sharp
  {static} +IconData article_rounded
  {static} +IconData article_outlined
  {static} +IconData aspect_ratio
  {static} +IconData aspect_ratio_sharp
  {static} +IconData aspect_ratio_rounded
  {static} +IconData aspect_ratio_outlined
  {static} +IconData assessment
  {static} +IconData assessment_sharp
  {static} +IconData assessment_rounded
  {static} +IconData assessment_outlined
  {static} +IconData assignment
  {static} +IconData assignment_sharp
  {static} +IconData assignment_rounded
  {static} +IconData assignment_outlined
  {static} +IconData assignment_add
  {static} +IconData assignment_ind
  {static} +IconData assignment_ind_sharp
  {static} +IconData assignment_ind_rounded
  {static} +IconData assignment_ind_outlined
  {static} +IconData assignment_late
  {static} +IconData assignment_late_sharp
  {static} +IconData assignment_late_rounded
  {static} +IconData assignment_late_outlined
  {static} +IconData assignment_return
  {static} +IconData assignment_return_sharp
  {static} +IconData assignment_return_rounded
  {static} +IconData assignment_return_outlined
  {static} +IconData assignment_returned
  {static} +IconData assignment_returned_sharp
  {static} +IconData assignment_returned_rounded
  {static} +IconData assignment_returned_outlined
  {static} +IconData assignment_turned_in
  {static} +IconData assignment_turned_in_sharp
  {static} +IconData assignment_turned_in_rounded
  {static} +IconData assignment_turned_in_outlined
  {static} +IconData assist_walker
  {static} +IconData assist_walker_sharp
  {static} +IconData assist_walker_rounded
  {static} +IconData assist_walker_outlined
  {static} +IconData assistant
  {static} +IconData assistant_sharp
  {static} +IconData assistant_rounded
  {static} +IconData assistant_outlined
  {static} +IconData assistant_direction
  {static} +IconData assistant_direction_sharp
  {static} +IconData assistant_direction_rounded
  {static} +IconData assistant_direction_outlined
  {static} +IconData assistant_navigation
  {static} +IconData assistant_photo
  {static} +IconData assistant_photo_sharp
  {static} +IconData assistant_photo_rounded
  {static} +IconData assistant_photo_outlined
  {static} +IconData assured_workload
  {static} +IconData assured_workload_sharp
  {static} +IconData assured_workload_rounded
  {static} +IconData assured_workload_outlined
  {static} +IconData atm
  {static} +IconData atm_sharp
  {static} +IconData atm_rounded
  {static} +IconData atm_outlined
  {static} +IconData attach_email
  {static} +IconData attach_email_sharp
  {static} +IconData attach_email_rounded
  {static} +IconData attach_email_outlined
  {static} +IconData attach_file
  {static} +IconData attach_file_sharp
  {static} +IconData attach_file_rounded
  {static} +IconData attach_file_outlined
  {static} +IconData attach_money
  {static} +IconData attach_money_sharp
  {static} +IconData attach_money_rounded
  {static} +IconData attach_money_outlined
  {static} +IconData attachment
  {static} +IconData attachment_sharp
  {static} +IconData attachment_rounded
  {static} +IconData attachment_outlined
  {static} +IconData attractions
  {static} +IconData attractions_sharp
  {static} +IconData attractions_rounded
  {static} +IconData attractions_outlined
  {static} +IconData attribution
  {static} +IconData attribution_sharp
  {static} +IconData attribution_rounded
  {static} +IconData attribution_outlined
  {static} +IconData audio_file
  {static} +IconData audio_file_sharp
  {static} +IconData audio_file_rounded
  {static} +IconData audio_file_outlined
  {static} +IconData audiotrack
  {static} +IconData audiotrack_sharp
  {static} +IconData audiotrack_rounded
  {static} +IconData audiotrack_outlined
  {static} +IconData auto_awesome
  {static} +IconData auto_awesome_sharp
  {static} +IconData auto_awesome_rounded
  {static} +IconData auto_awesome_outlined
  {static} +IconData auto_awesome_mosaic
  {static} +IconData auto_awesome_mosaic_sharp
  {static} +IconData auto_awesome_mosaic_rounded
  {static} +IconData auto_awesome_mosaic_outlined
  {static} +IconData auto_awesome_motion
  {static} +IconData auto_awesome_motion_sharp
  {static} +IconData auto_awesome_motion_rounded
  {static} +IconData auto_awesome_motion_outlined
  {static} +IconData auto_delete
  {static} +IconData auto_delete_sharp
  {static} +IconData auto_delete_rounded
  {static} +IconData auto_delete_outlined
  {static} +IconData auto_fix_high
  {static} +IconData auto_fix_high_sharp
  {static} +IconData auto_fix_high_rounded
  {static} +IconData auto_fix_high_outlined
  {static} +IconData auto_fix_normal
  {static} +IconData auto_fix_normal_sharp
  {static} +IconData auto_fix_normal_rounded
  {static} +IconData auto_fix_normal_outlined
  {static} +IconData auto_fix_off
  {static} +IconData auto_fix_off_sharp
  {static} +IconData auto_fix_off_rounded
  {static} +IconData auto_fix_off_outlined
  {static} +IconData auto_graph
  {static} +IconData auto_graph_sharp
  {static} +IconData auto_graph_rounded
  {static} +IconData auto_graph_outlined
  {static} +IconData auto_mode
  {static} +IconData auto_mode_sharp
  {static} +IconData auto_mode_rounded
  {static} +IconData auto_mode_outlined
  {static} +IconData auto_stories
  {static} +IconData auto_stories_sharp
  {static} +IconData auto_stories_rounded
  {static} +IconData auto_stories_outlined
  {static} +IconData autofps_select
  {static} +IconData autofps_select_sharp
  {static} +IconData autofps_select_rounded
  {static} +IconData autofps_select_outlined
  {static} +IconData autorenew
  {static} +IconData autorenew_sharp
  {static} +IconData autorenew_rounded
  {static} +IconData autorenew_outlined
  {static} +IconData av_timer
  {static} +IconData av_timer_sharp
  {static} +IconData av_timer_rounded
  {static} +IconData av_timer_outlined
  {static} +IconData baby_changing_station
  {static} +IconData baby_changing_station_sharp
  {static} +IconData baby_changing_station_rounded
  {static} +IconData baby_changing_station_outlined
  {static} +IconData back_hand
  {static} +IconData back_hand_sharp
  {static} +IconData back_hand_rounded
  {static} +IconData back_hand_outlined
  {static} +IconData backpack
  {static} +IconData backpack_sharp
  {static} +IconData backpack_rounded
  {static} +IconData backpack_outlined
  {static} +IconData backspace
  {static} +IconData backspace_sharp
  {static} +IconData backspace_rounded
  {static} +IconData backspace_outlined
  {static} +IconData backup
  {static} +IconData backup_sharp
  {static} +IconData backup_rounded
  {static} +IconData backup_outlined
  {static} +IconData backup_table
  {static} +IconData backup_table_sharp
  {static} +IconData backup_table_rounded
  {static} +IconData backup_table_outlined
  {static} +IconData badge
  {static} +IconData badge_sharp
  {static} +IconData badge_rounded
  {static} +IconData badge_outlined
  {static} +IconData bakery_dining
  {static} +IconData bakery_dining_sharp
  {static} +IconData bakery_dining_rounded
  {static} +IconData bakery_dining_outlined
  {static} +IconData balance
  {static} +IconData balance_sharp
  {static} +IconData balance_rounded
  {static} +IconData balance_outlined
  {static} +IconData balcony
  {static} +IconData balcony_sharp
  {static} +IconData balcony_rounded
  {static} +IconData balcony_outlined
  {static} +IconData ballot
  {static} +IconData ballot_sharp
  {static} +IconData ballot_rounded
  {static} +IconData ballot_outlined
  {static} +IconData bar_chart
  {static} +IconData bar_chart_sharp
  {static} +IconData bar_chart_rounded
  {static} +IconData bar_chart_outlined
  {static} +IconData barcode_reader
  {static} +IconData batch_prediction
  {static} +IconData batch_prediction_sharp
  {static} +IconData batch_prediction_rounded
  {static} +IconData batch_prediction_outlined
  {static} +IconData bathroom
  {static} +IconData bathroom_sharp
  {static} +IconData bathroom_rounded
  {static} +IconData bathroom_outlined
  {static} +IconData bathtub
  {static} +IconData bathtub_sharp
  {static} +IconData bathtub_rounded
  {static} +IconData bathtub_outlined
  {static} +IconData battery_0_bar
  {static} +IconData battery_0_bar_sharp
  {static} +IconData battery_0_bar_rounded
  {static} +IconData battery_0_bar_outlined
  {static} +IconData battery_1_bar
  {static} +IconData battery_1_bar_sharp
  {static} +IconData battery_1_bar_rounded
  {static} +IconData battery_1_bar_outlined
  {static} +IconData battery_2_bar
  {static} +IconData battery_2_bar_sharp
  {static} +IconData battery_2_bar_rounded
  {static} +IconData battery_2_bar_outlined
  {static} +IconData battery_3_bar
  {static} +IconData battery_3_bar_sharp
  {static} +IconData battery_3_bar_rounded
  {static} +IconData battery_3_bar_outlined
  {static} +IconData battery_4_bar
  {static} +IconData battery_4_bar_sharp
  {static} +IconData battery_4_bar_rounded
  {static} +IconData battery_4_bar_outlined
  {static} +IconData battery_5_bar
  {static} +IconData battery_5_bar_sharp
  {static} +IconData battery_5_bar_rounded
  {static} +IconData battery_5_bar_outlined
  {static} +IconData battery_6_bar
  {static} +IconData battery_6_bar_sharp
  {static} +IconData battery_6_bar_rounded
  {static} +IconData battery_6_bar_outlined
  {static} +IconData battery_alert
  {static} +IconData battery_alert_sharp
  {static} +IconData battery_alert_rounded
  {static} +IconData battery_alert_outlined
  {static} +IconData battery_charging_full
  {static} +IconData battery_charging_full_sharp
  {static} +IconData battery_charging_full_rounded
  {static} +IconData battery_charging_full_outlined
  {static} +IconData battery_full
  {static} +IconData battery_full_sharp
  {static} +IconData battery_full_rounded
  {static} +IconData battery_full_outlined
  {static} +IconData battery_saver
  {static} +IconData battery_saver_sharp
  {static} +IconData battery_saver_rounded
  {static} +IconData battery_saver_outlined
  {static} +IconData battery_std
  {static} +IconData battery_std_sharp
  {static} +IconData battery_std_rounded
  {static} +IconData battery_std_outlined
  {static} +IconData battery_unknown
  {static} +IconData battery_unknown_sharp
  {static} +IconData battery_unknown_rounded
  {static} +IconData battery_unknown_outlined
  {static} +IconData beach_access
  {static} +IconData beach_access_sharp
  {static} +IconData beach_access_rounded
  {static} +IconData beach_access_outlined
  {static} +IconData bed
  {static} +IconData bed_sharp
  {static} +IconData bed_rounded
  {static} +IconData bed_outlined
  {static} +IconData bedroom_baby
  {static} +IconData bedroom_baby_sharp
  {static} +IconData bedroom_baby_rounded
  {static} +IconData bedroom_baby_outlined
  {static} +IconData bedroom_child
  {static} +IconData bedroom_child_sharp
  {static} +IconData bedroom_child_rounded
  {static} +IconData bedroom_child_outlined
  {static} +IconData bedroom_parent
  {static} +IconData bedroom_parent_sharp
  {static} +IconData bedroom_parent_rounded
  {static} +IconData bedroom_parent_outlined
  {static} +IconData bedtime
  {static} +IconData bedtime_sharp
  {static} +IconData bedtime_rounded
  {static} +IconData bedtime_outlined
  {static} +IconData bedtime_off
  {static} +IconData bedtime_off_sharp
  {static} +IconData bedtime_off_rounded
  {static} +IconData bedtime_off_outlined
  {static} +IconData beenhere
  {static} +IconData beenhere_sharp
  {static} +IconData beenhere_rounded
  {static} +IconData beenhere_outlined
  {static} +IconData bento
  {static} +IconData bento_sharp
  {static} +IconData bento_rounded
  {static} +IconData bento_outlined
  {static} +IconData bike_scooter
  {static} +IconData bike_scooter_sharp
  {static} +IconData bike_scooter_rounded
  {static} +IconData bike_scooter_outlined
  {static} +IconData biotech
  {static} +IconData biotech_sharp
  {static} +IconData biotech_rounded
  {static} +IconData biotech_outlined
  {static} +IconData blender
  {static} +IconData blender_sharp
  {static} +IconData blender_rounded
  {static} +IconData blender_outlined
  {static} +IconData blind
  {static} +IconData blind_sharp
  {static} +IconData blind_rounded
  {static} +IconData blind_outlined
  {static} +IconData blinds
  {static} +IconData blinds_sharp
  {static} +IconData blinds_rounded
  {static} +IconData blinds_outlined
  {static} +IconData blinds_closed
  {static} +IconData blinds_closed_sharp
  {static} +IconData blinds_closed_rounded
  {static} +IconData blinds_closed_outlined
  {static} +IconData block
  {static} +IconData block_sharp
  {static} +IconData block_rounded
  {static} +IconData block_outlined
  {static} +IconData block_flipped
  {static} +IconData bloodtype
  {static} +IconData bloodtype_sharp
  {static} +IconData bloodtype_rounded
  {static} +IconData bloodtype_outlined
  {static} +IconData bluetooth
  {static} +IconData bluetooth_sharp
  {static} +IconData bluetooth_rounded
  {static} +IconData bluetooth_outlined
  {static} +IconData bluetooth_audio
  {static} +IconData bluetooth_audio_sharp
  {static} +IconData bluetooth_audio_rounded
  {static} +IconData bluetooth_audio_outlined
  {static} +IconData bluetooth_connected
  {static} +IconData bluetooth_connected_sharp
  {static} +IconData bluetooth_connected_rounded
  {static} +IconData bluetooth_connected_outlined
  {static} +IconData bluetooth_disabled
  {static} +IconData bluetooth_disabled_sharp
  {static} +IconData bluetooth_disabled_rounded
  {static} +IconData bluetooth_disabled_outlined
  {static} +IconData bluetooth_drive
  {static} +IconData bluetooth_drive_sharp
  {static} +IconData bluetooth_drive_rounded
  {static} +IconData bluetooth_drive_outlined
  {static} +IconData bluetooth_searching
  {static} +IconData bluetooth_searching_sharp
  {static} +IconData bluetooth_searching_rounded
  {static} +IconData bluetooth_searching_outlined
  {static} +IconData blur_circular
  {static} +IconData blur_circular_sharp
  {static} +IconData blur_circular_rounded
  {static} +IconData blur_circular_outlined
  {static} +IconData blur_linear
  {static} +IconData blur_linear_sharp
  {static} +IconData blur_linear_rounded
  {static} +IconData blur_linear_outlined
  {static} +IconData blur_off
  {static} +IconData blur_off_sharp
  {static} +IconData blur_off_rounded
  {static} +IconData blur_off_outlined
  {static} +IconData blur_on
  {static} +IconData blur_on_sharp
  {static} +IconData blur_on_rounded
  {static} +IconData blur_on_outlined
  {static} +IconData bolt
  {static} +IconData bolt_sharp
  {static} +IconData bolt_rounded
  {static} +IconData bolt_outlined
  {static} +IconData book
  {static} +IconData book_sharp
  {static} +IconData book_rounded
  {static} +IconData book_outlined
  {static} +IconData book_online
  {static} +IconData book_online_sharp
  {static} +IconData book_online_rounded
  {static} +IconData book_online_outlined
  {static} +IconData bookmark
  {static} +IconData bookmark_sharp
  {static} +IconData bookmark_rounded
  {static} +IconData bookmark_outlined
  {static} +IconData bookmark_add
  {static} +IconData bookmark_add_sharp
  {static} +IconData bookmark_add_rounded
  {static} +IconData bookmark_add_outlined
  {static} +IconData bookmark_added
  {static} +IconData bookmark_added_sharp
  {static} +IconData bookmark_added_rounded
  {static} +IconData bookmark_added_outlined
  {static} +IconData bookmark_border
  {static} +IconData bookmark_border_sharp
  {static} +IconData bookmark_border_rounded
  {static} +IconData bookmark_border_outlined
  {static} +IconData bookmark_outline
  {static} +IconData bookmark_outline_sharp
  {static} +IconData bookmark_outline_rounded
  {static} +IconData bookmark_outline_outlined
  {static} +IconData bookmark_remove
  {static} +IconData bookmark_remove_sharp
  {static} +IconData bookmark_remove_rounded
  {static} +IconData bookmark_remove_outlined
  {static} +IconData bookmarks
  {static} +IconData bookmarks_sharp
  {static} +IconData bookmarks_rounded
  {static} +IconData bookmarks_outlined
  {static} +IconData border_all
  {static} +IconData border_all_sharp
  {static} +IconData border_all_rounded
  {static} +IconData border_all_outlined
  {static} +IconData border_bottom
  {static} +IconData border_bottom_sharp
  {static} +IconData border_bottom_rounded
  {static} +IconData border_bottom_outlined
  {static} +IconData border_clear
  {static} +IconData border_clear_sharp
  {static} +IconData border_clear_rounded
  {static} +IconData border_clear_outlined
  {static} +IconData border_color
  {static} +IconData border_color_sharp
  {static} +IconData border_color_rounded
  {static} +IconData border_color_outlined
  {static} +IconData border_horizontal
  {static} +IconData border_horizontal_sharp
  {static} +IconData border_horizontal_rounded
  {static} +IconData border_horizontal_outlined
  {static} +IconData border_inner
  {static} +IconData border_inner_sharp
  {static} +IconData border_inner_rounded
  {static} +IconData border_inner_outlined
  {static} +IconData border_left
  {static} +IconData border_left_sharp
  {static} +IconData border_left_rounded
  {static} +IconData border_left_outlined
  {static} +IconData border_outer
  {static} +IconData border_outer_sharp
  {static} +IconData border_outer_rounded
  {static} +IconData border_outer_outlined
  {static} +IconData border_right
  {static} +IconData border_right_sharp
  {static} +IconData border_right_rounded
  {static} +IconData border_right_outlined
  {static} +IconData border_style
  {static} +IconData border_style_sharp
  {static} +IconData border_style_rounded
  {static} +IconData border_style_outlined
  {static} +IconData border_top
  {static} +IconData border_top_sharp
  {static} +IconData border_top_rounded
  {static} +IconData border_top_outlined
  {static} +IconData border_vertical
  {static} +IconData border_vertical_sharp
  {static} +IconData border_vertical_rounded
  {static} +IconData border_vertical_outlined
  {static} +IconData boy
  {static} +IconData boy_sharp
  {static} +IconData boy_rounded
  {static} +IconData boy_outlined
  {static} +IconData branding_watermark
  {static} +IconData branding_watermark_sharp
  {static} +IconData branding_watermark_rounded
  {static} +IconData branding_watermark_outlined
  {static} +IconData breakfast_dining
  {static} +IconData breakfast_dining_sharp
  {static} +IconData breakfast_dining_rounded
  {static} +IconData breakfast_dining_outlined
  {static} +IconData brightness_1
  {static} +IconData brightness_1_sharp
  {static} +IconData brightness_1_rounded
  {static} +IconData brightness_1_outlined
  {static} +IconData brightness_2
  {static} +IconData brightness_2_sharp
  {static} +IconData brightness_2_rounded
  {static} +IconData brightness_2_outlined
  {static} +IconData brightness_3
  {static} +IconData brightness_3_sharp
  {static} +IconData brightness_3_rounded
  {static} +IconData brightness_3_outlined
  {static} +IconData brightness_4
  {static} +IconData brightness_4_sharp
  {static} +IconData brightness_4_rounded
  {static} +IconData brightness_4_outlined
  {static} +IconData brightness_5
  {static} +IconData brightness_5_sharp
  {static} +IconData brightness_5_rounded
  {static} +IconData brightness_5_outlined
  {static} +IconData brightness_6
  {static} +IconData brightness_6_sharp
  {static} +IconData brightness_6_rounded
  {static} +IconData brightness_6_outlined
  {static} +IconData brightness_7
  {static} +IconData brightness_7_sharp
  {static} +IconData brightness_7_rounded
  {static} +IconData brightness_7_outlined
  {static} +IconData brightness_auto
  {static} +IconData brightness_auto_sharp
  {static} +IconData brightness_auto_rounded
  {static} +IconData brightness_auto_outlined
  {static} +IconData brightness_high
  {static} +IconData brightness_high_sharp
  {static} +IconData brightness_high_rounded
  {static} +IconData brightness_high_outlined
  {static} +IconData brightness_low
  {static} +IconData brightness_low_sharp
  {static} +IconData brightness_low_rounded
  {static} +IconData brightness_low_outlined
  {static} +IconData brightness_medium
  {static} +IconData brightness_medium_sharp
  {static} +IconData brightness_medium_rounded
  {static} +IconData brightness_medium_outlined
  {static} +IconData broadcast_on_home
  {static} +IconData broadcast_on_home_sharp
  {static} +IconData broadcast_on_home_rounded
  {static} +IconData broadcast_on_home_outlined
  {static} +IconData broadcast_on_personal
  {static} +IconData broadcast_on_personal_sharp
  {static} +IconData broadcast_on_personal_rounded
  {static} +IconData broadcast_on_personal_outlined
  {static} +IconData broken_image
  {static} +IconData broken_image_sharp
  {static} +IconData broken_image_rounded
  {static} +IconData broken_image_outlined
  {static} +IconData browse_gallery
  {static} +IconData browse_gallery_sharp
  {static} +IconData browse_gallery_rounded
  {static} +IconData browse_gallery_outlined
  {static} +IconData browser_not_supported
  {static} +IconData browser_not_supported_sharp
  {static} +IconData browser_not_supported_rounded
  {static} +IconData browser_not_supported_outlined
  {static} +IconData browser_updated
  {static} +IconData browser_updated_sharp
  {static} +IconData browser_updated_rounded
  {static} +IconData browser_updated_outlined
  {static} +IconData brunch_dining
  {static} +IconData brunch_dining_sharp
  {static} +IconData brunch_dining_rounded
  {static} +IconData brunch_dining_outlined
  {static} +IconData brush
  {static} +IconData brush_sharp
  {static} +IconData brush_rounded
  {static} +IconData brush_outlined
  {static} +IconData bubble_chart
  {static} +IconData bubble_chart_sharp
  {static} +IconData bubble_chart_rounded
  {static} +IconData bubble_chart_outlined
  {static} +IconData bug_report
  {static} +IconData bug_report_sharp
  {static} +IconData bug_report_rounded
  {static} +IconData bug_report_outlined
  {static} +IconData build
  {static} +IconData build_sharp
  {static} +IconData build_rounded
  {static} +IconData build_outlined
  {static} +IconData build_circle
  {static} +IconData build_circle_sharp
  {static} +IconData build_circle_rounded
  {static} +IconData build_circle_outlined
  {static} +IconData bungalow
  {static} +IconData bungalow_sharp
  {static} +IconData bungalow_rounded
  {static} +IconData bungalow_outlined
  {static} +IconData burst_mode
  {static} +IconData burst_mode_sharp
  {static} +IconData burst_mode_rounded
  {static} +IconData burst_mode_outlined
  {static} +IconData bus_alert
  {static} +IconData bus_alert_sharp
  {static} +IconData bus_alert_rounded
  {static} +IconData bus_alert_outlined
  {static} +IconData business
  {static} +IconData business_sharp
  {static} +IconData business_rounded
  {static} +IconData business_outlined
  {static} +IconData business_center
  {static} +IconData business_center_sharp
  {static} +IconData business_center_rounded
  {static} +IconData business_center_outlined
  {static} +IconData cabin
  {static} +IconData cabin_sharp
  {static} +IconData cabin_rounded
  {static} +IconData cabin_outlined
  {static} +IconData cable
  {static} +IconData cable_sharp
  {static} +IconData cable_rounded
  {static} +IconData cable_outlined
  {static} +IconData cached
  {static} +IconData cached_sharp
  {static} +IconData cached_rounded
  {static} +IconData cached_outlined
  {static} +IconData cake
  {static} +IconData cake_sharp
  {static} +IconData cake_rounded
  {static} +IconData cake_outlined
  {static} +IconData calculate
  {static} +IconData calculate_sharp
  {static} +IconData calculate_rounded
  {static} +IconData calculate_outlined
  {static} +IconData calendar_month
  {static} +IconData calendar_month_sharp
  {static} +IconData calendar_month_rounded
  {static} +IconData calendar_month_outlined
  {static} +IconData calendar_today
  {static} +IconData calendar_today_sharp
  {static} +IconData calendar_today_rounded
  {static} +IconData calendar_today_outlined
  {static} +IconData calendar_view_day
  {static} +IconData calendar_view_day_sharp
  {static} +IconData calendar_view_day_rounded
  {static} +IconData calendar_view_day_outlined
  {static} +IconData calendar_view_month
  {static} +IconData calendar_view_month_sharp
  {static} +IconData calendar_view_month_rounded
  {static} +IconData calendar_view_month_outlined
  {static} +IconData calendar_view_week
  {static} +IconData calendar_view_week_sharp
  {static} +IconData calendar_view_week_rounded
  {static} +IconData calendar_view_week_outlined
  {static} +IconData call
  {static} +IconData call_sharp
  {static} +IconData call_rounded
  {static} +IconData call_outlined
  {static} +IconData call_end
  {static} +IconData call_end_sharp
  {static} +IconData call_end_rounded
  {static} +IconData call_end_outlined
  {static} +IconData call_made
  {static} +IconData call_made_sharp
  {static} +IconData call_made_rounded
  {static} +IconData call_made_outlined
  {static} +IconData call_merge
  {static} +IconData call_merge_sharp
  {static} +IconData call_merge_rounded
  {static} +IconData call_merge_outlined
  {static} +IconData call_missed
  {static} +IconData call_missed_sharp
  {static} +IconData call_missed_rounded
  {static} +IconData call_missed_outlined
  {static} +IconData call_missed_outgoing
  {static} +IconData call_missed_outgoing_sharp
  {static} +IconData call_missed_outgoing_rounded
  {static} +IconData call_missed_outgoing_outlined
  {static} +IconData call_received
  {static} +IconData call_received_sharp
  {static} +IconData call_received_rounded
  {static} +IconData call_received_outlined
  {static} +IconData call_split
  {static} +IconData call_split_sharp
  {static} +IconData call_split_rounded
  {static} +IconData call_split_outlined
  {static} +IconData call_to_action
  {static} +IconData call_to_action_sharp
  {static} +IconData call_to_action_rounded
  {static} +IconData call_to_action_outlined
  {static} +IconData camera
  {static} +IconData camera_sharp
  {static} +IconData camera_rounded
  {static} +IconData camera_outlined
  {static} +IconData camera_alt
  {static} +IconData camera_alt_sharp
  {static} +IconData camera_alt_rounded
  {static} +IconData camera_alt_outlined
  {static} +IconData camera_enhance
  {static} +IconData camera_enhance_sharp
  {static} +IconData camera_enhance_rounded
  {static} +IconData camera_enhance_outlined
  {static} +IconData camera_front
  {static} +IconData camera_front_sharp
  {static} +IconData camera_front_rounded
  {static} +IconData camera_front_outlined
  {static} +IconData camera_indoor
  {static} +IconData camera_indoor_sharp
  {static} +IconData camera_indoor_rounded
  {static} +IconData camera_indoor_outlined
  {static} +IconData camera_outdoor
  {static} +IconData camera_outdoor_sharp
  {static} +IconData camera_outdoor_rounded
  {static} +IconData camera_outdoor_outlined
  {static} +IconData camera_rear
  {static} +IconData camera_rear_sharp
  {static} +IconData camera_rear_rounded
  {static} +IconData camera_rear_outlined
  {static} +IconData camera_roll
  {static} +IconData camera_roll_sharp
  {static} +IconData camera_roll_rounded
  {static} +IconData camera_roll_outlined
  {static} +IconData cameraswitch
  {static} +IconData cameraswitch_sharp
  {static} +IconData cameraswitch_rounded
  {static} +IconData cameraswitch_outlined
  {static} +IconData campaign
  {static} +IconData campaign_sharp
  {static} +IconData campaign_rounded
  {static} +IconData campaign_outlined
  {static} +IconData cancel
  {static} +IconData cancel_sharp
  {static} +IconData cancel_rounded
  {static} +IconData cancel_outlined
  {static} +IconData cancel_presentation
  {static} +IconData cancel_presentation_sharp
  {static} +IconData cancel_presentation_rounded
  {static} +IconData cancel_presentation_outlined
  {static} +IconData cancel_schedule_send
  {static} +IconData cancel_schedule_send_sharp
  {static} +IconData cancel_schedule_send_rounded
  {static} +IconData cancel_schedule_send_outlined
  {static} +IconData candlestick_chart
  {static} +IconData candlestick_chart_sharp
  {static} +IconData candlestick_chart_rounded
  {static} +IconData candlestick_chart_outlined
  {static} +IconData car_crash
  {static} +IconData car_crash_sharp
  {static} +IconData car_crash_rounded
  {static} +IconData car_crash_outlined
  {static} +IconData car_rental
  {static} +IconData car_rental_sharp
  {static} +IconData car_rental_rounded
  {static} +IconData car_rental_outlined
  {static} +IconData car_repair
  {static} +IconData car_repair_sharp
  {static} +IconData car_repair_rounded
  {static} +IconData car_repair_outlined
  {static} +IconData card_giftcard
  {static} +IconData card_giftcard_sharp
  {static} +IconData card_giftcard_rounded
  {static} +IconData card_giftcard_outlined
  {static} +IconData card_membership
  {static} +IconData card_membership_sharp
  {static} +IconData card_membership_rounded
  {static} +IconData card_membership_outlined
  {static} +IconData card_travel
  {static} +IconData card_travel_sharp
  {static} +IconData card_travel_rounded
  {static} +IconData card_travel_outlined
  {static} +IconData carpenter
  {static} +IconData carpenter_sharp
  {static} +IconData carpenter_rounded
  {static} +IconData carpenter_outlined
  {static} +IconData cases
  {static} +IconData cases_sharp
  {static} +IconData cases_rounded
  {static} +IconData cases_outlined
  {static} +IconData casino
  {static} +IconData casino_sharp
  {static} +IconData casino_rounded
  {static} +IconData casino_outlined
  {static} +IconData cast
  {static} +IconData cast_sharp
  {static} +IconData cast_rounded
  {static} +IconData cast_outlined
  {static} +IconData cast_connected
  {static} +IconData cast_connected_sharp
  {static} +IconData cast_connected_rounded
  {static} +IconData cast_connected_outlined
  {static} +IconData cast_for_education
  {static} +IconData cast_for_education_sharp
  {static} +IconData cast_for_education_rounded
  {static} +IconData cast_for_education_outlined
  {static} +IconData castle
  {static} +IconData castle_sharp
  {static} +IconData castle_rounded
  {static} +IconData castle_outlined
  {static} +IconData catching_pokemon
  {static} +IconData catching_pokemon_sharp
  {static} +IconData catching_pokemon_rounded
  {static} +IconData catching_pokemon_outlined
  {static} +IconData category
  {static} +IconData category_sharp
  {static} +IconData category_rounded
  {static} +IconData category_outlined
  {static} +IconData celebration
  {static} +IconData celebration_sharp
  {static} +IconData celebration_rounded
  {static} +IconData celebration_outlined
  {static} +IconData cell_tower
  {static} +IconData cell_tower_sharp
  {static} +IconData cell_tower_rounded
  {static} +IconData cell_tower_outlined
  {static} +IconData cell_wifi
  {static} +IconData cell_wifi_sharp
  {static} +IconData cell_wifi_rounded
  {static} +IconData cell_wifi_outlined
  {static} +IconData center_focus_strong
  {static} +IconData center_focus_strong_sharp
  {static} +IconData center_focus_strong_rounded
  {static} +IconData center_focus_strong_outlined
  {static} +IconData center_focus_weak
  {static} +IconData center_focus_weak_sharp
  {static} +IconData center_focus_weak_rounded
  {static} +IconData center_focus_weak_outlined
  {static} +IconData chair
  {static} +IconData chair_sharp
  {static} +IconData chair_rounded
  {static} +IconData chair_outlined
  {static} +IconData chair_alt
  {static} +IconData chair_alt_sharp
  {static} +IconData chair_alt_rounded
  {static} +IconData chair_alt_outlined
  {static} +IconData chalet
  {static} +IconData chalet_sharp
  {static} +IconData chalet_rounded
  {static} +IconData chalet_outlined
  {static} +IconData change_circle
  {static} +IconData change_circle_sharp
  {static} +IconData change_circle_rounded
  {static} +IconData change_circle_outlined
  {static} +IconData change_history
  {static} +IconData change_history_sharp
  {static} +IconData change_history_rounded
  {static} +IconData change_history_outlined
  {static} +IconData charging_station
  {static} +IconData charging_station_sharp
  {static} +IconData charging_station_rounded
  {static} +IconData charging_station_outlined
  {static} +IconData chat
  {static} +IconData chat_sharp
  {static} +IconData chat_rounded
  {static} +IconData chat_outlined
  {static} +IconData chat_bubble
  {static} +IconData chat_bubble_sharp
  {static} +IconData chat_bubble_rounded
  {static} +IconData chat_bubble_outlined
  {static} +IconData chat_bubble_outline
  {static} +IconData chat_bubble_outline_sharp
  {static} +IconData chat_bubble_outline_rounded
  {static} +IconData chat_bubble_outline_outlined
  {static} +IconData check
  {static} +IconData check_sharp
  {static} +IconData check_rounded
  {static} +IconData check_outlined
  {static} +IconData check_box
  {static} +IconData check_box_sharp
  {static} +IconData check_box_rounded
  {static} +IconData check_box_outlined
  {static} +IconData check_box_outline_blank
  {static} +IconData check_box_outline_blank_sharp
  {static} +IconData check_box_outline_blank_rounded
  {static} +IconData check_box_outline_blank_outlined
  {static} +IconData check_circle
  {static} +IconData check_circle_sharp
  {static} +IconData check_circle_rounded
  {static} +IconData check_circle_outlined
  {static} +IconData check_circle_outline
  {static} +IconData check_circle_outline_sharp
  {static} +IconData check_circle_outline_rounded
  {static} +IconData check_circle_outline_outlined
  {static} +IconData checklist
  {static} +IconData checklist_sharp
  {static} +IconData checklist_rounded
  {static} +IconData checklist_outlined
  {static} +IconData checklist_rtl
  {static} +IconData checklist_rtl_sharp
  {static} +IconData checklist_rtl_rounded
  {static} +IconData checklist_rtl_outlined
  {static} +IconData checkroom
  {static} +IconData checkroom_sharp
  {static} +IconData checkroom_rounded
  {static} +IconData checkroom_outlined
  {static} +IconData chevron_left
  {static} +IconData chevron_left_sharp
  {static} +IconData chevron_left_rounded
  {static} +IconData chevron_left_outlined
  {static} +IconData chevron_right
  {static} +IconData chevron_right_sharp
  {static} +IconData chevron_right_rounded
  {static} +IconData chevron_right_outlined
  {static} +IconData child_care
  {static} +IconData child_care_sharp
  {static} +IconData child_care_rounded
  {static} +IconData child_care_outlined
  {static} +IconData child_friendly
  {static} +IconData child_friendly_sharp
  {static} +IconData child_friendly_rounded
  {static} +IconData child_friendly_outlined
  {static} +IconData chrome_reader_mode
  {static} +IconData chrome_reader_mode_sharp
  {static} +IconData chrome_reader_mode_rounded
  {static} +IconData chrome_reader_mode_outlined
  {static} +IconData church
  {static} +IconData church_sharp
  {static} +IconData church_rounded
  {static} +IconData church_outlined
  {static} +IconData circle
  {static} +IconData circle_sharp
  {static} +IconData circle_rounded
  {static} +IconData circle_outlined
  {static} +IconData circle_notifications
  {static} +IconData circle_notifications_sharp
  {static} +IconData circle_notifications_rounded
  {static} +IconData circle_notifications_outlined
  {static} +IconData class_
  {static} +IconData class_sharp
  {static} +IconData class_rounded
  {static} +IconData class_outlined
  {static} +IconData clean_hands
  {static} +IconData clean_hands_sharp
  {static} +IconData clean_hands_rounded
  {static} +IconData clean_hands_outlined
  {static} +IconData cleaning_services
  {static} +IconData cleaning_services_sharp
  {static} +IconData cleaning_services_rounded
  {static} +IconData cleaning_services_outlined
  {static} +IconData clear
  {static} +IconData clear_sharp
  {static} +IconData clear_rounded
  {static} +IconData clear_outlined
  {static} +IconData clear_all
  {static} +IconData clear_all_sharp
  {static} +IconData clear_all_rounded
  {static} +IconData clear_all_outlined
  {static} +IconData close
  {static} +IconData close_sharp
  {static} +IconData close_rounded
  {static} +IconData close_outlined
  {static} +IconData close_fullscreen
  {static} +IconData close_fullscreen_sharp
  {static} +IconData close_fullscreen_rounded
  {static} +IconData close_fullscreen_outlined
  {static} +IconData closed_caption
  {static} +IconData closed_caption_sharp
  {static} +IconData closed_caption_rounded
  {static} +IconData closed_caption_outlined
  {static} +IconData closed_caption_disabled
  {static} +IconData closed_caption_disabled_sharp
  {static} +IconData closed_caption_disabled_rounded
  {static} +IconData closed_caption_disabled_outlined
  {static} +IconData closed_caption_off
  {static} +IconData closed_caption_off_sharp
  {static} +IconData closed_caption_off_rounded
  {static} +IconData closed_caption_off_outlined
  {static} +IconData cloud
  {static} +IconData cloud_sharp
  {static} +IconData cloud_rounded
  {static} +IconData cloud_outlined
  {static} +IconData cloud_circle
  {static} +IconData cloud_circle_sharp
  {static} +IconData cloud_circle_rounded
  {static} +IconData cloud_circle_outlined
  {static} +IconData cloud_done
  {static} +IconData cloud_done_sharp
  {static} +IconData cloud_done_rounded
  {static} +IconData cloud_done_outlined
  {static} +IconData cloud_download
  {static} +IconData cloud_download_sharp
  {static} +IconData cloud_download_rounded
  {static} +IconData cloud_download_outlined
  {static} +IconData cloud_off
  {static} +IconData cloud_off_sharp
  {static} +IconData cloud_off_rounded
  {static} +IconData cloud_off_outlined
  {static} +IconData cloud_queue
  {static} +IconData cloud_queue_sharp
  {static} +IconData cloud_queue_rounded
  {static} +IconData cloud_queue_outlined
  {static} +IconData cloud_sync
  {static} +IconData cloud_sync_sharp
  {static} +IconData cloud_sync_rounded
  {static} +IconData cloud_sync_outlined
  {static} +IconData cloud_upload
  {static} +IconData cloud_upload_sharp
  {static} +IconData cloud_upload_rounded
  {static} +IconData cloud_upload_outlined
  {static} +IconData cloudy_snowing
  {static} +IconData co2
  {static} +IconData co2_sharp
  {static} +IconData co2_rounded
  {static} +IconData co2_outlined
  {static} +IconData co_present
  {static} +IconData co_present_sharp
  {static} +IconData co_present_rounded
  {static} +IconData co_present_outlined
  {static} +IconData code
  {static} +IconData code_sharp
  {static} +IconData code_rounded
  {static} +IconData code_outlined
  {static} +IconData code_off
  {static} +IconData code_off_sharp
  {static} +IconData code_off_rounded
  {static} +IconData code_off_outlined
  {static} +IconData coffee
  {static} +IconData coffee_sharp
  {static} +IconData coffee_rounded
  {static} +IconData coffee_outlined
  {static} +IconData coffee_maker
  {static} +IconData coffee_maker_sharp
  {static} +IconData coffee_maker_rounded
  {static} +IconData coffee_maker_outlined
  {static} +IconData collections
  {static} +IconData collections_sharp
  {static} +IconData collections_rounded
  {static} +IconData collections_outlined
  {static} +IconData collections_bookmark
  {static} +IconData collections_bookmark_sharp
  {static} +IconData collections_bookmark_rounded
  {static} +IconData collections_bookmark_outlined
  {static} +IconData color_lens
  {static} +IconData color_lens_sharp
  {static} +IconData color_lens_rounded
  {static} +IconData color_lens_outlined
  {static} +IconData colorize
  {static} +IconData colorize_sharp
  {static} +IconData colorize_rounded
  {static} +IconData colorize_outlined
  {static} +IconData comment
  {static} +IconData comment_sharp
  {static} +IconData comment_rounded
  {static} +IconData comment_outlined
  {static} +IconData comment_bank
  {static} +IconData comment_bank_sharp
  {static} +IconData comment_bank_rounded
  {static} +IconData comment_bank_outlined
  {static} +IconData comments_disabled
  {static} +IconData comments_disabled_sharp
  {static} +IconData comments_disabled_rounded
  {static} +IconData comments_disabled_outlined
  {static} +IconData commit
  {static} +IconData commit_sharp
  {static} +IconData commit_rounded
  {static} +IconData commit_outlined
  {static} +IconData commute
  {static} +IconData commute_sharp
  {static} +IconData commute_rounded
  {static} +IconData commute_outlined
  {static} +IconData compare
  {static} +IconData compare_sharp
  {static} +IconData compare_rounded
  {static} +IconData compare_outlined
  {static} +IconData compare_arrows
  {static} +IconData compare_arrows_sharp
  {static} +IconData compare_arrows_rounded
  {static} +IconData compare_arrows_outlined
  {static} +IconData compass_calibration
  {static} +IconData compass_calibration_sharp
  {static} +IconData compass_calibration_rounded
  {static} +IconData compass_calibration_outlined
  {static} +IconData compost
  {static} +IconData compost_sharp
  {static} +IconData compost_rounded
  {static} +IconData compost_outlined
  {static} +IconData compress
  {static} +IconData compress_sharp
  {static} +IconData compress_rounded
  {static} +IconData compress_outlined
  {static} +IconData computer
  {static} +IconData computer_sharp
  {static} +IconData computer_rounded
  {static} +IconData computer_outlined
  {static} +IconData confirmation_num
  {static} +IconData confirmation_num_sharp
  {static} +IconData confirmation_num_rounded
  {static} +IconData confirmation_num_outlined
  {static} +IconData confirmation_number
  {static} +IconData confirmation_number_sharp
  {static} +IconData confirmation_number_rounded
  {static} +IconData confirmation_number_outlined
  {static} +IconData connect_without_contact
  {static} +IconData connect_without_contact_sharp
  {static} +IconData connect_without_contact_rounded
  {static} +IconData connect_without_contact_outlined
  {static} +IconData connected_tv
  {static} +IconData connected_tv_sharp
  {static} +IconData connected_tv_rounded
  {static} +IconData connected_tv_outlined
  {static} +IconData connecting_airports
  {static} +IconData connecting_airports_sharp
  {static} +IconData connecting_airports_rounded
  {static} +IconData connecting_airports_outlined
  {static} +IconData construction
  {static} +IconData construction_sharp
  {static} +IconData construction_rounded
  {static} +IconData construction_outlined
  {static} +IconData contact_emergency
  {static} +IconData contact_emergency_sharp
  {static} +IconData contact_emergency_rounded
  {static} +IconData contact_emergency_outlined
  {static} +IconData contact_mail
  {static} +IconData contact_mail_sharp
  {static} +IconData contact_mail_rounded
  {static} +IconData contact_mail_outlined
  {static} +IconData contact_page
  {static} +IconData contact_page_sharp
  {static} +IconData contact_page_rounded
  {static} +IconData contact_page_outlined
  {static} +IconData contact_phone
  {static} +IconData contact_phone_sharp
  {static} +IconData contact_phone_rounded
  {static} +IconData contact_phone_outlined
  {static} +IconData contact_support
  {static} +IconData contact_support_sharp
  {static} +IconData contact_support_rounded
  {static} +IconData contact_support_outlined
  {static} +IconData contactless
  {static} +IconData contactless_sharp
  {static} +IconData contactless_rounded
  {static} +IconData contactless_outlined
  {static} +IconData contacts
  {static} +IconData contacts_sharp
  {static} +IconData contacts_rounded
  {static} +IconData contacts_outlined
  {static} +IconData content_copy
  {static} +IconData content_copy_sharp
  {static} +IconData content_copy_rounded
  {static} +IconData content_copy_outlined
  {static} +IconData content_cut
  {static} +IconData content_cut_sharp
  {static} +IconData content_cut_rounded
  {static} +IconData content_cut_outlined
  {static} +IconData content_paste
  {static} +IconData content_paste_sharp
  {static} +IconData content_paste_rounded
  {static} +IconData content_paste_outlined
  {static} +IconData content_paste_go
  {static} +IconData content_paste_go_sharp
  {static} +IconData content_paste_go_rounded
  {static} +IconData content_paste_go_outlined
  {static} +IconData content_paste_off
  {static} +IconData content_paste_off_sharp
  {static} +IconData content_paste_off_rounded
  {static} +IconData content_paste_off_outlined
  {static} +IconData content_paste_search
  {static} +IconData content_paste_search_sharp
  {static} +IconData content_paste_search_rounded
  {static} +IconData content_paste_search_outlined
  {static} +IconData contrast
  {static} +IconData contrast_sharp
  {static} +IconData contrast_rounded
  {static} +IconData contrast_outlined
  {static} +IconData control_camera
  {static} +IconData control_camera_sharp
  {static} +IconData control_camera_rounded
  {static} +IconData control_camera_outlined
  {static} +IconData control_point
  {static} +IconData control_point_sharp
  {static} +IconData control_point_rounded
  {static} +IconData control_point_outlined
  {static} +IconData control_point_duplicate
  {static} +IconData control_point_duplicate_sharp
  {static} +IconData control_point_duplicate_rounded
  {static} +IconData control_point_duplicate_outlined
  {static} +IconData conveyor_belt
  {static} +IconData cookie
  {static} +IconData cookie_sharp
  {static} +IconData cookie_rounded
  {static} +IconData cookie_outlined
  {static} +IconData copy
  {static} +IconData copy_sharp
  {static} +IconData copy_rounded
  {static} +IconData copy_outlined
  {static} +IconData copy_all
  {static} +IconData copy_all_sharp
  {static} +IconData copy_all_rounded
  {static} +IconData copy_all_outlined
  {static} +IconData copyright
  {static} +IconData copyright_sharp
  {static} +IconData copyright_rounded
  {static} +IconData copyright_outlined
  {static} +IconData coronavirus
  {static} +IconData coronavirus_sharp
  {static} +IconData coronavirus_rounded
  {static} +IconData coronavirus_outlined
  {static} +IconData corporate_fare
  {static} +IconData corporate_fare_sharp
  {static} +IconData corporate_fare_rounded
  {static} +IconData corporate_fare_outlined
  {static} +IconData cottage
  {static} +IconData cottage_sharp
  {static} +IconData cottage_rounded
  {static} +IconData cottage_outlined
  {static} +IconData countertops
  {static} +IconData countertops_sharp
  {static} +IconData countertops_rounded
  {static} +IconData countertops_outlined
  {static} +IconData create
  {static} +IconData create_sharp
  {static} +IconData create_rounded
  {static} +IconData create_outlined
  {static} +IconData create_new_folder
  {static} +IconData create_new_folder_sharp
  {static} +IconData create_new_folder_rounded
  {static} +IconData create_new_folder_outlined
  {static} +IconData credit_card
  {static} +IconData credit_card_sharp
  {static} +IconData credit_card_rounded
  {static} +IconData credit_card_outlined
  {static} +IconData credit_card_off
  {static} +IconData credit_card_off_sharp
  {static} +IconData credit_card_off_rounded
  {static} +IconData credit_card_off_outlined
  {static} +IconData credit_score
  {static} +IconData credit_score_sharp
  {static} +IconData credit_score_rounded
  {static} +IconData credit_score_outlined
  {static} +IconData crib
  {static} +IconData crib_sharp
  {static} +IconData crib_rounded
  {static} +IconData crib_outlined
  {static} +IconData crisis_alert
  {static} +IconData crisis_alert_sharp
  {static} +IconData crisis_alert_rounded
  {static} +IconData crisis_alert_outlined
  {static} +IconData crop
  {static} +IconData crop_sharp
  {static} +IconData crop_rounded
  {static} +IconData crop_outlined
  {static} +IconData crop_16_9
  {static} +IconData crop_16_9_sharp
  {static} +IconData crop_16_9_rounded
  {static} +IconData crop_16_9_outlined
  {static} +IconData crop_3_2
  {static} +IconData crop_3_2_sharp
  {static} +IconData crop_3_2_rounded
  {static} +IconData crop_3_2_outlined
  {static} +IconData crop_5_4
  {static} +IconData crop_5_4_sharp
  {static} +IconData crop_5_4_rounded
  {static} +IconData crop_5_4_outlined
  {static} +IconData crop_7_5
  {static} +IconData crop_7_5_sharp
  {static} +IconData crop_7_5_rounded
  {static} +IconData crop_7_5_outlined
  {static} +IconData crop_din
  {static} +IconData crop_din_sharp
  {static} +IconData crop_din_rounded
  {static} +IconData crop_din_outlined
  {static} +IconData crop_free
  {static} +IconData crop_free_sharp
  {static} +IconData crop_free_rounded
  {static} +IconData crop_free_outlined
  {static} +IconData crop_landscape
  {static} +IconData crop_landscape_sharp
  {static} +IconData crop_landscape_rounded
  {static} +IconData crop_landscape_outlined
  {static} +IconData crop_original
  {static} +IconData crop_original_sharp
  {static} +IconData crop_original_rounded
  {static} +IconData crop_original_outlined
  {static} +IconData crop_portrait
  {static} +IconData crop_portrait_sharp
  {static} +IconData crop_portrait_rounded
  {static} +IconData crop_portrait_outlined
  {static} +IconData crop_rotate
  {static} +IconData crop_rotate_sharp
  {static} +IconData crop_rotate_rounded
  {static} +IconData crop_rotate_outlined
  {static} +IconData crop_square
  {static} +IconData crop_square_sharp
  {static} +IconData crop_square_rounded
  {static} +IconData crop_square_outlined
  {static} +IconData cruelty_free
  {static} +IconData cruelty_free_sharp
  {static} +IconData cruelty_free_rounded
  {static} +IconData cruelty_free_outlined
  {static} +IconData css
  {static} +IconData css_sharp
  {static} +IconData css_rounded
  {static} +IconData css_outlined
  {static} +IconData currency_bitcoin
  {static} +IconData currency_bitcoin_sharp
  {static} +IconData currency_bitcoin_rounded
  {static} +IconData currency_bitcoin_outlined
  {static} +IconData currency_exchange
  {static} +IconData currency_exchange_sharp
  {static} +IconData currency_exchange_rounded
  {static} +IconData currency_exchange_outlined
  {static} +IconData currency_franc
  {static} +IconData currency_franc_sharp
  {static} +IconData currency_franc_rounded
  {static} +IconData currency_franc_outlined
  {static} +IconData currency_lira
  {static} +IconData currency_lira_sharp
  {static} +IconData currency_lira_rounded
  {static} +IconData currency_lira_outlined
  {static} +IconData currency_pound
  {static} +IconData currency_pound_sharp
  {static} +IconData currency_pound_rounded
  {static} +IconData currency_pound_outlined
  {static} +IconData currency_ruble
  {static} +IconData currency_ruble_sharp
  {static} +IconData currency_ruble_rounded
  {static} +IconData currency_ruble_outlined
  {static} +IconData currency_rupee
  {static} +IconData currency_rupee_sharp
  {static} +IconData currency_rupee_rounded
  {static} +IconData currency_rupee_outlined
  {static} +IconData currency_yen
  {static} +IconData currency_yen_sharp
  {static} +IconData currency_yen_rounded
  {static} +IconData currency_yen_outlined
  {static} +IconData currency_yuan
  {static} +IconData currency_yuan_sharp
  {static} +IconData currency_yuan_rounded
  {static} +IconData currency_yuan_outlined
  {static} +IconData curtains
  {static} +IconData curtains_sharp
  {static} +IconData curtains_rounded
  {static} +IconData curtains_outlined
  {static} +IconData curtains_closed
  {static} +IconData curtains_closed_sharp
  {static} +IconData curtains_closed_rounded
  {static} +IconData curtains_closed_outlined
  {static} +IconData cut
  {static} +IconData cut_sharp
  {static} +IconData cut_rounded
  {static} +IconData cut_outlined
  {static} +IconData cyclone
  {static} +IconData cyclone_sharp
  {static} +IconData cyclone_rounded
  {static} +IconData cyclone_outlined
  {static} +IconData dangerous
  {static} +IconData dangerous_sharp
  {static} +IconData dangerous_rounded
  {static} +IconData dangerous_outlined
  {static} +IconData dark_mode
  {static} +IconData dark_mode_sharp
  {static} +IconData dark_mode_rounded
  {static} +IconData dark_mode_outlined
  {static} +IconData dashboard
  {static} +IconData dashboard_sharp
  {static} +IconData dashboard_rounded
  {static} +IconData dashboard_outlined
  {static} +IconData dashboard_customize
  {static} +IconData dashboard_customize_sharp
  {static} +IconData dashboard_customize_rounded
  {static} +IconData dashboard_customize_outlined
  {static} +IconData data_array
  {static} +IconData data_array_sharp
  {static} +IconData data_array_rounded
  {static} +IconData data_array_outlined
  {static} +IconData data_exploration
  {static} +IconData data_exploration_sharp
  {static} +IconData data_exploration_rounded
  {static} +IconData data_exploration_outlined
  {static} +IconData data_object
  {static} +IconData data_object_sharp
  {static} +IconData data_object_rounded
  {static} +IconData data_object_outlined
  {static} +IconData data_saver_off
  {static} +IconData data_saver_off_sharp
  {static} +IconData data_saver_off_rounded
  {static} +IconData data_saver_off_outlined
  {static} +IconData data_saver_on
  {static} +IconData data_saver_on_sharp
  {static} +IconData data_saver_on_rounded
  {static} +IconData data_saver_on_outlined
  {static} +IconData data_thresholding
  {static} +IconData data_thresholding_sharp
  {static} +IconData data_thresholding_rounded
  {static} +IconData data_thresholding_outlined
  {static} +IconData data_usage
  {static} +IconData data_usage_sharp
  {static} +IconData data_usage_rounded
  {static} +IconData data_usage_outlined
  {static} +IconData dataset
  {static} +IconData dataset_sharp
  {static} +IconData dataset_rounded
  {static} +IconData dataset_outlined
  {static} +IconData dataset_linked
  {static} +IconData dataset_linked_sharp
  {static} +IconData dataset_linked_rounded
  {static} +IconData dataset_linked_outlined
  {static} +IconData date_range
  {static} +IconData date_range_sharp
  {static} +IconData date_range_rounded
  {static} +IconData date_range_outlined
  {static} +IconData deblur
  {static} +IconData deblur_sharp
  {static} +IconData deblur_rounded
  {static} +IconData deblur_outlined
  {static} +IconData deck
  {static} +IconData deck_sharp
  {static} +IconData deck_rounded
  {static} +IconData deck_outlined
  {static} +IconData dehaze
  {static} +IconData dehaze_sharp
  {static} +IconData dehaze_rounded
  {static} +IconData dehaze_outlined
  {static} +IconData delete
  {static} +IconData delete_sharp
  {static} +IconData delete_rounded
  {static} +IconData delete_outlined
  {static} +IconData delete_forever
  {static} +IconData delete_forever_sharp
  {static} +IconData delete_forever_rounded
  {static} +IconData delete_forever_outlined
  {static} +IconData delete_outline
  {static} +IconData delete_outline_sharp
  {static} +IconData delete_outline_rounded
  {static} +IconData delete_outline_outlined
  {static} +IconData delete_sweep
  {static} +IconData delete_sweep_sharp
  {static} +IconData delete_sweep_rounded
  {static} +IconData delete_sweep_outlined
  {static} +IconData delivery_dining
  {static} +IconData delivery_dining_sharp
  {static} +IconData delivery_dining_rounded
  {static} +IconData delivery_dining_outlined
  {static} +IconData density_large
  {static} +IconData density_large_sharp
  {static} +IconData density_large_rounded
  {static} +IconData density_large_outlined
  {static} +IconData density_medium
  {static} +IconData density_medium_sharp
  {static} +IconData density_medium_rounded
  {static} +IconData density_medium_outlined
  {static} +IconData density_small
  {static} +IconData density_small_sharp
  {static} +IconData density_small_rounded
  {static} +IconData density_small_outlined
  {static} +IconData departure_board
  {static} +IconData departure_board_sharp
  {static} +IconData departure_board_rounded
  {static} +IconData departure_board_outlined
  {static} +IconData description
  {static} +IconData description_sharp
  {static} +IconData description_rounded
  {static} +IconData description_outlined
  {static} +IconData deselect
  {static} +IconData deselect_sharp
  {static} +IconData deselect_rounded
  {static} +IconData deselect_outlined
  {static} +IconData design_services
  {static} +IconData design_services_sharp
  {static} +IconData design_services_rounded
  {static} +IconData design_services_outlined
  {static} +IconData desk
  {static} +IconData desk_sharp
  {static} +IconData desk_rounded
  {static} +IconData desk_outlined
  {static} +IconData desktop_access_disabled
  {static} +IconData desktop_access_disabled_sharp
  {static} +IconData desktop_access_disabled_rounded
  {static} +IconData desktop_access_disabled_outlined
  {static} +IconData desktop_mac
  {static} +IconData desktop_mac_sharp
  {static} +IconData desktop_mac_rounded
  {static} +IconData desktop_mac_outlined
  {static} +IconData desktop_windows
  {static} +IconData desktop_windows_sharp
  {static} +IconData desktop_windows_rounded
  {static} +IconData desktop_windows_outlined
  {static} +IconData details
  {static} +IconData details_sharp
  {static} +IconData details_rounded
  {static} +IconData details_outlined
  {static} +IconData developer_board
  {static} +IconData developer_board_sharp
  {static} +IconData developer_board_rounded
  {static} +IconData developer_board_outlined
  {static} +IconData developer_board_off
  {static} +IconData developer_board_off_sharp
  {static} +IconData developer_board_off_rounded
  {static} +IconData developer_board_off_outlined
  {static} +IconData developer_mode
  {static} +IconData developer_mode_sharp
  {static} +IconData developer_mode_rounded
  {static} +IconData developer_mode_outlined
  {static} +IconData device_hub
  {static} +IconData device_hub_sharp
  {static} +IconData device_hub_rounded
  {static} +IconData device_hub_outlined
  {static} +IconData device_thermostat
  {static} +IconData device_thermostat_sharp
  {static} +IconData device_thermostat_rounded
  {static} +IconData device_thermostat_outlined
  {static} +IconData device_unknown
  {static} +IconData device_unknown_sharp
  {static} +IconData device_unknown_rounded
  {static} +IconData device_unknown_outlined
  {static} +IconData devices
  {static} +IconData devices_sharp
  {static} +IconData devices_rounded
  {static} +IconData devices_outlined
  {static} +IconData devices_fold
  {static} +IconData devices_fold_sharp
  {static} +IconData devices_fold_rounded
  {static} +IconData devices_fold_outlined
  {static} +IconData devices_other
  {static} +IconData devices_other_sharp
  {static} +IconData devices_other_rounded
  {static} +IconData devices_other_outlined
  {static} +IconData dew_point
  {static} +IconData dialer_sip
  {static} +IconData dialer_sip_sharp
  {static} +IconData dialer_sip_rounded
  {static} +IconData dialer_sip_outlined
  {static} +IconData dialpad
  {static} +IconData dialpad_sharp
  {static} +IconData dialpad_rounded
  {static} +IconData dialpad_outlined
  {static} +IconData diamond
  {static} +IconData diamond_sharp
  {static} +IconData diamond_rounded
  {static} +IconData diamond_outlined
  {static} +IconData difference
  {static} +IconData difference_sharp
  {static} +IconData difference_rounded
  {static} +IconData difference_outlined
  {static} +IconData dining
  {static} +IconData dining_sharp
  {static} +IconData dining_rounded
  {static} +IconData dining_outlined
  {static} +IconData dinner_dining
  {static} +IconData dinner_dining_sharp
  {static} +IconData dinner_dining_rounded
  {static} +IconData dinner_dining_outlined
  {static} +IconData directions
  {static} +IconData directions_sharp
  {static} +IconData directions_rounded
  {static} +IconData directions_outlined
  {static} +IconData directions_bike
  {static} +IconData directions_bike_sharp
  {static} +IconData directions_bike_rounded
  {static} +IconData directions_bike_outlined
  {static} +IconData directions_boat
  {static} +IconData directions_boat_sharp
  {static} +IconData directions_boat_rounded
  {static} +IconData directions_boat_outlined
  {static} +IconData directions_boat_filled
  {static} +IconData directions_boat_filled_sharp
  {static} +IconData directions_boat_filled_rounded
  {static} +IconData directions_boat_filled_outlined
  {static} +IconData directions_bus
  {static} +IconData directions_bus_sharp
  {static} +IconData directions_bus_rounded
  {static} +IconData directions_bus_outlined
  {static} +IconData directions_bus_filled
  {static} +IconData directions_bus_filled_sharp
  {static} +IconData directions_bus_filled_rounded
  {static} +IconData directions_bus_filled_outlined
  {static} +IconData directions_car
  {static} +IconData directions_car_sharp
  {static} +IconData directions_car_rounded
  {static} +IconData directions_car_outlined
  {static} +IconData directions_car_filled
  {static} +IconData directions_car_filled_sharp
  {static} +IconData directions_car_filled_rounded
  {static} +IconData directions_car_filled_outlined
  {static} +IconData directions_ferry
  {static} +IconData directions_ferry_sharp
  {static} +IconData directions_ferry_rounded
  {static} +IconData directions_ferry_outlined
  {static} +IconData directions_off
  {static} +IconData directions_off_sharp
  {static} +IconData directions_off_rounded
  {static} +IconData directions_off_outlined
  {static} +IconData directions_railway
  {static} +IconData directions_railway_sharp
  {static} +IconData directions_railway_rounded
  {static} +IconData directions_railway_outlined
  {static} +IconData directions_railway_filled
  {static} +IconData directions_railway_filled_sharp
  {static} +IconData directions_railway_filled_rounded
  {static} +IconData directions_railway_filled_outlined
  {static} +IconData directions_run
  {static} +IconData directions_run_sharp
  {static} +IconData directions_run_rounded
  {static} +IconData directions_run_outlined
  {static} +IconData directions_subway
  {static} +IconData directions_subway_sharp
  {static} +IconData directions_subway_rounded
  {static} +IconData directions_subway_outlined
  {static} +IconData directions_subway_filled
  {static} +IconData directions_subway_filled_sharp
  {static} +IconData directions_subway_filled_rounded
  {static} +IconData directions_subway_filled_outlined
  {static} +IconData directions_train
  {static} +IconData directions_train_sharp
  {static} +IconData directions_train_rounded
  {static} +IconData directions_train_outlined
  {static} +IconData directions_transit
  {static} +IconData directions_transit_sharp
  {static} +IconData directions_transit_rounded
  {static} +IconData directions_transit_outlined
  {static} +IconData directions_transit_filled
  {static} +IconData directions_transit_filled_sharp
  {static} +IconData directions_transit_filled_rounded
  {static} +IconData directions_transit_filled_outlined
  {static} +IconData directions_walk
  {static} +IconData directions_walk_sharp
  {static} +IconData directions_walk_rounded
  {static} +IconData directions_walk_outlined
  {static} +IconData dirty_lens
  {static} +IconData dirty_lens_sharp
  {static} +IconData dirty_lens_rounded
  {static} +IconData dirty_lens_outlined
  {static} +IconData disabled_by_default
  {static} +IconData disabled_by_default_sharp
  {static} +IconData disabled_by_default_rounded
  {static} +IconData disabled_by_default_outlined
  {static} +IconData disabled_visible
  {static} +IconData disabled_visible_sharp
  {static} +IconData disabled_visible_rounded
  {static} +IconData disabled_visible_outlined
  {static} +IconData disc_full
  {static} +IconData disc_full_sharp
  {static} +IconData disc_full_rounded
  {static} +IconData disc_full_outlined
  {static} +IconData discord
  {static} +IconData discord_sharp
  {static} +IconData discord_rounded
  {static} +IconData discord_outlined
  {static} +IconData discount
  {static} +IconData discount_sharp
  {static} +IconData discount_rounded
  {static} +IconData discount_outlined
  {static} +IconData display_settings
  {static} +IconData display_settings_sharp
  {static} +IconData display_settings_rounded
  {static} +IconData display_settings_outlined
  {static} +IconData diversity_1
  {static} +IconData diversity_1_sharp
  {static} +IconData diversity_1_rounded
  {static} +IconData diversity_1_outlined
  {static} +IconData diversity_2
  {static} +IconData diversity_2_sharp
  {static} +IconData diversity_2_rounded
  {static} +IconData diversity_2_outlined
  {static} +IconData diversity_3
  {static} +IconData diversity_3_sharp
  {static} +IconData diversity_3_rounded
  {static} +IconData diversity_3_outlined
  {static} +IconData dnd_forwardslash
  {static} +IconData dnd_forwardslash_sharp
  {static} +IconData dnd_forwardslash_rounded
  {static} +IconData dnd_forwardslash_outlined
  {static} +IconData dns
  {static} +IconData dns_sharp
  {static} +IconData dns_rounded
  {static} +IconData dns_outlined
  {static} +IconData do_disturb
  {static} +IconData do_disturb_sharp
  {static} +IconData do_disturb_rounded
  {static} +IconData do_disturb_outlined
  {static} +IconData do_disturb_alt
  {static} +IconData do_disturb_alt_sharp
  {static} +IconData do_disturb_alt_rounded
  {static} +IconData do_disturb_alt_outlined
  {static} +IconData do_disturb_off
  {static} +IconData do_disturb_off_sharp
  {static} +IconData do_disturb_off_rounded
  {static} +IconData do_disturb_off_outlined
  {static} +IconData do_disturb_on
  {static} +IconData do_disturb_on_sharp
  {static} +IconData do_disturb_on_rounded
  {static} +IconData do_disturb_on_outlined
  {static} +IconData do_not_disturb
  {static} +IconData do_not_disturb_sharp
  {static} +IconData do_not_disturb_rounded
  {static} +IconData do_not_disturb_outlined
  {static} +IconData do_not_disturb_alt
  {static} +IconData do_not_disturb_alt_sharp
  {static} +IconData do_not_disturb_alt_rounded
  {static} +IconData do_not_disturb_alt_outlined
  {static} +IconData do_not_disturb_off
  {static} +IconData do_not_disturb_off_sharp
  {static} +IconData do_not_disturb_off_rounded
  {static} +IconData do_not_disturb_off_outlined
  {static} +IconData do_not_disturb_on
  {static} +IconData do_not_disturb_on_sharp
  {static} +IconData do_not_disturb_on_rounded
  {static} +IconData do_not_disturb_on_outlined
  {static} +IconData do_not_disturb_on_total_silence
  {static} +IconData do_not_disturb_on_total_silence_sharp
  {static} +IconData do_not_disturb_on_total_silence_rounded
  {static} +IconData do_not_disturb_on_total_silence_outlined
  {static} +IconData do_not_step
  {static} +IconData do_not_step_sharp
  {static} +IconData do_not_step_rounded
  {static} +IconData do_not_step_outlined
  {static} +IconData do_not_touch
  {static} +IconData do_not_touch_sharp
  {static} +IconData do_not_touch_rounded
  {static} +IconData do_not_touch_outlined
  {static} +IconData dock
  {static} +IconData dock_sharp
  {static} +IconData dock_rounded
  {static} +IconData dock_outlined
  {static} +IconData document_scanner
  {static} +IconData document_scanner_sharp
  {static} +IconData document_scanner_rounded
  {static} +IconData document_scanner_outlined
  {static} +IconData domain
  {static} +IconData domain_sharp
  {static} +IconData domain_rounded
  {static} +IconData domain_outlined
  {static} +IconData domain_add
  {static} +IconData domain_add_sharp
  {static} +IconData domain_add_rounded
  {static} +IconData domain_add_outlined
  {static} +IconData domain_disabled
  {static} +IconData domain_disabled_sharp
  {static} +IconData domain_disabled_rounded
  {static} +IconData domain_disabled_outlined
  {static} +IconData domain_verification
  {static} +IconData domain_verification_sharp
  {static} +IconData domain_verification_rounded
  {static} +IconData domain_verification_outlined
  {static} +IconData done
  {static} +IconData done_sharp
  {static} +IconData done_rounded
  {static} +IconData done_outlined
  {static} +IconData done_all
  {static} +IconData done_all_sharp
  {static} +IconData done_all_rounded
  {static} +IconData done_all_outlined
  {static} +IconData done_outline
  {static} +IconData done_outline_sharp
  {static} +IconData done_outline_rounded
  {static} +IconData done_outline_outlined
  {static} +IconData donut_large
  {static} +IconData donut_large_sharp
  {static} +IconData donut_large_rounded
  {static} +IconData donut_large_outlined
  {static} +IconData donut_small
  {static} +IconData donut_small_sharp
  {static} +IconData donut_small_rounded
  {static} +IconData donut_small_outlined
  {static} +IconData door_back_door
  {static} +IconData door_back_door_sharp
  {static} +IconData door_back_door_rounded
  {static} +IconData door_back_door_outlined
  {static} +IconData door_front_door
  {static} +IconData door_front_door_sharp
  {static} +IconData door_front_door_rounded
  {static} +IconData door_front_door_outlined
  {static} +IconData door_sliding
  {static} +IconData door_sliding_sharp
  {static} +IconData door_sliding_rounded
  {static} +IconData door_sliding_outlined
  {static} +IconData doorbell
  {static} +IconData doorbell_sharp
  {static} +IconData doorbell_rounded
  {static} +IconData doorbell_outlined
  {static} +IconData double_arrow
  {static} +IconData double_arrow_sharp
  {static} +IconData double_arrow_rounded
  {static} +IconData double_arrow_outlined
  {static} +IconData downhill_skiing
  {static} +IconData downhill_skiing_sharp
  {static} +IconData downhill_skiing_rounded
  {static} +IconData downhill_skiing_outlined
  {static} +IconData download
  {static} +IconData download_sharp
  {static} +IconData download_rounded
  {static} +IconData download_outlined
  {static} +IconData download_done
  {static} +IconData download_done_sharp
  {static} +IconData download_done_rounded
  {static} +IconData download_done_outlined
  {static} +IconData download_for_offline
  {static} +IconData download_for_offline_sharp
  {static} +IconData download_for_offline_rounded
  {static} +IconData download_for_offline_outlined
  {static} +IconData downloading
  {static} +IconData downloading_sharp
  {static} +IconData downloading_rounded
  {static} +IconData downloading_outlined
  {static} +IconData drafts
  {static} +IconData drafts_sharp
  {static} +IconData drafts_rounded
  {static} +IconData drafts_outlined
  {static} +IconData drag_handle
  {static} +IconData drag_handle_sharp
  {static} +IconData drag_handle_rounded
  {static} +IconData drag_handle_outlined
  {static} +IconData drag_indicator
  {static} +IconData drag_indicator_sharp
  {static} +IconData drag_indicator_rounded
  {static} +IconData drag_indicator_outlined
  {static} +IconData draw
  {static} +IconData draw_sharp
  {static} +IconData draw_rounded
  {static} +IconData draw_outlined
  {static} +IconData drive_eta
  {static} +IconData drive_eta_sharp
  {static} +IconData drive_eta_rounded
  {static} +IconData drive_eta_outlined
  {static} +IconData drive_file_move
  {static} +IconData drive_file_move_sharp
  {static} +IconData drive_file_move_rounded
  {static} +IconData drive_file_move_outlined
  {static} +IconData drive_file_move_outline
  {static} +IconData drive_file_move_rtl
  {static} +IconData drive_file_move_rtl_sharp
  {static} +IconData drive_file_move_rtl_rounded
  {static} +IconData drive_file_move_rtl_outlined
  {static} +IconData drive_file_rename_outline
  {static} +IconData drive_file_rename_outline_sharp
  {static} +IconData drive_file_rename_outline_rounded
  {static} +IconData drive_file_rename_outline_outlined
  {static} +IconData drive_folder_upload
  {static} +IconData drive_folder_upload_sharp
  {static} +IconData drive_folder_upload_rounded
  {static} +IconData drive_folder_upload_outlined
  {static} +IconData dry
  {static} +IconData dry_sharp
  {static} +IconData dry_rounded
  {static} +IconData dry_outlined
  {static} +IconData dry_cleaning
  {static} +IconData dry_cleaning_sharp
  {static} +IconData dry_cleaning_rounded
  {static} +IconData dry_cleaning_outlined
  {static} +IconData duo
  {static} +IconData duo_sharp
  {static} +IconData duo_rounded
  {static} +IconData duo_outlined
  {static} +IconData dvr
  {static} +IconData dvr_sharp
  {static} +IconData dvr_rounded
  {static} +IconData dvr_outlined
  {static} +IconData dynamic_feed
  {static} +IconData dynamic_feed_sharp
  {static} +IconData dynamic_feed_rounded
  {static} +IconData dynamic_feed_outlined
  {static} +IconData dynamic_form
  {static} +IconData dynamic_form_sharp
  {static} +IconData dynamic_form_rounded
  {static} +IconData dynamic_form_outlined
  {static} +IconData e_mobiledata
  {static} +IconData e_mobiledata_sharp
  {static} +IconData e_mobiledata_rounded
  {static} +IconData e_mobiledata_outlined
  {static} +IconData earbuds
  {static} +IconData earbuds_sharp
  {static} +IconData earbuds_rounded
  {static} +IconData earbuds_outlined
  {static} +IconData earbuds_battery
  {static} +IconData earbuds_battery_sharp
  {static} +IconData earbuds_battery_rounded
  {static} +IconData earbuds_battery_outlined
  {static} +IconData east
  {static} +IconData east_sharp
  {static} +IconData east_rounded
  {static} +IconData east_outlined
  {static} +IconData eco
  {static} +IconData eco_sharp
  {static} +IconData eco_rounded
  {static} +IconData eco_outlined
  {static} +IconData edgesensor_high
  {static} +IconData edgesensor_high_sharp
  {static} +IconData edgesensor_high_rounded
  {static} +IconData edgesensor_high_outlined
  {static} +IconData edgesensor_low
  {static} +IconData edgesensor_low_sharp
  {static} +IconData edgesensor_low_rounded
  {static} +IconData edgesensor_low_outlined
  {static} +IconData edit
  {static} +IconData edit_sharp
  {static} +IconData edit_rounded
  {static} +IconData edit_outlined
  {static} +IconData edit_attributes
  {static} +IconData edit_attributes_sharp
  {static} +IconData edit_attributes_rounded
  {static} +IconData edit_attributes_outlined
  {static} +IconData edit_calendar
  {static} +IconData edit_calendar_sharp
  {static} +IconData edit_calendar_rounded
  {static} +IconData edit_calendar_outlined
  {static} +IconData edit_document
  {static} +IconData edit_location
  {static} +IconData edit_location_sharp
  {static} +IconData edit_location_rounded
  {static} +IconData edit_location_outlined
  {static} +IconData edit_location_alt
  {static} +IconData edit_location_alt_sharp
  {static} +IconData edit_location_alt_rounded
  {static} +IconData edit_location_alt_outlined
  {static} +IconData edit_note
  {static} +IconData edit_note_sharp
  {static} +IconData edit_note_rounded
  {static} +IconData edit_note_outlined
  {static} +IconData edit_notifications
  {static} +IconData edit_notifications_sharp
  {static} +IconData edit_notifications_rounded
  {static} +IconData edit_notifications_outlined
  {static} +IconData edit_off
  {static} +IconData edit_off_sharp
  {static} +IconData edit_off_rounded
  {static} +IconData edit_off_outlined
  {static} +IconData edit_road
  {static} +IconData edit_road_sharp
  {static} +IconData edit_road_rounded
  {static} +IconData edit_road_outlined
  {static} +IconData edit_square
  {static} +IconData egg
  {static} +IconData egg_sharp
  {static} +IconData egg_rounded
  {static} +IconData egg_outlined
  {static} +IconData egg_alt
  {static} +IconData egg_alt_sharp
  {static} +IconData egg_alt_rounded
  {static} +IconData egg_alt_outlined
  {static} +IconData eject
  {static} +IconData eject_sharp
  {static} +IconData eject_rounded
  {static} +IconData eject_outlined
  {static} +IconData elderly
  {static} +IconData elderly_sharp
  {static} +IconData elderly_rounded
  {static} +IconData elderly_outlined
  {static} +IconData elderly_woman
  {static} +IconData elderly_woman_sharp
  {static} +IconData elderly_woman_rounded
  {static} +IconData elderly_woman_outlined
  {static} +IconData electric_bike
  {static} +IconData electric_bike_sharp
  {static} +IconData electric_bike_rounded
  {static} +IconData electric_bike_outlined
  {static} +IconData electric_bolt
  {static} +IconData electric_bolt_sharp
  {static} +IconData electric_bolt_rounded
  {static} +IconData electric_bolt_outlined
  {static} +IconData electric_car
  {static} +IconData electric_car_sharp
  {static} +IconData electric_car_rounded
  {static} +IconData electric_car_outlined
  {static} +IconData electric_meter
  {static} +IconData electric_meter_sharp
  {static} +IconData electric_meter_rounded
  {static} +IconData electric_meter_outlined
  {static} +IconData electric_moped
  {static} +IconData electric_moped_sharp
  {static} +IconData electric_moped_rounded
  {static} +IconData electric_moped_outlined
  {static} +IconData electric_rickshaw
  {static} +IconData electric_rickshaw_sharp
  {static} +IconData electric_rickshaw_rounded
  {static} +IconData electric_rickshaw_outlined
  {static} +IconData electric_scooter
  {static} +IconData electric_scooter_sharp
  {static} +IconData electric_scooter_rounded
  {static} +IconData electric_scooter_outlined
  {static} +IconData electrical_services
  {static} +IconData electrical_services_sharp
  {static} +IconData electrical_services_rounded
  {static} +IconData electrical_services_outlined
  {static} +IconData elevator
  {static} +IconData elevator_sharp
  {static} +IconData elevator_rounded
  {static} +IconData elevator_outlined
  {static} +IconData email
  {static} +IconData email_sharp
  {static} +IconData email_rounded
  {static} +IconData email_outlined
  {static} +IconData emergency
  {static} +IconData emergency_sharp
  {static} +IconData emergency_rounded
  {static} +IconData emergency_outlined
  {static} +IconData emergency_recording
  {static} +IconData emergency_recording_sharp
  {static} +IconData emergency_recording_rounded
  {static} +IconData emergency_recording_outlined
  {static} +IconData emergency_share
  {static} +IconData emergency_share_sharp
  {static} +IconData emergency_share_rounded
  {static} +IconData emergency_share_outlined
  {static} +IconData emoji_emotions
  {static} +IconData emoji_emotions_sharp
  {static} +IconData emoji_emotions_rounded
  {static} +IconData emoji_emotions_outlined
  {static} +IconData emoji_events
  {static} +IconData emoji_events_sharp
  {static} +IconData emoji_events_rounded
  {static} +IconData emoji_events_outlined
  {static} +IconData emoji_flags
  {static} +IconData emoji_flags_sharp
  {static} +IconData emoji_flags_rounded
  {static} +IconData emoji_flags_outlined
  {static} +IconData emoji_food_beverage
  {static} +IconData emoji_food_beverage_sharp
  {static} +IconData emoji_food_beverage_rounded
  {static} +IconData emoji_food_beverage_outlined
  {static} +IconData emoji_nature
  {static} +IconData emoji_nature_sharp
  {static} +IconData emoji_nature_rounded
  {static} +IconData emoji_nature_outlined
  {static} +IconData emoji_objects
  {static} +IconData emoji_objects_sharp
  {static} +IconData emoji_objects_rounded
  {static} +IconData emoji_objects_outlined
  {static} +IconData emoji_people
  {static} +IconData emoji_people_sharp
  {static} +IconData emoji_people_rounded
  {static} +IconData emoji_people_outlined
  {static} +IconData emoji_symbols
  {static} +IconData emoji_symbols_sharp
  {static} +IconData emoji_symbols_rounded
  {static} +IconData emoji_symbols_outlined
  {static} +IconData emoji_transportation
  {static} +IconData emoji_transportation_sharp
  {static} +IconData emoji_transportation_rounded
  {static} +IconData emoji_transportation_outlined
  {static} +IconData energy_savings_leaf
  {static} +IconData energy_savings_leaf_sharp
  {static} +IconData energy_savings_leaf_rounded
  {static} +IconData energy_savings_leaf_outlined
  {static} +IconData engineering
  {static} +IconData engineering_sharp
  {static} +IconData engineering_rounded
  {static} +IconData engineering_outlined
  {static} +IconData enhance_photo_translate
  {static} +IconData enhance_photo_translate_sharp
  {static} +IconData enhance_photo_translate_rounded
  {static} +IconData enhance_photo_translate_outlined
  {static} +IconData enhanced_encryption
  {static} +IconData enhanced_encryption_sharp
  {static} +IconData enhanced_encryption_rounded
  {static} +IconData enhanced_encryption_outlined
  {static} +IconData equalizer
  {static} +IconData equalizer_sharp
  {static} +IconData equalizer_rounded
  {static} +IconData equalizer_outlined
  {static} +IconData error
  {static} +IconData error_sharp
  {static} +IconData error_rounded
  {static} +IconData error_outlined
  {static} +IconData error_outline
  {static} +IconData error_outline_sharp
  {static} +IconData error_outline_rounded
  {static} +IconData error_outline_outlined
  {static} +IconData escalator
  {static} +IconData escalator_sharp
  {static} +IconData escalator_rounded
  {static} +IconData escalator_outlined
  {static} +IconData escalator_warning
  {static} +IconData escalator_warning_sharp
  {static} +IconData escalator_warning_rounded
  {static} +IconData escalator_warning_outlined
  {static} +IconData euro
  {static} +IconData euro_sharp
  {static} +IconData euro_rounded
  {static} +IconData euro_outlined
  {static} +IconData euro_symbol
  {static} +IconData euro_symbol_sharp
  {static} +IconData euro_symbol_rounded
  {static} +IconData euro_symbol_outlined
  {static} +IconData ev_station
  {static} +IconData ev_station_sharp
  {static} +IconData ev_station_rounded
  {static} +IconData ev_station_outlined
  {static} +IconData event
  {static} +IconData event_sharp
  {static} +IconData event_rounded
  {static} +IconData event_outlined
  {static} +IconData event_available
  {static} +IconData event_available_sharp
  {static} +IconData event_available_rounded
  {static} +IconData event_available_outlined
  {static} +IconData event_busy
  {static} +IconData event_busy_sharp
  {static} +IconData event_busy_rounded
  {static} +IconData event_busy_outlined
  {static} +IconData event_note
  {static} +IconData event_note_sharp
  {static} +IconData event_note_rounded
  {static} +IconData event_note_outlined
  {static} +IconData event_repeat
  {static} +IconData event_repeat_sharp
  {static} +IconData event_repeat_rounded
  {static} +IconData event_repeat_outlined
  {static} +IconData event_seat
  {static} +IconData event_seat_sharp
  {static} +IconData event_seat_rounded
  {static} +IconData event_seat_outlined
  {static} +IconData exit_to_app
  {static} +IconData exit_to_app_sharp
  {static} +IconData exit_to_app_rounded
  {static} +IconData exit_to_app_outlined
  {static} +IconData expand
  {static} +IconData expand_sharp
  {static} +IconData expand_rounded
  {static} +IconData expand_outlined
  {static} +IconData expand_circle_down
  {static} +IconData expand_circle_down_sharp
  {static} +IconData expand_circle_down_rounded
  {static} +IconData expand_circle_down_outlined
  {static} +IconData expand_less
  {static} +IconData expand_less_sharp
  {static} +IconData expand_less_rounded
  {static} +IconData expand_less_outlined
  {static} +IconData expand_more
  {static} +IconData expand_more_sharp
  {static} +IconData expand_more_rounded
  {static} +IconData expand_more_outlined
  {static} +IconData explicit
  {static} +IconData explicit_sharp
  {static} +IconData explicit_rounded
  {static} +IconData explicit_outlined
  {static} +IconData explore
  {static} +IconData explore_sharp
  {static} +IconData explore_rounded
  {static} +IconData explore_outlined
  {static} +IconData explore_off
  {static} +IconData explore_off_sharp
  {static} +IconData explore_off_rounded
  {static} +IconData explore_off_outlined
  {static} +IconData exposure
  {static} +IconData exposure_sharp
  {static} +IconData exposure_rounded
  {static} +IconData exposure_outlined
  {static} +IconData exposure_minus_1
  {static} +IconData exposure_minus_1_sharp
  {static} +IconData exposure_minus_1_rounded
  {static} +IconData exposure_minus_1_outlined
  {static} +IconData exposure_minus_2
  {static} +IconData exposure_minus_2_sharp
  {static} +IconData exposure_minus_2_rounded
  {static} +IconData exposure_minus_2_outlined
  {static} +IconData exposure_neg_1
  {static} +IconData exposure_neg_1_sharp
  {static} +IconData exposure_neg_1_rounded
  {static} +IconData exposure_neg_1_outlined
  {static} +IconData exposure_neg_2
  {static} +IconData exposure_neg_2_sharp
  {static} +IconData exposure_neg_2_rounded
  {static} +IconData exposure_neg_2_outlined
  {static} +IconData exposure_plus_1
  {static} +IconData exposure_plus_1_sharp
  {static} +IconData exposure_plus_1_rounded
  {static} +IconData exposure_plus_1_outlined
  {static} +IconData exposure_plus_2
  {static} +IconData exposure_plus_2_sharp
  {static} +IconData exposure_plus_2_rounded
  {static} +IconData exposure_plus_2_outlined
  {static} +IconData exposure_zero
  {static} +IconData exposure_zero_sharp
  {static} +IconData exposure_zero_rounded
  {static} +IconData exposure_zero_outlined
  {static} +IconData extension
  {static} +IconData extension_sharp
  {static} +IconData extension_rounded
  {static} +IconData extension_outlined
  {static} +IconData extension_off
  {static} +IconData extension_off_sharp
  {static} +IconData extension_off_rounded
  {static} +IconData extension_off_outlined
  {static} +IconData face
  {static} +IconData face_sharp
  {static} +IconData face_rounded
  {static} +IconData face_outlined
  {static} +IconData face_2
  {static} +IconData face_2_sharp
  {static} +IconData face_2_rounded
  {static} +IconData face_2_outlined
  {static} +IconData face_3
  {static} +IconData face_3_sharp
  {static} +IconData face_3_rounded
  {static} +IconData face_3_outlined
  {static} +IconData face_4
  {static} +IconData face_4_sharp
  {static} +IconData face_4_rounded
  {static} +IconData face_4_outlined
  {static} +IconData face_5
  {static} +IconData face_5_sharp
  {static} +IconData face_5_rounded
  {static} +IconData face_5_outlined
  {static} +IconData face_6
  {static} +IconData face_6_sharp
  {static} +IconData face_6_rounded
  {static} +IconData face_6_outlined
  {static} +IconData face_retouching_natural
  {static} +IconData face_retouching_natural_sharp
  {static} +IconData face_retouching_natural_rounded
  {static} +IconData face_retouching_natural_outlined
  {static} +IconData face_retouching_off
  {static} +IconData face_retouching_off_sharp
  {static} +IconData face_retouching_off_rounded
  {static} +IconData face_retouching_off_outlined
  {static} +IconData face_unlock_sharp
  {static} +IconData face_unlock_rounded
  {static} +IconData face_unlock_outlined
  {static} +IconData facebook
  {static} +IconData facebook_sharp
  {static} +IconData facebook_rounded
  {static} +IconData facebook_outlined
  {static} +IconData fact_check
  {static} +IconData fact_check_sharp
  {static} +IconData fact_check_rounded
  {static} +IconData fact_check_outlined
  {static} +IconData factory
  {static} +IconData factory_sharp
  {static} +IconData factory_rounded
  {static} +IconData factory_outlined
  {static} +IconData family_restroom
  {static} +IconData family_restroom_sharp
  {static} +IconData family_restroom_rounded
  {static} +IconData family_restroom_outlined
  {static} +IconData fast_forward
  {static} +IconData fast_forward_sharp
  {static} +IconData fast_forward_rounded
  {static} +IconData fast_forward_outlined
  {static} +IconData fast_rewind
  {static} +IconData fast_rewind_sharp
  {static} +IconData fast_rewind_rounded
  {static} +IconData fast_rewind_outlined
  {static} +IconData fastfood
  {static} +IconData fastfood_sharp
  {static} +IconData fastfood_rounded
  {static} +IconData fastfood_outlined
  {static} +IconData favorite
  {static} +IconData favorite_sharp
  {static} +IconData favorite_rounded
  {static} +IconData favorite_outlined
  {static} +IconData favorite_border
  {static} +IconData favorite_border_sharp
  {static} +IconData favorite_border_rounded
  {static} +IconData favorite_border_outlined
  {static} +IconData favorite_outline
  {static} +IconData favorite_outline_sharp
  {static} +IconData favorite_outline_rounded
  {static} +IconData favorite_outline_outlined
  {static} +IconData fax
  {static} +IconData fax_sharp
  {static} +IconData fax_rounded
  {static} +IconData fax_outlined
  {static} +IconData featured_play_list
  {static} +IconData featured_play_list_sharp
  {static} +IconData featured_play_list_rounded
  {static} +IconData featured_play_list_outlined
  {static} +IconData featured_video
  {static} +IconData featured_video_sharp
  {static} +IconData featured_video_rounded
  {static} +IconData featured_video_outlined
  {static} +IconData feed
  {static} +IconData feed_sharp
  {static} +IconData feed_rounded
  {static} +IconData feed_outlined
  {static} +IconData feedback
  {static} +IconData feedback_sharp
  {static} +IconData feedback_rounded
  {static} +IconData feedback_outlined
  {static} +IconData female
  {static} +IconData female_sharp
  {static} +IconData female_rounded
  {static} +IconData female_outlined
  {static} +IconData fence
  {static} +IconData fence_sharp
  {static} +IconData fence_rounded
  {static} +IconData fence_outlined
  {static} +IconData festival
  {static} +IconData festival_sharp
  {static} +IconData festival_rounded
  {static} +IconData festival_outlined
  {static} +IconData fiber_dvr
  {static} +IconData fiber_dvr_sharp
  {static} +IconData fiber_dvr_rounded
  {static} +IconData fiber_dvr_outlined
  {static} +IconData fiber_manual_record
  {static} +IconData fiber_manual_record_sharp
  {static} +IconData fiber_manual_record_rounded
  {static} +IconData fiber_manual_record_outlined
  {static} +IconData fiber_new
  {static} +IconData fiber_new_sharp
  {static} +IconData fiber_new_rounded
  {static} +IconData fiber_new_outlined
  {static} +IconData fiber_pin
  {static} +IconData fiber_pin_sharp
  {static} +IconData fiber_pin_rounded
  {static} +IconData fiber_pin_outlined
  {static} +IconData fiber_smart_record
  {static} +IconData fiber_smart_record_sharp
  {static} +IconData fiber_smart_record_rounded
  {static} +IconData fiber_smart_record_outlined
  {static} +IconData file_copy
  {static} +IconData file_copy_sharp
  {static} +IconData file_copy_rounded
  {static} +IconData file_copy_outlined
  {static} +IconData file_download
  {static} +IconData file_download_sharp
  {static} +IconData file_download_rounded
  {static} +IconData file_download_outlined
  {static} +IconData file_download_done
  {static} +IconData file_download_done_sharp
  {static} +IconData file_download_done_rounded
  {static} +IconData file_download_done_outlined
  {static} +IconData file_download_off
  {static} +IconData file_download_off_sharp
  {static} +IconData file_download_off_rounded
  {static} +IconData file_download_off_outlined
  {static} +IconData file_open
  {static} +IconData file_open_sharp
  {static} +IconData file_open_rounded
  {static} +IconData file_open_outlined
  {static} +IconData file_present
  {static} +IconData file_present_sharp
  {static} +IconData file_present_rounded
  {static} +IconData file_present_outlined
  {static} +IconData file_upload
  {static} +IconData file_upload_sharp
  {static} +IconData file_upload_rounded
  {static} +IconData file_upload_outlined
  {static} +IconData file_upload_off
  {static} +IconData filter
  {static} +IconData filter_sharp
  {static} +IconData filter_rounded
  {static} +IconData filter_outlined
  {static} +IconData filter_1
  {static} +IconData filter_1_sharp
  {static} +IconData filter_1_rounded
  {static} +IconData filter_1_outlined
  {static} +IconData filter_2
  {static} +IconData filter_2_sharp
  {static} +IconData filter_2_rounded
  {static} +IconData filter_2_outlined
  {static} +IconData filter_3
  {static} +IconData filter_3_sharp
  {static} +IconData filter_3_rounded
  {static} +IconData filter_3_outlined
  {static} +IconData filter_4
  {static} +IconData filter_4_sharp
  {static} +IconData filter_4_rounded
  {static} +IconData filter_4_outlined
  {static} +IconData filter_5
  {static} +IconData filter_5_sharp
  {static} +IconData filter_5_rounded
  {static} +IconData filter_5_outlined
  {static} +IconData filter_6
  {static} +IconData filter_6_sharp
  {static} +IconData filter_6_rounded
  {static} +IconData filter_6_outlined
  {static} +IconData filter_7
  {static} +IconData filter_7_sharp
  {static} +IconData filter_7_rounded
  {static} +IconData filter_7_outlined
  {static} +IconData filter_8
  {static} +IconData filter_8_sharp
  {static} +IconData filter_8_rounded
  {static} +IconData filter_8_outlined
  {static} +IconData filter_9
  {static} +IconData filter_9_sharp
  {static} +IconData filter_9_rounded
  {static} +IconData filter_9_outlined
  {static} +IconData filter_9_plus
  {static} +IconData filter_9_plus_sharp
  {static} +IconData filter_9_plus_rounded
  {static} +IconData filter_9_plus_outlined
  {static} +IconData filter_alt
  {static} +IconData filter_alt_sharp
  {static} +IconData filter_alt_rounded
  {static} +IconData filter_alt_outlined
  {static} +IconData filter_alt_off
  {static} +IconData filter_alt_off_sharp
  {static} +IconData filter_alt_off_rounded
  {static} +IconData filter_alt_off_outlined
  {static} +IconData filter_b_and_w
  {static} +IconData filter_b_and_w_sharp
  {static} +IconData filter_b_and_w_rounded
  {static} +IconData filter_b_and_w_outlined
  {static} +IconData filter_center_focus
  {static} +IconData filter_center_focus_sharp
  {static} +IconData filter_center_focus_rounded
  {static} +IconData filter_center_focus_outlined
  {static} +IconData filter_drama
  {static} +IconData filter_drama_sharp
  {static} +IconData filter_drama_rounded
  {static} +IconData filter_drama_outlined
  {static} +IconData filter_frames
  {static} +IconData filter_frames_sharp
  {static} +IconData filter_frames_rounded
  {static} +IconData filter_frames_outlined
  {static} +IconData filter_hdr
  {static} +IconData filter_hdr_sharp
  {static} +IconData filter_hdr_rounded
  {static} +IconData filter_hdr_outlined
  {static} +IconData filter_list
  {static} +IconData filter_list_sharp
  {static} +IconData filter_list_rounded
  {static} +IconData filter_list_outlined
  {static} +IconData filter_list_alt
  {static} +IconData filter_list_off
  {static} +IconData filter_list_off_sharp
  {static} +IconData filter_list_off_rounded
  {static} +IconData filter_list_off_outlined
  {static} +IconData filter_none
  {static} +IconData filter_none_sharp
  {static} +IconData filter_none_rounded
  {static} +IconData filter_none_outlined
  {static} +IconData filter_tilt_shift
  {static} +IconData filter_tilt_shift_sharp
  {static} +IconData filter_tilt_shift_rounded
  {static} +IconData filter_tilt_shift_outlined
  {static} +IconData filter_vintage
  {static} +IconData filter_vintage_sharp
  {static} +IconData filter_vintage_rounded
  {static} +IconData filter_vintage_outlined
  {static} +IconData find_in_page
  {static} +IconData find_in_page_sharp
  {static} +IconData find_in_page_rounded
  {static} +IconData find_in_page_outlined
  {static} +IconData find_replace
  {static} +IconData find_replace_sharp
  {static} +IconData find_replace_rounded
  {static} +IconData find_replace_outlined
  {static} +IconData fingerprint
  {static} +IconData fingerprint_sharp
  {static} +IconData fingerprint_rounded
  {static} +IconData fingerprint_outlined
  {static} +IconData fire_extinguisher
  {static} +IconData fire_extinguisher_sharp
  {static} +IconData fire_extinguisher_rounded
  {static} +IconData fire_extinguisher_outlined
  {static} +IconData fire_hydrant
  {static} +IconData fire_hydrant_alt
  {static} +IconData fire_hydrant_alt_sharp
  {static} +IconData fire_hydrant_alt_rounded
  {static} +IconData fire_hydrant_alt_outlined
  {static} +IconData fire_truck
  {static} +IconData fire_truck_sharp
  {static} +IconData fire_truck_rounded
  {static} +IconData fire_truck_outlined
  {static} +IconData fireplace
  {static} +IconData fireplace_sharp
  {static} +IconData fireplace_rounded
  {static} +IconData fireplace_outlined
  {static} +IconData first_page
  {static} +IconData first_page_sharp
  {static} +IconData first_page_rounded
  {static} +IconData first_page_outlined
  {static} +IconData fit_screen
  {static} +IconData fit_screen_sharp
  {static} +IconData fit_screen_rounded
  {static} +IconData fit_screen_outlined
  {static} +IconData fitbit
  {static} +IconData fitbit_sharp
  {static} +IconData fitbit_rounded
  {static} +IconData fitbit_outlined
  {static} +IconData fitness_center
  {static} +IconData fitness_center_sharp
  {static} +IconData fitness_center_rounded
  {static} +IconData fitness_center_outlined
  {static} +IconData flag
  {static} +IconData flag_sharp
  {static} +IconData flag_rounded
  {static} +IconData flag_outlined
  {static} +IconData flag_circle
  {static} +IconData flag_circle_sharp
  {static} +IconData flag_circle_rounded
  {static} +IconData flag_circle_outlined
  {static} +IconData flaky
  {static} +IconData flaky_sharp
  {static} +IconData flaky_rounded
  {static} +IconData flaky_outlined
  {static} +IconData flare
  {static} +IconData flare_sharp
  {static} +IconData flare_rounded
  {static} +IconData flare_outlined
  {static} +IconData flash_auto
  {static} +IconData flash_auto_sharp
  {static} +IconData flash_auto_rounded
  {static} +IconData flash_auto_outlined
  {static} +IconData flash_off
  {static} +IconData flash_off_sharp
  {static} +IconData flash_off_rounded
  {static} +IconData flash_off_outlined
  {static} +IconData flash_on
  {static} +IconData flash_on_sharp
  {static} +IconData flash_on_rounded
  {static} +IconData flash_on_outlined
  {static} +IconData flashlight_off
  {static} +IconData flashlight_off_sharp
  {static} +IconData flashlight_off_rounded
  {static} +IconData flashlight_off_outlined
  {static} +IconData flashlight_on
  {static} +IconData flashlight_on_sharp
  {static} +IconData flashlight_on_rounded
  {static} +IconData flashlight_on_outlined
  {static} +IconData flatware
  {static} +IconData flatware_sharp
  {static} +IconData flatware_rounded
  {static} +IconData flatware_outlined
  {static} +IconData flight
  {static} +IconData flight_sharp
  {static} +IconData flight_rounded
  {static} +IconData flight_outlined
  {static} +IconData flight_class
  {static} +IconData flight_class_sharp
  {static} +IconData flight_class_rounded
  {static} +IconData flight_class_outlined
  {static} +IconData flight_land
  {static} +IconData flight_land_sharp
  {static} +IconData flight_land_rounded
  {static} +IconData flight_land_outlined
  {static} +IconData flight_takeoff
  {static} +IconData flight_takeoff_sharp
  {static} +IconData flight_takeoff_rounded
  {static} +IconData flight_takeoff_outlined
  {static} +IconData flip
  {static} +IconData flip_sharp
  {static} +IconData flip_rounded
  {static} +IconData flip_outlined
  {static} +IconData flip_camera_android
  {static} +IconData flip_camera_android_sharp
  {static} +IconData flip_camera_android_rounded
  {static} +IconData flip_camera_android_outlined
  {static} +IconData flip_camera_ios
  {static} +IconData flip_camera_ios_sharp
  {static} +IconData flip_camera_ios_rounded
  {static} +IconData flip_camera_ios_outlined
  {static} +IconData flip_to_back
  {static} +IconData flip_to_back_sharp
  {static} +IconData flip_to_back_rounded
  {static} +IconData flip_to_back_outlined
  {static} +IconData flip_to_front
  {static} +IconData flip_to_front_sharp
  {static} +IconData flip_to_front_rounded
  {static} +IconData flip_to_front_outlined
  {static} +IconData flood
  {static} +IconData flood_sharp
  {static} +IconData flood_rounded
  {static} +IconData flood_outlined
  {static} +IconData flourescent
  {static} +IconData flourescent_sharp
  {static} +IconData flourescent_rounded
  {static} +IconData flourescent_outlined
  {static} +IconData fluorescent
  {static} +IconData fluorescent_sharp
  {static} +IconData fluorescent_rounded
  {static} +IconData fluorescent_outlined
  {static} +IconData flutter_dash
  {static} +IconData flutter_dash_sharp
  {static} +IconData flutter_dash_rounded
  {static} +IconData flutter_dash_outlined
  {static} +IconData fmd_bad
  {static} +IconData fmd_bad_sharp
  {static} +IconData fmd_bad_rounded
  {static} +IconData fmd_bad_outlined
  {static} +IconData fmd_good
  {static} +IconData fmd_good_sharp
  {static} +IconData fmd_good_rounded
  {static} +IconData fmd_good_outlined
  {static} +IconData foggy
  {static} +IconData folder
  {static} +IconData folder_sharp
  {static} +IconData folder_rounded
  {static} +IconData folder_outlined
  {static} +IconData folder_copy
  {static} +IconData folder_copy_sharp
  {static} +IconData folder_copy_rounded
  {static} +IconData folder_copy_outlined
  {static} +IconData folder_delete
  {static} +IconData folder_delete_sharp
  {static} +IconData folder_delete_rounded
  {static} +IconData folder_delete_outlined
  {static} +IconData folder_off
  {static} +IconData folder_off_sharp
  {static} +IconData folder_off_rounded
  {static} +IconData folder_off_outlined
  {static} +IconData folder_open
  {static} +IconData folder_open_sharp
  {static} +IconData folder_open_rounded
  {static} +IconData folder_open_outlined
  {static} +IconData folder_shared
  {static} +IconData folder_shared_sharp
  {static} +IconData folder_shared_rounded
  {static} +IconData folder_shared_outlined
  {static} +IconData folder_special
  {static} +IconData folder_special_sharp
  {static} +IconData folder_special_rounded
  {static} +IconData folder_special_outlined
  {static} +IconData folder_zip
  {static} +IconData folder_zip_sharp
  {static} +IconData folder_zip_rounded
  {static} +IconData folder_zip_outlined
  {static} +IconData follow_the_signs
  {static} +IconData follow_the_signs_sharp
  {static} +IconData follow_the_signs_rounded
  {static} +IconData follow_the_signs_outlined
  {static} +IconData font_download
  {static} +IconData font_download_sharp
  {static} +IconData font_download_rounded
  {static} +IconData font_download_outlined
  {static} +IconData font_download_off
  {static} +IconData font_download_off_sharp
  {static} +IconData font_download_off_rounded
  {static} +IconData font_download_off_outlined
  {static} +IconData food_bank
  {static} +IconData food_bank_sharp
  {static} +IconData food_bank_rounded
  {static} +IconData food_bank_outlined
  {static} +IconData forest
  {static} +IconData forest_sharp
  {static} +IconData forest_rounded
  {static} +IconData forest_outlined
  {static} +IconData fork_left
  {static} +IconData fork_left_sharp
  {static} +IconData fork_left_rounded
  {static} +IconData fork_left_outlined
  {static} +IconData fork_right
  {static} +IconData fork_right_sharp
  {static} +IconData fork_right_rounded
  {static} +IconData fork_right_outlined
  {static} +IconData forklift
  {static} +IconData format_align_center
  {static} +IconData format_align_center_sharp
  {static} +IconData format_align_center_rounded
  {static} +IconData format_align_center_outlined
  {static} +IconData format_align_justify
  {static} +IconData format_align_justify_sharp
  {static} +IconData format_align_justify_rounded
  {static} +IconData format_align_justify_outlined
  {static} +IconData format_align_left
  {static} +IconData format_align_left_sharp
  {static} +IconData format_align_left_rounded
  {static} +IconData format_align_left_outlined
  {static} +IconData format_align_right
  {static} +IconData format_align_right_sharp
  {static} +IconData format_align_right_rounded
  {static} +IconData format_align_right_outlined
  {static} +IconData format_bold
  {static} +IconData format_bold_sharp
  {static} +IconData format_bold_rounded
  {static} +IconData format_bold_outlined
  {static} +IconData format_clear
  {static} +IconData format_clear_sharp
  {static} +IconData format_clear_rounded
  {static} +IconData format_clear_outlined
  {static} +IconData format_color_fill
  {static} +IconData format_color_fill_sharp
  {static} +IconData format_color_fill_rounded
  {static} +IconData format_color_fill_outlined
  {static} +IconData format_color_reset
  {static} +IconData format_color_reset_sharp
  {static} +IconData format_color_reset_rounded
  {static} +IconData format_color_reset_outlined
  {static} +IconData format_color_text
  {static} +IconData format_color_text_sharp
  {static} +IconData format_color_text_rounded
  {static} +IconData format_color_text_outlined
  {static} +IconData format_indent_decrease
  {static} +IconData format_indent_decrease_sharp
  {static} +IconData format_indent_decrease_rounded
  {static} +IconData format_indent_decrease_outlined
  {static} +IconData format_indent_increase
  {static} +IconData format_indent_increase_sharp
  {static} +IconData format_indent_increase_rounded
  {static} +IconData format_indent_increase_outlined
  {static} +IconData format_italic
  {static} +IconData format_italic_sharp
  {static} +IconData format_italic_rounded
  {static} +IconData format_italic_outlined
  {static} +IconData format_line_spacing
  {static} +IconData format_line_spacing_sharp
  {static} +IconData format_line_spacing_rounded
  {static} +IconData format_line_spacing_outlined
  {static} +IconData format_list_bulleted
  {static} +IconData format_list_bulleted_sharp
  {static} +IconData format_list_bulleted_rounded
  {static} +IconData format_list_bulleted_outlined
  {static} +IconData format_list_bulleted_add
  {static} +IconData format_list_numbered
  {static} +IconData format_list_numbered_sharp
  {static} +IconData format_list_numbered_rounded
  {static} +IconData format_list_numbered_outlined
  {static} +IconData format_list_numbered_rtl
  {static} +IconData format_list_numbered_rtl_sharp
  {static} +IconData format_list_numbered_rtl_rounded
  {static} +IconData format_list_numbered_rtl_outlined
  {static} +IconData format_overline
  {static} +IconData format_overline_sharp
  {static} +IconData format_overline_rounded
  {static} +IconData format_overline_outlined
  {static} +IconData format_paint
  {static} +IconData format_paint_sharp
  {static} +IconData format_paint_rounded
  {static} +IconData format_paint_outlined
  {static} +IconData format_quote
  {static} +IconData format_quote_sharp
  {static} +IconData format_quote_rounded
  {static} +IconData format_quote_outlined
  {static} +IconData format_shapes
  {static} +IconData format_shapes_sharp
  {static} +IconData format_shapes_rounded
  {static} +IconData format_shapes_outlined
  {static} +IconData format_size
  {static} +IconData format_size_sharp
  {static} +IconData format_size_rounded
  {static} +IconData format_size_outlined
  {static} +IconData format_strikethrough
  {static} +IconData format_strikethrough_sharp
  {static} +IconData format_strikethrough_rounded
  {static} +IconData format_strikethrough_outlined
  {static} +IconData format_textdirection_l_to_r
  {static} +IconData format_textdirection_l_to_r_sharp
  {static} +IconData format_textdirection_l_to_r_rounded
  {static} +IconData format_textdirection_l_to_r_outlined
  {static} +IconData format_textdirection_r_to_l
  {static} +IconData format_textdirection_r_to_l_sharp
  {static} +IconData format_textdirection_r_to_l_rounded
  {static} +IconData format_textdirection_r_to_l_outlined
  {static} +IconData format_underline
  {static} +IconData format_underline_sharp
  {static} +IconData format_underline_rounded
  {static} +IconData format_underline_outlined
  {static} +IconData format_underlined
  {static} +IconData format_underlined_sharp
  {static} +IconData format_underlined_rounded
  {static} +IconData format_underlined_outlined
  {static} +IconData fort
  {static} +IconData fort_sharp
  {static} +IconData fort_rounded
  {static} +IconData fort_outlined
  {static} +IconData forum
  {static} +IconData forum_sharp
  {static} +IconData forum_rounded
  {static} +IconData forum_outlined
  {static} +IconData forward
  {static} +IconData forward_sharp
  {static} +IconData forward_rounded
  {static} +IconData forward_outlined
  {static} +IconData forward_10
  {static} +IconData forward_10_sharp
  {static} +IconData forward_10_rounded
  {static} +IconData forward_10_outlined
  {static} +IconData forward_30
  {static} +IconData forward_30_sharp
  {static} +IconData forward_30_rounded
  {static} +IconData forward_30_outlined
  {static} +IconData forward_5
  {static} +IconData forward_5_sharp
  {static} +IconData forward_5_rounded
  {static} +IconData forward_5_outlined
  {static} +IconData forward_to_inbox
  {static} +IconData forward_to_inbox_sharp
  {static} +IconData forward_to_inbox_rounded
  {static} +IconData forward_to_inbox_outlined
  {static} +IconData foundation
  {static} +IconData foundation_sharp
  {static} +IconData foundation_rounded
  {static} +IconData foundation_outlined
  {static} +IconData free_breakfast
  {static} +IconData free_breakfast_sharp
  {static} +IconData free_breakfast_rounded
  {static} +IconData free_breakfast_outlined
  {static} +IconData free_cancellation
  {static} +IconData free_cancellation_sharp
  {static} +IconData free_cancellation_rounded
  {static} +IconData free_cancellation_outlined
  {static} +IconData front_hand
  {static} +IconData front_hand_sharp
  {static} +IconData front_hand_rounded
  {static} +IconData front_hand_outlined
  {static} +IconData front_loader
  {static} +IconData fullscreen
  {static} +IconData fullscreen_sharp
  {static} +IconData fullscreen_rounded
  {static} +IconData fullscreen_outlined
  {static} +IconData fullscreen_exit
  {static} +IconData fullscreen_exit_sharp
  {static} +IconData fullscreen_exit_rounded
  {static} +IconData fullscreen_exit_outlined
  {static} +IconData functions
  {static} +IconData functions_sharp
  {static} +IconData functions_rounded
  {static} +IconData functions_outlined
  {static} +IconData g_mobiledata
  {static} +IconData g_mobiledata_sharp
  {static} +IconData g_mobiledata_rounded
  {static} +IconData g_mobiledata_outlined
  {static} +IconData g_translate
  {static} +IconData g_translate_sharp
  {static} +IconData g_translate_rounded
  {static} +IconData g_translate_outlined
  {static} +IconData gamepad
  {static} +IconData gamepad_sharp
  {static} +IconData gamepad_rounded
  {static} +IconData gamepad_outlined
  {static} +IconData games
  {static} +IconData games_sharp
  {static} +IconData games_rounded
  {static} +IconData games_outlined
  {static} +IconData garage
  {static} +IconData garage_sharp
  {static} +IconData garage_rounded
  {static} +IconData garage_outlined
  {static} +IconData gas_meter
  {static} +IconData gas_meter_sharp
  {static} +IconData gas_meter_rounded
  {static} +IconData gas_meter_outlined
  {static} +IconData gavel
  {static} +IconData gavel_sharp
  {static} +IconData gavel_rounded
  {static} +IconData gavel_outlined
  {static} +IconData generating_tokens
  {static} +IconData generating_tokens_sharp
  {static} +IconData generating_tokens_rounded
  {static} +IconData generating_tokens_outlined
  {static} +IconData gesture
  {static} +IconData gesture_sharp
  {static} +IconData gesture_rounded
  {static} +IconData gesture_outlined
  {static} +IconData get_app
  {static} +IconData get_app_sharp
  {static} +IconData get_app_rounded
  {static} +IconData get_app_outlined
  {static} +IconData gif
  {static} +IconData gif_sharp
  {static} +IconData gif_rounded
  {static} +IconData gif_outlined
  {static} +IconData gif_box
  {static} +IconData gif_box_sharp
  {static} +IconData gif_box_rounded
  {static} +IconData gif_box_outlined
  {static} +IconData girl
  {static} +IconData girl_sharp
  {static} +IconData girl_rounded
  {static} +IconData girl_outlined
  {static} +IconData gite
  {static} +IconData gite_sharp
  {static} +IconData gite_rounded
  {static} +IconData gite_outlined
  {static} +IconData golf_course
  {static} +IconData golf_course_sharp
  {static} +IconData golf_course_rounded
  {static} +IconData golf_course_outlined
  {static} +IconData gpp_bad
  {static} +IconData gpp_bad_sharp
  {static} +IconData gpp_bad_rounded
  {static} +IconData gpp_bad_outlined
  {static} +IconData gpp_good
  {static} +IconData gpp_good_sharp
  {static} +IconData gpp_good_rounded
  {static} +IconData gpp_good_outlined
  {static} +IconData gpp_maybe
  {static} +IconData gpp_maybe_sharp
  {static} +IconData gpp_maybe_rounded
  {static} +IconData gpp_maybe_outlined
  {static} +IconData gps_fixed
  {static} +IconData gps_fixed_sharp
  {static} +IconData gps_fixed_rounded
  {static} +IconData gps_fixed_outlined
  {static} +IconData gps_not_fixed
  {static} +IconData gps_not_fixed_sharp
  {static} +IconData gps_not_fixed_rounded
  {static} +IconData gps_not_fixed_outlined
  {static} +IconData gps_off
  {static} +IconData gps_off_sharp
  {static} +IconData gps_off_rounded
  {static} +IconData gps_off_outlined
  {static} +IconData grade
  {static} +IconData grade_sharp
  {static} +IconData grade_rounded
  {static} +IconData grade_outlined
  {static} +IconData gradient
  {static} +IconData gradient_sharp
  {static} +IconData gradient_rounded
  {static} +IconData gradient_outlined
  {static} +IconData grading
  {static} +IconData grading_sharp
  {static} +IconData grading_rounded
  {static} +IconData grading_outlined
  {static} +IconData grain
  {static} +IconData grain_sharp
  {static} +IconData grain_rounded
  {static} +IconData grain_outlined
  {static} +IconData graphic_eq
  {static} +IconData graphic_eq_sharp
  {static} +IconData graphic_eq_rounded
  {static} +IconData graphic_eq_outlined
  {static} +IconData grass
  {static} +IconData grass_sharp
  {static} +IconData grass_rounded
  {static} +IconData grass_outlined
  {static} +IconData grid_3x3
  {static} +IconData grid_3x3_sharp
  {static} +IconData grid_3x3_rounded
  {static} +IconData grid_3x3_outlined
  {static} +IconData grid_4x4
  {static} +IconData grid_4x4_sharp
  {static} +IconData grid_4x4_rounded
  {static} +IconData grid_4x4_outlined
  {static} +IconData grid_goldenratio
  {static} +IconData grid_goldenratio_sharp
  {static} +IconData grid_goldenratio_rounded
  {static} +IconData grid_goldenratio_outlined
  {static} +IconData grid_off
  {static} +IconData grid_off_sharp
  {static} +IconData grid_off_rounded
  {static} +IconData grid_off_outlined
  {static} +IconData grid_on
  {static} +IconData grid_on_sharp
  {static} +IconData grid_on_rounded
  {static} +IconData grid_on_outlined
  {static} +IconData grid_view
  {static} +IconData grid_view_sharp
  {static} +IconData grid_view_rounded
  {static} +IconData grid_view_outlined
  {static} +IconData group
  {static} +IconData group_sharp
  {static} +IconData group_rounded
  {static} +IconData group_outlined
  {static} +IconData group_add
  {static} +IconData group_add_sharp
  {static} +IconData group_add_rounded
  {static} +IconData group_add_outlined
  {static} +IconData group_off
  {static} +IconData group_off_sharp
  {static} +IconData group_off_rounded
  {static} +IconData group_off_outlined
  {static} +IconData group_remove
  {static} +IconData group_remove_sharp
  {static} +IconData group_remove_rounded
  {static} +IconData group_remove_outlined
  {static} +IconData group_work
  {static} +IconData group_work_sharp
  {static} +IconData group_work_rounded
  {static} +IconData group_work_outlined
  {static} +IconData groups
  {static} +IconData groups_sharp
  {static} +IconData groups_rounded
  {static} +IconData groups_outlined
  {static} +IconData groups_2
  {static} +IconData groups_2_sharp
  {static} +IconData groups_2_rounded
  {static} +IconData groups_2_outlined
  {static} +IconData groups_3
  {static} +IconData groups_3_sharp
  {static} +IconData groups_3_rounded
  {static} +IconData groups_3_outlined
  {static} +IconData h_mobiledata
  {static} +IconData h_mobiledata_sharp
  {static} +IconData h_mobiledata_rounded
  {static} +IconData h_mobiledata_outlined
  {static} +IconData h_plus_mobiledata
  {static} +IconData h_plus_mobiledata_sharp
  {static} +IconData h_plus_mobiledata_rounded
  {static} +IconData h_plus_mobiledata_outlined
  {static} +IconData hail
  {static} +IconData hail_sharp
  {static} +IconData hail_rounded
  {static} +IconData hail_outlined
  {static} +IconData handshake
  {static} +IconData handshake_sharp
  {static} +IconData handshake_rounded
  {static} +IconData handshake_outlined
  {static} +IconData handyman
  {static} +IconData handyman_sharp
  {static} +IconData handyman_rounded
  {static} +IconData handyman_outlined
  {static} +IconData hardware
  {static} +IconData hardware_sharp
  {static} +IconData hardware_rounded
  {static} +IconData hardware_outlined
  {static} +IconData hd
  {static} +IconData hd_sharp
  {static} +IconData hd_rounded
  {static} +IconData hd_outlined
  {static} +IconData hdr_auto
  {static} +IconData hdr_auto_sharp
  {static} +IconData hdr_auto_rounded
  {static} +IconData hdr_auto_outlined
  {static} +IconData hdr_auto_select
  {static} +IconData hdr_auto_select_sharp
  {static} +IconData hdr_auto_select_rounded
  {static} +IconData hdr_auto_select_outlined
  {static} +IconData hdr_enhanced_select
  {static} +IconData hdr_enhanced_select_sharp
  {static} +IconData hdr_enhanced_select_rounded
  {static} +IconData hdr_enhanced_select_outlined
  {static} +IconData hdr_off
  {static} +IconData hdr_off_sharp
  {static} +IconData hdr_off_rounded
  {static} +IconData hdr_off_outlined
  {static} +IconData hdr_off_select
  {static} +IconData hdr_off_select_sharp
  {static} +IconData hdr_off_select_rounded
  {static} +IconData hdr_off_select_outlined
  {static} +IconData hdr_on
  {static} +IconData hdr_on_sharp
  {static} +IconData hdr_on_rounded
  {static} +IconData hdr_on_outlined
  {static} +IconData hdr_on_select
  {static} +IconData hdr_on_select_sharp
  {static} +IconData hdr_on_select_rounded
  {static} +IconData hdr_on_select_outlined
  {static} +IconData hdr_plus
  {static} +IconData hdr_plus_sharp
  {static} +IconData hdr_plus_rounded
  {static} +IconData hdr_plus_outlined
  {static} +IconData hdr_strong
  {static} +IconData hdr_strong_sharp
  {static} +IconData hdr_strong_rounded
  {static} +IconData hdr_strong_outlined
  {static} +IconData hdr_weak
  {static} +IconData hdr_weak_sharp
  {static} +IconData hdr_weak_rounded
  {static} +IconData hdr_weak_outlined
  {static} +IconData headphones
  {static} +IconData headphones_sharp
  {static} +IconData headphones_rounded
  {static} +IconData headphones_outlined
  {static} +IconData headphones_battery
  {static} +IconData headphones_battery_sharp
  {static} +IconData headphones_battery_rounded
  {static} +IconData headphones_battery_outlined
  {static} +IconData headset
  {static} +IconData headset_sharp
  {static} +IconData headset_rounded
  {static} +IconData headset_outlined
  {static} +IconData headset_mic
  {static} +IconData headset_mic_sharp
  {static} +IconData headset_mic_rounded
  {static} +IconData headset_mic_outlined
  {static} +IconData headset_off
  {static} +IconData headset_off_sharp
  {static} +IconData headset_off_rounded
  {static} +IconData headset_off_outlined
  {static} +IconData healing
  {static} +IconData healing_sharp
  {static} +IconData healing_rounded
  {static} +IconData healing_outlined
  {static} +IconData health_and_safety
  {static} +IconData health_and_safety_sharp
  {static} +IconData health_and_safety_rounded
  {static} +IconData health_and_safety_outlined
  {static} +IconData hearing
  {static} +IconData hearing_sharp
  {static} +IconData hearing_rounded
  {static} +IconData hearing_outlined
  {static} +IconData hearing_disabled
  {static} +IconData hearing_disabled_sharp
  {static} +IconData hearing_disabled_rounded
  {static} +IconData hearing_disabled_outlined
  {static} +IconData heart_broken
  {static} +IconData heart_broken_sharp
  {static} +IconData heart_broken_rounded
  {static} +IconData heart_broken_outlined
  {static} +IconData heat_pump
  {static} +IconData heat_pump_sharp
  {static} +IconData heat_pump_rounded
  {static} +IconData heat_pump_outlined
  {static} +IconData height
  {static} +IconData height_sharp
  {static} +IconData height_rounded
  {static} +IconData height_outlined
  {static} +IconData help
  {static} +IconData help_sharp
  {static} +IconData help_rounded
  {static} +IconData help_outlined
  {static} +IconData help_center
  {static} +IconData help_center_sharp
  {static} +IconData help_center_rounded
  {static} +IconData help_center_outlined
  {static} +IconData help_outline
  {static} +IconData help_outline_sharp
  {static} +IconData help_outline_rounded
  {static} +IconData help_outline_outlined
  {static} +IconData hevc
  {static} +IconData hevc_sharp
  {static} +IconData hevc_rounded
  {static} +IconData hevc_outlined
  {static} +IconData hexagon
  {static} +IconData hexagon_sharp
  {static} +IconData hexagon_rounded
  {static} +IconData hexagon_outlined
  {static} +IconData hide_image
  {static} +IconData hide_image_sharp
  {static} +IconData hide_image_rounded
  {static} +IconData hide_image_outlined
  {static} +IconData hide_source
  {static} +IconData hide_source_sharp
  {static} +IconData hide_source_rounded
  {static} +IconData hide_source_outlined
  {static} +IconData high_quality
  {static} +IconData high_quality_sharp
  {static} +IconData high_quality_rounded
  {static} +IconData high_quality_outlined
  {static} +IconData highlight
  {static} +IconData highlight_sharp
  {static} +IconData highlight_rounded
  {static} +IconData highlight_outlined
  {static} +IconData highlight_alt
  {static} +IconData highlight_alt_sharp
  {static} +IconData highlight_alt_rounded
  {static} +IconData highlight_alt_outlined
  {static} +IconData highlight_off
  {static} +IconData highlight_off_sharp
  {static} +IconData highlight_off_rounded
  {static} +IconData highlight_off_outlined
  {static} +IconData highlight_remove
  {static} +IconData highlight_remove_sharp
  {static} +IconData highlight_remove_rounded
  {static} +IconData highlight_remove_outlined
  {static} +IconData hiking
  {static} +IconData hiking_sharp
  {static} +IconData hiking_rounded
  {static} +IconData hiking_outlined
  {static} +IconData history
  {static} +IconData history_sharp
  {static} +IconData history_rounded
  {static} +IconData history_outlined
  {static} +IconData history_edu
  {static} +IconData history_edu_sharp
  {static} +IconData history_edu_rounded
  {static} +IconData history_edu_outlined
  {static} +IconData history_toggle_off
  {static} +IconData history_toggle_off_sharp
  {static} +IconData history_toggle_off_rounded
  {static} +IconData history_toggle_off_outlined
  {static} +IconData hive
  {static} +IconData hive_sharp
  {static} +IconData hive_rounded
  {static} +IconData hive_outlined
  {static} +IconData hls
  {static} +IconData hls_sharp
  {static} +IconData hls_rounded
  {static} +IconData hls_outlined
  {static} +IconData hls_off
  {static} +IconData hls_off_sharp
  {static} +IconData hls_off_rounded
  {static} +IconData hls_off_outlined
  {static} +IconData holiday_village
  {static} +IconData holiday_village_sharp
  {static} +IconData holiday_village_rounded
  {static} +IconData holiday_village_outlined
  {static} +IconData home
  {static} +IconData home_sharp
  {static} +IconData home_rounded
  {static} +IconData home_outlined
  {static} +IconData home_filled
  {static} +IconData home_max
  {static} +IconData home_max_sharp
  {static} +IconData home_max_rounded
  {static} +IconData home_max_outlined
  {static} +IconData home_mini
  {static} +IconData home_mini_sharp
  {static} +IconData home_mini_rounded
  {static} +IconData home_mini_outlined
  {static} +IconData home_repair_service
  {static} +IconData home_repair_service_sharp
  {static} +IconData home_repair_service_rounded
  {static} +IconData home_repair_service_outlined
  {static} +IconData home_work
  {static} +IconData home_work_sharp
  {static} +IconData home_work_rounded
  {static} +IconData home_work_outlined
  {static} +IconData horizontal_distribute
  {static} +IconData horizontal_distribute_sharp
  {static} +IconData horizontal_distribute_rounded
  {static} +IconData horizontal_distribute_outlined
  {static} +IconData horizontal_rule
  {static} +IconData horizontal_rule_sharp
  {static} +IconData horizontal_rule_rounded
  {static} +IconData horizontal_rule_outlined
  {static} +IconData horizontal_split
  {static} +IconData horizontal_split_sharp
  {static} +IconData horizontal_split_rounded
  {static} +IconData horizontal_split_outlined
  {static} +IconData hot_tub
  {static} +IconData hot_tub_sharp
  {static} +IconData hot_tub_rounded
  {static} +IconData hot_tub_outlined
  {static} +IconData hotel
  {static} +IconData hotel_sharp
  {static} +IconData hotel_rounded
  {static} +IconData hotel_outlined
  {static} +IconData hotel_class
  {static} +IconData hotel_class_sharp
  {static} +IconData hotel_class_rounded
  {static} +IconData hotel_class_outlined
  {static} +IconData hourglass_bottom
  {static} +IconData hourglass_bottom_sharp
  {static} +IconData hourglass_bottom_rounded
  {static} +IconData hourglass_bottom_outlined
  {static} +IconData hourglass_disabled
  {static} +IconData hourglass_disabled_sharp
  {static} +IconData hourglass_disabled_rounded
  {static} +IconData hourglass_disabled_outlined
  {static} +IconData hourglass_empty
  {static} +IconData hourglass_empty_sharp
  {static} +IconData hourglass_empty_rounded
  {static} +IconData hourglass_empty_outlined
  {static} +IconData hourglass_full
  {static} +IconData hourglass_full_sharp
  {static} +IconData hourglass_full_rounded
  {static} +IconData hourglass_full_outlined
  {static} +IconData hourglass_top
  {static} +IconData hourglass_top_sharp
  {static} +IconData hourglass_top_rounded
  {static} +IconData hourglass_top_outlined
  {static} +IconData house
  {static} +IconData house_sharp
  {static} +IconData house_rounded
  {static} +IconData house_outlined
  {static} +IconData house_siding
  {static} +IconData house_siding_sharp
  {static} +IconData house_siding_rounded
  {static} +IconData house_siding_outlined
  {static} +IconData houseboat
  {static} +IconData houseboat_sharp
  {static} +IconData houseboat_rounded
  {static} +IconData houseboat_outlined
  {static} +IconData how_to_reg
  {static} +IconData how_to_reg_sharp
  {static} +IconData how_to_reg_rounded
  {static} +IconData how_to_reg_outlined
  {static} +IconData how_to_vote
  {static} +IconData how_to_vote_sharp
  {static} +IconData how_to_vote_rounded
  {static} +IconData how_to_vote_outlined
  {static} +IconData html
  {static} +IconData html_sharp
  {static} +IconData html_rounded
  {static} +IconData html_outlined
  {static} +IconData http
  {static} +IconData http_sharp
  {static} +IconData http_rounded
  {static} +IconData http_outlined
  {static} +IconData https
  {static} +IconData https_sharp
  {static} +IconData https_rounded
  {static} +IconData https_outlined
  {static} +IconData hub
  {static} +IconData hub_sharp
  {static} +IconData hub_rounded
  {static} +IconData hub_outlined
  {static} +IconData hvac
  {static} +IconData hvac_sharp
  {static} +IconData hvac_rounded
  {static} +IconData hvac_outlined
  {static} +IconData ice_skating
  {static} +IconData ice_skating_sharp
  {static} +IconData ice_skating_rounded
  {static} +IconData ice_skating_outlined
  {static} +IconData icecream
  {static} +IconData icecream_sharp
  {static} +IconData icecream_rounded
  {static} +IconData icecream_outlined
  {static} +IconData image
  {static} +IconData image_sharp
  {static} +IconData image_rounded
  {static} +IconData image_outlined
  {static} +IconData image_aspect_ratio
  {static} +IconData image_aspect_ratio_sharp
  {static} +IconData image_aspect_ratio_rounded
  {static} +IconData image_aspect_ratio_outlined
  {static} +IconData image_not_supported
  {static} +IconData image_not_supported_sharp
  {static} +IconData image_not_supported_rounded
  {static} +IconData image_not_supported_outlined
  {static} +IconData image_search
  {static} +IconData image_search_sharp
  {static} +IconData image_search_rounded
  {static} +IconData image_search_outlined
  {static} +IconData imagesearch_roller
  {static} +IconData imagesearch_roller_sharp
  {static} +IconData imagesearch_roller_rounded
  {static} +IconData imagesearch_roller_outlined
  {static} +IconData import_contacts
  {static} +IconData import_contacts_sharp
  {static} +IconData import_contacts_rounded
  {static} +IconData import_contacts_outlined
  {static} +IconData import_export
  {static} +IconData import_export_sharp
  {static} +IconData import_export_rounded
  {static} +IconData import_export_outlined
  {static} +IconData important_devices
  {static} +IconData important_devices_sharp
  {static} +IconData important_devices_rounded
  {static} +IconData important_devices_outlined
  {static} +IconData inbox
  {static} +IconData inbox_sharp
  {static} +IconData inbox_rounded
  {static} +IconData inbox_outlined
  {static} +IconData incomplete_circle
  {static} +IconData incomplete_circle_sharp
  {static} +IconData incomplete_circle_rounded
  {static} +IconData incomplete_circle_outlined
  {static} +IconData indeterminate_check_box
  {static} +IconData indeterminate_check_box_sharp
  {static} +IconData indeterminate_check_box_rounded
  {static} +IconData indeterminate_check_box_outlined
  {static} +IconData info
  {static} +IconData info_sharp
  {static} +IconData info_rounded
  {static} +IconData info_outlined
  {static} +IconData info_outline
  {static} +IconData info_outline_sharp
  {static} +IconData info_outline_rounded
  {static} +IconData input
  {static} +IconData input_sharp
  {static} +IconData input_rounded
  {static} +IconData input_outlined
  {static} +IconData insert_chart
  {static} +IconData insert_chart_sharp
  {static} +IconData insert_chart_rounded
  {static} +IconData insert_chart_outlined
  {static} +IconData insert_chart_outlined_sharp
  {static} +IconData insert_chart_outlined_rounded
  {static} +IconData insert_chart_outlined_outlined
  {static} +IconData insert_comment
  {static} +IconData insert_comment_sharp
  {static} +IconData insert_comment_rounded
  {static} +IconData insert_comment_outlined
  {static} +IconData insert_drive_file
  {static} +IconData insert_drive_file_sharp
  {static} +IconData insert_drive_file_rounded
  {static} +IconData insert_drive_file_outlined
  {static} +IconData insert_emoticon
  {static} +IconData insert_emoticon_sharp
  {static} +IconData insert_emoticon_rounded
  {static} +IconData insert_emoticon_outlined
  {static} +IconData insert_invitation
  {static} +IconData insert_invitation_sharp
  {static} +IconData insert_invitation_rounded
  {static} +IconData insert_invitation_outlined
  {static} +IconData insert_link
  {static} +IconData insert_link_sharp
  {static} +IconData insert_link_rounded
  {static} +IconData insert_link_outlined
  {static} +IconData insert_page_break
  {static} +IconData insert_page_break_sharp
  {static} +IconData insert_page_break_rounded
  {static} +IconData insert_page_break_outlined
  {static} +IconData insert_photo
  {static} +IconData insert_photo_sharp
  {static} +IconData insert_photo_rounded
  {static} +IconData insert_photo_outlined
  {static} +IconData insights
  {static} +IconData insights_sharp
  {static} +IconData insights_rounded
  {static} +IconData insights_outlined
  {static} +IconData install_desktop
  {static} +IconData install_desktop_sharp
  {static} +IconData install_desktop_rounded
  {static} +IconData install_desktop_outlined
  {static} +IconData install_mobile
  {static} +IconData install_mobile_sharp
  {static} +IconData install_mobile_rounded
  {static} +IconData install_mobile_outlined
  {static} +IconData integration_instructions
  {static} +IconData integration_instructions_sharp
  {static} +IconData integration_instructions_rounded
  {static} +IconData integration_instructions_outlined
  {static} +IconData interests
  {static} +IconData interests_sharp
  {static} +IconData interests_rounded
  {static} +IconData interests_outlined
  {static} +IconData interpreter_mode
  {static} +IconData interpreter_mode_sharp
  {static} +IconData interpreter_mode_rounded
  {static} +IconData interpreter_mode_outlined
  {static} +IconData inventory
  {static} +IconData inventory_sharp
  {static} +IconData inventory_rounded
  {static} +IconData inventory_outlined
  {static} +IconData inventory_2
  {static} +IconData inventory_2_sharp
  {static} +IconData inventory_2_rounded
  {static} +IconData inventory_2_outlined
  {static} +IconData invert_colors
  {static} +IconData invert_colors_sharp
  {static} +IconData invert_colors_rounded
  {static} +IconData invert_colors_outlined
  {static} +IconData invert_colors_off
  {static} +IconData invert_colors_off_sharp
  {static} +IconData invert_colors_off_rounded
  {static} +IconData invert_colors_off_outlined
  {static} +IconData invert_colors_on
  {static} +IconData invert_colors_on_sharp
  {static} +IconData invert_colors_on_rounded
  {static} +IconData invert_colors_on_outlined
  {static} +IconData ios_share
  {static} +IconData ios_share_sharp
  {static} +IconData ios_share_rounded
  {static} +IconData ios_share_outlined
  {static} +IconData iron
  {static} +IconData iron_sharp
  {static} +IconData iron_rounded
  {static} +IconData iron_outlined
  {static} +IconData iso
  {static} +IconData iso_sharp
  {static} +IconData iso_rounded
  {static} +IconData iso_outlined
  {static} +IconData javascript
  {static} +IconData javascript_sharp
  {static} +IconData javascript_rounded
  {static} +IconData javascript_outlined
  {static} +IconData join_full
  {static} +IconData join_full_sharp
  {static} +IconData join_full_rounded
  {static} +IconData join_full_outlined
  {static} +IconData join_inner
  {static} +IconData join_inner_sharp
  {static} +IconData join_inner_rounded
  {static} +IconData join_inner_outlined
  {static} +IconData join_left
  {static} +IconData join_left_sharp
  {static} +IconData join_left_rounded
  {static} +IconData join_left_outlined
  {static} +IconData join_right
  {static} +IconData join_right_sharp
  {static} +IconData join_right_rounded
  {static} +IconData join_right_outlined
  {static} +IconData kayaking
  {static} +IconData kayaking_sharp
  {static} +IconData kayaking_rounded
  {static} +IconData kayaking_outlined
  {static} +IconData kebab_dining
  {static} +IconData kebab_dining_sharp
  {static} +IconData kebab_dining_rounded
  {static} +IconData kebab_dining_outlined
  {static} +IconData key
  {static} +IconData key_sharp
  {static} +IconData key_rounded
  {static} +IconData key_outlined
  {static} +IconData key_off
  {static} +IconData key_off_sharp
  {static} +IconData key_off_rounded
  {static} +IconData key_off_outlined
  {static} +IconData keyboard
  {static} +IconData keyboard_sharp
  {static} +IconData keyboard_rounded
  {static} +IconData keyboard_outlined
  {static} +IconData keyboard_alt
  {static} +IconData keyboard_alt_sharp
  {static} +IconData keyboard_alt_rounded
  {static} +IconData keyboard_alt_outlined
  {static} +IconData keyboard_arrow_down
  {static} +IconData keyboard_arrow_down_sharp
  {static} +IconData keyboard_arrow_down_rounded
  {static} +IconData keyboard_arrow_down_outlined
  {static} +IconData keyboard_arrow_left
  {static} +IconData keyboard_arrow_left_sharp
  {static} +IconData keyboard_arrow_left_rounded
  {static} +IconData keyboard_arrow_left_outlined
  {static} +IconData keyboard_arrow_right
  {static} +IconData keyboard_arrow_right_sharp
  {static} +IconData keyboard_arrow_right_rounded
  {static} +IconData keyboard_arrow_right_outlined
  {static} +IconData keyboard_arrow_up
  {static} +IconData keyboard_arrow_up_sharp
  {static} +IconData keyboard_arrow_up_rounded
  {static} +IconData keyboard_arrow_up_outlined
  {static} +IconData keyboard_backspace
  {static} +IconData keyboard_backspace_sharp
  {static} +IconData keyboard_backspace_rounded
  {static} +IconData keyboard_backspace_outlined
  {static} +IconData keyboard_capslock
  {static} +IconData keyboard_capslock_sharp
  {static} +IconData keyboard_capslock_rounded
  {static} +IconData keyboard_capslock_outlined
  {static} +IconData keyboard_command_key
  {static} +IconData keyboard_command_key_sharp
  {static} +IconData keyboard_command_key_rounded
  {static} +IconData keyboard_command_key_outlined
  {static} +IconData keyboard_control
  {static} +IconData keyboard_control_sharp
  {static} +IconData keyboard_control_rounded
  {static} +IconData keyboard_control_outlined
  {static} +IconData keyboard_control_key
  {static} +IconData keyboard_control_key_sharp
  {static} +IconData keyboard_control_key_rounded
  {static} +IconData keyboard_control_key_outlined
  {static} +IconData keyboard_double_arrow_down
  {static} +IconData keyboard_double_arrow_down_sharp
  {static} +IconData keyboard_double_arrow_down_rounded
  {static} +IconData keyboard_double_arrow_down_outlined
  {static} +IconData keyboard_double_arrow_left
  {static} +IconData keyboard_double_arrow_left_sharp
  {static} +IconData keyboard_double_arrow_left_rounded
  {static} +IconData keyboard_double_arrow_left_outlined
  {static} +IconData keyboard_double_arrow_right
  {static} +IconData keyboard_double_arrow_right_sharp
  {static} +IconData keyboard_double_arrow_right_rounded
  {static} +IconData keyboard_double_arrow_right_outlined
  {static} +IconData keyboard_double_arrow_up
  {static} +IconData keyboard_double_arrow_up_sharp
  {static} +IconData keyboard_double_arrow_up_rounded
  {static} +IconData keyboard_double_arrow_up_outlined
  {static} +IconData keyboard_hide
  {static} +IconData keyboard_hide_sharp
  {static} +IconData keyboard_hide_rounded
  {static} +IconData keyboard_hide_outlined
  {static} +IconData keyboard_option_key
  {static} +IconData keyboard_option_key_sharp
  {static} +IconData keyboard_option_key_rounded
  {static} +IconData keyboard_option_key_outlined
  {static} +IconData keyboard_return
  {static} +IconData keyboard_return_sharp
  {static} +IconData keyboard_return_rounded
  {static} +IconData keyboard_return_outlined
  {static} +IconData keyboard_tab
  {static} +IconData keyboard_tab_sharp
  {static} +IconData keyboard_tab_rounded
  {static} +IconData keyboard_tab_outlined
  {static} +IconData keyboard_voice
  {static} +IconData keyboard_voice_sharp
  {static} +IconData keyboard_voice_rounded
  {static} +IconData keyboard_voice_outlined
  {static} +IconData king_bed
  {static} +IconData king_bed_sharp
  {static} +IconData king_bed_rounded
  {static} +IconData king_bed_outlined
  {static} +IconData kitchen
  {static} +IconData kitchen_sharp
  {static} +IconData kitchen_rounded
  {static} +IconData kitchen_outlined
  {static} +IconData kitesurfing
  {static} +IconData kitesurfing_sharp
  {static} +IconData kitesurfing_rounded
  {static} +IconData kitesurfing_outlined
  {static} +IconData label
  {static} +IconData label_sharp
  {static} +IconData label_rounded
  {static} +IconData label_outlined
  {static} +IconData label_important
  {static} +IconData label_important_sharp
  {static} +IconData label_important_rounded
  {static} +IconData label_important_outlined
  {static} +IconData label_important_outline
  {static} +IconData label_important_outline_sharp
  {static} +IconData label_important_outline_rounded
  {static} +IconData label_off
  {static} +IconData label_off_sharp
  {static} +IconData label_off_rounded
  {static} +IconData label_off_outlined
  {static} +IconData label_outline
  {static} +IconData label_outline_sharp
  {static} +IconData label_outline_rounded
  {static} +IconData lan
  {static} +IconData lan_sharp
  {static} +IconData lan_rounded
  {static} +IconData lan_outlined
  {static} +IconData landscape
  {static} +IconData landscape_sharp
  {static} +IconData landscape_rounded
  {static} +IconData landscape_outlined
  {static} +IconData landslide
  {static} +IconData landslide_sharp
  {static} +IconData landslide_rounded
  {static} +IconData landslide_outlined
  {static} +IconData language
  {static} +IconData language_sharp
  {static} +IconData language_rounded
  {static} +IconData language_outlined
  {static} +IconData laptop
  {static} +IconData laptop_sharp
  {static} +IconData laptop_rounded
  {static} +IconData laptop_outlined
  {static} +IconData laptop_chromebook
  {static} +IconData laptop_chromebook_sharp
  {static} +IconData laptop_chromebook_rounded
  {static} +IconData laptop_chromebook_outlined
  {static} +IconData laptop_mac
  {static} +IconData laptop_mac_sharp
  {static} +IconData laptop_mac_rounded
  {static} +IconData laptop_mac_outlined
  {static} +IconData laptop_windows
  {static} +IconData laptop_windows_sharp
  {static} +IconData laptop_windows_rounded
  {static} +IconData laptop_windows_outlined
  {static} +IconData last_page
  {static} +IconData last_page_sharp
  {static} +IconData last_page_rounded
  {static} +IconData last_page_outlined
  {static} +IconData launch
  {static} +IconData launch_sharp
  {static} +IconData launch_rounded
  {static} +IconData launch_outlined
  {static} +IconData layers
  {static} +IconData layers_sharp
  {static} +IconData layers_rounded
  {static} +IconData layers_outlined
  {static} +IconData layers_clear
  {static} +IconData layers_clear_sharp
  {static} +IconData layers_clear_rounded
  {static} +IconData layers_clear_outlined
  {static} +IconData leaderboard
  {static} +IconData leaderboard_sharp
  {static} +IconData leaderboard_rounded
  {static} +IconData leaderboard_outlined
  {static} +IconData leak_add
  {static} +IconData leak_add_sharp
  {static} +IconData leak_add_rounded
  {static} +IconData leak_add_outlined
  {static} +IconData leak_remove
  {static} +IconData leak_remove_sharp
  {static} +IconData leak_remove_rounded
  {static} +IconData leak_remove_outlined
  {static} +IconData leave_bags_at_home
  {static} +IconData leave_bags_at_home_sharp
  {static} +IconData leave_bags_at_home_rounded
  {static} +IconData leave_bags_at_home_outlined
  {static} +IconData legend_toggle
  {static} +IconData legend_toggle_sharp
  {static} +IconData legend_toggle_rounded
  {static} +IconData legend_toggle_outlined
  {static} +IconData lens
  {static} +IconData lens_sharp
  {static} +IconData lens_rounded
  {static} +IconData lens_outlined
  {static} +IconData lens_blur
  {static} +IconData lens_blur_sharp
  {static} +IconData lens_blur_rounded
  {static} +IconData lens_blur_outlined
  {static} +IconData library_add
  {static} +IconData library_add_sharp
  {static} +IconData library_add_rounded
  {static} +IconData library_add_outlined
  {static} +IconData library_add_check
  {static} +IconData library_add_check_sharp
  {static} +IconData library_add_check_rounded
  {static} +IconData library_add_check_outlined
  {static} +IconData library_books
  {static} +IconData library_books_sharp
  {static} +IconData library_books_rounded
  {static} +IconData library_books_outlined
  {static} +IconData library_music
  {static} +IconData library_music_sharp
  {static} +IconData library_music_rounded
  {static} +IconData library_music_outlined
  {static} +IconData light
  {static} +IconData light_sharp
  {static} +IconData light_rounded
  {static} +IconData light_outlined
  {static} +IconData light_mode
  {static} +IconData light_mode_sharp
  {static} +IconData light_mode_rounded
  {static} +IconData light_mode_outlined
  {static} +IconData lightbulb
  {static} +IconData lightbulb_sharp
  {static} +IconData lightbulb_rounded
  {static} +IconData lightbulb_outlined
  {static} +IconData lightbulb_circle
  {static} +IconData lightbulb_circle_sharp
  {static} +IconData lightbulb_circle_rounded
  {static} +IconData lightbulb_circle_outlined
  {static} +IconData lightbulb_outline
  {static} +IconData lightbulb_outline_sharp
  {static} +IconData lightbulb_outline_rounded
  {static} +IconData line_axis
  {static} +IconData line_axis_sharp
  {static} +IconData line_axis_rounded
  {static} +IconData line_axis_outlined
  {static} +IconData line_style
  {static} +IconData line_style_sharp
  {static} +IconData line_style_rounded
  {static} +IconData line_style_outlined
  {static} +IconData line_weight
  {static} +IconData line_weight_sharp
  {static} +IconData line_weight_rounded
  {static} +IconData line_weight_outlined
  {static} +IconData linear_scale
  {static} +IconData linear_scale_sharp
  {static} +IconData linear_scale_rounded
  {static} +IconData linear_scale_outlined
  {static} +IconData link
  {static} +IconData link_sharp
  {static} +IconData link_rounded
  {static} +IconData link_outlined
  {static} +IconData link_off
  {static} +IconData link_off_sharp
  {static} +IconData link_off_rounded
  {static} +IconData link_off_outlined
  {static} +IconData linked_camera
  {static} +IconData linked_camera_sharp
  {static} +IconData linked_camera_rounded
  {static} +IconData linked_camera_outlined
  {static} +IconData liquor
  {static} +IconData liquor_sharp
  {static} +IconData liquor_rounded
  {static} +IconData liquor_outlined
  {static} +IconData list
  {static} +IconData list_sharp
  {static} +IconData list_rounded
  {static} +IconData list_outlined
  {static} +IconData list_alt
  {static} +IconData list_alt_sharp
  {static} +IconData list_alt_rounded
  {static} +IconData list_alt_outlined
  {static} +IconData live_help
  {static} +IconData live_help_sharp
  {static} +IconData live_help_rounded
  {static} +IconData live_help_outlined
  {static} +IconData live_tv
  {static} +IconData live_tv_sharp
  {static} +IconData live_tv_rounded
  {static} +IconData live_tv_outlined
  {static} +IconData living
  {static} +IconData living_sharp
  {static} +IconData living_rounded
  {static} +IconData living_outlined
  {static} +IconData local_activity
  {static} +IconData local_activity_sharp
  {static} +IconData local_activity_rounded
  {static} +IconData local_activity_outlined
  {static} +IconData local_airport
  {static} +IconData local_airport_sharp
  {static} +IconData local_airport_rounded
  {static} +IconData local_airport_outlined
  {static} +IconData local_atm
  {static} +IconData local_atm_sharp
  {static} +IconData local_atm_rounded
  {static} +IconData local_atm_outlined
  {static} +IconData local_attraction
  {static} +IconData local_attraction_sharp
  {static} +IconData local_attraction_rounded
  {static} +IconData local_attraction_outlined
  {static} +IconData local_bar
  {static} +IconData local_bar_sharp
  {static} +IconData local_bar_rounded
  {static} +IconData local_bar_outlined
  {static} +IconData local_cafe
  {static} +IconData local_cafe_sharp
  {static} +IconData local_cafe_rounded
  {static} +IconData local_cafe_outlined
  {static} +IconData local_car_wash
  {static} +IconData local_car_wash_sharp
  {static} +IconData local_car_wash_rounded
  {static} +IconData local_car_wash_outlined
  {static} +IconData local_convenience_store
  {static} +IconData local_convenience_store_sharp
  {static} +IconData local_convenience_store_rounded
  {static} +IconData local_convenience_store_outlined
  {static} +IconData local_dining
  {static} +IconData local_dining_sharp
  {static} +IconData local_dining_rounded
  {static} +IconData local_dining_outlined
  {static} +IconData local_drink
  {static} +IconData local_drink_sharp
  {static} +IconData local_drink_rounded
  {static} +IconData local_drink_outlined
  {static} +IconData local_fire_department
  {static} +IconData local_fire_department_sharp
  {static} +IconData local_fire_department_rounded
  {static} +IconData local_fire_department_outlined
  {static} +IconData local_florist
  {static} +IconData local_florist_sharp
  {static} +IconData local_florist_rounded
  {static} +IconData local_florist_outlined
  {static} +IconData local_gas_station
  {static} +IconData local_gas_station_sharp
  {static} +IconData local_gas_station_rounded
  {static} +IconData local_gas_station_outlined
  {static} +IconData local_grocery_store
  {static} +IconData local_grocery_store_sharp
  {static} +IconData local_grocery_store_rounded
  {static} +IconData local_grocery_store_outlined
  {static} +IconData local_hospital
  {static} +IconData local_hospital_sharp
  {static} +IconData local_hospital_rounded
  {static} +IconData local_hospital_outlined
  {static} +IconData local_hotel
  {static} +IconData local_hotel_sharp
  {static} +IconData local_hotel_rounded
  {static} +IconData local_hotel_outlined
  {static} +IconData local_laundry_service
  {static} +IconData local_laundry_service_sharp
  {static} +IconData local_laundry_service_rounded
  {static} +IconData local_laundry_service_outlined
  {static} +IconData local_library
  {static} +IconData local_library_sharp
  {static} +IconData local_library_rounded
  {static} +IconData local_library_outlined
  {static} +IconData local_mall
  {static} +IconData local_mall_sharp
  {static} +IconData local_mall_rounded
  {static} +IconData local_mall_outlined
  {static} +IconData local_movies
  {static} +IconData local_movies_sharp
  {static} +IconData local_movies_rounded
  {static} +IconData local_movies_outlined
  {static} +IconData local_offer
  {static} +IconData local_offer_sharp
  {static} +IconData local_offer_rounded
  {static} +IconData local_offer_outlined
  {static} +IconData local_parking
  {static} +IconData local_parking_sharp
  {static} +IconData local_parking_rounded
  {static} +IconData local_parking_outlined
  {static} +IconData local_pharmacy
  {static} +IconData local_pharmacy_sharp
  {static} +IconData local_pharmacy_rounded
  {static} +IconData local_pharmacy_outlined
  {static} +IconData local_phone
  {static} +IconData local_phone_sharp
  {static} +IconData local_phone_rounded
  {static} +IconData local_phone_outlined
  {static} +IconData local_pizza
  {static} +IconData local_pizza_sharp
  {static} +IconData local_pizza_rounded
  {static} +IconData local_pizza_outlined
  {static} +IconData local_play
  {static} +IconData local_play_sharp
  {static} +IconData local_play_rounded
  {static} +IconData local_play_outlined
  {static} +IconData local_police
  {static} +IconData local_police_sharp
  {static} +IconData local_police_rounded
  {static} +IconData local_police_outlined
  {static} +IconData local_post_office
  {static} +IconData local_post_office_sharp
  {static} +IconData local_post_office_rounded
  {static} +IconData local_post_office_outlined
  {static} +IconData local_print_shop
  {static} +IconData local_print_shop_sharp
  {static} +IconData local_print_shop_rounded
  {static} +IconData local_print_shop_outlined
  {static} +IconData local_printshop
  {static} +IconData local_printshop_sharp
  {static} +IconData local_printshop_rounded
  {static} +IconData local_printshop_outlined
  {static} +IconData local_restaurant
  {static} +IconData local_restaurant_sharp
  {static} +IconData local_restaurant_rounded
  {static} +IconData local_restaurant_outlined
  {static} +IconData local_see
  {static} +IconData local_see_sharp
  {static} +IconData local_see_rounded
  {static} +IconData local_see_outlined
  {static} +IconData local_shipping
  {static} +IconData local_shipping_sharp
  {static} +IconData local_shipping_rounded
  {static} +IconData local_shipping_outlined
  {static} +IconData local_taxi
  {static} +IconData local_taxi_sharp
  {static} +IconData local_taxi_rounded
  {static} +IconData local_taxi_outlined
  {static} +IconData location_city
  {static} +IconData location_city_sharp
  {static} +IconData location_city_rounded
  {static} +IconData location_city_outlined
  {static} +IconData location_disabled
  {static} +IconData location_disabled_sharp
  {static} +IconData location_disabled_rounded
  {static} +IconData location_disabled_outlined
  {static} +IconData location_history
  {static} +IconData location_history_sharp
  {static} +IconData location_history_rounded
  {static} +IconData location_history_outlined
  {static} +IconData location_off
  {static} +IconData location_off_sharp
  {static} +IconData location_off_rounded
  {static} +IconData location_off_outlined
  {static} +IconData location_on
  {static} +IconData location_on_sharp
  {static} +IconData location_on_rounded
  {static} +IconData location_on_outlined
  {static} +IconData location_pin
  {static} +IconData location_searching
  {static} +IconData location_searching_sharp
  {static} +IconData location_searching_rounded
  {static} +IconData location_searching_outlined
  {static} +IconData lock
  {static} +IconData lock_sharp
  {static} +IconData lock_rounded
  {static} +IconData lock_outlined
  {static} +IconData lock_clock
  {static} +IconData lock_clock_sharp
  {static} +IconData lock_clock_rounded
  {static} +IconData lock_clock_outlined
  {static} +IconData lock_open
  {static} +IconData lock_open_sharp
  {static} +IconData lock_open_rounded
  {static} +IconData lock_open_outlined
  {static} +IconData lock_outline
  {static} +IconData lock_outline_sharp
  {static} +IconData lock_outline_rounded
  {static} +IconData lock_person
  {static} +IconData lock_person_sharp
  {static} +IconData lock_person_rounded
  {static} +IconData lock_person_outlined
  {static} +IconData lock_reset
  {static} +IconData lock_reset_sharp
  {static} +IconData lock_reset_rounded
  {static} +IconData lock_reset_outlined
  {static} +IconData login
  {static} +IconData login_sharp
  {static} +IconData login_rounded
  {static} +IconData login_outlined
  {static} +IconData logo_dev
  {static} +IconData logo_dev_sharp
  {static} +IconData logo_dev_rounded
  {static} +IconData logo_dev_outlined
  {static} +IconData logout
  {static} +IconData logout_sharp
  {static} +IconData logout_rounded
  {static} +IconData logout_outlined
  {static} +IconData looks
  {static} +IconData looks_sharp
  {static} +IconData looks_rounded
  {static} +IconData looks_outlined
  {static} +IconData looks_3
  {static} +IconData looks_3_sharp
  {static} +IconData looks_3_rounded
  {static} +IconData looks_3_outlined
  {static} +IconData looks_4
  {static} +IconData looks_4_sharp
  {static} +IconData looks_4_rounded
  {static} +IconData looks_4_outlined
  {static} +IconData looks_5
  {static} +IconData looks_5_sharp
  {static} +IconData looks_5_rounded
  {static} +IconData looks_5_outlined
  {static} +IconData looks_6
  {static} +IconData looks_6_sharp
  {static} +IconData looks_6_rounded
  {static} +IconData looks_6_outlined
  {static} +IconData looks_one
  {static} +IconData looks_one_sharp
  {static} +IconData looks_one_rounded
  {static} +IconData looks_one_outlined
  {static} +IconData looks_two
  {static} +IconData looks_two_sharp
  {static} +IconData looks_two_rounded
  {static} +IconData looks_two_outlined
  {static} +IconData loop
  {static} +IconData loop_sharp
  {static} +IconData loop_rounded
  {static} +IconData loop_outlined
  {static} +IconData loupe
  {static} +IconData loupe_sharp
  {static} +IconData loupe_rounded
  {static} +IconData loupe_outlined
  {static} +IconData low_priority
  {static} +IconData low_priority_sharp
  {static} +IconData low_priority_rounded
  {static} +IconData low_priority_outlined
  {static} +IconData loyalty
  {static} +IconData loyalty_sharp
  {static} +IconData loyalty_rounded
  {static} +IconData loyalty_outlined
  {static} +IconData lte_mobiledata
  {static} +IconData lte_mobiledata_sharp
  {static} +IconData lte_mobiledata_rounded
  {static} +IconData lte_mobiledata_outlined
  {static} +IconData lte_plus_mobiledata
  {static} +IconData lte_plus_mobiledata_sharp
  {static} +IconData lte_plus_mobiledata_rounded
  {static} +IconData lte_plus_mobiledata_outlined
  {static} +IconData luggage
  {static} +IconData luggage_sharp
  {static} +IconData luggage_rounded
  {static} +IconData luggage_outlined
  {static} +IconData lunch_dining
  {static} +IconData lunch_dining_sharp
  {static} +IconData lunch_dining_rounded
  {static} +IconData lunch_dining_outlined
  {static} +IconData lyrics
  {static} +IconData lyrics_sharp
  {static} +IconData lyrics_rounded
  {static} +IconData lyrics_outlined
  {static} +IconData macro_off
  {static} +IconData macro_off_sharp
  {static} +IconData macro_off_rounded
  {static} +IconData macro_off_outlined
  {static} +IconData mail
  {static} +IconData mail_sharp
  {static} +IconData mail_rounded
  {static} +IconData mail_outlined
  {static} +IconData mail_lock
  {static} +IconData mail_lock_sharp
  {static} +IconData mail_lock_rounded
  {static} +IconData mail_lock_outlined
  {static} +IconData mail_outline
  {static} +IconData mail_outline_sharp
  {static} +IconData mail_outline_rounded
  {static} +IconData mail_outline_outlined
  {static} +IconData male
  {static} +IconData male_sharp
  {static} +IconData male_rounded
  {static} +IconData male_outlined
  {static} +IconData man
  {static} +IconData man_sharp
  {static} +IconData man_rounded
  {static} +IconData man_outlined
  {static} +IconData man_2
  {static} +IconData man_2_sharp
  {static} +IconData man_2_rounded
  {static} +IconData man_2_outlined
  {static} +IconData man_3
  {static} +IconData man_3_sharp
  {static} +IconData man_3_rounded
  {static} +IconData man_3_outlined
  {static} +IconData man_4
  {static} +IconData man_4_sharp
  {static} +IconData man_4_rounded
  {static} +IconData man_4_outlined
  {static} +IconData manage_accounts
  {static} +IconData manage_accounts_sharp
  {static} +IconData manage_accounts_rounded
  {static} +IconData manage_accounts_outlined
  {static} +IconData manage_history
  {static} +IconData manage_history_sharp
  {static} +IconData manage_history_rounded
  {static} +IconData manage_history_outlined
  {static} +IconData manage_search
  {static} +IconData manage_search_sharp
  {static} +IconData manage_search_rounded
  {static} +IconData manage_search_outlined
  {static} +IconData map
  {static} +IconData map_sharp
  {static} +IconData map_rounded
  {static} +IconData map_outlined
  {static} +IconData maps_home_work
  {static} +IconData maps_home_work_sharp
  {static} +IconData maps_home_work_rounded
  {static} +IconData maps_home_work_outlined
  {static} +IconData maps_ugc
  {static} +IconData maps_ugc_sharp
  {static} +IconData maps_ugc_rounded
  {static} +IconData maps_ugc_outlined
  {static} +IconData margin
  {static} +IconData margin_sharp
  {static} +IconData margin_rounded
  {static} +IconData margin_outlined
  {static} +IconData mark_as_unread
  {static} +IconData mark_as_unread_sharp
  {static} +IconData mark_as_unread_rounded
  {static} +IconData mark_as_unread_outlined
  {static} +IconData mark_chat_read
  {static} +IconData mark_chat_read_sharp
  {static} +IconData mark_chat_read_rounded
  {static} +IconData mark_chat_read_outlined
  {static} +IconData mark_chat_unread
  {static} +IconData mark_chat_unread_sharp
  {static} +IconData mark_chat_unread_rounded
  {static} +IconData mark_chat_unread_outlined
  {static} +IconData mark_email_read
  {static} +IconData mark_email_read_sharp
  {static} +IconData mark_email_read_rounded
  {static} +IconData mark_email_read_outlined
  {static} +IconData mark_email_unread
  {static} +IconData mark_email_unread_sharp
  {static} +IconData mark_email_unread_rounded
  {static} +IconData mark_email_unread_outlined
  {static} +IconData mark_unread_chat_alt
  {static} +IconData mark_unread_chat_alt_sharp
  {static} +IconData mark_unread_chat_alt_rounded
  {static} +IconData mark_unread_chat_alt_outlined
  {static} +IconData markunread
  {static} +IconData markunread_sharp
  {static} +IconData markunread_rounded
  {static} +IconData markunread_outlined
  {static} +IconData markunread_mailbox
  {static} +IconData markunread_mailbox_sharp
  {static} +IconData markunread_mailbox_rounded
  {static} +IconData markunread_mailbox_outlined
  {static} +IconData masks
  {static} +IconData masks_sharp
  {static} +IconData masks_rounded
  {static} +IconData masks_outlined
  {static} +IconData maximize
  {static} +IconData maximize_sharp
  {static} +IconData maximize_rounded
  {static} +IconData maximize_outlined
  {static} +IconData media_bluetooth_off
  {static} +IconData media_bluetooth_off_sharp
  {static} +IconData media_bluetooth_off_rounded
  {static} +IconData media_bluetooth_off_outlined
  {static} +IconData media_bluetooth_on
  {static} +IconData media_bluetooth_on_sharp
  {static} +IconData media_bluetooth_on_rounded
  {static} +IconData media_bluetooth_on_outlined
  {static} +IconData mediation
  {static} +IconData mediation_sharp
  {static} +IconData mediation_rounded
  {static} +IconData mediation_outlined
  {static} +IconData medical_information
  {static} +IconData medical_information_sharp
  {static} +IconData medical_information_rounded
  {static} +IconData medical_information_outlined
  {static} +IconData medical_services
  {static} +IconData medical_services_sharp
  {static} +IconData medical_services_rounded
  {static} +IconData medical_services_outlined
  {static} +IconData medication
  {static} +IconData medication_sharp
  {static} +IconData medication_rounded
  {static} +IconData medication_outlined
  {static} +IconData medication_liquid
  {static} +IconData medication_liquid_sharp
  {static} +IconData medication_liquid_rounded
  {static} +IconData medication_liquid_outlined
  {static} +IconData meeting_room
  {static} +IconData meeting_room_sharp
  {static} +IconData meeting_room_rounded
  {static} +IconData meeting_room_outlined
  {static} +IconData memory
  {static} +IconData memory_sharp
  {static} +IconData memory_rounded
  {static} +IconData memory_outlined
  {static} +IconData menu
  {static} +IconData menu_sharp
  {static} +IconData menu_rounded
  {static} +IconData menu_outlined
  {static} +IconData menu_book
  {static} +IconData menu_book_sharp
  {static} +IconData menu_book_rounded
  {static} +IconData menu_book_outlined
  {static} +IconData menu_open
  {static} +IconData menu_open_sharp
  {static} +IconData menu_open_rounded
  {static} +IconData menu_open_outlined
  {static} +IconData merge
  {static} +IconData merge_sharp
  {static} +IconData merge_rounded
  {static} +IconData merge_outlined
  {static} +IconData merge_type
  {static} +IconData merge_type_sharp
  {static} +IconData merge_type_rounded
  {static} +IconData merge_type_outlined
  {static} +IconData message
  {static} +IconData message_sharp
  {static} +IconData message_rounded
  {static} +IconData message_outlined
  {static} +IconData messenger
  {static} +IconData messenger_sharp
  {static} +IconData messenger_rounded
  {static} +IconData messenger_outlined
  {static} +IconData messenger_outline
  {static} +IconData messenger_outline_sharp
  {static} +IconData messenger_outline_rounded
  {static} +IconData messenger_outline_outlined
  {static} +IconData mic
  {static} +IconData mic_sharp
  {static} +IconData mic_rounded
  {static} +IconData mic_outlined
  {static} +IconData mic_external_off
  {static} +IconData mic_external_off_sharp
  {static} +IconData mic_external_off_rounded
  {static} +IconData mic_external_off_outlined
  {static} +IconData mic_external_on
  {static} +IconData mic_external_on_sharp
  {static} +IconData mic_external_on_rounded
  {static} +IconData mic_external_on_outlined
  {static} +IconData mic_none
  {static} +IconData mic_none_sharp
  {static} +IconData mic_none_rounded
  {static} +IconData mic_none_outlined
  {static} +IconData mic_off
  {static} +IconData mic_off_sharp
  {static} +IconData mic_off_rounded
  {static} +IconData mic_off_outlined
  {static} +IconData microwave
  {static} +IconData microwave_sharp
  {static} +IconData microwave_rounded
  {static} +IconData microwave_outlined
  {static} +IconData military_tech
  {static} +IconData military_tech_sharp
  {static} +IconData military_tech_rounded
  {static} +IconData military_tech_outlined
  {static} +IconData minimize
  {static} +IconData minimize_sharp
  {static} +IconData minimize_rounded
  {static} +IconData minimize_outlined
  {static} +IconData minor_crash
  {static} +IconData minor_crash_sharp
  {static} +IconData minor_crash_rounded
  {static} +IconData minor_crash_outlined
  {static} +IconData miscellaneous_services
  {static} +IconData miscellaneous_services_sharp
  {static} +IconData miscellaneous_services_rounded
  {static} +IconData miscellaneous_services_outlined
  {static} +IconData missed_video_call
  {static} +IconData missed_video_call_sharp
  {static} +IconData missed_video_call_rounded
  {static} +IconData missed_video_call_outlined
  {static} +IconData mms
  {static} +IconData mms_sharp
  {static} +IconData mms_rounded
  {static} +IconData mms_outlined
  {static} +IconData mobile_friendly
  {static} +IconData mobile_friendly_sharp
  {static} +IconData mobile_friendly_rounded
  {static} +IconData mobile_friendly_outlined
  {static} +IconData mobile_off
  {static} +IconData mobile_off_sharp
  {static} +IconData mobile_off_rounded
  {static} +IconData mobile_off_outlined
  {static} +IconData mobile_screen_share
  {static} +IconData mobile_screen_share_sharp
  {static} +IconData mobile_screen_share_rounded
  {static} +IconData mobile_screen_share_outlined
  {static} +IconData mobiledata_off
  {static} +IconData mobiledata_off_sharp
  {static} +IconData mobiledata_off_rounded
  {static} +IconData mobiledata_off_outlined
  {static} +IconData mode
  {static} +IconData mode_sharp
  {static} +IconData mode_rounded
  {static} +IconData mode_outlined
  {static} +IconData mode_comment
  {static} +IconData mode_comment_sharp
  {static} +IconData mode_comment_rounded
  {static} +IconData mode_comment_outlined
  {static} +IconData mode_edit
  {static} +IconData mode_edit_sharp
  {static} +IconData mode_edit_rounded
  {static} +IconData mode_edit_outlined
  {static} +IconData mode_edit_outline
  {static} +IconData mode_edit_outline_sharp
  {static} +IconData mode_edit_outline_rounded
  {static} +IconData mode_edit_outline_outlined
  {static} +IconData mode_fan_off
  {static} +IconData mode_fan_off_sharp
  {static} +IconData mode_fan_off_rounded
  {static} +IconData mode_fan_off_outlined
  {static} +IconData mode_night
  {static} +IconData mode_night_sharp
  {static} +IconData mode_night_rounded
  {static} +IconData mode_night_outlined
  {static} +IconData mode_of_travel
  {static} +IconData mode_of_travel_sharp
  {static} +IconData mode_of_travel_rounded
  {static} +IconData mode_of_travel_outlined
  {static} +IconData mode_standby
  {static} +IconData mode_standby_sharp
  {static} +IconData mode_standby_rounded
  {static} +IconData mode_standby_outlined
  {static} +IconData model_training
  {static} +IconData model_training_sharp
  {static} +IconData model_training_rounded
  {static} +IconData model_training_outlined
  {static} +IconData monetization_on
  {static} +IconData monetization_on_sharp
  {static} +IconData monetization_on_rounded
  {static} +IconData monetization_on_outlined
  {static} +IconData money
  {static} +IconData money_sharp
  {static} +IconData money_rounded
  {static} +IconData money_outlined
  {static} +IconData money_off
  {static} +IconData money_off_sharp
  {static} +IconData money_off_rounded
  {static} +IconData money_off_outlined
  {static} +IconData money_off_csred
  {static} +IconData money_off_csred_sharp
  {static} +IconData money_off_csred_rounded
  {static} +IconData money_off_csred_outlined
  {static} +IconData monitor
  {static} +IconData monitor_sharp
  {static} +IconData monitor_rounded
  {static} +IconData monitor_outlined
  {static} +IconData monitor_heart
  {static} +IconData monitor_heart_sharp
  {static} +IconData monitor_heart_rounded
  {static} +IconData monitor_heart_outlined
  {static} +IconData monitor_weight
  {static} +IconData monitor_weight_sharp
  {static} +IconData monitor_weight_rounded
  {static} +IconData monitor_weight_outlined
  {static} +IconData monochrome_photos
  {static} +IconData monochrome_photos_sharp
  {static} +IconData monochrome_photos_rounded
  {static} +IconData monochrome_photos_outlined
  {static} +IconData mood
  {static} +IconData mood_sharp
  {static} +IconData mood_rounded
  {static} +IconData mood_outlined
  {static} +IconData mood_bad
  {static} +IconData mood_bad_sharp
  {static} +IconData mood_bad_rounded
  {static} +IconData mood_bad_outlined
  {static} +IconData moped
  {static} +IconData moped_sharp
  {static} +IconData moped_rounded
  {static} +IconData moped_outlined
  {static} +IconData more
  {static} +IconData more_sharp
  {static} +IconData more_rounded
  {static} +IconData more_outlined
  {static} +IconData more_horiz
  {static} +IconData more_horiz_sharp
  {static} +IconData more_horiz_rounded
  {static} +IconData more_horiz_outlined
  {static} +IconData more_time
  {static} +IconData more_time_sharp
  {static} +IconData more_time_rounded
  {static} +IconData more_time_outlined
  {static} +IconData more_vert
  {static} +IconData more_vert_sharp
  {static} +IconData more_vert_rounded
  {static} +IconData more_vert_outlined
  {static} +IconData mosque
  {static} +IconData mosque_sharp
  {static} +IconData mosque_rounded
  {static} +IconData mosque_outlined
  {static} +IconData motion_photos_auto
  {static} +IconData motion_photos_auto_sharp
  {static} +IconData motion_photos_auto_rounded
  {static} +IconData motion_photos_auto_outlined
  {static} +IconData motion_photos_off
  {static} +IconData motion_photos_off_sharp
  {static} +IconData motion_photos_off_rounded
  {static} +IconData motion_photos_off_outlined
  {static} +IconData motion_photos_on
  {static} +IconData motion_photos_on_sharp
  {static} +IconData motion_photos_on_rounded
  {static} +IconData motion_photos_on_outlined
  {static} +IconData motion_photos_pause
  {static} +IconData motion_photos_pause_sharp
  {static} +IconData motion_photos_pause_rounded
  {static} +IconData motion_photos_pause_outlined
  {static} +IconData motion_photos_paused
  {static} +IconData motion_photos_paused_sharp
  {static} +IconData motion_photos_paused_rounded
  {static} +IconData motion_photos_paused_outlined
  {static} +IconData motorcycle
  {static} +IconData motorcycle_sharp
  {static} +IconData motorcycle_rounded
  {static} +IconData motorcycle_outlined
  {static} +IconData mouse
  {static} +IconData mouse_sharp
  {static} +IconData mouse_rounded
  {static} +IconData mouse_outlined
  {static} +IconData move_down
  {static} +IconData move_down_sharp
  {static} +IconData move_down_rounded
  {static} +IconData move_down_outlined
  {static} +IconData move_to_inbox
  {static} +IconData move_to_inbox_sharp
  {static} +IconData move_to_inbox_rounded
  {static} +IconData move_to_inbox_outlined
  {static} +IconData move_up
  {static} +IconData move_up_sharp
  {static} +IconData move_up_rounded
  {static} +IconData move_up_outlined
  {static} +IconData movie
  {static} +IconData movie_sharp
  {static} +IconData movie_rounded
  {static} +IconData movie_outlined
  {static} +IconData movie_creation
  {static} +IconData movie_creation_sharp
  {static} +IconData movie_creation_rounded
  {static} +IconData movie_creation_outlined
  {static} +IconData movie_edit
  {static} +IconData movie_filter
  {static} +IconData movie_filter_sharp
  {static} +IconData movie_filter_rounded
  {static} +IconData movie_filter_outlined
  {static} +IconData moving
  {static} +IconData moving_sharp
  {static} +IconData moving_rounded
  {static} +IconData moving_outlined
  {static} +IconData mp
  {static} +IconData mp_sharp
  {static} +IconData mp_rounded
  {static} +IconData mp_outlined
  {static} +IconData multiline_chart
  {static} +IconData multiline_chart_sharp
  {static} +IconData multiline_chart_rounded
  {static} +IconData multiline_chart_outlined
  {static} +IconData multiple_stop
  {static} +IconData multiple_stop_sharp
  {static} +IconData multiple_stop_rounded
  {static} +IconData multiple_stop_outlined
  {static} +IconData multitrack_audio
  {static} +IconData multitrack_audio_sharp
  {static} +IconData multitrack_audio_rounded
  {static} +IconData multitrack_audio_outlined
  {static} +IconData museum
  {static} +IconData museum_sharp
  {static} +IconData museum_rounded
  {static} +IconData museum_outlined
  {static} +IconData music_note
  {static} +IconData music_note_sharp
  {static} +IconData music_note_rounded
  {static} +IconData music_note_outlined
  {static} +IconData music_off
  {static} +IconData music_off_sharp
  {static} +IconData music_off_rounded
  {static} +IconData music_off_outlined
  {static} +IconData music_video
  {static} +IconData music_video_sharp
  {static} +IconData music_video_rounded
  {static} +IconData music_video_outlined
  {static} +IconData my_library_add
  {static} +IconData my_library_add_sharp
  {static} +IconData my_library_add_rounded
  {static} +IconData my_library_add_outlined
  {static} +IconData my_library_books
  {static} +IconData my_library_books_sharp
  {static} +IconData my_library_books_rounded
  {static} +IconData my_library_books_outlined
  {static} +IconData my_library_music
  {static} +IconData my_library_music_sharp
  {static} +IconData my_library_music_rounded
  {static} +IconData my_library_music_outlined
  {static} +IconData my_location
  {static} +IconData my_location_sharp
  {static} +IconData my_location_rounded
  {static} +IconData my_location_outlined
  {static} +IconData nat
  {static} +IconData nat_sharp
  {static} +IconData nat_rounded
  {static} +IconData nat_outlined
  {static} +IconData nature
  {static} +IconData nature_sharp
  {static} +IconData nature_rounded
  {static} +IconData nature_outlined
  {static} +IconData nature_people
  {static} +IconData nature_people_sharp
  {static} +IconData nature_people_rounded
  {static} +IconData nature_people_outlined
  {static} +IconData navigate_before
  {static} +IconData navigate_before_sharp
  {static} +IconData navigate_before_rounded
  {static} +IconData navigate_before_outlined
  {static} +IconData navigate_next
  {static} +IconData navigate_next_sharp
  {static} +IconData navigate_next_rounded
  {static} +IconData navigate_next_outlined
  {static} +IconData navigation
  {static} +IconData navigation_sharp
  {static} +IconData navigation_rounded
  {static} +IconData navigation_outlined
  {static} +IconData near_me
  {static} +IconData near_me_sharp
  {static} +IconData near_me_rounded
  {static} +IconData near_me_outlined
  {static} +IconData near_me_disabled
  {static} +IconData near_me_disabled_sharp
  {static} +IconData near_me_disabled_rounded
  {static} +IconData near_me_disabled_outlined
  {static} +IconData nearby_error
  {static} +IconData nearby_error_sharp
  {static} +IconData nearby_error_rounded
  {static} +IconData nearby_error_outlined
  {static} +IconData nearby_off
  {static} +IconData nearby_off_sharp
  {static} +IconData nearby_off_rounded
  {static} +IconData nearby_off_outlined
  {static} +IconData nest_cam_wired_stand
  {static} +IconData nest_cam_wired_stand_sharp
  {static} +IconData nest_cam_wired_stand_rounded
  {static} +IconData nest_cam_wired_stand_outlined
  {static} +IconData network_cell
  {static} +IconData network_cell_sharp
  {static} +IconData network_cell_rounded
  {static} +IconData network_cell_outlined
  {static} +IconData network_check
  {static} +IconData network_check_sharp
  {static} +IconData network_check_rounded
  {static} +IconData network_check_outlined
  {static} +IconData network_locked
  {static} +IconData network_locked_sharp
  {static} +IconData network_locked_rounded
  {static} +IconData network_locked_outlined
  {static} +IconData network_ping
  {static} +IconData network_ping_sharp
  {static} +IconData network_ping_rounded
  {static} +IconData network_ping_outlined
  {static} +IconData network_wifi
  {static} +IconData network_wifi_sharp
  {static} +IconData network_wifi_rounded
  {static} +IconData network_wifi_outlined
  {static} +IconData network_wifi_1_bar
  {static} +IconData network_wifi_1_bar_sharp
  {static} +IconData network_wifi_1_bar_rounded
  {static} +IconData network_wifi_1_bar_outlined
  {static} +IconData network_wifi_2_bar
  {static} +IconData network_wifi_2_bar_sharp
  {static} +IconData network_wifi_2_bar_rounded
  {static} +IconData network_wifi_2_bar_outlined
  {static} +IconData network_wifi_3_bar
  {static} +IconData network_wifi_3_bar_sharp
  {static} +IconData network_wifi_3_bar_rounded
  {static} +IconData network_wifi_3_bar_outlined
  {static} +IconData new_label
  {static} +IconData new_label_sharp
  {static} +IconData new_label_rounded
  {static} +IconData new_label_outlined
  {static} +IconData new_releases
  {static} +IconData new_releases_sharp
  {static} +IconData new_releases_rounded
  {static} +IconData new_releases_outlined
  {static} +IconData newspaper
  {static} +IconData newspaper_sharp
  {static} +IconData newspaper_rounded
  {static} +IconData newspaper_outlined
  {static} +IconData next_plan
  {static} +IconData next_plan_sharp
  {static} +IconData next_plan_rounded
  {static} +IconData next_plan_outlined
  {static} +IconData next_week
  {static} +IconData next_week_sharp
  {static} +IconData next_week_rounded
  {static} +IconData next_week_outlined
  {static} +IconData nfc
  {static} +IconData nfc_sharp
  {static} +IconData nfc_rounded
  {static} +IconData nfc_outlined
  {static} +IconData night_shelter
  {static} +IconData night_shelter_sharp
  {static} +IconData night_shelter_rounded
  {static} +IconData night_shelter_outlined
  {static} +IconData nightlife
  {static} +IconData nightlife_sharp
  {static} +IconData nightlife_rounded
  {static} +IconData nightlife_outlined
  {static} +IconData nightlight
  {static} +IconData nightlight_sharp
  {static} +IconData nightlight_rounded
  {static} +IconData nightlight_outlined
  {static} +IconData nightlight_round
  {static} +IconData nightlight_round_sharp
  {static} +IconData nightlight_round_rounded
  {static} +IconData nightlight_round_outlined
  {static} +IconData nights_stay
  {static} +IconData nights_stay_sharp
  {static} +IconData nights_stay_rounded
  {static} +IconData nights_stay_outlined
  {static} +IconData no_accounts
  {static} +IconData no_accounts_sharp
  {static} +IconData no_accounts_rounded
  {static} +IconData no_accounts_outlined
  {static} +IconData no_adult_content
  {static} +IconData no_adult_content_sharp
  {static} +IconData no_adult_content_rounded
  {static} +IconData no_adult_content_outlined
  {static} +IconData no_backpack
  {static} +IconData no_backpack_sharp
  {static} +IconData no_backpack_rounded
  {static} +IconData no_backpack_outlined
  {static} +IconData no_cell
  {static} +IconData no_cell_sharp
  {static} +IconData no_cell_rounded
  {static} +IconData no_cell_outlined
  {static} +IconData no_crash
  {static} +IconData no_crash_sharp
  {static} +IconData no_crash_rounded
  {static} +IconData no_crash_outlined
  {static} +IconData no_drinks
  {static} +IconData no_drinks_sharp
  {static} +IconData no_drinks_rounded
  {static} +IconData no_drinks_outlined
  {static} +IconData no_encryption
  {static} +IconData no_encryption_sharp
  {static} +IconData no_encryption_rounded
  {static} +IconData no_encryption_outlined
  {static} +IconData no_encryption_gmailerrorred
  {static} +IconData no_encryption_gmailerrorred_sharp
  {static} +IconData no_encryption_gmailerrorred_rounded
  {static} +IconData no_encryption_gmailerrorred_outlined
  {static} +IconData no_flash
  {static} +IconData no_flash_sharp
  {static} +IconData no_flash_rounded
  {static} +IconData no_flash_outlined
  {static} +IconData no_food
  {static} +IconData no_food_sharp
  {static} +IconData no_food_rounded
  {static} +IconData no_food_outlined
  {static} +IconData no_luggage
  {static} +IconData no_luggage_sharp
  {static} +IconData no_luggage_rounded
  {static} +IconData no_luggage_outlined
  {static} +IconData no_meals
  {static} +IconData no_meals_sharp
  {static} +IconData no_meals_rounded
  {static} +IconData no_meals_outlined
  {static} +IconData no_meals_ouline
  {static} +IconData no_meeting_room
  {static} +IconData no_meeting_room_sharp
  {static} +IconData no_meeting_room_rounded
  {static} +IconData no_meeting_room_outlined
  {static} +IconData no_photography
  {static} +IconData no_photography_sharp
  {static} +IconData no_photography_rounded
  {static} +IconData no_photography_outlined
  {static} +IconData no_sim
  {static} +IconData no_sim_sharp
  {static} +IconData no_sim_rounded
  {static} +IconData no_sim_outlined
  {static} +IconData no_stroller
  {static} +IconData no_stroller_sharp
  {static} +IconData no_stroller_rounded
  {static} +IconData no_stroller_outlined
  {static} +IconData no_transfer
  {static} +IconData no_transfer_sharp
  {static} +IconData no_transfer_rounded
  {static} +IconData no_transfer_outlined
  {static} +IconData noise_aware
  {static} +IconData noise_aware_sharp
  {static} +IconData noise_aware_rounded
  {static} +IconData noise_aware_outlined
  {static} +IconData noise_control_off
  {static} +IconData noise_control_off_sharp
  {static} +IconData noise_control_off_rounded
  {static} +IconData noise_control_off_outlined
  {static} +IconData nordic_walking
  {static} +IconData nordic_walking_sharp
  {static} +IconData nordic_walking_rounded
  {static} +IconData nordic_walking_outlined
  {static} +IconData north
  {static} +IconData north_sharp
  {static} +IconData north_rounded
  {static} +IconData north_outlined
  {static} +IconData north_east
  {static} +IconData north_east_sharp
  {static} +IconData north_east_rounded
  {static} +IconData north_east_outlined
  {static} +IconData north_west
  {static} +IconData north_west_sharp
  {static} +IconData north_west_rounded
  {static} +IconData north_west_outlined
  {static} +IconData not_accessible
  {static} +IconData not_accessible_sharp
  {static} +IconData not_accessible_rounded
  {static} +IconData not_accessible_outlined
  {static} +IconData not_interested
  {static} +IconData not_interested_sharp
  {static} +IconData not_interested_rounded
  {static} +IconData not_interested_outlined
  {static} +IconData not_listed_location
  {static} +IconData not_listed_location_sharp
  {static} +IconData not_listed_location_rounded
  {static} +IconData not_listed_location_outlined
  {static} +IconData not_started
  {static} +IconData not_started_sharp
  {static} +IconData not_started_rounded
  {static} +IconData not_started_outlined
  {static} +IconData note
  {static} +IconData note_sharp
  {static} +IconData note_rounded
  {static} +IconData note_outlined
  {static} +IconData note_add
  {static} +IconData note_add_sharp
  {static} +IconData note_add_rounded
  {static} +IconData note_add_outlined
  {static} +IconData note_alt
  {static} +IconData note_alt_sharp
  {static} +IconData note_alt_rounded
  {static} +IconData note_alt_outlined
  {static} +IconData notes
  {static} +IconData notes_sharp
  {static} +IconData notes_rounded
  {static} +IconData notes_outlined
  {static} +IconData notification_add
  {static} +IconData notification_add_sharp
  {static} +IconData notification_add_rounded
  {static} +IconData notification_add_outlined
  {static} +IconData notification_important
  {static} +IconData notification_important_sharp
  {static} +IconData notification_important_rounded
  {static} +IconData notification_important_outlined
  {static} +IconData notifications
  {static} +IconData notifications_sharp
  {static} +IconData notifications_rounded
  {static} +IconData notifications_outlined
  {static} +IconData notifications_active
  {static} +IconData notifications_active_sharp
  {static} +IconData notifications_active_rounded
  {static} +IconData notifications_active_outlined
  {static} +IconData notifications_none
  {static} +IconData notifications_none_sharp
  {static} +IconData notifications_none_rounded
  {static} +IconData notifications_none_outlined
  {static} +IconData notifications_off
  {static} +IconData notifications_off_sharp
  {static} +IconData notifications_off_rounded
  {static} +IconData notifications_off_outlined
  {static} +IconData notifications_on
  {static} +IconData notifications_on_sharp
  {static} +IconData notifications_on_rounded
  {static} +IconData notifications_on_outlined
  {static} +IconData notifications_paused
  {static} +IconData notifications_paused_sharp
  {static} +IconData notifications_paused_rounded
  {static} +IconData notifications_paused_outlined
  {static} +IconData now_wallpaper
  {static} +IconData now_wallpaper_sharp
  {static} +IconData now_wallpaper_rounded
  {static} +IconData now_wallpaper_outlined
  {static} +IconData now_widgets
  {static} +IconData now_widgets_sharp
  {static} +IconData now_widgets_rounded
  {static} +IconData now_widgets_outlined
  {static} +IconData numbers
  {static} +IconData numbers_sharp
  {static} +IconData numbers_rounded
  {static} +IconData numbers_outlined
  {static} +IconData offline_bolt
  {static} +IconData offline_bolt_sharp
  {static} +IconData offline_bolt_rounded
  {static} +IconData offline_bolt_outlined
  {static} +IconData offline_pin
  {static} +IconData offline_pin_sharp
  {static} +IconData offline_pin_rounded
  {static} +IconData offline_pin_outlined
  {static} +IconData offline_share
  {static} +IconData offline_share_sharp
  {static} +IconData offline_share_rounded
  {static} +IconData offline_share_outlined
  {static} +IconData oil_barrel
  {static} +IconData oil_barrel_sharp
  {static} +IconData oil_barrel_rounded
  {static} +IconData oil_barrel_outlined
  {static} +IconData on_device_training
  {static} +IconData on_device_training_sharp
  {static} +IconData on_device_training_rounded
  {static} +IconData on_device_training_outlined
  {static} +IconData ondemand_video
  {static} +IconData ondemand_video_sharp
  {static} +IconData ondemand_video_rounded
  {static} +IconData ondemand_video_outlined
  {static} +IconData online_prediction
  {static} +IconData online_prediction_sharp
  {static} +IconData online_prediction_rounded
  {static} +IconData online_prediction_outlined
  {static} +IconData opacity
  {static} +IconData opacity_sharp
  {static} +IconData opacity_rounded
  {static} +IconData opacity_outlined
  {static} +IconData open_in_browser
  {static} +IconData open_in_browser_sharp
  {static} +IconData open_in_browser_rounded
  {static} +IconData open_in_browser_outlined
  {static} +IconData open_in_full
  {static} +IconData open_in_full_sharp
  {static} +IconData open_in_full_rounded
  {static} +IconData open_in_full_outlined
  {static} +IconData open_in_new
  {static} +IconData open_in_new_sharp
  {static} +IconData open_in_new_rounded
  {static} +IconData open_in_new_outlined
  {static} +IconData open_in_new_off
  {static} +IconData open_in_new_off_sharp
  {static} +IconData open_in_new_off_rounded
  {static} +IconData open_in_new_off_outlined
  {static} +IconData open_with
  {static} +IconData open_with_sharp
  {static} +IconData open_with_rounded
  {static} +IconData open_with_outlined
  {static} +IconData other_houses
  {static} +IconData other_houses_sharp
  {static} +IconData other_houses_rounded
  {static} +IconData other_houses_outlined
  {static} +IconData outbond
  {static} +IconData outbond_sharp
  {static} +IconData outbond_rounded
  {static} +IconData outbond_outlined
  {static} +IconData outbound
  {static} +IconData outbound_sharp
  {static} +IconData outbound_rounded
  {static} +IconData outbound_outlined
  {static} +IconData outbox
  {static} +IconData outbox_sharp
  {static} +IconData outbox_rounded
  {static} +IconData outbox_outlined
  {static} +IconData outdoor_grill
  {static} +IconData outdoor_grill_sharp
  {static} +IconData outdoor_grill_rounded
  {static} +IconData outdoor_grill_outlined
  {static} +IconData outgoing_mail
  {static} +IconData outlet
  {static} +IconData outlet_sharp
  {static} +IconData outlet_rounded
  {static} +IconData outlet_outlined
  {static} +IconData outlined_flag
  {static} +IconData outlined_flag_sharp
  {static} +IconData outlined_flag_rounded
  {static} +IconData outlined_flag_outlined
  {static} +IconData output
  {static} +IconData output_sharp
  {static} +IconData output_rounded
  {static} +IconData output_outlined
  {static} +IconData padding
  {static} +IconData padding_sharp
  {static} +IconData padding_rounded
  {static} +IconData padding_outlined
  {static} +IconData pages
  {static} +IconData pages_sharp
  {static} +IconData pages_rounded
  {static} +IconData pages_outlined
  {static} +IconData pageview
  {static} +IconData pageview_sharp
  {static} +IconData pageview_rounded
  {static} +IconData pageview_outlined
  {static} +IconData paid
  {static} +IconData paid_sharp
  {static} +IconData paid_rounded
  {static} +IconData paid_outlined
  {static} +IconData palette
  {static} +IconData palette_sharp
  {static} +IconData palette_rounded
  {static} +IconData palette_outlined
  {static} +IconData pallet
  {static} +IconData pan_tool
  {static} +IconData pan_tool_sharp
  {static} +IconData pan_tool_rounded
  {static} +IconData pan_tool_outlined
  {static} +IconData pan_tool_alt
  {static} +IconData pan_tool_alt_sharp
  {static} +IconData pan_tool_alt_rounded
  {static} +IconData pan_tool_alt_outlined
  {static} +IconData panorama
  {static} +IconData panorama_sharp
  {static} +IconData panorama_rounded
  {static} +IconData panorama_outlined
  {static} +IconData panorama_fish_eye
  {static} +IconData panorama_fish_eye_sharp
  {static} +IconData panorama_fish_eye_rounded
  {static} +IconData panorama_fish_eye_outlined
  {static} +IconData panorama_fisheye
  {static} +IconData panorama_fisheye_sharp
  {static} +IconData panorama_fisheye_rounded
  {static} +IconData panorama_fisheye_outlined
  {static} +IconData panorama_horizontal
  {static} +IconData panorama_horizontal_sharp
  {static} +IconData panorama_horizontal_rounded
  {static} +IconData panorama_horizontal_outlined
  {static} +IconData panorama_horizontal_select
  {static} +IconData panorama_horizontal_select_sharp
  {static} +IconData panorama_horizontal_select_rounded
  {static} +IconData panorama_horizontal_select_outlined
  {static} +IconData panorama_photosphere
  {static} +IconData panorama_photosphere_sharp
  {static} +IconData panorama_photosphere_rounded
  {static} +IconData panorama_photosphere_outlined
  {static} +IconData panorama_photosphere_select
  {static} +IconData panorama_photosphere_select_sharp
  {static} +IconData panorama_photosphere_select_rounded
  {static} +IconData panorama_photosphere_select_outlined
  {static} +IconData panorama_vertical
  {static} +IconData panorama_vertical_sharp
  {static} +IconData panorama_vertical_rounded
  {static} +IconData panorama_vertical_outlined
  {static} +IconData panorama_vertical_select
  {static} +IconData panorama_vertical_select_sharp
  {static} +IconData panorama_vertical_select_rounded
  {static} +IconData panorama_vertical_select_outlined
  {static} +IconData panorama_wide_angle
  {static} +IconData panorama_wide_angle_sharp
  {static} +IconData panorama_wide_angle_rounded
  {static} +IconData panorama_wide_angle_outlined
  {static} +IconData panorama_wide_angle_select
  {static} +IconData panorama_wide_angle_select_sharp
  {static} +IconData panorama_wide_angle_select_rounded
  {static} +IconData panorama_wide_angle_select_outlined
  {static} +IconData paragliding
  {static} +IconData paragliding_sharp
  {static} +IconData paragliding_rounded
  {static} +IconData paragliding_outlined
  {static} +IconData park
  {static} +IconData park_sharp
  {static} +IconData park_rounded
  {static} +IconData park_outlined
  {static} +IconData party_mode
  {static} +IconData party_mode_sharp
  {static} +IconData party_mode_rounded
  {static} +IconData party_mode_outlined
  {static} +IconData password
  {static} +IconData password_sharp
  {static} +IconData password_rounded
  {static} +IconData password_outlined
  {static} +IconData paste
  {static} +IconData paste_sharp
  {static} +IconData paste_rounded
  {static} +IconData paste_outlined
  {static} +IconData pattern
  {static} +IconData pattern_sharp
  {static} +IconData pattern_rounded
  {static} +IconData pattern_outlined
  {static} +IconData pause
  {static} +IconData pause_sharp
  {static} +IconData pause_rounded
  {static} +IconData pause_outlined
  {static} +IconData pause_circle
  {static} +IconData pause_circle_sharp
  {static} +IconData pause_circle_rounded
  {static} +IconData pause_circle_outlined
  {static} +IconData pause_circle_filled
  {static} +IconData pause_circle_filled_sharp
  {static} +IconData pause_circle_filled_rounded
  {static} +IconData pause_circle_filled_outlined
  {static} +IconData pause_circle_outline
  {static} +IconData pause_circle_outline_sharp
  {static} +IconData pause_circle_outline_rounded
  {static} +IconData pause_circle_outline_outlined
  {static} +IconData pause_presentation
  {static} +IconData pause_presentation_sharp
  {static} +IconData pause_presentation_rounded
  {static} +IconData pause_presentation_outlined
  {static} +IconData payment
  {static} +IconData payment_sharp
  {static} +IconData payment_rounded
  {static} +IconData payment_outlined
  {static} +IconData payments
  {static} +IconData payments_sharp
  {static} +IconData payments_rounded
  {static} +IconData payments_outlined
  {static} +IconData paypal
  {static} +IconData paypal_sharp
  {static} +IconData paypal_rounded
  {static} +IconData paypal_outlined
  {static} +IconData pedal_bike
  {static} +IconData pedal_bike_sharp
  {static} +IconData pedal_bike_rounded
  {static} +IconData pedal_bike_outlined
  {static} +IconData pending
  {static} +IconData pending_sharp
  {static} +IconData pending_rounded
  {static} +IconData pending_outlined
  {static} +IconData pending_actions
  {static} +IconData pending_actions_sharp
  {static} +IconData pending_actions_rounded
  {static} +IconData pending_actions_outlined
  {static} +IconData pentagon
  {static} +IconData pentagon_sharp
  {static} +IconData pentagon_rounded
  {static} +IconData pentagon_outlined
  {static} +IconData people
  {static} +IconData people_sharp
  {static} +IconData people_rounded
  {static} +IconData people_outlined
  {static} +IconData people_alt
  {static} +IconData people_alt_sharp
  {static} +IconData people_alt_rounded
  {static} +IconData people_alt_outlined
  {static} +IconData people_outline
  {static} +IconData people_outline_sharp
  {static} +IconData people_outline_rounded
  {static} +IconData people_outline_outlined
  {static} +IconData percent
  {static} +IconData percent_sharp
  {static} +IconData percent_rounded
  {static} +IconData percent_outlined
  {static} +IconData perm_camera_mic
  {static} +IconData perm_camera_mic_sharp
  {static} +IconData perm_camera_mic_rounded
  {static} +IconData perm_camera_mic_outlined
  {static} +IconData perm_contact_cal
  {static} +IconData perm_contact_cal_sharp
  {static} +IconData perm_contact_cal_rounded
  {static} +IconData perm_contact_cal_outlined
  {static} +IconData perm_contact_calendar
  {static} +IconData perm_contact_calendar_sharp
  {static} +IconData perm_contact_calendar_rounded
  {static} +IconData perm_contact_calendar_outlined
  {static} +IconData perm_data_setting
  {static} +IconData perm_data_setting_sharp
  {static} +IconData perm_data_setting_rounded
  {static} +IconData perm_data_setting_outlined
  {static} +IconData perm_device_info
  {static} +IconData perm_device_info_sharp
  {static} +IconData perm_device_info_rounded
  {static} +IconData perm_device_info_outlined
  {static} +IconData perm_device_information
  {static} +IconData perm_device_information_sharp
  {static} +IconData perm_device_information_rounded
  {static} +IconData perm_device_information_outlined
  {static} +IconData perm_identity
  {static} +IconData perm_identity_sharp
  {static} +IconData perm_identity_rounded
  {static} +IconData perm_identity_outlined
  {static} +IconData perm_media
  {static} +IconData perm_media_sharp
  {static} +IconData perm_media_rounded
  {static} +IconData perm_media_outlined
  {static} +IconData perm_phone_msg
  {static} +IconData perm_phone_msg_sharp
  {static} +IconData perm_phone_msg_rounded
  {static} +IconData perm_phone_msg_outlined
  {static} +IconData perm_scan_wifi
  {static} +IconData perm_scan_wifi_sharp
  {static} +IconData perm_scan_wifi_rounded
  {static} +IconData perm_scan_wifi_outlined
  {static} +IconData person
  {static} +IconData person_sharp
  {static} +IconData person_rounded
  {static} +IconData person_outlined
  {static} +IconData person_2
  {static} +IconData person_2_sharp
  {static} +IconData person_2_rounded
  {static} +IconData person_2_outlined
  {static} +IconData person_3
  {static} +IconData person_3_sharp
  {static} +IconData person_3_rounded
  {static} +IconData person_3_outlined
  {static} +IconData person_4
  {static} +IconData person_4_sharp
  {static} +IconData person_4_rounded
  {static} +IconData person_4_outlined
  {static} +IconData person_add
  {static} +IconData person_add_sharp
  {static} +IconData person_add_rounded
  {static} +IconData person_add_outlined
  {static} +IconData person_add_alt
  {static} +IconData person_add_alt_sharp
  {static} +IconData person_add_alt_rounded
  {static} +IconData person_add_alt_outlined
  {static} +IconData person_add_alt_1
  {static} +IconData person_add_alt_1_sharp
  {static} +IconData person_add_alt_1_rounded
  {static} +IconData person_add_alt_1_outlined
  {static} +IconData person_add_disabled
  {static} +IconData person_add_disabled_sharp
  {static} +IconData person_add_disabled_rounded
  {static} +IconData person_add_disabled_outlined
  {static} +IconData person_off
  {static} +IconData person_off_sharp
  {static} +IconData person_off_rounded
  {static} +IconData person_off_outlined
  {static} +IconData person_outline
  {static} +IconData person_outline_sharp
  {static} +IconData person_outline_rounded
  {static} +IconData person_outline_outlined
  {static} +IconData person_pin
  {static} +IconData person_pin_sharp
  {static} +IconData person_pin_rounded
  {static} +IconData person_pin_outlined
  {static} +IconData person_pin_circle
  {static} +IconData person_pin_circle_sharp
  {static} +IconData person_pin_circle_rounded
  {static} +IconData person_pin_circle_outlined
  {static} +IconData person_remove
  {static} +IconData person_remove_sharp
  {static} +IconData person_remove_rounded
  {static} +IconData person_remove_outlined
  {static} +IconData person_remove_alt_1
  {static} +IconData person_remove_alt_1_sharp
  {static} +IconData person_remove_alt_1_rounded
  {static} +IconData person_remove_alt_1_outlined
  {static} +IconData person_search
  {static} +IconData person_search_sharp
  {static} +IconData person_search_rounded
  {static} +IconData person_search_outlined
  {static} +IconData personal_injury
  {static} +IconData personal_injury_sharp
  {static} +IconData personal_injury_rounded
  {static} +IconData personal_injury_outlined
  {static} +IconData personal_video
  {static} +IconData personal_video_sharp
  {static} +IconData personal_video_rounded
  {static} +IconData personal_video_outlined
  {static} +IconData pest_control
  {static} +IconData pest_control_sharp
  {static} +IconData pest_control_rounded
  {static} +IconData pest_control_outlined
  {static} +IconData pest_control_rodent
  {static} +IconData pest_control_rodent_sharp
  {static} +IconData pest_control_rodent_rounded
  {static} +IconData pest_control_rodent_outlined
  {static} +IconData pets
  {static} +IconData pets_sharp
  {static} +IconData pets_rounded
  {static} +IconData pets_outlined
  {static} +IconData phishing
  {static} +IconData phishing_sharp
  {static} +IconData phishing_rounded
  {static} +IconData phishing_outlined
  {static} +IconData phone
  {static} +IconData phone_sharp
  {static} +IconData phone_rounded
  {static} +IconData phone_outlined
  {static} +IconData phone_android
  {static} +IconData phone_android_sharp
  {static} +IconData phone_android_rounded
  {static} +IconData phone_android_outlined
  {static} +IconData phone_bluetooth_speaker
  {static} +IconData phone_bluetooth_speaker_sharp
  {static} +IconData phone_bluetooth_speaker_rounded
  {static} +IconData phone_bluetooth_speaker_outlined
  {static} +IconData phone_callback
  {static} +IconData phone_callback_sharp
  {static} +IconData phone_callback_rounded
  {static} +IconData phone_callback_outlined
  {static} +IconData phone_disabled
  {static} +IconData phone_disabled_sharp
  {static} +IconData phone_disabled_rounded
  {static} +IconData phone_disabled_outlined
  {static} +IconData phone_enabled
  {static} +IconData phone_enabled_sharp
  {static} +IconData phone_enabled_rounded
  {static} +IconData phone_enabled_outlined
  {static} +IconData phone_forwarded
  {static} +IconData phone_forwarded_sharp
  {static} +IconData phone_forwarded_rounded
  {static} +IconData phone_forwarded_outlined
  {static} +IconData phone_in_talk
  {static} +IconData phone_in_talk_sharp
  {static} +IconData phone_in_talk_rounded
  {static} +IconData phone_in_talk_outlined
  {static} +IconData phone_iphone
  {static} +IconData phone_iphone_sharp
  {static} +IconData phone_iphone_rounded
  {static} +IconData phone_iphone_outlined
  {static} +IconData phone_locked
  {static} +IconData phone_locked_sharp
  {static} +IconData phone_locked_rounded
  {static} +IconData phone_locked_outlined
  {static} +IconData phone_missed
  {static} +IconData phone_missed_sharp
  {static} +IconData phone_missed_rounded
  {static} +IconData phone_missed_outlined
  {static} +IconData phone_paused
  {static} +IconData phone_paused_sharp
  {static} +IconData phone_paused_rounded
  {static} +IconData phone_paused_outlined
  {static} +IconData phonelink
  {static} +IconData phonelink_sharp
  {static} +IconData phonelink_rounded
  {static} +IconData phonelink_outlined
  {static} +IconData phonelink_erase
  {static} +IconData phonelink_erase_sharp
  {static} +IconData phonelink_erase_rounded
  {static} +IconData phonelink_erase_outlined
  {static} +IconData phonelink_lock
  {static} +IconData phonelink_lock_sharp
  {static} +IconData phonelink_lock_rounded
  {static} +IconData phonelink_lock_outlined
  {static} +IconData phonelink_off
  {static} +IconData phonelink_off_sharp
  {static} +IconData phonelink_off_rounded
  {static} +IconData phonelink_off_outlined
  {static} +IconData phonelink_ring
  {static} +IconData phonelink_ring_sharp
  {static} +IconData phonelink_ring_rounded
  {static} +IconData phonelink_ring_outlined
  {static} +IconData phonelink_setup
  {static} +IconData phonelink_setup_sharp
  {static} +IconData phonelink_setup_rounded
  {static} +IconData phonelink_setup_outlined
  {static} +IconData photo
  {static} +IconData photo_sharp
  {static} +IconData photo_rounded
  {static} +IconData photo_outlined
  {static} +IconData photo_album
  {static} +IconData photo_album_sharp
  {static} +IconData photo_album_rounded
  {static} +IconData photo_album_outlined
  {static} +IconData photo_camera
  {static} +IconData photo_camera_sharp
  {static} +IconData photo_camera_rounded
  {static} +IconData photo_camera_outlined
  {static} +IconData photo_camera_back
  {static} +IconData photo_camera_back_sharp
  {static} +IconData photo_camera_back_rounded
  {static} +IconData photo_camera_back_outlined
  {static} +IconData photo_camera_front
  {static} +IconData photo_camera_front_sharp
  {static} +IconData photo_camera_front_rounded
  {static} +IconData photo_camera_front_outlined
  {static} +IconData photo_filter
  {static} +IconData photo_filter_sharp
  {static} +IconData photo_filter_rounded
  {static} +IconData photo_filter_outlined
  {static} +IconData photo_library
  {static} +IconData photo_library_sharp
  {static} +IconData photo_library_rounded
  {static} +IconData photo_library_outlined
  {static} +IconData photo_size_select_actual
  {static} +IconData photo_size_select_actual_sharp
  {static} +IconData photo_size_select_actual_rounded
  {static} +IconData photo_size_select_actual_outlined
  {static} +IconData photo_size_select_large
  {static} +IconData photo_size_select_large_sharp
  {static} +IconData photo_size_select_large_rounded
  {static} +IconData photo_size_select_large_outlined
  {static} +IconData photo_size_select_small
  {static} +IconData photo_size_select_small_sharp
  {static} +IconData photo_size_select_small_rounded
  {static} +IconData photo_size_select_small_outlined
  {static} +IconData php
  {static} +IconData php_sharp
  {static} +IconData php_rounded
  {static} +IconData php_outlined
  {static} +IconData piano
  {static} +IconData piano_sharp
  {static} +IconData piano_rounded
  {static} +IconData piano_outlined
  {static} +IconData piano_off
  {static} +IconData piano_off_sharp
  {static} +IconData piano_off_rounded
  {static} +IconData piano_off_outlined
  {static} +IconData picture_as_pdf
  {static} +IconData picture_as_pdf_sharp
  {static} +IconData picture_as_pdf_rounded
  {static} +IconData picture_as_pdf_outlined
  {static} +IconData picture_in_picture
  {static} +IconData picture_in_picture_sharp
  {static} +IconData picture_in_picture_rounded
  {static} +IconData picture_in_picture_outlined
  {static} +IconData picture_in_picture_alt
  {static} +IconData picture_in_picture_alt_sharp
  {static} +IconData picture_in_picture_alt_rounded
  {static} +IconData picture_in_picture_alt_outlined
  {static} +IconData pie_chart
  {static} +IconData pie_chart_sharp
  {static} +IconData pie_chart_rounded
  {static} +IconData pie_chart_outline
  {static} +IconData pie_chart_outline_sharp
  {static} +IconData pie_chart_outline_rounded
  {static} +IconData pie_chart_outline_outlined
  {static} +IconData pin
  {static} +IconData pin_sharp
  {static} +IconData pin_rounded
  {static} +IconData pin_outlined
  {static} +IconData pin_drop
  {static} +IconData pin_drop_sharp
  {static} +IconData pin_drop_rounded
  {static} +IconData pin_drop_outlined
  {static} +IconData pin_end
  {static} +IconData pin_end_sharp
  {static} +IconData pin_end_rounded
  {static} +IconData pin_end_outlined
  {static} +IconData pin_invoke
  {static} +IconData pin_invoke_sharp
  {static} +IconData pin_invoke_rounded
  {static} +IconData pin_invoke_outlined
  {static} +IconData pinch
  {static} +IconData pinch_sharp
  {static} +IconData pinch_rounded
  {static} +IconData pinch_outlined
  {static} +IconData pivot_table_chart
  {static} +IconData pivot_table_chart_sharp
  {static} +IconData pivot_table_chart_rounded
  {static} +IconData pivot_table_chart_outlined
  {static} +IconData pix
  {static} +IconData pix_sharp
  {static} +IconData pix_rounded
  {static} +IconData pix_outlined
  {static} +IconData place
  {static} +IconData place_sharp
  {static} +IconData place_rounded
  {static} +IconData place_outlined
  {static} +IconData plagiarism
  {static} +IconData plagiarism_sharp
  {static} +IconData plagiarism_rounded
  {static} +IconData plagiarism_outlined
  {static} +IconData play_arrow
  {static} +IconData play_arrow_sharp
  {static} +IconData play_arrow_rounded
  {static} +IconData play_arrow_outlined
  {static} +IconData play_circle
  {static} +IconData play_circle_sharp
  {static} +IconData play_circle_rounded
  {static} +IconData play_circle_outlined
  {static} +IconData play_circle_fill
  {static} +IconData play_circle_fill_sharp
  {static} +IconData play_circle_fill_rounded
  {static} +IconData play_circle_fill_outlined
  {static} +IconData play_circle_filled
  {static} +IconData play_circle_filled_sharp
  {static} +IconData play_circle_filled_rounded
  {static} +IconData play_circle_filled_outlined
  {static} +IconData play_circle_outline
  {static} +IconData play_circle_outline_sharp
  {static} +IconData play_circle_outline_rounded
  {static} +IconData play_circle_outline_outlined
  {static} +IconData play_disabled
  {static} +IconData play_disabled_sharp
  {static} +IconData play_disabled_rounded
  {static} +IconData play_disabled_outlined
  {static} +IconData play_for_work
  {static} +IconData play_for_work_sharp
  {static} +IconData play_for_work_rounded
  {static} +IconData play_for_work_outlined
  {static} +IconData play_lesson
  {static} +IconData play_lesson_sharp
  {static} +IconData play_lesson_rounded
  {static} +IconData play_lesson_outlined
  {static} +IconData playlist_add
  {static} +IconData playlist_add_sharp
  {static} +IconData playlist_add_rounded
  {static} +IconData playlist_add_outlined
  {static} +IconData playlist_add_check
  {static} +IconData playlist_add_check_sharp
  {static} +IconData playlist_add_check_rounded
  {static} +IconData playlist_add_check_outlined
  {static} +IconData playlist_add_check_circle
  {static} +IconData playlist_add_check_circle_sharp
  {static} +IconData playlist_add_check_circle_rounded
  {static} +IconData playlist_add_check_circle_outlined
  {static} +IconData playlist_add_circle
  {static} +IconData playlist_add_circle_sharp
  {static} +IconData playlist_add_circle_rounded
  {static} +IconData playlist_add_circle_outlined
  {static} +IconData playlist_play
  {static} +IconData playlist_play_sharp
  {static} +IconData playlist_play_rounded
  {static} +IconData playlist_play_outlined
  {static} +IconData playlist_remove
  {static} +IconData playlist_remove_sharp
  {static} +IconData playlist_remove_rounded
  {static} +IconData playlist_remove_outlined
  {static} +IconData plumbing
  {static} +IconData plumbing_sharp
  {static} +IconData plumbing_rounded
  {static} +IconData plumbing_outlined
  {static} +IconData plus_one
  {static} +IconData plus_one_sharp
  {static} +IconData plus_one_rounded
  {static} +IconData plus_one_outlined
  {static} +IconData podcasts
  {static} +IconData podcasts_sharp
  {static} +IconData podcasts_rounded
  {static} +IconData podcasts_outlined
  {static} +IconData point_of_sale
  {static} +IconData point_of_sale_sharp
  {static} +IconData point_of_sale_rounded
  {static} +IconData point_of_sale_outlined
  {static} +IconData policy
  {static} +IconData policy_sharp
  {static} +IconData policy_rounded
  {static} +IconData policy_outlined
  {static} +IconData poll
  {static} +IconData poll_sharp
  {static} +IconData poll_rounded
  {static} +IconData poll_outlined
  {static} +IconData polyline
  {static} +IconData polyline_sharp
  {static} +IconData polyline_rounded
  {static} +IconData polyline_outlined
  {static} +IconData polymer
  {static} +IconData polymer_sharp
  {static} +IconData polymer_rounded
  {static} +IconData polymer_outlined
  {static} +IconData pool
  {static} +IconData pool_sharp
  {static} +IconData pool_rounded
  {static} +IconData pool_outlined
  {static} +IconData portable_wifi_off
  {static} +IconData portable_wifi_off_sharp
  {static} +IconData portable_wifi_off_rounded
  {static} +IconData portable_wifi_off_outlined
  {static} +IconData portrait
  {static} +IconData portrait_sharp
  {static} +IconData portrait_rounded
  {static} +IconData portrait_outlined
  {static} +IconData post_add
  {static} +IconData post_add_sharp
  {static} +IconData post_add_rounded
  {static} +IconData post_add_outlined
  {static} +IconData power
  {static} +IconData power_sharp
  {static} +IconData power_rounded
  {static} +IconData power_outlined
  {static} +IconData power_input
  {static} +IconData power_input_sharp
  {static} +IconData power_input_rounded
  {static} +IconData power_input_outlined
  {static} +IconData power_off
  {static} +IconData power_off_sharp
  {static} +IconData power_off_rounded
  {static} +IconData power_off_outlined
  {static} +IconData power_settings_new
  {static} +IconData power_settings_new_sharp
  {static} +IconData power_settings_new_rounded
  {static} +IconData power_settings_new_outlined
  {static} +IconData precision_manufacturing
  {static} +IconData precision_manufacturing_sharp
  {static} +IconData precision_manufacturing_rounded
  {static} +IconData precision_manufacturing_outlined
  {static} +IconData pregnant_woman
  {static} +IconData pregnant_woman_sharp
  {static} +IconData pregnant_woman_rounded
  {static} +IconData pregnant_woman_outlined
  {static} +IconData present_to_all
  {static} +IconData present_to_all_sharp
  {static} +IconData present_to_all_rounded
  {static} +IconData present_to_all_outlined
  {static} +IconData preview
  {static} +IconData preview_sharp
  {static} +IconData preview_rounded
  {static} +IconData preview_outlined
  {static} +IconData price_change
  {static} +IconData price_change_sharp
  {static} +IconData price_change_rounded
  {static} +IconData price_change_outlined
  {static} +IconData price_check
  {static} +IconData price_check_sharp
  {static} +IconData price_check_rounded
  {static} +IconData price_check_outlined
  {static} +IconData print
  {static} +IconData print_sharp
  {static} +IconData print_rounded
  {static} +IconData print_outlined
  {static} +IconData print_disabled
  {static} +IconData print_disabled_sharp
  {static} +IconData print_disabled_rounded
  {static} +IconData print_disabled_outlined
  {static} +IconData priority_high
  {static} +IconData priority_high_sharp
  {static} +IconData priority_high_rounded
  {static} +IconData priority_high_outlined
  {static} +IconData privacy_tip
  {static} +IconData privacy_tip_sharp
  {static} +IconData privacy_tip_rounded
  {static} +IconData privacy_tip_outlined
  {static} +IconData private_connectivity
  {static} +IconData private_connectivity_sharp
  {static} +IconData private_connectivity_rounded
  {static} +IconData private_connectivity_outlined
  {static} +IconData production_quantity_limits
  {static} +IconData production_quantity_limits_sharp
  {static} +IconData production_quantity_limits_rounded
  {static} +IconData production_quantity_limits_outlined
  {static} +IconData propane
  {static} +IconData propane_sharp
  {static} +IconData propane_rounded
  {static} +IconData propane_outlined
  {static} +IconData propane_tank
  {static} +IconData propane_tank_sharp
  {static} +IconData propane_tank_rounded
  {static} +IconData propane_tank_outlined
  {static} +IconData psychology
  {static} +IconData psychology_sharp
  {static} +IconData psychology_rounded
  {static} +IconData psychology_outlined
  {static} +IconData psychology_alt
  {static} +IconData psychology_alt_sharp
  {static} +IconData psychology_alt_rounded
  {static} +IconData psychology_alt_outlined
  {static} +IconData public
  {static} +IconData public_sharp
  {static} +IconData public_rounded
  {static} +IconData public_outlined
  {static} +IconData public_off
  {static} +IconData public_off_sharp
  {static} +IconData public_off_rounded
  {static} +IconData public_off_outlined
  {static} +IconData publish
  {static} +IconData publish_sharp
  {static} +IconData publish_rounded
  {static} +IconData publish_outlined
  {static} +IconData published_with_changes
  {static} +IconData published_with_changes_sharp
  {static} +IconData published_with_changes_rounded
  {static} +IconData published_with_changes_outlined
  {static} +IconData punch_clock
  {static} +IconData punch_clock_sharp
  {static} +IconData punch_clock_rounded
  {static} +IconData punch_clock_outlined
  {static} +IconData push_pin
  {static} +IconData push_pin_sharp
  {static} +IconData push_pin_rounded
  {static} +IconData push_pin_outlined
  {static} +IconData qr_code
  {static} +IconData qr_code_sharp
  {static} +IconData qr_code_rounded
  {static} +IconData qr_code_outlined
  {static} +IconData qr_code_2
  {static} +IconData qr_code_2_sharp
  {static} +IconData qr_code_2_rounded
  {static} +IconData qr_code_2_outlined
  {static} +IconData qr_code_scanner
  {static} +IconData qr_code_scanner_sharp
  {static} +IconData qr_code_scanner_rounded
  {static} +IconData qr_code_scanner_outlined
  {static} +IconData query_builder
  {static} +IconData query_builder_sharp
  {static} +IconData query_builder_rounded
  {static} +IconData query_builder_outlined
  {static} +IconData query_stats
  {static} +IconData query_stats_sharp
  {static} +IconData query_stats_rounded
  {static} +IconData query_stats_outlined
  {static} +IconData question_answer
  {static} +IconData question_answer_sharp
  {static} +IconData question_answer_rounded
  {static} +IconData question_answer_outlined
  {static} +IconData question_mark
  {static} +IconData question_mark_sharp
  {static} +IconData question_mark_rounded
  {static} +IconData question_mark_outlined
  {static} +IconData queue
  {static} +IconData queue_sharp
  {static} +IconData queue_rounded
  {static} +IconData queue_outlined
  {static} +IconData queue_music
  {static} +IconData queue_music_sharp
  {static} +IconData queue_music_rounded
  {static} +IconData queue_music_outlined
  {static} +IconData queue_play_next
  {static} +IconData queue_play_next_sharp
  {static} +IconData queue_play_next_rounded
  {static} +IconData queue_play_next_outlined
  {static} +IconData quick_contacts_dialer
  {static} +IconData quick_contacts_dialer_sharp
  {static} +IconData quick_contacts_dialer_rounded
  {static} +IconData quick_contacts_dialer_outlined
  {static} +IconData quick_contacts_mail
  {static} +IconData quick_contacts_mail_sharp
  {static} +IconData quick_contacts_mail_rounded
  {static} +IconData quick_contacts_mail_outlined
  {static} +IconData quickreply
  {static} +IconData quickreply_sharp
  {static} +IconData quickreply_rounded
  {static} +IconData quickreply_outlined
  {static} +IconData quiz
  {static} +IconData quiz_sharp
  {static} +IconData quiz_rounded
  {static} +IconData quiz_outlined
  {static} +IconData quora
  {static} +IconData quora_sharp
  {static} +IconData quora_rounded
  {static} +IconData quora_outlined
  {static} +IconData r_mobiledata
  {static} +IconData r_mobiledata_sharp
  {static} +IconData r_mobiledata_rounded
  {static} +IconData r_mobiledata_outlined
  {static} +IconData radar
  {static} +IconData radar_sharp
  {static} +IconData radar_rounded
  {static} +IconData radar_outlined
  {static} +IconData radio
  {static} +IconData radio_sharp
  {static} +IconData radio_rounded
  {static} +IconData radio_outlined
  {static} +IconData radio_button_checked
  {static} +IconData radio_button_checked_sharp
  {static} +IconData radio_button_checked_rounded
  {static} +IconData radio_button_checked_outlined
  {static} +IconData radio_button_off
  {static} +IconData radio_button_off_sharp
  {static} +IconData radio_button_off_rounded
  {static} +IconData radio_button_off_outlined
  {static} +IconData radio_button_on
  {static} +IconData radio_button_on_sharp
  {static} +IconData radio_button_on_rounded
  {static} +IconData radio_button_on_outlined
  {static} +IconData radio_button_unchecked
  {static} +IconData radio_button_unchecked_sharp
  {static} +IconData radio_button_unchecked_rounded
  {static} +IconData radio_button_unchecked_outlined
  {static} +IconData railway_alert
  {static} +IconData railway_alert_sharp
  {static} +IconData railway_alert_rounded
  {static} +IconData railway_alert_outlined
  {static} +IconData ramen_dining
  {static} +IconData ramen_dining_sharp
  {static} +IconData ramen_dining_rounded
  {static} +IconData ramen_dining_outlined
  {static} +IconData ramp_left
  {static} +IconData ramp_left_sharp
  {static} +IconData ramp_left_rounded
  {static} +IconData ramp_left_outlined
  {static} +IconData ramp_right
  {static} +IconData ramp_right_sharp
  {static} +IconData ramp_right_rounded
  {static} +IconData ramp_right_outlined
  {static} +IconData rate_review
  {static} +IconData rate_review_sharp
  {static} +IconData rate_review_rounded
  {static} +IconData rate_review_outlined
  {static} +IconData raw_off
  {static} +IconData raw_off_sharp
  {static} +IconData raw_off_rounded
  {static} +IconData raw_off_outlined
  {static} +IconData raw_on
  {static} +IconData raw_on_sharp
  {static} +IconData raw_on_rounded
  {static} +IconData raw_on_outlined
  {static} +IconData read_more
  {static} +IconData read_more_sharp
  {static} +IconData read_more_rounded
  {static} +IconData read_more_outlined
  {static} +IconData real_estate_agent
  {static} +IconData real_estate_agent_sharp
  {static} +IconData real_estate_agent_rounded
  {static} +IconData real_estate_agent_outlined
  {static} +IconData rebase_edit
  {static} +IconData receipt
  {static} +IconData receipt_sharp
  {static} +IconData receipt_rounded
  {static} +IconData receipt_outlined
  {static} +IconData receipt_long
  {static} +IconData receipt_long_sharp
  {static} +IconData receipt_long_rounded
  {static} +IconData receipt_long_outlined
  {static} +IconData recent_actors
  {static} +IconData recent_actors_sharp
  {static} +IconData recent_actors_rounded
  {static} +IconData recent_actors_outlined
  {static} +IconData recommend
  {static} +IconData recommend_sharp
  {static} +IconData recommend_rounded
  {static} +IconData recommend_outlined
  {static} +IconData record_voice_over
  {static} +IconData record_voice_over_sharp
  {static} +IconData record_voice_over_rounded
  {static} +IconData record_voice_over_outlined
  {static} +IconData rectangle
  {static} +IconData rectangle_sharp
  {static} +IconData rectangle_rounded
  {static} +IconData rectangle_outlined
  {static} +IconData recycling
  {static} +IconData recycling_sharp
  {static} +IconData recycling_rounded
  {static} +IconData recycling_outlined
  {static} +IconData reddit
  {static} +IconData reddit_sharp
  {static} +IconData reddit_rounded
  {static} +IconData reddit_outlined
  {static} +IconData redeem
  {static} +IconData redeem_sharp
  {static} +IconData redeem_rounded
  {static} +IconData redeem_outlined
  {static} +IconData redo
  {static} +IconData redo_sharp
  {static} +IconData redo_rounded
  {static} +IconData redo_outlined
  {static} +IconData reduce_capacity
  {static} +IconData reduce_capacity_sharp
  {static} +IconData reduce_capacity_rounded
  {static} +IconData reduce_capacity_outlined
  {static} +IconData refresh
  {static} +IconData refresh_sharp
  {static} +IconData refresh_rounded
  {static} +IconData refresh_outlined
  {static} +IconData remember_me
  {static} +IconData remember_me_sharp
  {static} +IconData remember_me_rounded
  {static} +IconData remember_me_outlined
  {static} +IconData remove
  {static} +IconData remove_sharp
  {static} +IconData remove_rounded
  {static} +IconData remove_outlined
  {static} +IconData remove_circle
  {static} +IconData remove_circle_sharp
  {static} +IconData remove_circle_rounded
  {static} +IconData remove_circle_outlined
  {static} +IconData remove_circle_outline
  {static} +IconData remove_circle_outline_sharp
  {static} +IconData remove_circle_outline_rounded
  {static} +IconData remove_circle_outline_outlined
  {static} +IconData remove_done
  {static} +IconData remove_done_sharp
  {static} +IconData remove_done_rounded
  {static} +IconData remove_done_outlined
  {static} +IconData remove_from_queue
  {static} +IconData remove_from_queue_sharp
  {static} +IconData remove_from_queue_rounded
  {static} +IconData remove_from_queue_outlined
  {static} +IconData remove_moderator
  {static} +IconData remove_moderator_sharp
  {static} +IconData remove_moderator_rounded
  {static} +IconData remove_moderator_outlined
  {static} +IconData remove_red_eye
  {static} +IconData remove_red_eye_sharp
  {static} +IconData remove_red_eye_rounded
  {static} +IconData remove_red_eye_outlined
  {static} +IconData remove_road
  {static} +IconData remove_road_sharp
  {static} +IconData remove_road_rounded
  {static} +IconData remove_road_outlined
  {static} +IconData remove_shopping_cart
  {static} +IconData remove_shopping_cart_sharp
  {static} +IconData remove_shopping_cart_rounded
  {static} +IconData remove_shopping_cart_outlined
  {static} +IconData reorder
  {static} +IconData reorder_sharp
  {static} +IconData reorder_rounded
  {static} +IconData reorder_outlined
  {static} +IconData repartition
  {static} +IconData repartition_sharp
  {static} +IconData repartition_rounded
  {static} +IconData repartition_outlined
  {static} +IconData repeat
  {static} +IconData repeat_sharp
  {static} +IconData repeat_rounded
  {static} +IconData repeat_outlined
  {static} +IconData repeat_on
  {static} +IconData repeat_on_sharp
  {static} +IconData repeat_on_rounded
  {static} +IconData repeat_on_outlined
  {static} +IconData repeat_one
  {static} +IconData repeat_one_sharp
  {static} +IconData repeat_one_rounded
  {static} +IconData repeat_one_outlined
  {static} +IconData repeat_one_on
  {static} +IconData repeat_one_on_sharp
  {static} +IconData repeat_one_on_rounded
  {static} +IconData repeat_one_on_outlined
  {static} +IconData replay
  {static} +IconData replay_sharp
  {static} +IconData replay_rounded
  {static} +IconData replay_outlined
  {static} +IconData replay_10
  {static} +IconData replay_10_sharp
  {static} +IconData replay_10_rounded
  {static} +IconData replay_10_outlined
  {static} +IconData replay_30
  {static} +IconData replay_30_sharp
  {static} +IconData replay_30_rounded
  {static} +IconData replay_30_outlined
  {static} +IconData replay_5
  {static} +IconData replay_5_sharp
  {static} +IconData replay_5_rounded
  {static} +IconData replay_5_outlined
  {static} +IconData replay_circle_filled
  {static} +IconData replay_circle_filled_sharp
  {static} +IconData replay_circle_filled_rounded
  {static} +IconData replay_circle_filled_outlined
  {static} +IconData reply
  {static} +IconData reply_sharp
  {static} +IconData reply_rounded
  {static} +IconData reply_outlined
  {static} +IconData reply_all
  {static} +IconData reply_all_sharp
  {static} +IconData reply_all_rounded
  {static} +IconData reply_all_outlined
  {static} +IconData report
  {static} +IconData report_sharp
  {static} +IconData report_rounded
  {static} +IconData report_outlined
  {static} +IconData report_gmailerrorred
  {static} +IconData report_gmailerrorred_sharp
  {static} +IconData report_gmailerrorred_rounded
  {static} +IconData report_gmailerrorred_outlined
  {static} +IconData report_off
  {static} +IconData report_off_sharp
  {static} +IconData report_off_rounded
  {static} +IconData report_off_outlined
  {static} +IconData report_problem
  {static} +IconData report_problem_sharp
  {static} +IconData report_problem_rounded
  {static} +IconData report_problem_outlined
  {static} +IconData request_page
  {static} +IconData request_page_sharp
  {static} +IconData request_page_rounded
  {static} +IconData request_page_outlined
  {static} +IconData request_quote
  {static} +IconData request_quote_sharp
  {static} +IconData request_quote_rounded
  {static} +IconData request_quote_outlined
  {static} +IconData reset_tv
  {static} +IconData reset_tv_sharp
  {static} +IconData reset_tv_rounded
  {static} +IconData reset_tv_outlined
  {static} +IconData restart_alt
  {static} +IconData restart_alt_sharp
  {static} +IconData restart_alt_rounded
  {static} +IconData restart_alt_outlined
  {static} +IconData restaurant
  {static} +IconData restaurant_sharp
  {static} +IconData restaurant_rounded
  {static} +IconData restaurant_outlined
  {static} +IconData restaurant_menu
  {static} +IconData restaurant_menu_sharp
  {static} +IconData restaurant_menu_rounded
  {static} +IconData restaurant_menu_outlined
  {static} +IconData restore
  {static} +IconData restore_sharp
  {static} +IconData restore_rounded
  {static} +IconData restore_outlined
  {static} +IconData restore_from_trash
  {static} +IconData restore_from_trash_sharp
  {static} +IconData restore_from_trash_rounded
  {static} +IconData restore_from_trash_outlined
  {static} +IconData restore_page
  {static} +IconData restore_page_sharp
  {static} +IconData restore_page_rounded
  {static} +IconData restore_page_outlined
  {static} +IconData reviews
  {static} +IconData reviews_sharp
  {static} +IconData reviews_rounded
  {static} +IconData reviews_outlined
  {static} +IconData rice_bowl
  {static} +IconData rice_bowl_sharp
  {static} +IconData rice_bowl_rounded
  {static} +IconData rice_bowl_outlined
  {static} +IconData ring_volume
  {static} +IconData ring_volume_sharp
  {static} +IconData ring_volume_rounded
  {static} +IconData ring_volume_outlined
  {static} +IconData rocket
  {static} +IconData rocket_sharp
  {static} +IconData rocket_rounded
  {static} +IconData rocket_outlined
  {static} +IconData rocket_launch
  {static} +IconData rocket_launch_sharp
  {static} +IconData rocket_launch_rounded
  {static} +IconData rocket_launch_outlined
  {static} +IconData roller_shades
  {static} +IconData roller_shades_sharp
  {static} +IconData roller_shades_rounded
  {static} +IconData roller_shades_outlined
  {static} +IconData roller_shades_closed
  {static} +IconData roller_shades_closed_sharp
  {static} +IconData roller_shades_closed_rounded
  {static} +IconData roller_shades_closed_outlined
  {static} +IconData roller_skating
  {static} +IconData roller_skating_sharp
  {static} +IconData roller_skating_rounded
  {static} +IconData roller_skating_outlined
  {static} +IconData roofing
  {static} +IconData roofing_sharp
  {static} +IconData roofing_rounded
  {static} +IconData roofing_outlined
  {static} +IconData room
  {static} +IconData room_sharp
  {static} +IconData room_rounded
  {static} +IconData room_outlined
  {static} +IconData room_preferences
  {static} +IconData room_preferences_sharp
  {static} +IconData room_preferences_rounded
  {static} +IconData room_preferences_outlined
  {static} +IconData room_service
  {static} +IconData room_service_sharp
  {static} +IconData room_service_rounded
  {static} +IconData room_service_outlined
  {static} +IconData rotate_90_degrees_ccw
  {static} +IconData rotate_90_degrees_ccw_sharp
  {static} +IconData rotate_90_degrees_ccw_rounded
  {static} +IconData rotate_90_degrees_ccw_outlined
  {static} +IconData rotate_90_degrees_cw
  {static} +IconData rotate_90_degrees_cw_sharp
  {static} +IconData rotate_90_degrees_cw_rounded
  {static} +IconData rotate_90_degrees_cw_outlined
  {static} +IconData rotate_left
  {static} +IconData rotate_left_sharp
  {static} +IconData rotate_left_rounded
  {static} +IconData rotate_left_outlined
  {static} +IconData rotate_right
  {static} +IconData rotate_right_sharp
  {static} +IconData rotate_right_rounded
  {static} +IconData rotate_right_outlined
  {static} +IconData roundabout_left
  {static} +IconData roundabout_left_sharp
  {static} +IconData roundabout_left_rounded
  {static} +IconData roundabout_left_outlined
  {static} +IconData roundabout_right
  {static} +IconData roundabout_right_sharp
  {static} +IconData roundabout_right_rounded
  {static} +IconData roundabout_right_outlined
  {static} +IconData rounded_corner
  {static} +IconData rounded_corner_sharp
  {static} +IconData rounded_corner_rounded
  {static} +IconData rounded_corner_outlined
  {static} +IconData route
  {static} +IconData route_sharp
  {static} +IconData route_rounded
  {static} +IconData route_outlined
  {static} +IconData router
  {static} +IconData router_sharp
  {static} +IconData router_rounded
  {static} +IconData router_outlined
  {static} +IconData rowing
  {static} +IconData rowing_sharp
  {static} +IconData rowing_rounded
  {static} +IconData rowing_outlined
  {static} +IconData rss_feed
  {static} +IconData rss_feed_sharp
  {static} +IconData rss_feed_rounded
  {static} +IconData rss_feed_outlined
  {static} +IconData rsvp
  {static} +IconData rsvp_sharp
  {static} +IconData rsvp_rounded
  {static} +IconData rsvp_outlined
  {static} +IconData rtt
  {static} +IconData rtt_sharp
  {static} +IconData rtt_rounded
  {static} +IconData rtt_outlined
  {static} +IconData rule
  {static} +IconData rule_sharp
  {static} +IconData rule_rounded
  {static} +IconData rule_outlined
  {static} +IconData rule_folder
  {static} +IconData rule_folder_sharp
  {static} +IconData rule_folder_rounded
  {static} +IconData rule_folder_outlined
  {static} +IconData run_circle
  {static} +IconData run_circle_sharp
  {static} +IconData run_circle_rounded
  {static} +IconData run_circle_outlined
  {static} +IconData running_with_errors
  {static} +IconData running_with_errors_sharp
  {static} +IconData running_with_errors_rounded
  {static} +IconData running_with_errors_outlined
  {static} +IconData rv_hookup
  {static} +IconData rv_hookup_sharp
  {static} +IconData rv_hookup_rounded
  {static} +IconData rv_hookup_outlined
  {static} +IconData safety_check
  {static} +IconData safety_check_sharp
  {static} +IconData safety_check_rounded
  {static} +IconData safety_check_outlined
  {static} +IconData safety_divider
  {static} +IconData safety_divider_sharp
  {static} +IconData safety_divider_rounded
  {static} +IconData safety_divider_outlined
  {static} +IconData sailing
  {static} +IconData sailing_sharp
  {static} +IconData sailing_rounded
  {static} +IconData sailing_outlined
  {static} +IconData sanitizer
  {static} +IconData sanitizer_sharp
  {static} +IconData sanitizer_rounded
  {static} +IconData sanitizer_outlined
  {static} +IconData satellite
  {static} +IconData satellite_sharp
  {static} +IconData satellite_rounded
  {static} +IconData satellite_outlined
  {static} +IconData satellite_alt
  {static} +IconData satellite_alt_sharp
  {static} +IconData satellite_alt_rounded
  {static} +IconData satellite_alt_outlined
  {static} +IconData save
  {static} +IconData save_sharp
  {static} +IconData save_rounded
  {static} +IconData save_outlined
  {static} +IconData save_alt
  {static} +IconData save_alt_sharp
  {static} +IconData save_alt_rounded
  {static} +IconData save_alt_outlined
  {static} +IconData save_as
  {static} +IconData save_as_sharp
  {static} +IconData save_as_rounded
  {static} +IconData save_as_outlined
  {static} +IconData saved_search
  {static} +IconData saved_search_sharp
  {static} +IconData saved_search_rounded
  {static} +IconData saved_search_outlined
  {static} +IconData savings
  {static} +IconData savings_sharp
  {static} +IconData savings_rounded
  {static} +IconData savings_outlined
  {static} +IconData scale
  {static} +IconData scale_sharp
  {static} +IconData scale_rounded
  {static} +IconData scale_outlined
  {static} +IconData scanner
  {static} +IconData scanner_sharp
  {static} +IconData scanner_rounded
  {static} +IconData scanner_outlined
  {static} +IconData scatter_plot
  {static} +IconData scatter_plot_sharp
  {static} +IconData scatter_plot_rounded
  {static} +IconData scatter_plot_outlined
  {static} +IconData schedule
  {static} +IconData schedule_sharp
  {static} +IconData schedule_rounded
  {static} +IconData schedule_outlined
  {static} +IconData schedule_send
  {static} +IconData schedule_send_sharp
  {static} +IconData schedule_send_rounded
  {static} +IconData schedule_send_outlined
  {static} +IconData schema
  {static} +IconData schema_sharp
  {static} +IconData schema_rounded
  {static} +IconData schema_outlined
  {static} +IconData school
  {static} +IconData school_sharp
  {static} +IconData school_rounded
  {static} +IconData school_outlined
  {static} +IconData science
  {static} +IconData science_sharp
  {static} +IconData science_rounded
  {static} +IconData science_outlined
  {static} +IconData score
  {static} +IconData score_sharp
  {static} +IconData score_rounded
  {static} +IconData score_outlined
  {static} +IconData scoreboard
  {static} +IconData scoreboard_sharp
  {static} +IconData scoreboard_rounded
  {static} +IconData scoreboard_outlined
  {static} +IconData screen_lock_landscape
  {static} +IconData screen_lock_landscape_sharp
  {static} +IconData screen_lock_landscape_rounded
  {static} +IconData screen_lock_landscape_outlined
  {static} +IconData screen_lock_portrait
  {static} +IconData screen_lock_portrait_sharp
  {static} +IconData screen_lock_portrait_rounded
  {static} +IconData screen_lock_portrait_outlined
  {static} +IconData screen_lock_rotation
  {static} +IconData screen_lock_rotation_sharp
  {static} +IconData screen_lock_rotation_rounded
  {static} +IconData screen_lock_rotation_outlined
  {static} +IconData screen_rotation
  {static} +IconData screen_rotation_sharp
  {static} +IconData screen_rotation_rounded
  {static} +IconData screen_rotation_outlined
  {static} +IconData screen_rotation_alt
  {static} +IconData screen_rotation_alt_sharp
  {static} +IconData screen_rotation_alt_rounded
  {static} +IconData screen_rotation_alt_outlined
  {static} +IconData screen_search_desktop
  {static} +IconData screen_search_desktop_sharp
  {static} +IconData screen_search_desktop_rounded
  {static} +IconData screen_search_desktop_outlined
  {static} +IconData screen_share
  {static} +IconData screen_share_sharp
  {static} +IconData screen_share_rounded
  {static} +IconData screen_share_outlined
  {static} +IconData screenshot
  {static} +IconData screenshot_sharp
  {static} +IconData screenshot_rounded
  {static} +IconData screenshot_outlined
  {static} +IconData screenshot_monitor
  {static} +IconData screenshot_monitor_sharp
  {static} +IconData screenshot_monitor_rounded
  {static} +IconData screenshot_monitor_outlined
  {static} +IconData scuba_diving
  {static} +IconData scuba_diving_sharp
  {static} +IconData scuba_diving_rounded
  {static} +IconData scuba_diving_outlined
  {static} +IconData sd
  {static} +IconData sd_sharp
  {static} +IconData sd_rounded
  {static} +IconData sd_outlined
  {static} +IconData sd_card
  {static} +IconData sd_card_sharp
  {static} +IconData sd_card_rounded
  {static} +IconData sd_card_outlined
  {static} +IconData sd_card_alert
  {static} +IconData sd_card_alert_sharp
  {static} +IconData sd_card_alert_rounded
  {static} +IconData sd_card_alert_outlined
  {static} +IconData sd_storage
  {static} +IconData sd_storage_sharp
  {static} +IconData sd_storage_rounded
  {static} +IconData sd_storage_outlined
  {static} +IconData search
  {static} +IconData search_sharp
  {static} +IconData search_rounded
  {static} +IconData search_outlined
  {static} +IconData search_off
  {static} +IconData search_off_sharp
  {static} +IconData search_off_rounded
  {static} +IconData search_off_outlined
  {static} +IconData security
  {static} +IconData security_sharp
  {static} +IconData security_rounded
  {static} +IconData security_outlined
  {static} +IconData security_update
  {static} +IconData security_update_sharp
  {static} +IconData security_update_rounded
  {static} +IconData security_update_outlined
  {static} +IconData security_update_good
  {static} +IconData security_update_good_sharp
  {static} +IconData security_update_good_rounded
  {static} +IconData security_update_good_outlined
  {static} +IconData security_update_warning
  {static} +IconData security_update_warning_sharp
  {static} +IconData security_update_warning_rounded
  {static} +IconData security_update_warning_outlined
  {static} +IconData segment
  {static} +IconData segment_sharp
  {static} +IconData segment_rounded
  {static} +IconData segment_outlined
  {static} +IconData select_all
  {static} +IconData select_all_sharp
  {static} +IconData select_all_rounded
  {static} +IconData select_all_outlined
  {static} +IconData self_improvement
  {static} +IconData self_improvement_sharp
  {static} +IconData self_improvement_rounded
  {static} +IconData self_improvement_outlined
  {static} +IconData sell
  {static} +IconData sell_sharp
  {static} +IconData sell_rounded
  {static} +IconData sell_outlined
  {static} +IconData send
  {static} +IconData send_sharp
  {static} +IconData send_rounded
  {static} +IconData send_outlined
  {static} +IconData send_and_archive
  {static} +IconData send_and_archive_sharp
  {static} +IconData send_and_archive_rounded
  {static} +IconData send_and_archive_outlined
  {static} +IconData send_time_extension
  {static} +IconData send_time_extension_sharp
  {static} +IconData send_time_extension_rounded
  {static} +IconData send_time_extension_outlined
  {static} +IconData send_to_mobile
  {static} +IconData send_to_mobile_sharp
  {static} +IconData send_to_mobile_rounded
  {static} +IconData send_to_mobile_outlined
  {static} +IconData sensor_door
  {static} +IconData sensor_door_sharp
  {static} +IconData sensor_door_rounded
  {static} +IconData sensor_door_outlined
  {static} +IconData sensor_occupied
  {static} +IconData sensor_occupied_sharp
  {static} +IconData sensor_occupied_rounded
  {static} +IconData sensor_occupied_outlined
  {static} +IconData sensor_window
  {static} +IconData sensor_window_sharp
  {static} +IconData sensor_window_rounded
  {static} +IconData sensor_window_outlined
  {static} +IconData sensors
  {static} +IconData sensors_sharp
  {static} +IconData sensors_rounded
  {static} +IconData sensors_outlined
  {static} +IconData sensors_off
  {static} +IconData sensors_off_sharp
  {static} +IconData sensors_off_rounded
  {static} +IconData sensors_off_outlined
  {static} +IconData sentiment_dissatisfied
  {static} +IconData sentiment_dissatisfied_sharp
  {static} +IconData sentiment_dissatisfied_rounded
  {static} +IconData sentiment_dissatisfied_outlined
  {static} +IconData sentiment_neutral
  {static} +IconData sentiment_neutral_sharp
  {static} +IconData sentiment_neutral_rounded
  {static} +IconData sentiment_neutral_outlined
  {static} +IconData sentiment_satisfied
  {static} +IconData sentiment_satisfied_sharp
  {static} +IconData sentiment_satisfied_rounded
  {static} +IconData sentiment_satisfied_outlined
  {static} +IconData sentiment_satisfied_alt
  {static} +IconData sentiment_satisfied_alt_sharp
  {static} +IconData sentiment_satisfied_alt_rounded
  {static} +IconData sentiment_satisfied_alt_outlined
  {static} +IconData sentiment_very_dissatisfied
  {static} +IconData sentiment_very_dissatisfied_sharp
  {static} +IconData sentiment_very_dissatisfied_rounded
  {static} +IconData sentiment_very_dissatisfied_outlined
  {static} +IconData sentiment_very_satisfied
  {static} +IconData sentiment_very_satisfied_sharp
  {static} +IconData sentiment_very_satisfied_rounded
  {static} +IconData sentiment_very_satisfied_outlined
  {static} +IconData set_meal
  {static} +IconData set_meal_sharp
  {static} +IconData set_meal_rounded
  {static} +IconData set_meal_outlined
  {static} +IconData settings
  {static} +IconData settings_sharp
  {static} +IconData settings_rounded
  {static} +IconData settings_outlined
  {static} +IconData settings_accessibility
  {static} +IconData settings_accessibility_sharp
  {static} +IconData settings_accessibility_rounded
  {static} +IconData settings_accessibility_outlined
  {static} +IconData settings_applications
  {static} +IconData settings_applications_sharp
  {static} +IconData settings_applications_rounded
  {static} +IconData settings_applications_outlined
  {static} +IconData settings_backup_restore
  {static} +IconData settings_backup_restore_sharp
  {static} +IconData settings_backup_restore_rounded
  {static} +IconData settings_backup_restore_outlined
  {static} +IconData settings_bluetooth
  {static} +IconData settings_bluetooth_sharp
  {static} +IconData settings_bluetooth_rounded
  {static} +IconData settings_bluetooth_outlined
  {static} +IconData settings_brightness
  {static} +IconData settings_brightness_sharp
  {static} +IconData settings_brightness_rounded
  {static} +IconData settings_brightness_outlined
  {static} +IconData settings_cell
  {static} +IconData settings_cell_sharp
  {static} +IconData settings_cell_rounded
  {static} +IconData settings_cell_outlined
  {static} +IconData settings_display
  {static} +IconData settings_display_sharp
  {static} +IconData settings_display_rounded
  {static} +IconData settings_display_outlined
  {static} +IconData settings_ethernet
  {static} +IconData settings_ethernet_sharp
  {static} +IconData settings_ethernet_rounded
  {static} +IconData settings_ethernet_outlined
  {static} +IconData settings_input_antenna
  {static} +IconData settings_input_antenna_sharp
  {static} +IconData settings_input_antenna_rounded
  {static} +IconData settings_input_antenna_outlined
  {static} +IconData settings_input_component
  {static} +IconData settings_input_component_sharp
  {static} +IconData settings_input_component_rounded
  {static} +IconData settings_input_component_outlined
  {static} +IconData settings_input_composite
  {static} +IconData settings_input_composite_sharp
  {static} +IconData settings_input_composite_rounded
  {static} +IconData settings_input_composite_outlined
  {static} +IconData settings_input_hdmi
  {static} +IconData settings_input_hdmi_sharp
  {static} +IconData settings_input_hdmi_rounded
  {static} +IconData settings_input_hdmi_outlined
  {static} +IconData settings_input_svideo
  {static} +IconData settings_input_svideo_sharp
  {static} +IconData settings_input_svideo_rounded
  {static} +IconData settings_input_svideo_outlined
  {static} +IconData settings_overscan
  {static} +IconData settings_overscan_sharp
  {static} +IconData settings_overscan_rounded
  {static} +IconData settings_overscan_outlined
  {static} +IconData settings_phone
  {static} +IconData settings_phone_sharp
  {static} +IconData settings_phone_rounded
  {static} +IconData settings_phone_outlined
  {static} +IconData settings_power
  {static} +IconData settings_power_sharp
  {static} +IconData settings_power_rounded
  {static} +IconData settings_power_outlined
  {static} +IconData settings_remote
  {static} +IconData settings_remote_sharp
  {static} +IconData settings_remote_rounded
  {static} +IconData settings_remote_outlined
  {static} +IconData settings_suggest
  {static} +IconData settings_suggest_sharp
  {static} +IconData settings_suggest_rounded
  {static} +IconData settings_suggest_outlined
  {static} +IconData settings_system_daydream
  {static} +IconData settings_system_daydream_sharp
  {static} +IconData settings_system_daydream_rounded
  {static} +IconData settings_system_daydream_outlined
  {static} +IconData settings_voice
  {static} +IconData settings_voice_sharp
  {static} +IconData settings_voice_rounded
  {static} +IconData settings_voice_outlined
  {static} +IconData severe_cold
  {static} +IconData severe_cold_sharp
  {static} +IconData severe_cold_rounded
  {static} +IconData severe_cold_outlined
  {static} +IconData shape_line
  {static} +IconData shape_line_sharp
  {static} +IconData shape_line_rounded
  {static} +IconData shape_line_outlined
  {static} +IconData share
  {static} +IconData share_sharp
  {static} +IconData share_rounded
  {static} +IconData share_outlined
  {static} +IconData share_arrival_time
  {static} +IconData share_arrival_time_sharp
  {static} +IconData share_arrival_time_rounded
  {static} +IconData share_arrival_time_outlined
  {static} +IconData share_location
  {static} +IconData share_location_sharp
  {static} +IconData share_location_rounded
  {static} +IconData share_location_outlined
  {static} +IconData shelves
  {static} +IconData shield
  {static} +IconData shield_sharp
  {static} +IconData shield_rounded
  {static} +IconData shield_outlined
  {static} +IconData shield_moon
  {static} +IconData shield_moon_sharp
  {static} +IconData shield_moon_rounded
  {static} +IconData shield_moon_outlined
  {static} +IconData shop
  {static} +IconData shop_sharp
  {static} +IconData shop_rounded
  {static} +IconData shop_outlined
  {static} +IconData shop_2
  {static} +IconData shop_2_sharp
  {static} +IconData shop_2_rounded
  {static} +IconData shop_2_outlined
  {static} +IconData shop_two
  {static} +IconData shop_two_sharp
  {static} +IconData shop_two_rounded
  {static} +IconData shop_two_outlined
  {static} +IconData shopify
  {static} +IconData shopify_sharp
  {static} +IconData shopify_rounded
  {static} +IconData shopify_outlined
  {static} +IconData shopping_bag
  {static} +IconData shopping_bag_sharp
  {static} +IconData shopping_bag_rounded
  {static} +IconData shopping_bag_outlined
  {static} +IconData shopping_basket
  {static} +IconData shopping_basket_sharp
  {static} +IconData shopping_basket_rounded
  {static} +IconData shopping_basket_outlined
  {static} +IconData shopping_cart
  {static} +IconData shopping_cart_sharp
  {static} +IconData shopping_cart_rounded
  {static} +IconData shopping_cart_outlined
  {static} +IconData shopping_cart_checkout
  {static} +IconData shopping_cart_checkout_sharp
  {static} +IconData shopping_cart_checkout_rounded
  {static} +IconData shopping_cart_checkout_outlined
  {static} +IconData short_text
  {static} +IconData short_text_sharp
  {static} +IconData short_text_rounded
  {static} +IconData short_text_outlined
  {static} +IconData shortcut
  {static} +IconData shortcut_sharp
  {static} +IconData shortcut_rounded
  {static} +IconData shortcut_outlined
  {static} +IconData show_chart
  {static} +IconData show_chart_sharp
  {static} +IconData show_chart_rounded
  {static} +IconData show_chart_outlined
  {static} +IconData shower
  {static} +IconData shower_sharp
  {static} +IconData shower_rounded
  {static} +IconData shower_outlined
  {static} +IconData shuffle
  {static} +IconData shuffle_sharp
  {static} +IconData shuffle_rounded
  {static} +IconData shuffle_outlined
  {static} +IconData shuffle_on
  {static} +IconData shuffle_on_sharp
  {static} +IconData shuffle_on_rounded
  {static} +IconData shuffle_on_outlined
  {static} +IconData shutter_speed
  {static} +IconData shutter_speed_sharp
  {static} +IconData shutter_speed_rounded
  {static} +IconData shutter_speed_outlined
  {static} +IconData sick
  {static} +IconData sick_sharp
  {static} +IconData sick_rounded
  {static} +IconData sick_outlined
  {static} +IconData sign_language
  {static} +IconData sign_language_sharp
  {static} +IconData sign_language_rounded
  {static} +IconData sign_language_outlined
  {static} +IconData signal_cellular_0_bar
  {static} +IconData signal_cellular_0_bar_sharp
  {static} +IconData signal_cellular_0_bar_rounded
  {static} +IconData signal_cellular_0_bar_outlined
  {static} +IconData signal_cellular_4_bar
  {static} +IconData signal_cellular_4_bar_sharp
  {static} +IconData signal_cellular_4_bar_rounded
  {static} +IconData signal_cellular_4_bar_outlined
  {static} +IconData signal_cellular_alt
  {static} +IconData signal_cellular_alt_sharp
  {static} +IconData signal_cellular_alt_rounded
  {static} +IconData signal_cellular_alt_outlined
  {static} +IconData signal_cellular_alt_1_bar
  {static} +IconData signal_cellular_alt_1_bar_sharp
  {static} +IconData signal_cellular_alt_1_bar_rounded
  {static} +IconData signal_cellular_alt_1_bar_outlined
  {static} +IconData signal_cellular_alt_2_bar
  {static} +IconData signal_cellular_alt_2_bar_sharp
  {static} +IconData signal_cellular_alt_2_bar_rounded
  {static} +IconData signal_cellular_alt_2_bar_outlined
  {static} +IconData signal_cellular_connected_no_internet_0_bar
  {static} +IconData signal_cellular_connected_no_internet_0_bar_sharp
  {static} +IconData signal_cellular_connected_no_internet_0_bar_rounded
  {static} +IconData signal_cellular_connected_no_internet_0_bar_outlined
  {static} +IconData signal_cellular_connected_no_internet_4_bar
  {static} +IconData signal_cellular_connected_no_internet_4_bar_sharp
  {static} +IconData signal_cellular_connected_no_internet_4_bar_rounded
  {static} +IconData signal_cellular_connected_no_internet_4_bar_outlined
  {static} +IconData signal_cellular_no_sim
  {static} +IconData signal_cellular_no_sim_sharp
  {static} +IconData signal_cellular_no_sim_rounded
  {static} +IconData signal_cellular_no_sim_outlined
  {static} +IconData signal_cellular_nodata
  {static} +IconData signal_cellular_nodata_sharp
  {static} +IconData signal_cellular_nodata_rounded
  {static} +IconData signal_cellular_nodata_outlined
  {static} +IconData signal_cellular_null
  {static} +IconData signal_cellular_null_sharp
  {static} +IconData signal_cellular_null_rounded
  {static} +IconData signal_cellular_null_outlined
  {static} +IconData signal_cellular_off
  {static} +IconData signal_cellular_off_sharp
  {static} +IconData signal_cellular_off_rounded
  {static} +IconData signal_cellular_off_outlined
  {static} +IconData signal_wifi_0_bar
  {static} +IconData signal_wifi_0_bar_sharp
  {static} +IconData signal_wifi_0_bar_rounded
  {static} +IconData signal_wifi_0_bar_outlined
  {static} +IconData signal_wifi_4_bar
  {static} +IconData signal_wifi_4_bar_sharp
  {static} +IconData signal_wifi_4_bar_rounded
  {static} +IconData signal_wifi_4_bar_outlined
  {static} +IconData signal_wifi_4_bar_lock
  {static} +IconData signal_wifi_4_bar_lock_sharp
  {static} +IconData signal_wifi_4_bar_lock_rounded
  {static} +IconData signal_wifi_4_bar_lock_outlined
  {static} +IconData signal_wifi_bad
  {static} +IconData signal_wifi_bad_sharp
  {static} +IconData signal_wifi_bad_rounded
  {static} +IconData signal_wifi_bad_outlined
  {static} +IconData signal_wifi_connected_no_internet_4
  {static} +IconData signal_wifi_connected_no_internet_4_sharp
  {static} +IconData signal_wifi_connected_no_internet_4_rounded
  {static} +IconData signal_wifi_connected_no_internet_4_outlined
  {static} +IconData signal_wifi_off
  {static} +IconData signal_wifi_off_sharp
  {static} +IconData signal_wifi_off_rounded
  {static} +IconData signal_wifi_off_outlined
  {static} +IconData signal_wifi_statusbar_4_bar
  {static} +IconData signal_wifi_statusbar_4_bar_sharp
  {static} +IconData signal_wifi_statusbar_4_bar_rounded
  {static} +IconData signal_wifi_statusbar_4_bar_outlined
  {static} +IconData signal_wifi_statusbar_connected_no_internet_4
  {static} +IconData signal_wifi_statusbar_connected_no_internet_4_sharp
  {static} +IconData signal_wifi_statusbar_connected_no_internet_4_rounded
  {static} +IconData signal_wifi_statusbar_connected_no_internet_4_outlined
  {static} +IconData signal_wifi_statusbar_null
  {static} +IconData signal_wifi_statusbar_null_sharp
  {static} +IconData signal_wifi_statusbar_null_rounded
  {static} +IconData signal_wifi_statusbar_null_outlined
  {static} +IconData signpost
  {static} +IconData signpost_sharp
  {static} +IconData signpost_rounded
  {static} +IconData signpost_outlined
  {static} +IconData sim_card
  {static} +IconData sim_card_sharp
  {static} +IconData sim_card_rounded
  {static} +IconData sim_card_outlined
  {static} +IconData sim_card_alert
  {static} +IconData sim_card_alert_sharp
  {static} +IconData sim_card_alert_rounded
  {static} +IconData sim_card_alert_outlined
  {static} +IconData sim_card_download
  {static} +IconData sim_card_download_sharp
  {static} +IconData sim_card_download_rounded
  {static} +IconData sim_card_download_outlined
  {static} +IconData single_bed
  {static} +IconData single_bed_sharp
  {static} +IconData single_bed_rounded
  {static} +IconData single_bed_outlined
  {static} +IconData sip
  {static} +IconData sip_sharp
  {static} +IconData sip_rounded
  {static} +IconData sip_outlined
  {static} +IconData skateboarding
  {static} +IconData skateboarding_sharp
  {static} +IconData skateboarding_rounded
  {static} +IconData skateboarding_outlined
  {static} +IconData skip_next
  {static} +IconData skip_next_sharp
  {static} +IconData skip_next_rounded
  {static} +IconData skip_next_outlined
  {static} +IconData skip_previous
  {static} +IconData skip_previous_sharp
  {static} +IconData skip_previous_rounded
  {static} +IconData skip_previous_outlined
  {static} +IconData sledding
  {static} +IconData sledding_sharp
  {static} +IconData sledding_rounded
  {static} +IconData sledding_outlined
  {static} +IconData slideshow
  {static} +IconData slideshow_sharp
  {static} +IconData slideshow_rounded
  {static} +IconData slideshow_outlined
  {static} +IconData slow_motion_video
  {static} +IconData slow_motion_video_sharp
  {static} +IconData slow_motion_video_rounded
  {static} +IconData slow_motion_video_outlined
  {static} +IconData smart_button
  {static} +IconData smart_button_sharp
  {static} +IconData smart_button_rounded
  {static} +IconData smart_button_outlined
  {static} +IconData smart_display
  {static} +IconData smart_display_sharp
  {static} +IconData smart_display_rounded
  {static} +IconData smart_display_outlined
  {static} +IconData smart_screen
  {static} +IconData smart_screen_sharp
  {static} +IconData smart_screen_rounded
  {static} +IconData smart_screen_outlined
  {static} +IconData smart_toy
  {static} +IconData smart_toy_sharp
  {static} +IconData smart_toy_rounded
  {static} +IconData smart_toy_outlined
  {static} +IconData smartphone
  {static} +IconData smartphone_sharp
  {static} +IconData smartphone_rounded
  {static} +IconData smartphone_outlined
  {static} +IconData smoke_free
  {static} +IconData smoke_free_sharp
  {static} +IconData smoke_free_rounded
  {static} +IconData smoke_free_outlined
  {static} +IconData smoking_rooms
  {static} +IconData smoking_rooms_sharp
  {static} +IconData smoking_rooms_rounded
  {static} +IconData smoking_rooms_outlined
  {static} +IconData sms
  {static} +IconData sms_sharp
  {static} +IconData sms_rounded
  {static} +IconData sms_outlined
  {static} +IconData sms_failed
  {static} +IconData sms_failed_sharp
  {static} +IconData sms_failed_rounded
  {static} +IconData sms_failed_outlined
  {static} +IconData snapchat
  {static} +IconData snapchat_sharp
  {static} +IconData snapchat_rounded
  {static} +IconData snapchat_outlined
  {static} +IconData snippet_folder
  {static} +IconData snippet_folder_sharp
  {static} +IconData snippet_folder_rounded
  {static} +IconData snippet_folder_outlined
  {static} +IconData snooze
  {static} +IconData snooze_sharp
  {static} +IconData snooze_rounded
  {static} +IconData snooze_outlined
  {static} +IconData snowboarding
  {static} +IconData snowboarding_sharp
  {static} +IconData snowboarding_rounded
  {static} +IconData snowboarding_outlined
  {static} +IconData snowing
  {static} +IconData snowmobile
  {static} +IconData snowmobile_sharp
  {static} +IconData snowmobile_rounded
  {static} +IconData snowmobile_outlined
  {static} +IconData snowshoeing
  {static} +IconData snowshoeing_sharp
  {static} +IconData snowshoeing_rounded
  {static} +IconData snowshoeing_outlined
  {static} +IconData soap
  {static} +IconData soap_sharp
  {static} +IconData soap_rounded
  {static} +IconData soap_outlined
  {static} +IconData social_distance
  {static} +IconData social_distance_sharp
  {static} +IconData social_distance_rounded
  {static} +IconData social_distance_outlined
  {static} +IconData solar_power
  {static} +IconData solar_power_sharp
  {static} +IconData solar_power_rounded
  {static} +IconData solar_power_outlined
  {static} +IconData sort
  {static} +IconData sort_sharp
  {static} +IconData sort_rounded
  {static} +IconData sort_outlined
  {static} +IconData sort_by_alpha
  {static} +IconData sort_by_alpha_sharp
  {static} +IconData sort_by_alpha_rounded
  {static} +IconData sort_by_alpha_outlined
  {static} +IconData sos
  {static} +IconData sos_sharp
  {static} +IconData sos_rounded
  {static} +IconData sos_outlined
  {static} +IconData soup_kitchen
  {static} +IconData soup_kitchen_sharp
  {static} +IconData soup_kitchen_rounded
  {static} +IconData soup_kitchen_outlined
  {static} +IconData source
  {static} +IconData source_sharp
  {static} +IconData source_rounded
  {static} +IconData source_outlined
  {static} +IconData south
  {static} +IconData south_sharp
  {static} +IconData south_rounded
  {static} +IconData south_outlined
  {static} +IconData south_america
  {static} +IconData south_america_sharp
  {static} +IconData south_america_rounded
  {static} +IconData south_america_outlined
  {static} +IconData south_east
  {static} +IconData south_east_sharp
  {static} +IconData south_east_rounded
  {static} +IconData south_east_outlined
  {static} +IconData south_west
  {static} +IconData south_west_sharp
  {static} +IconData south_west_rounded
  {static} +IconData south_west_outlined
  {static} +IconData spa
  {static} +IconData spa_sharp
  {static} +IconData spa_rounded
  {static} +IconData spa_outlined
  {static} +IconData space_bar
  {static} +IconData space_bar_sharp
  {static} +IconData space_bar_rounded
  {static} +IconData space_bar_outlined
  {static} +IconData space_dashboard
  {static} +IconData space_dashboard_sharp
  {static} +IconData space_dashboard_rounded
  {static} +IconData space_dashboard_outlined
  {static} +IconData spatial_audio
  {static} +IconData spatial_audio_sharp
  {static} +IconData spatial_audio_rounded
  {static} +IconData spatial_audio_outlined
  {static} +IconData spatial_audio_off
  {static} +IconData spatial_audio_off_sharp
  {static} +IconData spatial_audio_off_rounded
  {static} +IconData spatial_audio_off_outlined
  {static} +IconData spatial_tracking
  {static} +IconData spatial_tracking_sharp
  {static} +IconData spatial_tracking_rounded
  {static} +IconData spatial_tracking_outlined
  {static} +IconData speaker
  {static} +IconData speaker_sharp
  {static} +IconData speaker_rounded
  {static} +IconData speaker_outlined
  {static} +IconData speaker_group
  {static} +IconData speaker_group_sharp
  {static} +IconData speaker_group_rounded
  {static} +IconData speaker_group_outlined
  {static} +IconData speaker_notes
  {static} +IconData speaker_notes_sharp
  {static} +IconData speaker_notes_rounded
  {static} +IconData speaker_notes_outlined
  {static} +IconData speaker_notes_off
  {static} +IconData speaker_notes_off_sharp
  {static} +IconData speaker_notes_off_rounded
  {static} +IconData speaker_notes_off_outlined
  {static} +IconData speaker_phone
  {static} +IconData speaker_phone_sharp
  {static} +IconData speaker_phone_rounded
  {static} +IconData speaker_phone_outlined
  {static} +IconData speed
  {static} +IconData speed_sharp
  {static} +IconData speed_rounded
  {static} +IconData speed_outlined
  {static} +IconData spellcheck
  {static} +IconData spellcheck_sharp
  {static} +IconData spellcheck_rounded
  {static} +IconData spellcheck_outlined
  {static} +IconData splitscreen
  {static} +IconData splitscreen_sharp
  {static} +IconData splitscreen_rounded
  {static} +IconData splitscreen_outlined
  {static} +IconData spoke
  {static} +IconData spoke_sharp
  {static} +IconData spoke_rounded
  {static} +IconData spoke_outlined
  {static} +IconData sports
  {static} +IconData sports_sharp
  {static} +IconData sports_rounded
  {static} +IconData sports_outlined
  {static} +IconData sports_bar
  {static} +IconData sports_bar_sharp
  {static} +IconData sports_bar_rounded
  {static} +IconData sports_bar_outlined
  {static} +IconData sports_baseball
  {static} +IconData sports_baseball_sharp
  {static} +IconData sports_baseball_rounded
  {static} +IconData sports_baseball_outlined
  {static} +IconData sports_basketball
  {static} +IconData sports_basketball_sharp
  {static} +IconData sports_basketball_rounded
  {static} +IconData sports_basketball_outlined
  {static} +IconData sports_cricket
  {static} +IconData sports_cricket_sharp
  {static} +IconData sports_cricket_rounded
  {static} +IconData sports_cricket_outlined
  {static} +IconData sports_esports
  {static} +IconData sports_esports_sharp
  {static} +IconData sports_esports_rounded
  {static} +IconData sports_esports_outlined
  {static} +IconData sports_football
  {static} +IconData sports_football_sharp
  {static} +IconData sports_football_rounded
  {static} +IconData sports_football_outlined
  {static} +IconData sports_golf
  {static} +IconData sports_golf_sharp
  {static} +IconData sports_golf_rounded
  {static} +IconData sports_golf_outlined
  {static} +IconData sports_gymnastics
  {static} +IconData sports_gymnastics_sharp
  {static} +IconData sports_gymnastics_rounded
  {static} +IconData sports_gymnastics_outlined
  {static} +IconData sports_handball
  {static} +IconData sports_handball_sharp
  {static} +IconData sports_handball_rounded
  {static} +IconData sports_handball_outlined
  {static} +IconData sports_hockey
  {static} +IconData sports_hockey_sharp
  {static} +IconData sports_hockey_rounded
  {static} +IconData sports_hockey_outlined
  {static} +IconData sports_kabaddi
  {static} +IconData sports_kabaddi_sharp
  {static} +IconData sports_kabaddi_rounded
  {static} +IconData sports_kabaddi_outlined
  {static} +IconData sports_martial_arts
  {static} +IconData sports_martial_arts_sharp
  {static} +IconData sports_martial_arts_rounded
  {static} +IconData sports_martial_arts_outlined
  {static} +IconData sports_mma
  {static} +IconData sports_mma_sharp
  {static} +IconData sports_mma_rounded
  {static} +IconData sports_mma_outlined
  {static} +IconData sports_motorsports
  {static} +IconData sports_motorsports_sharp
  {static} +IconData sports_motorsports_rounded
  {static} +IconData sports_motorsports_outlined
  {static} +IconData sports_rugby
  {static} +IconData sports_rugby_sharp
  {static} +IconData sports_rugby_rounded
  {static} +IconData sports_rugby_outlined
  {static} +IconData sports_score
  {static} +IconData sports_score_sharp
  {static} +IconData sports_score_rounded
  {static} +IconData sports_score_outlined
  {static} +IconData sports_soccer
  {static} +IconData sports_soccer_sharp
  {static} +IconData sports_soccer_rounded
  {static} +IconData sports_soccer_outlined
  {static} +IconData sports_tennis
  {static} +IconData sports_tennis_sharp
  {static} +IconData sports_tennis_rounded
  {static} +IconData sports_tennis_outlined
  {static} +IconData sports_volleyball
  {static} +IconData sports_volleyball_sharp
  {static} +IconData sports_volleyball_rounded
  {static} +IconData sports_volleyball_outlined
  {static} +IconData square
  {static} +IconData square_sharp
  {static} +IconData square_rounded
  {static} +IconData square_outlined
  {static} +IconData square_foot
  {static} +IconData square_foot_sharp
  {static} +IconData square_foot_rounded
  {static} +IconData square_foot_outlined
  {static} +IconData ssid_chart
  {static} +IconData ssid_chart_sharp
  {static} +IconData ssid_chart_rounded
  {static} +IconData ssid_chart_outlined
  {static} +IconData stacked_bar_chart
  {static} +IconData stacked_bar_chart_sharp
  {static} +IconData stacked_bar_chart_rounded
  {static} +IconData stacked_bar_chart_outlined
  {static} +IconData stacked_line_chart
  {static} +IconData stacked_line_chart_sharp
  {static} +IconData stacked_line_chart_rounded
  {static} +IconData stacked_line_chart_outlined
  {static} +IconData stadium
  {static} +IconData stadium_sharp
  {static} +IconData stadium_rounded
  {static} +IconData stadium_outlined
  {static} +IconData stairs
  {static} +IconData stairs_sharp
  {static} +IconData stairs_rounded
  {static} +IconData stairs_outlined
  {static} +IconData star
  {static} +IconData star_sharp
  {static} +IconData star_rounded
  {static} +IconData star_outlined
  {static} +IconData star_border
  {static} +IconData star_border_sharp
  {static} +IconData star_border_rounded
  {static} +IconData star_border_outlined
  {static} +IconData star_border_purple500
  {static} +IconData star_border_purple500_sharp
  {static} +IconData star_border_purple500_rounded
  {static} +IconData star_border_purple500_outlined
  {static} +IconData star_half
  {static} +IconData star_half_sharp
  {static} +IconData star_half_rounded
  {static} +IconData star_half_outlined
  {static} +IconData star_outline
  {static} +IconData star_outline_sharp
  {static} +IconData star_outline_rounded
  {static} +IconData star_outline_outlined
  {static} +IconData star_purple500
  {static} +IconData star_purple500_sharp
  {static} +IconData star_purple500_rounded
  {static} +IconData star_purple500_outlined
  {static} +IconData star_rate
  {static} +IconData star_rate_sharp
  {static} +IconData star_rate_rounded
  {static} +IconData star_rate_outlined
  {static} +IconData stars
  {static} +IconData stars_sharp
  {static} +IconData stars_rounded
  {static} +IconData stars_outlined
  {static} +IconData start
  {static} +IconData start_sharp
  {static} +IconData start_rounded
  {static} +IconData start_outlined
  {static} +IconData stay_current_landscape
  {static} +IconData stay_current_landscape_sharp
  {static} +IconData stay_current_landscape_rounded
  {static} +IconData stay_current_landscape_outlined
  {static} +IconData stay_current_portrait
  {static} +IconData stay_current_portrait_sharp
  {static} +IconData stay_current_portrait_rounded
  {static} +IconData stay_current_portrait_outlined
  {static} +IconData stay_primary_landscape
  {static} +IconData stay_primary_landscape_sharp
  {static} +IconData stay_primary_landscape_rounded
  {static} +IconData stay_primary_landscape_outlined
  {static} +IconData stay_primary_portrait
  {static} +IconData stay_primary_portrait_sharp
  {static} +IconData stay_primary_portrait_rounded
  {static} +IconData stay_primary_portrait_outlined
  {static} +IconData sticky_note_2
  {static} +IconData sticky_note_2_sharp
  {static} +IconData sticky_note_2_rounded
  {static} +IconData sticky_note_2_outlined
  {static} +IconData stop
  {static} +IconData stop_sharp
  {static} +IconData stop_rounded
  {static} +IconData stop_outlined
  {static} +IconData stop_circle
  {static} +IconData stop_circle_sharp
  {static} +IconData stop_circle_rounded
  {static} +IconData stop_circle_outlined
  {static} +IconData stop_screen_share
  {static} +IconData stop_screen_share_sharp
  {static} +IconData stop_screen_share_rounded
  {static} +IconData stop_screen_share_outlined
  {static} +IconData storage
  {static} +IconData storage_sharp
  {static} +IconData storage_rounded
  {static} +IconData storage_outlined
  {static} +IconData store
  {static} +IconData store_sharp
  {static} +IconData store_rounded
  {static} +IconData store_outlined
  {static} +IconData store_mall_directory
  {static} +IconData store_mall_directory_sharp
  {static} +IconData store_mall_directory_rounded
  {static} +IconData store_mall_directory_outlined
  {static} +IconData storefront
  {static} +IconData storefront_sharp
  {static} +IconData storefront_rounded
  {static} +IconData storefront_outlined
  {static} +IconData storm
  {static} +IconData storm_sharp
  {static} +IconData storm_rounded
  {static} +IconData storm_outlined
  {static} +IconData straight
  {static} +IconData straight_sharp
  {static} +IconData straight_rounded
  {static} +IconData straight_outlined
  {static} +IconData straighten
  {static} +IconData straighten_sharp
  {static} +IconData straighten_rounded
  {static} +IconData straighten_outlined
  {static} +IconData stream
  {static} +IconData stream_sharp
  {static} +IconData stream_rounded
  {static} +IconData stream_outlined
  {static} +IconData streetview
  {static} +IconData streetview_sharp
  {static} +IconData streetview_rounded
  {static} +IconData streetview_outlined
  {static} +IconData strikethrough_s
  {static} +IconData strikethrough_s_sharp
  {static} +IconData strikethrough_s_rounded
  {static} +IconData strikethrough_s_outlined
  {static} +IconData stroller
  {static} +IconData stroller_sharp
  {static} +IconData stroller_rounded
  {static} +IconData stroller_outlined
  {static} +IconData style
  {static} +IconData style_sharp
  {static} +IconData style_rounded
  {static} +IconData style_outlined
  {static} +IconData subdirectory_arrow_left
  {static} +IconData subdirectory_arrow_left_sharp
  {static} +IconData subdirectory_arrow_left_rounded
  {static} +IconData subdirectory_arrow_left_outlined
  {static} +IconData subdirectory_arrow_right
  {static} +IconData subdirectory_arrow_right_sharp
  {static} +IconData subdirectory_arrow_right_rounded
  {static} +IconData subdirectory_arrow_right_outlined
  {static} +IconData subject
  {static} +IconData subject_sharp
  {static} +IconData subject_rounded
  {static} +IconData subject_outlined
  {static} +IconData subscript
  {static} +IconData subscript_sharp
  {static} +IconData subscript_rounded
  {static} +IconData subscript_outlined
  {static} +IconData subscriptions
  {static} +IconData subscriptions_sharp
  {static} +IconData subscriptions_rounded
  {static} +IconData subscriptions_outlined
  {static} +IconData subtitles
  {static} +IconData subtitles_sharp
  {static} +IconData subtitles_rounded
  {static} +IconData subtitles_outlined
  {static} +IconData subtitles_off
  {static} +IconData subtitles_off_sharp
  {static} +IconData subtitles_off_rounded
  {static} +IconData subtitles_off_outlined
  {static} +IconData subway
  {static} +IconData subway_sharp
  {static} +IconData subway_rounded
  {static} +IconData subway_outlined
  {static} +IconData summarize
  {static} +IconData summarize_sharp
  {static} +IconData summarize_rounded
  {static} +IconData summarize_outlined
  {static} +IconData sunny
  {static} +IconData sunny_snowing
  {static} +IconData superscript
  {static} +IconData superscript_sharp
  {static} +IconData superscript_rounded
  {static} +IconData superscript_outlined
  {static} +IconData supervised_user_circle
  {static} +IconData supervised_user_circle_sharp
  {static} +IconData supervised_user_circle_rounded
  {static} +IconData supervised_user_circle_outlined
  {static} +IconData supervisor_account
  {static} +IconData supervisor_account_sharp
  {static} +IconData supervisor_account_rounded
  {static} +IconData supervisor_account_outlined
  {static} +IconData support
  {static} +IconData support_sharp
  {static} +IconData support_rounded
  {static} +IconData support_outlined
  {static} +IconData support_agent
  {static} +IconData support_agent_sharp
  {static} +IconData support_agent_rounded
  {static} +IconData support_agent_outlined
  {static} +IconData surfing
  {static} +IconData surfing_sharp
  {static} +IconData surfing_rounded
  {static} +IconData surfing_outlined
  {static} +IconData surround_sound
  {static} +IconData surround_sound_sharp
  {static} +IconData surround_sound_rounded
  {static} +IconData surround_sound_outlined
  {static} +IconData swap_calls
  {static} +IconData swap_calls_sharp
  {static} +IconData swap_calls_rounded
  {static} +IconData swap_calls_outlined
  {static} +IconData swap_horiz
  {static} +IconData swap_horiz_sharp
  {static} +IconData swap_horiz_rounded
  {static} +IconData swap_horiz_outlined
  {static} +IconData swap_horizontal_circle
  {static} +IconData swap_horizontal_circle_sharp
  {static} +IconData swap_horizontal_circle_rounded
  {static} +IconData swap_horizontal_circle_outlined
  {static} +IconData swap_vert
  {static} +IconData swap_vert_sharp
  {static} +IconData swap_vert_rounded
  {static} +IconData swap_vert_outlined
  {static} +IconData swap_vert_circle
  {static} +IconData swap_vert_circle_sharp
  {static} +IconData swap_vert_circle_rounded
  {static} +IconData swap_vert_circle_outlined
  {static} +IconData swap_vertical_circle
  {static} +IconData swap_vertical_circle_sharp
  {static} +IconData swap_vertical_circle_rounded
  {static} +IconData swap_vertical_circle_outlined
  {static} +IconData swipe
  {static} +IconData swipe_sharp
  {static} +IconData swipe_rounded
  {static} +IconData swipe_outlined
  {static} +IconData swipe_down
  {static} +IconData swipe_down_sharp
  {static} +IconData swipe_down_rounded
  {static} +IconData swipe_down_outlined
  {static} +IconData swipe_down_alt
  {static} +IconData swipe_down_alt_sharp
  {static} +IconData swipe_down_alt_rounded
  {static} +IconData swipe_down_alt_outlined
  {static} +IconData swipe_left
  {static} +IconData swipe_left_sharp
  {static} +IconData swipe_left_rounded
  {static} +IconData swipe_left_outlined
  {static} +IconData swipe_left_alt
  {static} +IconData swipe_left_alt_sharp
  {static} +IconData swipe_left_alt_rounded
  {static} +IconData swipe_left_alt_outlined
  {static} +IconData swipe_right
  {static} +IconData swipe_right_sharp
  {static} +IconData swipe_right_rounded
  {static} +IconData swipe_right_outlined
  {static} +IconData swipe_right_alt
  {static} +IconData swipe_right_alt_sharp
  {static} +IconData swipe_right_alt_rounded
  {static} +IconData swipe_right_alt_outlined
  {static} +IconData swipe_up
  {static} +IconData swipe_up_sharp
  {static} +IconData swipe_up_rounded
  {static} +IconData swipe_up_outlined
  {static} +IconData swipe_up_alt
  {static} +IconData swipe_up_alt_sharp
  {static} +IconData swipe_up_alt_rounded
  {static} +IconData swipe_up_alt_outlined
  {static} +IconData swipe_vertical
  {static} +IconData swipe_vertical_sharp
  {static} +IconData swipe_vertical_rounded
  {static} +IconData swipe_vertical_outlined
  {static} +IconData switch_access_shortcut
  {static} +IconData switch_access_shortcut_sharp
  {static} +IconData switch_access_shortcut_rounded
  {static} +IconData switch_access_shortcut_outlined
  {static} +IconData switch_access_shortcut_add
  {static} +IconData switch_access_shortcut_add_sharp
  {static} +IconData switch_access_shortcut_add_rounded
  {static} +IconData switch_access_shortcut_add_outlined
  {static} +IconData switch_account
  {static} +IconData switch_account_sharp
  {static} +IconData switch_account_rounded
  {static} +IconData switch_account_outlined
  {static} +IconData switch_camera
  {static} +IconData switch_camera_sharp
  {static} +IconData switch_camera_rounded
  {static} +IconData switch_camera_outlined
  {static} +IconData switch_left
  {static} +IconData switch_left_sharp
  {static} +IconData switch_left_rounded
  {static} +IconData switch_left_outlined
  {static} +IconData switch_right
  {static} +IconData switch_right_sharp
  {static} +IconData switch_right_rounded
  {static} +IconData switch_right_outlined
  {static} +IconData switch_video
  {static} +IconData switch_video_sharp
  {static} +IconData switch_video_rounded
  {static} +IconData switch_video_outlined
  {static} +IconData synagogue
  {static} +IconData synagogue_sharp
  {static} +IconData synagogue_rounded
  {static} +IconData synagogue_outlined
  {static} +IconData sync
  {static} +IconData sync_sharp
  {static} +IconData sync_rounded
  {static} +IconData sync_outlined
  {static} +IconData sync_alt
  {static} +IconData sync_alt_sharp
  {static} +IconData sync_alt_rounded
  {static} +IconData sync_alt_outlined
  {static} +IconData sync_disabled
  {static} +IconData sync_disabled_sharp
  {static} +IconData sync_disabled_rounded
  {static} +IconData sync_disabled_outlined
  {static} +IconData sync_lock
  {static} +IconData sync_lock_sharp
  {static} +IconData sync_lock_rounded
  {static} +IconData sync_lock_outlined
  {static} +IconData sync_problem
  {static} +IconData sync_problem_sharp
  {static} +IconData sync_problem_rounded
  {static} +IconData sync_problem_outlined
  {static} +IconData system_security_update
  {static} +IconData system_security_update_sharp
  {static} +IconData system_security_update_rounded
  {static} +IconData system_security_update_outlined
  {static} +IconData system_security_update_good
  {static} +IconData system_security_update_good_sharp
  {static} +IconData system_security_update_good_rounded
  {static} +IconData system_security_update_good_outlined
  {static} +IconData system_security_update_warning
  {static} +IconData system_security_update_warning_sharp
  {static} +IconData system_security_update_warning_rounded
  {static} +IconData system_security_update_warning_outlined
  {static} +IconData system_update
  {static} +IconData system_update_sharp
  {static} +IconData system_update_rounded
  {static} +IconData system_update_outlined
  {static} +IconData system_update_alt
  {static} +IconData system_update_alt_sharp
  {static} +IconData system_update_alt_rounded
  {static} +IconData system_update_alt_outlined
  {static} +IconData system_update_tv
  {static} +IconData system_update_tv_sharp
  {static} +IconData system_update_tv_rounded
  {static} +IconData system_update_tv_outlined
  {static} +IconData tab
  {static} +IconData tab_sharp
  {static} +IconData tab_rounded
  {static} +IconData tab_outlined
  {static} +IconData tab_unselected
  {static} +IconData tab_unselected_sharp
  {static} +IconData tab_unselected_rounded
  {static} +IconData tab_unselected_outlined
  {static} +IconData table_bar
  {static} +IconData table_bar_sharp
  {static} +IconData table_bar_rounded
  {static} +IconData table_bar_outlined
  {static} +IconData table_chart
  {static} +IconData table_chart_sharp
  {static} +IconData table_chart_rounded
  {static} +IconData table_chart_outlined
  {static} +IconData table_restaurant
  {static} +IconData table_restaurant_sharp
  {static} +IconData table_restaurant_rounded
  {static} +IconData table_restaurant_outlined
  {static} +IconData table_rows
  {static} +IconData table_rows_sharp
  {static} +IconData table_rows_rounded
  {static} +IconData table_rows_outlined
  {static} +IconData table_view
  {static} +IconData table_view_sharp
  {static} +IconData table_view_rounded
  {static} +IconData table_view_outlined
  {static} +IconData tablet
  {static} +IconData tablet_sharp
  {static} +IconData tablet_rounded
  {static} +IconData tablet_outlined
  {static} +IconData tablet_android
  {static} +IconData tablet_android_sharp
  {static} +IconData tablet_android_rounded
  {static} +IconData tablet_android_outlined
  {static} +IconData tablet_mac
  {static} +IconData tablet_mac_sharp
  {static} +IconData tablet_mac_rounded
  {static} +IconData tablet_mac_outlined
  {static} +IconData tag
  {static} +IconData tag_sharp
  {static} +IconData tag_rounded
  {static} +IconData tag_outlined
  {static} +IconData tag_faces
  {static} +IconData tag_faces_sharp
  {static} +IconData tag_faces_rounded
  {static} +IconData tag_faces_outlined
  {static} +IconData takeout_dining
  {static} +IconData takeout_dining_sharp
  {static} +IconData takeout_dining_rounded
  {static} +IconData takeout_dining_outlined
  {static} +IconData tap_and_play
  {static} +IconData tap_and_play_sharp
  {static} +IconData tap_and_play_rounded
  {static} +IconData tap_and_play_outlined
  {static} +IconData tapas
  {static} +IconData tapas_sharp
  {static} +IconData tapas_rounded
  {static} +IconData tapas_outlined
  {static} +IconData task
  {static} +IconData task_sharp
  {static} +IconData task_rounded
  {static} +IconData task_outlined
  {static} +IconData task_alt
  {static} +IconData task_alt_sharp
  {static} +IconData task_alt_rounded
  {static} +IconData task_alt_outlined
  {static} +IconData taxi_alert
  {static} +IconData taxi_alert_sharp
  {static} +IconData taxi_alert_rounded
  {static} +IconData taxi_alert_outlined
  {static} +IconData telegram
  {static} +IconData telegram_sharp
  {static} +IconData telegram_rounded
  {static} +IconData telegram_outlined
  {static} +IconData temple_buddhist
  {static} +IconData temple_buddhist_sharp
  {static} +IconData temple_buddhist_rounded
  {static} +IconData temple_buddhist_outlined
  {static} +IconData temple_hindu
  {static} +IconData temple_hindu_sharp
  {static} +IconData temple_hindu_rounded
  {static} +IconData temple_hindu_outlined
  {static} +IconData terminal
  {static} +IconData terminal_sharp
  {static} +IconData terminal_rounded
  {static} +IconData terminal_outlined
  {static} +IconData terrain
  {static} +IconData terrain_sharp
  {static} +IconData terrain_rounded
  {static} +IconData terrain_outlined
  {static} +IconData text_decrease
  {static} +IconData text_decrease_sharp
  {static} +IconData text_decrease_rounded
  {static} +IconData text_decrease_outlined
  {static} +IconData text_fields
  {static} +IconData text_fields_sharp
  {static} +IconData text_fields_rounded
  {static} +IconData text_fields_outlined
  {static} +IconData text_format
  {static} +IconData text_format_sharp
  {static} +IconData text_format_rounded
  {static} +IconData text_format_outlined
  {static} +IconData text_increase
  {static} +IconData text_increase_sharp
  {static} +IconData text_increase_rounded
  {static} +IconData text_increase_outlined
  {static} +IconData text_rotate_up
  {static} +IconData text_rotate_up_sharp
  {static} +IconData text_rotate_up_rounded
  {static} +IconData text_rotate_up_outlined
  {static} +IconData text_rotate_vertical
  {static} +IconData text_rotate_vertical_sharp
  {static} +IconData text_rotate_vertical_rounded
  {static} +IconData text_rotate_vertical_outlined
  {static} +IconData text_rotation_angledown
  {static} +IconData text_rotation_angledown_sharp
  {static} +IconData text_rotation_angledown_rounded
  {static} +IconData text_rotation_angledown_outlined
  {static} +IconData text_rotation_angleup
  {static} +IconData text_rotation_angleup_sharp
  {static} +IconData text_rotation_angleup_rounded
  {static} +IconData text_rotation_angleup_outlined
  {static} +IconData text_rotation_down
  {static} +IconData text_rotation_down_sharp
  {static} +IconData text_rotation_down_rounded
  {static} +IconData text_rotation_down_outlined
  {static} +IconData text_rotation_none
  {static} +IconData text_rotation_none_sharp
  {static} +IconData text_rotation_none_rounded
  {static} +IconData text_rotation_none_outlined
  {static} +IconData text_snippet
  {static} +IconData text_snippet_sharp
  {static} +IconData text_snippet_rounded
  {static} +IconData text_snippet_outlined
  {static} +IconData textsms
  {static} +IconData textsms_sharp
  {static} +IconData textsms_rounded
  {static} +IconData textsms_outlined
  {static} +IconData texture
  {static} +IconData texture_sharp
  {static} +IconData texture_rounded
  {static} +IconData texture_outlined
  {static} +IconData theater_comedy
  {static} +IconData theater_comedy_sharp
  {static} +IconData theater_comedy_rounded
  {static} +IconData theater_comedy_outlined
  {static} +IconData theaters
  {static} +IconData theaters_sharp
  {static} +IconData theaters_rounded
  {static} +IconData theaters_outlined
  {static} +IconData thermostat
  {static} +IconData thermostat_sharp
  {static} +IconData thermostat_rounded
  {static} +IconData thermostat_outlined
  {static} +IconData thermostat_auto
  {static} +IconData thermostat_auto_sharp
  {static} +IconData thermostat_auto_rounded
  {static} +IconData thermostat_auto_outlined
  {static} +IconData thumb_down
  {static} +IconData thumb_down_sharp
  {static} +IconData thumb_down_rounded
  {static} +IconData thumb_down_outlined
  {static} +IconData thumb_down_alt
  {static} +IconData thumb_down_alt_sharp
  {static} +IconData thumb_down_alt_rounded
  {static} +IconData thumb_down_alt_outlined
  {static} +IconData thumb_down_off_alt
  {static} +IconData thumb_down_off_alt_sharp
  {static} +IconData thumb_down_off_alt_rounded
  {static} +IconData thumb_down_off_alt_outlined
  {static} +IconData thumb_up
  {static} +IconData thumb_up_sharp
  {static} +IconData thumb_up_rounded
  {static} +IconData thumb_up_outlined
  {static} +IconData thumb_up_alt
  {static} +IconData thumb_up_alt_sharp
  {static} +IconData thumb_up_alt_rounded
  {static} +IconData thumb_up_alt_outlined
  {static} +IconData thumb_up_off_alt
  {static} +IconData thumb_up_off_alt_sharp
  {static} +IconData thumb_up_off_alt_rounded
  {static} +IconData thumb_up_off_alt_outlined
  {static} +IconData thumbs_up_down
  {static} +IconData thumbs_up_down_sharp
  {static} +IconData thumbs_up_down_rounded
  {static} +IconData thumbs_up_down_outlined
  {static} +IconData thunderstorm
  {static} +IconData thunderstorm_sharp
  {static} +IconData thunderstorm_rounded
  {static} +IconData thunderstorm_outlined
  {static} +IconData tiktok
  {static} +IconData tiktok_sharp
  {static} +IconData tiktok_rounded
  {static} +IconData tiktok_outlined
  {static} +IconData time_to_leave
  {static} +IconData time_to_leave_sharp
  {static} +IconData time_to_leave_rounded
  {static} +IconData time_to_leave_outlined
  {static} +IconData timelapse
  {static} +IconData timelapse_sharp
  {static} +IconData timelapse_rounded
  {static} +IconData timelapse_outlined
  {static} +IconData timeline
  {static} +IconData timeline_sharp
  {static} +IconData timeline_rounded
  {static} +IconData timeline_outlined
  {static} +IconData timer
  {static} +IconData timer_sharp
  {static} +IconData timer_rounded
  {static} +IconData timer_outlined
  {static} +IconData timer_10
  {static} +IconData timer_10_sharp
  {static} +IconData timer_10_rounded
  {static} +IconData timer_10_outlined
  {static} +IconData timer_10_select
  {static} +IconData timer_10_select_sharp
  {static} +IconData timer_10_select_rounded
  {static} +IconData timer_10_select_outlined
  {static} +IconData timer_3
  {static} +IconData timer_3_sharp
  {static} +IconData timer_3_rounded
  {static} +IconData timer_3_outlined
  {static} +IconData timer_3_select
  {static} +IconData timer_3_select_sharp
  {static} +IconData timer_3_select_rounded
  {static} +IconData timer_3_select_outlined
  {static} +IconData timer_off
  {static} +IconData timer_off_sharp
  {static} +IconData timer_off_rounded
  {static} +IconData timer_off_outlined
  {static} +IconData tips_and_updates
  {static} +IconData tips_and_updates_sharp
  {static} +IconData tips_and_updates_rounded
  {static} +IconData tips_and_updates_outlined
  {static} +IconData tire_repair
  {static} +IconData tire_repair_sharp
  {static} +IconData tire_repair_rounded
  {static} +IconData tire_repair_outlined
  {static} +IconData title
  {static} +IconData title_sharp
  {static} +IconData title_rounded
  {static} +IconData title_outlined
  {static} +IconData toc
  {static} +IconData toc_sharp
  {static} +IconData toc_rounded
  {static} +IconData toc_outlined
  {static} +IconData today
  {static} +IconData today_sharp
  {static} +IconData today_rounded
  {static} +IconData today_outlined
  {static} +IconData toggle_off
  {static} +IconData toggle_off_sharp
  {static} +IconData toggle_off_rounded
  {static} +IconData toggle_off_outlined
  {static} +IconData toggle_on
  {static} +IconData toggle_on_sharp
  {static} +IconData toggle_on_rounded
  {static} +IconData toggle_on_outlined
  {static} +IconData token
  {static} +IconData token_sharp
  {static} +IconData token_rounded
  {static} +IconData token_outlined
  {static} +IconData toll
  {static} +IconData toll_sharp
  {static} +IconData toll_rounded
  {static} +IconData toll_outlined
  {static} +IconData tonality
  {static} +IconData tonality_sharp
  {static} +IconData tonality_rounded
  {static} +IconData tonality_outlined
  {static} +IconData topic
  {static} +IconData topic_sharp
  {static} +IconData topic_rounded
  {static} +IconData topic_outlined
  {static} +IconData tornado
  {static} +IconData tornado_sharp
  {static} +IconData tornado_rounded
  {static} +IconData tornado_outlined
  {static} +IconData touch_app
  {static} +IconData touch_app_sharp
  {static} +IconData touch_app_rounded
  {static} +IconData touch_app_outlined
  {static} +IconData tour
  {static} +IconData tour_sharp
  {static} +IconData tour_rounded
  {static} +IconData tour_outlined
  {static} +IconData toys
  {static} +IconData toys_sharp
  {static} +IconData toys_rounded
  {static} +IconData toys_outlined
  {static} +IconData track_changes
  {static} +IconData track_changes_sharp
  {static} +IconData track_changes_rounded
  {static} +IconData track_changes_outlined
  {static} +IconData traffic
  {static} +IconData traffic_sharp
  {static} +IconData traffic_rounded
  {static} +IconData traffic_outlined
  {static} +IconData train
  {static} +IconData train_sharp
  {static} +IconData train_rounded
  {static} +IconData train_outlined
  {static} +IconData tram
  {static} +IconData tram_sharp
  {static} +IconData tram_rounded
  {static} +IconData tram_outlined
  {static} +IconData transcribe
  {static} +IconData transcribe_sharp
  {static} +IconData transcribe_rounded
  {static} +IconData transcribe_outlined
  {static} +IconData transfer_within_a_station
  {static} +IconData transfer_within_a_station_sharp
  {static} +IconData transfer_within_a_station_rounded
  {static} +IconData transfer_within_a_station_outlined
  {static} +IconData transform
  {static} +IconData transform_sharp
  {static} +IconData transform_rounded
  {static} +IconData transform_outlined
  {static} +IconData transgender
  {static} +IconData transgender_sharp
  {static} +IconData transgender_rounded
  {static} +IconData transgender_outlined
  {static} +IconData transit_enterexit
  {static} +IconData transit_enterexit_sharp
  {static} +IconData transit_enterexit_rounded
  {static} +IconData transit_enterexit_outlined
  {static} +IconData translate
  {static} +IconData translate_sharp
  {static} +IconData translate_rounded
  {static} +IconData translate_outlined
  {static} +IconData travel_explore
  {static} +IconData travel_explore_sharp
  {static} +IconData travel_explore_rounded
  {static} +IconData travel_explore_outlined
  {static} +IconData trending_down
  {static} +IconData trending_down_sharp
  {static} +IconData trending_down_rounded
  {static} +IconData trending_down_outlined
  {static} +IconData trending_flat
  {static} +IconData trending_flat_sharp
  {static} +IconData trending_flat_rounded
  {static} +IconData trending_flat_outlined
  {static} +IconData trending_neutral
  {static} +IconData trending_neutral_sharp
  {static} +IconData trending_neutral_rounded
  {static} +IconData trending_neutral_outlined
  {static} +IconData trending_up
  {static} +IconData trending_up_sharp
  {static} +IconData trending_up_rounded
  {static} +IconData trending_up_outlined
  {static} +IconData trip_origin
  {static} +IconData trip_origin_sharp
  {static} +IconData trip_origin_rounded
  {static} +IconData trip_origin_outlined
  {static} +IconData trolley
  {static} +IconData troubleshoot
  {static} +IconData troubleshoot_sharp
  {static} +IconData troubleshoot_rounded
  {static} +IconData troubleshoot_outlined
  {static} +IconData try_sms_star
  {static} +IconData try_sms_star_sharp
  {static} +IconData try_sms_star_rounded
  {static} +IconData try_sms_star_outlined
  {static} +IconData tsunami
  {static} +IconData tsunami_sharp
  {static} +IconData tsunami_rounded
  {static} +IconData tsunami_outlined
  {static} +IconData tty
  {static} +IconData tty_sharp
  {static} +IconData tty_rounded
  {static} +IconData tty_outlined
  {static} +IconData tune
  {static} +IconData tune_sharp
  {static} +IconData tune_rounded
  {static} +IconData tune_outlined
  {static} +IconData tungsten
  {static} +IconData tungsten_sharp
  {static} +IconData tungsten_rounded
  {static} +IconData tungsten_outlined
  {static} +IconData turn_left
  {static} +IconData turn_left_sharp
  {static} +IconData turn_left_rounded
  {static} +IconData turn_left_outlined
  {static} +IconData turn_right
  {static} +IconData turn_right_sharp
  {static} +IconData turn_right_rounded
  {static} +IconData turn_right_outlined
  {static} +IconData turn_sharp_left
  {static} +IconData turn_sharp_left_sharp
  {static} +IconData turn_sharp_left_rounded
  {static} +IconData turn_sharp_left_outlined
  {static} +IconData turn_sharp_right
  {static} +IconData turn_sharp_right_sharp
  {static} +IconData turn_sharp_right_rounded
  {static} +IconData turn_sharp_right_outlined
  {static} +IconData turn_slight_left
  {static} +IconData turn_slight_left_sharp
  {static} +IconData turn_slight_left_rounded
  {static} +IconData turn_slight_left_outlined
  {static} +IconData turn_slight_right
  {static} +IconData turn_slight_right_sharp
  {static} +IconData turn_slight_right_rounded
  {static} +IconData turn_slight_right_outlined
  {static} +IconData turned_in
  {static} +IconData turned_in_sharp
  {static} +IconData turned_in_rounded
  {static} +IconData turned_in_outlined
  {static} +IconData turned_in_not
  {static} +IconData turned_in_not_sharp
  {static} +IconData turned_in_not_rounded
  {static} +IconData turned_in_not_outlined
  {static} +IconData tv
  {static} +IconData tv_sharp
  {static} +IconData tv_rounded
  {static} +IconData tv_outlined
  {static} +IconData tv_off
  {static} +IconData tv_off_sharp
  {static} +IconData tv_off_rounded
  {static} +IconData tv_off_outlined
  {static} +IconData two_wheeler
  {static} +IconData two_wheeler_sharp
  {static} +IconData two_wheeler_rounded
  {static} +IconData two_wheeler_outlined
  {static} +IconData type_specimen
  {static} +IconData type_specimen_sharp
  {static} +IconData type_specimen_rounded
  {static} +IconData type_specimen_outlined
  {static} +IconData u_turn_left
  {static} +IconData u_turn_left_sharp
  {static} +IconData u_turn_left_rounded
  {static} +IconData u_turn_left_outlined
  {static} +IconData u_turn_right
  {static} +IconData u_turn_right_sharp
  {static} +IconData u_turn_right_rounded
  {static} +IconData u_turn_right_outlined
  {static} +IconData umbrella
  {static} +IconData umbrella_sharp
  {static} +IconData umbrella_rounded
  {static} +IconData umbrella_outlined
  {static} +IconData unarchive
  {static} +IconData unarchive_sharp
  {static} +IconData unarchive_rounded
  {static} +IconData unarchive_outlined
  {static} +IconData undo
  {static} +IconData undo_sharp
  {static} +IconData undo_rounded
  {static} +IconData undo_outlined
  {static} +IconData unfold_less
  {static} +IconData unfold_less_sharp
  {static} +IconData unfold_less_rounded
  {static} +IconData unfold_less_outlined
  {static} +IconData unfold_less_double
  {static} +IconData unfold_less_double_sharp
  {static} +IconData unfold_less_double_rounded
  {static} +IconData unfold_less_double_outlined
  {static} +IconData unfold_more
  {static} +IconData unfold_more_sharp
  {static} +IconData unfold_more_rounded
  {static} +IconData unfold_more_outlined
  {static} +IconData unfold_more_double
  {static} +IconData unfold_more_double_sharp
  {static} +IconData unfold_more_double_rounded
  {static} +IconData unfold_more_double_outlined
  {static} +IconData unpublished
  {static} +IconData unpublished_sharp
  {static} +IconData unpublished_rounded
  {static} +IconData unpublished_outlined
  {static} +IconData unsubscribe
  {static} +IconData unsubscribe_sharp
  {static} +IconData unsubscribe_rounded
  {static} +IconData unsubscribe_outlined
  {static} +IconData upcoming
  {static} +IconData upcoming_sharp
  {static} +IconData upcoming_rounded
  {static} +IconData upcoming_outlined
  {static} +IconData update
  {static} +IconData update_sharp
  {static} +IconData update_rounded
  {static} +IconData update_outlined
  {static} +IconData update_disabled
  {static} +IconData update_disabled_sharp
  {static} +IconData update_disabled_rounded
  {static} +IconData update_disabled_outlined
  {static} +IconData upgrade
  {static} +IconData upgrade_sharp
  {static} +IconData upgrade_rounded
  {static} +IconData upgrade_outlined
  {static} +IconData upload
  {static} +IconData upload_sharp
  {static} +IconData upload_rounded
  {static} +IconData upload_outlined
  {static} +IconData upload_file
  {static} +IconData upload_file_sharp
  {static} +IconData upload_file_rounded
  {static} +IconData upload_file_outlined
  {static} +IconData usb
  {static} +IconData usb_sharp
  {static} +IconData usb_rounded
  {static} +IconData usb_outlined
  {static} +IconData usb_off
  {static} +IconData usb_off_sharp
  {static} +IconData usb_off_rounded
  {static} +IconData usb_off_outlined
  {static} +IconData vaccines
  {static} +IconData vaccines_sharp
  {static} +IconData vaccines_rounded
  {static} +IconData vaccines_outlined
  {static} +IconData vape_free
  {static} +IconData vape_free_sharp
  {static} +IconData vape_free_rounded
  {static} +IconData vape_free_outlined
  {static} +IconData vaping_rooms
  {static} +IconData vaping_rooms_sharp
  {static} +IconData vaping_rooms_rounded
  {static} +IconData vaping_rooms_outlined
  {static} +IconData verified
  {static} +IconData verified_sharp
  {static} +IconData verified_rounded
  {static} +IconData verified_outlined
  {static} +IconData verified_user
  {static} +IconData verified_user_sharp
  {static} +IconData verified_user_rounded
  {static} +IconData verified_user_outlined
  {static} +IconData vertical_align_bottom
  {static} +IconData vertical_align_bottom_sharp
  {static} +IconData vertical_align_bottom_rounded
  {static} +IconData vertical_align_bottom_outlined
  {static} +IconData vertical_align_center
  {static} +IconData vertical_align_center_sharp
  {static} +IconData vertical_align_center_rounded
  {static} +IconData vertical_align_center_outlined
  {static} +IconData vertical_align_top
  {static} +IconData vertical_align_top_sharp
  {static} +IconData vertical_align_top_rounded
  {static} +IconData vertical_align_top_outlined
  {static} +IconData vertical_distribute
  {static} +IconData vertical_distribute_sharp
  {static} +IconData vertical_distribute_rounded
  {static} +IconData vertical_distribute_outlined
  {static} +IconData vertical_shades
  {static} +IconData vertical_shades_sharp
  {static} +IconData vertical_shades_rounded
  {static} +IconData vertical_shades_outlined
  {static} +IconData vertical_shades_closed
  {static} +IconData vertical_shades_closed_sharp
  {static} +IconData vertical_shades_closed_rounded
  {static} +IconData vertical_shades_closed_outlined
  {static} +IconData vertical_split
  {static} +IconData vertical_split_sharp
  {static} +IconData vertical_split_rounded
  {static} +IconData vertical_split_outlined
  {static} +IconData vibration
  {static} +IconData vibration_sharp
  {static} +IconData vibration_rounded
  {static} +IconData vibration_outlined
  {static} +IconData video_call
  {static} +IconData video_call_sharp
  {static} +IconData video_call_rounded
  {static} +IconData video_call_outlined
  {static} +IconData video_camera_back
  {static} +IconData video_camera_back_sharp
  {static} +IconData video_camera_back_rounded
  {static} +IconData video_camera_back_outlined
  {static} +IconData video_camera_front
  {static} +IconData video_camera_front_sharp
  {static} +IconData video_camera_front_rounded
  {static} +IconData video_camera_front_outlined
  {static} +IconData video_chat
  {static} +IconData video_chat_sharp
  {static} +IconData video_chat_rounded
  {static} +IconData video_chat_outlined
  {static} +IconData video_collection
  {static} +IconData video_collection_sharp
  {static} +IconData video_collection_rounded
  {static} +IconData video_collection_outlined
  {static} +IconData video_file
  {static} +IconData video_file_sharp
  {static} +IconData video_file_rounded
  {static} +IconData video_file_outlined
  {static} +IconData video_label
  {static} +IconData video_label_sharp
  {static} +IconData video_label_rounded
  {static} +IconData video_label_outlined
  {static} +IconData video_library
  {static} +IconData video_library_sharp
  {static} +IconData video_library_rounded
  {static} +IconData video_library_outlined
  {static} +IconData video_settings
  {static} +IconData video_settings_sharp
  {static} +IconData video_settings_rounded
  {static} +IconData video_settings_outlined
  {static} +IconData video_stable
  {static} +IconData video_stable_sharp
  {static} +IconData video_stable_rounded
  {static} +IconData video_stable_outlined
  {static} +IconData videocam
  {static} +IconData videocam_sharp
  {static} +IconData videocam_rounded
  {static} +IconData videocam_outlined
  {static} +IconData videocam_off
  {static} +IconData videocam_off_sharp
  {static} +IconData videocam_off_rounded
  {static} +IconData videocam_off_outlined
  {static} +IconData videogame_asset
  {static} +IconData videogame_asset_sharp
  {static} +IconData videogame_asset_rounded
  {static} +IconData videogame_asset_outlined
  {static} +IconData videogame_asset_off
  {static} +IconData videogame_asset_off_sharp
  {static} +IconData videogame_asset_off_rounded
  {static} +IconData videogame_asset_off_outlined
  {static} +IconData view_agenda
  {static} +IconData view_agenda_sharp
  {static} +IconData view_agenda_rounded
  {static} +IconData view_agenda_outlined
  {static} +IconData view_array
  {static} +IconData view_array_sharp
  {static} +IconData view_array_rounded
  {static} +IconData view_array_outlined
  {static} +IconData view_carousel
  {static} +IconData view_carousel_sharp
  {static} +IconData view_carousel_rounded
  {static} +IconData view_carousel_outlined
  {static} +IconData view_column
  {static} +IconData view_column_sharp
  {static} +IconData view_column_rounded
  {static} +IconData view_column_outlined
  {static} +IconData view_comfortable
  {static} +IconData view_comfortable_sharp
  {static} +IconData view_comfortable_rounded
  {static} +IconData view_comfortable_outlined
  {static} +IconData view_comfy
  {static} +IconData view_comfy_sharp
  {static} +IconData view_comfy_rounded
  {static} +IconData view_comfy_outlined
  {static} +IconData view_comfy_alt
  {static} +IconData view_comfy_alt_sharp
  {static} +IconData view_comfy_alt_rounded
  {static} +IconData view_comfy_alt_outlined
  {static} +IconData view_compact
  {static} +IconData view_compact_sharp
  {static} +IconData view_compact_rounded
  {static} +IconData view_compact_outlined
  {static} +IconData view_compact_alt
  {static} +IconData view_compact_alt_sharp
  {static} +IconData view_compact_alt_rounded
  {static} +IconData view_compact_alt_outlined
  {static} +IconData view_cozy
  {static} +IconData view_cozy_sharp
  {static} +IconData view_cozy_rounded
  {static} +IconData view_cozy_outlined
  {static} +IconData view_day
  {static} +IconData view_day_sharp
  {static} +IconData view_day_rounded
  {static} +IconData view_day_outlined
  {static} +IconData view_headline
  {static} +IconData view_headline_sharp
  {static} +IconData view_headline_rounded
  {static} +IconData view_headline_outlined
  {static} +IconData view_in_ar
  {static} +IconData view_in_ar_sharp
  {static} +IconData view_in_ar_rounded
  {static} +IconData view_in_ar_outlined
  {static} +IconData view_kanban
  {static} +IconData view_kanban_sharp
  {static} +IconData view_kanban_rounded
  {static} +IconData view_kanban_outlined
  {static} +IconData view_list
  {static} +IconData view_list_sharp
  {static} +IconData view_list_rounded
  {static} +IconData view_list_outlined
  {static} +IconData view_module
  {static} +IconData view_module_sharp
  {static} +IconData view_module_rounded
  {static} +IconData view_module_outlined
  {static} +IconData view_quilt
  {static} +IconData view_quilt_sharp
  {static} +IconData view_quilt_rounded
  {static} +IconData view_quilt_outlined
  {static} +IconData view_sidebar
  {static} +IconData view_sidebar_sharp
  {static} +IconData view_sidebar_rounded
  {static} +IconData view_sidebar_outlined
  {static} +IconData view_stream
  {static} +IconData view_stream_sharp
  {static} +IconData view_stream_rounded
  {static} +IconData view_stream_outlined
  {static} +IconData view_timeline
  {static} +IconData view_timeline_sharp
  {static} +IconData view_timeline_rounded
  {static} +IconData view_timeline_outlined
  {static} +IconData view_week
  {static} +IconData view_week_sharp
  {static} +IconData view_week_rounded
  {static} +IconData view_week_outlined
  {static} +IconData vignette
  {static} +IconData vignette_sharp
  {static} +IconData vignette_rounded
  {static} +IconData vignette_outlined
  {static} +IconData villa
  {static} +IconData villa_sharp
  {static} +IconData villa_rounded
  {static} +IconData villa_outlined
  {static} +IconData visibility
  {static} +IconData visibility_sharp
  {static} +IconData visibility_rounded
  {static} +IconData visibility_outlined
  {static} +IconData visibility_off
  {static} +IconData visibility_off_sharp
  {static} +IconData visibility_off_rounded
  {static} +IconData visibility_off_outlined
  {static} +IconData voice_chat
  {static} +IconData voice_chat_sharp
  {static} +IconData voice_chat_rounded
  {static} +IconData voice_chat_outlined
  {static} +IconData voice_over_off
  {static} +IconData voice_over_off_sharp
  {static} +IconData voice_over_off_rounded
  {static} +IconData voice_over_off_outlined
  {static} +IconData voicemail
  {static} +IconData voicemail_sharp
  {static} +IconData voicemail_rounded
  {static} +IconData voicemail_outlined
  {static} +IconData volcano
  {static} +IconData volcano_sharp
  {static} +IconData volcano_rounded
  {static} +IconData volcano_outlined
  {static} +IconData volume_down
  {static} +IconData volume_down_sharp
  {static} +IconData volume_down_rounded
  {static} +IconData volume_down_outlined
  {static} +IconData volume_down_alt
  {static} +IconData volume_mute
  {static} +IconData volume_mute_sharp
  {static} +IconData volume_mute_rounded
  {static} +IconData volume_mute_outlined
  {static} +IconData volume_off
  {static} +IconData volume_off_sharp
  {static} +IconData volume_off_rounded
  {static} +IconData volume_off_outlined
  {static} +IconData volume_up
  {static} +IconData volume_up_sharp
  {static} +IconData volume_up_rounded
  {static} +IconData volume_up_outlined
  {static} +IconData volunteer_activism
  {static} +IconData volunteer_activism_sharp
  {static} +IconData volunteer_activism_rounded
  {static} +IconData volunteer_activism_outlined
  {static} +IconData vpn_key
  {static} +IconData vpn_key_sharp
  {static} +IconData vpn_key_rounded
  {static} +IconData vpn_key_outlined
  {static} +IconData vpn_key_off
  {static} +IconData vpn_key_off_sharp
  {static} +IconData vpn_key_off_rounded
  {static} +IconData vpn_key_off_outlined
  {static} +IconData vpn_lock
  {static} +IconData vpn_lock_sharp
  {static} +IconData vpn_lock_rounded
  {static} +IconData vpn_lock_outlined
  {static} +IconData vrpano
  {static} +IconData vrpano_sharp
  {static} +IconData vrpano_rounded
  {static} +IconData vrpano_outlined
  {static} +IconData wallet
  {static} +IconData wallet_sharp
  {static} +IconData wallet_rounded
  {static} +IconData wallet_outlined
  {static} +IconData wallet_giftcard
  {static} +IconData wallet_giftcard_sharp
  {static} +IconData wallet_giftcard_rounded
  {static} +IconData wallet_giftcard_outlined
  {static} +IconData wallet_membership
  {static} +IconData wallet_membership_sharp
  {static} +IconData wallet_membership_rounded
  {static} +IconData wallet_membership_outlined
  {static} +IconData wallet_travel
  {static} +IconData wallet_travel_sharp
  {static} +IconData wallet_travel_rounded
  {static} +IconData wallet_travel_outlined
  {static} +IconData wallpaper
  {static} +IconData wallpaper_sharp
  {static} +IconData wallpaper_rounded
  {static} +IconData wallpaper_outlined
  {static} +IconData warehouse
  {static} +IconData warehouse_sharp
  {static} +IconData warehouse_rounded
  {static} +IconData warehouse_outlined
  {static} +IconData warning
  {static} +IconData warning_sharp
  {static} +IconData warning_rounded
  {static} +IconData warning_outlined
  {static} +IconData warning_amber
  {static} +IconData warning_amber_sharp
  {static} +IconData warning_amber_rounded
  {static} +IconData warning_amber_outlined
  {static} +IconData wash
  {static} +IconData wash_sharp
  {static} +IconData wash_rounded
  {static} +IconData wash_outlined
  {static} +IconData watch
  {static} +IconData watch_sharp
  {static} +IconData watch_rounded
  {static} +IconData watch_outlined
  {static} +IconData watch_later
  {static} +IconData watch_later_sharp
  {static} +IconData watch_later_rounded
  {static} +IconData watch_later_outlined
  {static} +IconData watch_off
  {static} +IconData watch_off_sharp
  {static} +IconData watch_off_rounded
  {static} +IconData watch_off_outlined
  {static} +IconData water
  {static} +IconData water_sharp
  {static} +IconData water_rounded
  {static} +IconData water_outlined
  {static} +IconData water_damage
  {static} +IconData water_damage_sharp
  {static} +IconData water_damage_rounded
  {static} +IconData water_damage_outlined
  {static} +IconData water_drop
  {static} +IconData water_drop_sharp
  {static} +IconData water_drop_rounded
  {static} +IconData water_drop_outlined
  {static} +IconData waterfall_chart
  {static} +IconData waterfall_chart_sharp
  {static} +IconData waterfall_chart_rounded
  {static} +IconData waterfall_chart_outlined
  {static} +IconData waves
  {static} +IconData waves_sharp
  {static} +IconData waves_rounded
  {static} +IconData waves_outlined
  {static} +IconData waving_hand
  {static} +IconData waving_hand_sharp
  {static} +IconData waving_hand_rounded
  {static} +IconData waving_hand_outlined
  {static} +IconData wb_auto
  {static} +IconData wb_auto_sharp
  {static} +IconData wb_auto_rounded
  {static} +IconData wb_auto_outlined
  {static} +IconData wb_cloudy
  {static} +IconData wb_cloudy_sharp
  {static} +IconData wb_cloudy_rounded
  {static} +IconData wb_cloudy_outlined
  {static} +IconData wb_incandescent
  {static} +IconData wb_incandescent_sharp
  {static} +IconData wb_incandescent_rounded
  {static} +IconData wb_incandescent_outlined
  {static} +IconData wb_iridescent
  {static} +IconData wb_iridescent_sharp
  {static} +IconData wb_iridescent_rounded
  {static} +IconData wb_iridescent_outlined
  {static} +IconData wb_shade
  {static} +IconData wb_shade_sharp
  {static} +IconData wb_shade_rounded
  {static} +IconData wb_shade_outlined
  {static} +IconData wb_sunny
  {static} +IconData wb_sunny_sharp
  {static} +IconData wb_sunny_rounded
  {static} +IconData wb_sunny_outlined
  {static} +IconData wb_twighlight
  {static} +IconData wb_twilight
  {static} +IconData wb_twilight_sharp
  {static} +IconData wb_twilight_rounded
  {static} +IconData wb_twilight_outlined
  {static} +IconData wc
  {static} +IconData wc_sharp
  {static} +IconData wc_rounded
  {static} +IconData wc_outlined
  {static} +IconData web
  {static} +IconData web_sharp
  {static} +IconData web_rounded
  {static} +IconData web_outlined
  {static} +IconData web_asset
  {static} +IconData web_asset_sharp
  {static} +IconData web_asset_rounded
  {static} +IconData web_asset_outlined
  {static} +IconData web_asset_off
  {static} +IconData web_asset_off_sharp
  {static} +IconData web_asset_off_rounded
  {static} +IconData web_asset_off_outlined
  {static} +IconData web_stories
  {static} +IconData web_stories_sharp
  {static} +IconData web_stories_rounded
  {static} +IconData web_stories_outlined
  {static} +IconData webhook
  {static} +IconData webhook_sharp
  {static} +IconData webhook_rounded
  {static} +IconData webhook_outlined
  {static} +IconData wechat
  {static} +IconData wechat_sharp
  {static} +IconData wechat_rounded
  {static} +IconData wechat_outlined
  {static} +IconData weekend
  {static} +IconData weekend_sharp
  {static} +IconData weekend_rounded
  {static} +IconData weekend_outlined
  {static} +IconData west
  {static} +IconData west_sharp
  {static} +IconData west_rounded
  {static} +IconData west_outlined
  {static} +IconData whatshot
  {static} +IconData whatshot_sharp
  {static} +IconData whatshot_rounded
  {static} +IconData whatshot_outlined
  {static} +IconData wheelchair_pickup
  {static} +IconData wheelchair_pickup_sharp
  {static} +IconData wheelchair_pickup_rounded
  {static} +IconData wheelchair_pickup_outlined
  {static} +IconData where_to_vote
  {static} +IconData where_to_vote_sharp
  {static} +IconData where_to_vote_rounded
  {static} +IconData where_to_vote_outlined
  {static} +IconData widgets
  {static} +IconData widgets_sharp
  {static} +IconData widgets_rounded
  {static} +IconData widgets_outlined
  {static} +IconData width_full
  {static} +IconData width_full_sharp
  {static} +IconData width_full_rounded
  {static} +IconData width_full_outlined
  {static} +IconData width_normal
  {static} +IconData width_normal_sharp
  {static} +IconData width_normal_rounded
  {static} +IconData width_normal_outlined
  {static} +IconData width_wide
  {static} +IconData width_wide_sharp
  {static} +IconData width_wide_rounded
  {static} +IconData width_wide_outlined
  {static} +IconData wifi
  {static} +IconData wifi_sharp
  {static} +IconData wifi_rounded
  {static} +IconData wifi_outlined
  {static} +IconData wifi_1_bar
  {static} +IconData wifi_1_bar_sharp
  {static} +IconData wifi_1_bar_rounded
  {static} +IconData wifi_1_bar_outlined
  {static} +IconData wifi_2_bar
  {static} +IconData wifi_2_bar_sharp
  {static} +IconData wifi_2_bar_rounded
  {static} +IconData wifi_2_bar_outlined
  {static} +IconData wifi_calling
  {static} +IconData wifi_calling_sharp
  {static} +IconData wifi_calling_rounded
  {static} +IconData wifi_calling_outlined
  {static} +IconData wifi_calling_3
  {static} +IconData wifi_calling_3_sharp
  {static} +IconData wifi_calling_3_rounded
  {static} +IconData wifi_calling_3_outlined
  {static} +IconData wifi_channel
  {static} +IconData wifi_channel_sharp
  {static} +IconData wifi_channel_rounded
  {static} +IconData wifi_channel_outlined
  {static} +IconData wifi_find
  {static} +IconData wifi_find_sharp
  {static} +IconData wifi_find_rounded
  {static} +IconData wifi_find_outlined
  {static} +IconData wifi_lock
  {static} +IconData wifi_lock_sharp
  {static} +IconData wifi_lock_rounded
  {static} +IconData wifi_lock_outlined
  {static} +IconData wifi_off
  {static} +IconData wifi_off_sharp
  {static} +IconData wifi_off_rounded
  {static} +IconData wifi_off_outlined
  {static} +IconData wifi_password
  {static} +IconData wifi_password_sharp
  {static} +IconData wifi_password_rounded
  {static} +IconData wifi_password_outlined
  {static} +IconData wifi_protected_setup
  {static} +IconData wifi_protected_setup_sharp
  {static} +IconData wifi_protected_setup_rounded
  {static} +IconData wifi_protected_setup_outlined
  {static} +IconData wifi_tethering
  {static} +IconData wifi_tethering_sharp
  {static} +IconData wifi_tethering_rounded
  {static} +IconData wifi_tethering_outlined
  {static} +IconData wifi_tethering_error
  {static} +IconData wifi_tethering_error_sharp
  {static} +IconData wifi_tethering_error_rounded
  {static} +IconData wifi_tethering_error_outlined
  {static} +IconData wifi_tethering_error_rounded_sharp
  {static} +IconData wifi_tethering_error_rounded_rounded
  {static} +IconData wifi_tethering_error_rounded_outlined
  {static} +IconData wifi_tethering_off
  {static} +IconData wifi_tethering_off_sharp
  {static} +IconData wifi_tethering_off_rounded
  {static} +IconData wifi_tethering_off_outlined
  {static} +IconData wind_power
  {static} +IconData wind_power_sharp
  {static} +IconData wind_power_rounded
  {static} +IconData wind_power_outlined
  {static} +IconData window
  {static} +IconData window_sharp
  {static} +IconData window_rounded
  {static} +IconData window_outlined
  {static} +IconData wine_bar
  {static} +IconData wine_bar_sharp
  {static} +IconData wine_bar_rounded
  {static} +IconData wine_bar_outlined
  {static} +IconData woman
  {static} +IconData woman_sharp
  {static} +IconData woman_rounded
  {static} +IconData woman_outlined
  {static} +IconData woman_2
  {static} +IconData woman_2_sharp
  {static} +IconData woman_2_rounded
  {static} +IconData woman_2_outlined
  {static} +IconData woo_commerce
  {static} +IconData woo_commerce_sharp
  {static} +IconData woo_commerce_rounded
  {static} +IconData woo_commerce_outlined
  {static} +IconData wordpress
  {static} +IconData wordpress_sharp
  {static} +IconData wordpress_rounded
  {static} +IconData wordpress_outlined
  {static} +IconData work
  {static} +IconData work_sharp
  {static} +IconData work_rounded
  {static} +IconData work_outlined
  {static} +IconData work_history
  {static} +IconData work_history_sharp
  {static} +IconData work_history_rounded
  {static} +IconData work_history_outlined
  {static} +IconData work_off
  {static} +IconData work_off_sharp
  {static} +IconData work_off_rounded
  {static} +IconData work_off_outlined
  {static} +IconData work_outline
  {static} +IconData work_outline_sharp
  {static} +IconData work_outline_rounded
  {static} +IconData work_outline_outlined
  {static} +IconData workspace_premium
  {static} +IconData workspace_premium_sharp
  {static} +IconData workspace_premium_rounded
  {static} +IconData workspace_premium_outlined
  {static} +IconData workspaces
  {static} +IconData workspaces_sharp
  {static} +IconData workspaces_rounded
  {static} +IconData workspaces_outlined
  {static} +IconData workspaces_filled
  {static} +IconData workspaces_outline
  {static} +IconData wrap_text
  {static} +IconData wrap_text_sharp
  {static} +IconData wrap_text_rounded
  {static} +IconData wrap_text_outlined
  {static} +IconData wrong_location
  {static} +IconData wrong_location_sharp
  {static} +IconData wrong_location_rounded
  {static} +IconData wrong_location_outlined
  {static} +IconData wysiwyg
  {static} +IconData wysiwyg_sharp
  {static} +IconData wysiwyg_rounded
  {static} +IconData wysiwyg_outlined
  {static} +IconData yard
  {static} +IconData yard_sharp
  {static} +IconData yard_rounded
  {static} +IconData yard_outlined
  {static} +IconData youtube_searched_for
  {static} +IconData youtube_searched_for_sharp
  {static} +IconData youtube_searched_for_rounded
  {static} +IconData youtube_searched_for_outlined
  {static} +IconData zoom_in
  {static} +IconData zoom_in_sharp
  {static} +IconData zoom_in_rounded
  {static} +IconData zoom_in_outlined
  {static} +IconData zoom_in_map
  {static} +IconData zoom_in_map_sharp
  {static} +IconData zoom_in_map_rounded
  {static} +IconData zoom_in_map_outlined
  {static} +IconData zoom_out
  {static} +IconData zoom_out_sharp
  {static} +IconData zoom_out_rounded
  {static} +IconData zoom_out_outlined
  {static} +IconData zoom_out_map
  {static} +IconData zoom_out_map_sharp
  {static} +IconData zoom_out_map_rounded
  {static} +IconData zoom_out_map_outlined
  {static} +PlatformAdaptiveIcons adaptive
}

"material::icons::Icons" o-- "widgets::icon_data::IconData"
"material::icons::Icons" o-- "material::icons::PlatformAdaptiveIcons"

class "material::autocomplete::Autocomplete" {
  +String Function(T) displayStringForOption
  +Widget Function(BuildContext, TextEditingController, FocusNode, void Function()) fieldViewBuilder
  +void Function(T)? onSelected
  +FutureOr<Iterable<T>> Function(TextEditingValue) optionsBuilder
  +Widget Function(BuildContext, void Function(T), Iterable<T>)? optionsViewBuilder
  +dynamic optionsViewOpenDirection
  +double optionsMaxHeight
  +TextEditingValue? initialValue
  {static} -Widget _defaultFieldViewBuilder()
  +Widget build()
}

"material::autocomplete::Autocomplete" o-- "widgets::autocomplete::String Function(T)"
"material::autocomplete::Autocomplete" o-- "widgets::autocomplete::Widget Function(BuildContext, TextEditingController, FocusNode, void Function())"
"material::autocomplete::Autocomplete" o-- "widgets::autocomplete::void Function(T)"
"material::autocomplete::Autocomplete" o-- "widgets::autocomplete::FutureOr<Iterable<T>> Function(TextEditingValue)"
"material::autocomplete::Autocomplete" o-- "widgets::autocomplete::Widget Function(BuildContext, void Function(T), Iterable<T>)"
"material::autocomplete::Autocomplete" o-- "services::text_input::TextEditingValue"
"widgets::framework::StatelessWidget" <|-- "material::autocomplete::Autocomplete"

class "material::autocomplete::_AutocompleteField" {
  +FocusNode focusNode
  +void Function() onFieldSubmitted
  +TextEditingController textEditingController
  +Widget build()
}

"material::autocomplete::_AutocompleteField" o-- "widgets::focus_manager::FocusNode"
"material::autocomplete::_AutocompleteField" o-- "dart::ui::void Function()"
"material::autocomplete::_AutocompleteField" o-- "widgets::editable_text::TextEditingController"
"widgets::framework::StatelessWidget" <|-- "material::autocomplete::_AutocompleteField"

class "material::autocomplete::_AutocompleteOptions" {
  +String Function(T) displayStringForOption
  +void Function(T) onSelected
  +Iterable<T> options
  +double maxOptionsHeight
  +Widget build()
}

"material::autocomplete::_AutocompleteOptions" o-- "widgets::autocomplete::String Function(T)"
"material::autocomplete::_AutocompleteOptions" o-- "widgets::autocomplete::void Function(T)"
"widgets::framework::StatelessWidget" <|-- "material::autocomplete::_AutocompleteOptions"

class "material::menu_bar_theme::MenuBarThemeData" {
  {static} +MenuBarThemeData? lerp()
}

"material::menu_theme::MenuThemeData" <|-- "material::menu_bar_theme::MenuBarThemeData"

class "material::menu_bar_theme::MenuBarTheme" {
  +MenuBarThemeData data
  {static} +MenuBarThemeData of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::menu_bar_theme::MenuBarTheme" o-- "material::menu_bar_theme::MenuBarThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "material::menu_bar_theme::MenuBarTheme"

abstract class "material::search::SearchDelegate" {
  +String? searchFieldLabel
  +TextStyle? searchFieldStyle
  +InputDecorationTheme? searchFieldDecorationTheme
  +TextInputType? keyboardType
  +TextInputAction textInputAction
  -FocusNode? _focusNode
  -TextEditingController _queryTextController
  -ProxyAnimation _proxyAnimation
  -ValueNotifier<_SearchBody?> _currentBodyNotifier
  -_SearchPageRoute<T>? _route
  +String query
  +Animation<double> transitionAnimation
  -_SearchBody? _currentBody
  +Widget buildSuggestions()
  +Widget buildResults()
  +Widget? buildLeading()
  +List<Widget>? buildActions()
  +PreferredSizeWidget? buildBottom()
  +Widget? buildFlexibleSpace()
  +ThemeData appBarTheme()
  +void showResults()
  +void showSuggestions()
  +void close()
  +void dispose()
}

"material::search::SearchDelegate" o-- "painting::text_style::TextStyle"
"material::search::SearchDelegate" o-- "material::input_decorator::InputDecorationTheme"
"material::search::SearchDelegate" o-- "services::text_input::TextInputType"
"material::search::SearchDelegate" o-- "services::text_input::TextInputAction"
"material::search::SearchDelegate" o-- "widgets::focus_manager::FocusNode"
"material::search::SearchDelegate" o-- "widgets::editable_text::TextEditingController"
"material::search::SearchDelegate" o-- "animation::animations::ProxyAnimation"
"material::search::SearchDelegate" o-- "foundation::change_notifier::ValueNotifier<_SearchBody>"
"material::search::SearchDelegate" o-- "material::search::_SearchPageRoute<T>"
"material::search::SearchDelegate" o-- "animation::animation::Animation<double>"
"material::search::SearchDelegate" o-- "material::search::_SearchBody"

class "material::search::_SearchPageRoute" {
  +SearchDelegate<T> delegate
  +Color? barrierColor
  +String? barrierLabel
  +Duration transitionDuration
  +bool maintainState
  +Widget buildTransitions()
  +Animation<double> createAnimation()
  +Widget buildPage()
  +void didComplete()
}

"material::search::_SearchPageRoute" o-- "material::search::SearchDelegate<T>"
"material::search::_SearchPageRoute" o-- "dart::ui::Color"
"widgets::pages::PageRoute" <|-- "material::search::_SearchPageRoute"

class "material::search::_SearchPage" {
  +SearchDelegate<T> delegate
  +Animation<double> animation
  +State<StatefulWidget> createState()
}

"material::search::_SearchPage" o-- "material::search::SearchDelegate<T>"
"material::search::_SearchPage" o-- "animation::animation::Animation<double>"
"widgets::framework::StatefulWidget" <|-- "material::search::_SearchPage"

class "material::search::_SearchPageState" {
  +FocusNode focusNode
  +void initState()
  +void dispose()
  -void _onAnimationStatusChanged()
  +void didUpdateWidget()
  -void _onFocusChanged()
  -void _onQueryChanged()
  -void _onSearchBodyChanged()
  +Widget build()
}

"material::search::_SearchPageState" o-- "widgets::focus_manager::FocusNode"
"widgets::framework::State" <|-- "material::search::_SearchPageState"

class "material::search::_SearchBody" {
  +int index
  {static} +List<_SearchBody> values
  {static} +_SearchBody suggestions
  {static} +_SearchBody results
}

"material::search::_SearchBody" o-- "material::search::_SearchBody"
"dart::core::Enum" <|-- "material::search::_SearchBody"

abstract class "material::toggleable::ToggleablePainter" {
  -Animation<double>? _position
  -Animation<double>? _reaction
  -Animation<double>? _reactionFocusFade
  -Animation<double>? _reactionHoverFade
  -Color? _activeColor
  -Color? _inactiveColor
  -Color? _inactiveReactionColor
  -Color? _reactionColor
  -Color? _hoverColor
  -Color? _focusColor
  -double? _splashRadius
  -Offset? _downPosition
  -bool? _isFocused
  -bool? _isHovered
  +Animation<double> position
  +Animation<double> reaction
  +Animation<double> reactionFocusFade
  +Animation<double> reactionHoverFade
  +Color activeColor
  +Color inactiveColor
  +Color inactiveReactionColor
  +Color reactionColor
  +Color hoverColor
  +Color focusColor
  +double splashRadius
  +Offset? downPosition
  +bool isFocused
  +bool isHovered
  +List<CustomPainterSemantics> Function(Size)? semanticsBuilder
  +void paintRadialReaction()
  +void dispose()
  +bool shouldRepaint()
  +bool? hitTest()
  +bool shouldRebuildSemantics()
  +String toString()
}

"material::toggleable::ToggleablePainter" o-- "animation::animation::Animation<double>"
"material::toggleable::ToggleablePainter" o-- "dart::ui::Color"
"material::toggleable::ToggleablePainter" o-- "dart::ui::Offset"
"material::toggleable::ToggleablePainter" o-- "rendering::custom_paint::List<CustomPainterSemantics> Function(Size)"
"foundation::change_notifier::ChangeNotifier" <|-- "material::toggleable::ToggleablePainter"
"rendering::custom_paint::CustomPainter" <|-- "material::toggleable::ToggleablePainter"

abstract class "material::toggleable::ToggleableStateMixin" {
  -AnimationController _positionController
  -CurvedAnimation _position
  -AnimationController _reactionController
  -Animation<double> _reaction
  -Animation<double> _reactionHoverFade
  -AnimationController _reactionHoverFadeController
  -Animation<double> _reactionFocusFade
  -AnimationController _reactionFocusFadeController
  -Map<Type, Action<Intent>> _actionMap
  -Offset? _downPosition
  -bool _focused
  -bool _hovering
  +AnimationController positionController
  +CurvedAnimation position
  +AnimationController reactionController
  +Animation<double> reaction
  +Animation<double> reactionHoverFade
  +Animation<double> reactionFocusFade
  +bool isInteractive
  +void Function(bool?)? onChanged
  +bool? value
  +bool tristate
  +Offset? downPosition
  +Set<MaterialState> states
  +void initState()
  +void animateToValue()
  +void dispose()
  -void _handleTapDown()
  -void _handleTap()
  -void _handleTapEnd()
  -void _handleFocusHighlightChanged()
  -void _handleHoverChanged()
  +Widget buildToggleable()
}

"material::toggleable::ToggleableStateMixin" o-- "animation::animation_controller::AnimationController"
"material::toggleable::ToggleableStateMixin" o-- "animation::animations::CurvedAnimation"
"material::toggleable::ToggleableStateMixin" o-- "animation::animation::Animation<double>"
"material::toggleable::ToggleableStateMixin" o-- "dart::ui::Offset"
"material::toggleable::ToggleableStateMixin" o-- "foundation::basic_types::void Function(bool)"

class "material::ink_splash::_InkSplashFactory" {
  +InteractiveInkFeature create()
}

"material::ink_well::InteractiveInkFeatureFactory" <|-- "material::ink_splash::_InkSplashFactory"

class "material::ink_splash::InkSplash" {
  -Offset? _position
  -BorderRadius _borderRadius
  -double _targetRadius
  -Rect Function()? _clipCallback
  -bool _repositionToReferenceBox
  -TextDirection _textDirection
  -Animation<double> _radius
  -AnimationController _radiusController
  -Animation<int> _alpha
  -AnimationController? _alphaController
  {static} +InteractiveInkFeatureFactory splashFactory
  +void confirm()
  +void cancel()
  -void _handleAlphaStatusChanged()
  +void dispose()
  +void paintFeature()
}

"material::ink_splash::InkSplash" o-- "dart::ui::Offset"
"material::ink_splash::InkSplash" o-- "painting::border_radius::BorderRadius"
"material::ink_splash::InkSplash" o-- "material::material::Rect Function()"
"material::ink_splash::InkSplash" o-- "dart::ui::TextDirection"
"material::ink_splash::InkSplash" o-- "animation::animation::Animation<double>"
"material::ink_splash::InkSplash" o-- "animation::animation_controller::AnimationController"
"material::ink_splash::InkSplash" o-- "animation::animation::Animation<int>"
"material::ink_splash::InkSplash" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::ink_well::InteractiveInkFeature" <|-- "material::ink_splash::InkSplash"

class "material::expansion_panel::_SaltedKey" {
  +S salt
  +V value
  +int hashCode
  +bool ==()
  +String toString()
}

"foundation::key::LocalKey" <|-- "material::expansion_panel::_SaltedKey"

class "material::expansion_panel::ExpansionPanel" {
  +Widget Function(BuildContext, bool) headerBuilder
  +Widget body
  +bool isExpanded
  +bool canTapOnHeader
  +Color? backgroundColor
}

"material::expansion_panel::ExpansionPanel" o-- "material::expansion_panel::Widget Function(BuildContext, bool)"
"material::expansion_panel::ExpansionPanel" o-- "widgets::framework::Widget"
"material::expansion_panel::ExpansionPanel" o-- "dart::ui::Color"

class "material::expansion_panel::ExpansionPanelRadio" {
  +Object value
}

"material::expansion_panel::ExpansionPanel" <|-- "material::expansion_panel::ExpansionPanelRadio"

class "material::expansion_panel::ExpansionPanelList" {
  +List<ExpansionPanel> children
  +void Function(int, bool)? expansionCallback
  +Duration animationDuration
  -bool _allowOnlyOnePanelOpen
  +Object? initialOpenPanelValue
  +EdgeInsets expandedHeaderPadding
  +Color? dividerColor
  +double elevation
  +Color? expandIconColor
  +double materialGapSize
  +State<StatefulWidget> createState()
}

"material::expansion_panel::ExpansionPanelList" o-- "material::expansion_panel::void Function(int, bool)"
"material::expansion_panel::ExpansionPanelList" o-- "painting::edge_insets::EdgeInsets"
"material::expansion_panel::ExpansionPanelList" o-- "dart::ui::Color"
"widgets::framework::StatefulWidget" <|-- "material::expansion_panel::ExpansionPanelList"

class "material::expansion_panel::_ExpansionPanelListState" {
  -ExpansionPanelRadio? _currentOpenPanel
  +void initState()
  +void didUpdateWidget()
  -bool _allIdentifiersUnique()
  -bool _isChildExpanded()
  -void _handlePressed()
  +ExpansionPanelRadio? searchPanelByValue()
  +Widget build()
}

"material::expansion_panel::_ExpansionPanelListState" o-- "material::expansion_panel::ExpansionPanelRadio"
"widgets::framework::State" <|-- "material::expansion_panel::_ExpansionPanelListState"

class "material::button_bar_theme::ButtonBarThemeData" {
  +MainAxisAlignment? alignment
  +MainAxisSize? mainAxisSize
  +ButtonTextTheme? buttonTextTheme
  +double? buttonMinWidth
  +double? buttonHeight
  +EdgeInsetsGeometry? buttonPadding
  +bool? buttonAlignedDropdown
  +ButtonBarLayoutBehavior? layoutBehavior
  +VerticalDirection? overflowDirection
  +int hashCode
  +ButtonBarThemeData copyWith()
  {static} +ButtonBarThemeData? lerp()
  +bool ==()
  +void debugFillProperties()
}

"material::button_bar_theme::ButtonBarThemeData" o-- "rendering::flex::MainAxisAlignment"
"material::button_bar_theme::ButtonBarThemeData" o-- "rendering::flex::MainAxisSize"
"material::button_bar_theme::ButtonBarThemeData" o-- "material::button_theme::ButtonTextTheme"
"material::button_bar_theme::ButtonBarThemeData" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::button_bar_theme::ButtonBarThemeData" o-- "material::button_theme::ButtonBarLayoutBehavior"
"material::button_bar_theme::ButtonBarThemeData" o-- "painting::basic_types::VerticalDirection"
"foundation::diagnostics::Diagnosticable" <|-- "material::button_bar_theme::ButtonBarThemeData"

class "material::button_bar_theme::ButtonBarTheme" {
  +ButtonBarThemeData data
  {static} +ButtonBarThemeData of()
  +bool updateShouldNotify()
}

"material::button_bar_theme::ButtonBarTheme" o-- "material::button_bar_theme::ButtonBarThemeData"
"widgets::framework::InheritedWidget" <|-- "material::button_bar_theme::ButtonBarTheme"

class "material::theme::Theme" {
  +ThemeData data
  +Widget child
  {static} -ThemeData _kFallbackTheme
  {static} +ThemeData of()
  -Widget _wrapsWidgetThemes()
  +Widget build()
  +void debugFillProperties()
}

"material::theme::Theme" o-- "material::theme_data::ThemeData"
"material::theme::Theme" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::theme::Theme"

class "material::theme::_InheritedTheme" {
  +Theme theme
  +Widget wrap()
  +bool updateShouldNotify()
}

"material::theme::_InheritedTheme" o-- "material::theme::Theme"
"widgets::inherited_theme::InheritedTheme" <|-- "material::theme::_InheritedTheme"

class "material::theme::ThemeDataTween" {
  +ThemeData lerp()
}

"animation::tween::Tween" <|-- "material::theme::ThemeDataTween"

class "material::theme::AnimatedTheme" {
  +ThemeData data
  +Widget child
  +AnimatedWidgetBaseState<AnimatedTheme> createState()
}

"material::theme::AnimatedTheme" o-- "material::theme_data::ThemeData"
"material::theme::AnimatedTheme" o-- "widgets::framework::Widget"
"widgets::implicit_animations::ImplicitlyAnimatedWidget" <|-- "material::theme::AnimatedTheme"

class "material::theme::_AnimatedThemeState" {
  -ThemeDataTween? _data
  +void forEachTween()
  +Widget build()
  +void debugFillProperties()
}

"material::theme::_AnimatedThemeState" o-- "material::theme::ThemeDataTween"
"widgets::implicit_animations::AnimatedWidgetBaseState" <|-- "material::theme::_AnimatedThemeState"

class "material::icon_button::IconButton" {
  +double? iconSize
  +VisualDensity? visualDensity
  +EdgeInsetsGeometry? padding
  +AlignmentGeometry? alignment
  +double? splashRadius
  +Widget icon
  +Color? focusColor
  +Color? hoverColor
  +Color? color
  +Color? splashColor
  +Color? highlightColor
  +Color? disabledColor
  +void Function()? onPressed
  +MouseCursor? mouseCursor
  +FocusNode? focusNode
  +bool autofocus
  +String? tooltip
  +bool? enableFeedback
  +BoxConstraints? constraints
  +ButtonStyle? style
  +bool? isSelected
  +Widget? selectedIcon
  -_IconButtonVariant _variant
  {static} +ButtonStyle styleFrom()
  +Widget build()
  +void debugFillProperties()
}

"material::icon_button::IconButton" o-- "material::theme_data::VisualDensity"
"material::icon_button::IconButton" o-- "painting::edge_insets::EdgeInsetsGeometry"
"material::icon_button::IconButton" o-- "painting::alignment::AlignmentGeometry"
"material::icon_button::IconButton" o-- "widgets::framework::Widget"
"material::icon_button::IconButton" o-- "dart::ui::Color"
"material::icon_button::IconButton" o-- "dart::ui::void Function()"
"material::icon_button::IconButton" o-- "services::mouse_cursor::MouseCursor"
"material::icon_button::IconButton" o-- "widgets::focus_manager::FocusNode"
"material::icon_button::IconButton" o-- "rendering::box::BoxConstraints"
"material::icon_button::IconButton" o-- "material::button_style::ButtonStyle"
"material::icon_button::IconButton" o-- "material::icon_button::_IconButtonVariant"
"widgets::framework::StatelessWidget" <|-- "material::icon_button::IconButton"

class "material::icon_button::_SelectableIconButton" {
  +bool? isSelected
  +ButtonStyle? style
  +FocusNode? focusNode
  +_IconButtonVariant variant
  +bool autofocus
  +void Function()? onPressed
  +Widget child
  +State<_SelectableIconButton> createState()
}

"material::icon_button::_SelectableIconButton" o-- "material::button_style::ButtonStyle"
"material::icon_button::_SelectableIconButton" o-- "widgets::focus_manager::FocusNode"
"material::icon_button::_SelectableIconButton" o-- "material::icon_button::_IconButtonVariant"
"material::icon_button::_SelectableIconButton" o-- "dart::ui::void Function()"
"material::icon_button::_SelectableIconButton" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "material::icon_button::_SelectableIconButton"

class "material::icon_button::_SelectableIconButtonState" {
  +MaterialStatesController statesController
  +void initState()
  +void didUpdateWidget()
  +Widget build()
  +void dispose()
}

"material::icon_button::_SelectableIconButtonState" o-- "material::material_state::MaterialStatesController"
"widgets::framework::State" <|-- "material::icon_button::_SelectableIconButtonState"

class "material::icon_button::_IconButtonM3" {
  +_IconButtonVariant variant
  +bool toggleable
  +ButtonStyle defaultStyleOf()
  +ButtonStyle? themeStyleOf()
}

"material::icon_button::_IconButtonM3" o-- "material::icon_button::_IconButtonVariant"
"material::button_style_button::ButtonStyleButton" <|-- "material::icon_button::_IconButtonM3"

class "material::icon_button::_IconButtonDefaultBackground" {
  +Color? background
  +Color? disabledBackground
  +Color? resolve()
  +String toString()
}

"material::icon_button::_IconButtonDefaultBackground" o-- "dart::ui::Color"
"material::material_state::MaterialStateProperty" <|-- "material::icon_button::_IconButtonDefaultBackground"

class "material::icon_button::_IconButtonDefaultForeground" {
  +Color? foregroundColor
  +Color? disabledForegroundColor
  +Color? resolve()
  +String toString()
}

"material::icon_button::_IconButtonDefaultForeground" o-- "dart::ui::Color"
"material::material_state::MaterialStateProperty" <|-- "material::icon_button::_IconButtonDefaultForeground"

class "material::icon_button::_IconButtonDefaultOverlay" {
  +Color? foregroundColor
  +Color? focusColor
  +Color? hoverColor
  +Color? highlightColor
  +Color? resolve()
  +String toString()
}

"material::icon_button::_IconButtonDefaultOverlay" o-- "dart::ui::Color"
"material::material_state::MaterialStateProperty" <|-- "material::icon_button::_IconButtonDefaultOverlay"

class "material::icon_button::_IconButtonDefaultMouseCursor" {
  +MouseCursor? enabledCursor
  +MouseCursor? disabledCursor
  +MouseCursor? resolve()
}

"material::icon_button::_IconButtonDefaultMouseCursor" o-- "services::mouse_cursor::MouseCursor"
"material::material_state::MaterialStateProperty" <|-- "material::icon_button::_IconButtonDefaultMouseCursor"
"foundation::diagnostics::Diagnosticable" <|-- "material::icon_button::_IconButtonDefaultMouseCursor"

class "material::icon_button::_IconButtonDefaultsM3" {
  +BuildContext context
  +bool toggleable
  -ColorScheme _colors
  +MaterialStateProperty<Color?>? backgroundColor
  +MaterialStateProperty<Color?>? foregroundColor
  +MaterialStateProperty<Color?>? overlayColor
  +MaterialStateProperty<double>? elevation
  +MaterialStateProperty<Color>? shadowColor
  +MaterialStateProperty<Color>? surfaceTintColor
  +MaterialStateProperty<EdgeInsetsGeometry>? padding
  +MaterialStateProperty<Size>? minimumSize
  +MaterialStateProperty<Size>? maximumSize
  +MaterialStateProperty<double>? iconSize
  +MaterialStateProperty<BorderSide?>? side
  +MaterialStateProperty<OutlinedBorder>? shape
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +VisualDensity? visualDensity
  +MaterialTapTargetSize? tapTargetSize
  +InteractiveInkFeatureFactory? splashFactory
}

"material::icon_button::_IconButtonDefaultsM3" o-- "widgets::framework::BuildContext"
"material::icon_button::_IconButtonDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::icon_button::_IconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::icon_button::_IconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<double>"
"material::icon_button::_IconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<EdgeInsetsGeometry>"
"material::icon_button::_IconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Size>"
"material::icon_button::_IconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<BorderSide>"
"material::icon_button::_IconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<OutlinedBorder>"
"material::icon_button::_IconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::icon_button::_IconButtonDefaultsM3" o-- "material::theme_data::VisualDensity"
"material::icon_button::_IconButtonDefaultsM3" o-- "material::theme_data::MaterialTapTargetSize"
"material::icon_button::_IconButtonDefaultsM3" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::button_style::ButtonStyle" <|-- "material::icon_button::_IconButtonDefaultsM3"

class "material::icon_button::_FilledIconButtonDefaultsM3" {
  +BuildContext context
  +bool toggleable
  -ColorScheme _colors
  +MaterialStateProperty<Color?>? backgroundColor
  +MaterialStateProperty<Color?>? foregroundColor
  +MaterialStateProperty<Color?>? overlayColor
  +MaterialStateProperty<double>? elevation
  +MaterialStateProperty<Color>? shadowColor
  +MaterialStateProperty<Color>? surfaceTintColor
  +MaterialStateProperty<EdgeInsetsGeometry>? padding
  +MaterialStateProperty<Size>? minimumSize
  +MaterialStateProperty<Size>? maximumSize
  +MaterialStateProperty<double>? iconSize
  +MaterialStateProperty<BorderSide?>? side
  +MaterialStateProperty<OutlinedBorder>? shape
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +VisualDensity? visualDensity
  +MaterialTapTargetSize? tapTargetSize
  +InteractiveInkFeatureFactory? splashFactory
}

"material::icon_button::_FilledIconButtonDefaultsM3" o-- "widgets::framework::BuildContext"
"material::icon_button::_FilledIconButtonDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::icon_button::_FilledIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::icon_button::_FilledIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<double>"
"material::icon_button::_FilledIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<EdgeInsetsGeometry>"
"material::icon_button::_FilledIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Size>"
"material::icon_button::_FilledIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<BorderSide>"
"material::icon_button::_FilledIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<OutlinedBorder>"
"material::icon_button::_FilledIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::icon_button::_FilledIconButtonDefaultsM3" o-- "material::theme_data::VisualDensity"
"material::icon_button::_FilledIconButtonDefaultsM3" o-- "material::theme_data::MaterialTapTargetSize"
"material::icon_button::_FilledIconButtonDefaultsM3" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::button_style::ButtonStyle" <|-- "material::icon_button::_FilledIconButtonDefaultsM3"

class "material::icon_button::_FilledTonalIconButtonDefaultsM3" {
  +BuildContext context
  +bool toggleable
  -ColorScheme _colors
  +MaterialStateProperty<Color?>? backgroundColor
  +MaterialStateProperty<Color?>? foregroundColor
  +MaterialStateProperty<Color?>? overlayColor
  +MaterialStateProperty<double>? elevation
  +MaterialStateProperty<Color>? shadowColor
  +MaterialStateProperty<Color>? surfaceTintColor
  +MaterialStateProperty<EdgeInsetsGeometry>? padding
  +MaterialStateProperty<Size>? minimumSize
  +MaterialStateProperty<Size>? maximumSize
  +MaterialStateProperty<double>? iconSize
  +MaterialStateProperty<BorderSide?>? side
  +MaterialStateProperty<OutlinedBorder>? shape
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +VisualDensity? visualDensity
  +MaterialTapTargetSize? tapTargetSize
  +InteractiveInkFeatureFactory? splashFactory
}

"material::icon_button::_FilledTonalIconButtonDefaultsM3" o-- "widgets::framework::BuildContext"
"material::icon_button::_FilledTonalIconButtonDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::icon_button::_FilledTonalIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::icon_button::_FilledTonalIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<double>"
"material::icon_button::_FilledTonalIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<EdgeInsetsGeometry>"
"material::icon_button::_FilledTonalIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Size>"
"material::icon_button::_FilledTonalIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<BorderSide>"
"material::icon_button::_FilledTonalIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<OutlinedBorder>"
"material::icon_button::_FilledTonalIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::icon_button::_FilledTonalIconButtonDefaultsM3" o-- "material::theme_data::VisualDensity"
"material::icon_button::_FilledTonalIconButtonDefaultsM3" o-- "material::theme_data::MaterialTapTargetSize"
"material::icon_button::_FilledTonalIconButtonDefaultsM3" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::button_style::ButtonStyle" <|-- "material::icon_button::_FilledTonalIconButtonDefaultsM3"

class "material::icon_button::_OutlinedIconButtonDefaultsM3" {
  +BuildContext context
  +bool toggleable
  -ColorScheme _colors
  +MaterialStateProperty<Color?>? backgroundColor
  +MaterialStateProperty<Color?>? foregroundColor
  +MaterialStateProperty<Color?>? overlayColor
  +MaterialStateProperty<double>? elevation
  +MaterialStateProperty<Color>? shadowColor
  +MaterialStateProperty<Color>? surfaceTintColor
  +MaterialStateProperty<EdgeInsetsGeometry>? padding
  +MaterialStateProperty<Size>? minimumSize
  +MaterialStateProperty<Size>? maximumSize
  +MaterialStateProperty<double>? iconSize
  +MaterialStateProperty<BorderSide?>? side
  +MaterialStateProperty<OutlinedBorder>? shape
  +MaterialStateProperty<MouseCursor?>? mouseCursor
  +VisualDensity? visualDensity
  +MaterialTapTargetSize? tapTargetSize
  +InteractiveInkFeatureFactory? splashFactory
}

"material::icon_button::_OutlinedIconButtonDefaultsM3" o-- "widgets::framework::BuildContext"
"material::icon_button::_OutlinedIconButtonDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::icon_button::_OutlinedIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::icon_button::_OutlinedIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<double>"
"material::icon_button::_OutlinedIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<EdgeInsetsGeometry>"
"material::icon_button::_OutlinedIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<Size>"
"material::icon_button::_OutlinedIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<BorderSide>"
"material::icon_button::_OutlinedIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<OutlinedBorder>"
"material::icon_button::_OutlinedIconButtonDefaultsM3" o-- "material::material_state::MaterialStateProperty<MouseCursor>"
"material::icon_button::_OutlinedIconButtonDefaultsM3" o-- "material::theme_data::VisualDensity"
"material::icon_button::_OutlinedIconButtonDefaultsM3" o-- "material::theme_data::MaterialTapTargetSize"
"material::icon_button::_OutlinedIconButtonDefaultsM3" o-- "material::ink_well::InteractiveInkFeatureFactory"
"material::button_style::ButtonStyle" <|-- "material::icon_button::_OutlinedIconButtonDefaultsM3"

class "material::icon_button::_IconButtonVariant" {
  +int index
  {static} +List<_IconButtonVariant> values
  {static} +_IconButtonVariant standard
  {static} +_IconButtonVariant filled
  {static} +_IconButtonVariant filledTonal
  {static} +_IconButtonVariant outlined
}

"material::icon_button::_IconButtonVariant" o-- "material::icon_button::_IconButtonVariant"
"dart::core::Enum" <|-- "material::icon_button::_IconButtonVariant"

class "material::desktop_text_selection_toolbar_button::DesktopTextSelectionToolbarButton" {
  +void Function()? onPressed
  +Widget child
  +Widget build()
}

"material::desktop_text_selection_toolbar_button::DesktopTextSelectionToolbarButton" o-- "dart::ui::void Function()"
"material::desktop_text_selection_toolbar_button::DesktopTextSelectionToolbarButton" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "material::desktop_text_selection_toolbar_button::DesktopTextSelectionToolbarButton"

class "material::toggle_buttons::ToggleButtons" {
  {static} -double _defaultBorderWidth
  +List<Widget> children
  +List<bool> isSelected
  +void Function(int)? onPressed
  +MouseCursor? mouseCursor
  +MaterialTapTargetSize? tapTargetSize
  +TextStyle? textStyle
  +BoxConstraints? constraints
  +Color? color
  +Color? selectedColor
  +Color? disabledColor
  +Color? fillColor
  +Color? focusColor
  +Color? highlightColor
  +Color? splashColor
  +Color? hoverColor
  +List<FocusNode>? focusNodes
  +bool renderBorder
  +Color? borderColor
  +Color? selectedBorderColor
  +Color? disabledBorderColor
  +double? borderWidth
  +BorderRadius? borderRadius
  +Axis direction
  +VerticalDirection verticalDirection
  -bool _isFirstButton()
  -bool _isLastButton()
  -BorderRadius _getEdgeBorderRadius()
  -BorderRadius _getClipBorderRadius()
  -BorderSide _getLeadingBorderSide()
  -BorderSide _getBorderSide()
  -BorderSide _getTrailingBorderSide()
  +Widget build()
  +void debugFillProperties()
}

"material::toggle_buttons::ToggleButtons" o-- "null::void Function(int)"
"material::toggle_buttons::ToggleButtons" o-- "services::mouse_cursor::MouseCursor"
"material::toggle_buttons::ToggleButtons" o-- "material::theme_data::MaterialTapTargetSize"
"material::toggle_buttons::ToggleButtons" o-- "painting::text_style::TextStyle"
"material::toggle_buttons::ToggleButtons" o-- "rendering::box::BoxConstraints"
"material::toggle_buttons::ToggleButtons" o-- "dart::ui::Color"
"material::toggle_buttons::ToggleButtons" o-- "painting::border_radius::BorderRadius"
"material::toggle_buttons::ToggleButtons" o-- "painting::basic_types::Axis"
"material::toggle_buttons::ToggleButtons" o-- "painting::basic_types::VerticalDirection"
"widgets::framework::StatelessWidget" <|-- "material::toggle_buttons::ToggleButtons"

class "material::toggle_buttons::_ResolveFillColor" {
  +Color? primary
  +Color? resolve()
}

"material::toggle_buttons::_ResolveFillColor" o-- "dart::ui::Color"
"material::material_state::MaterialStateProperty" <|-- "material::toggle_buttons::_ResolveFillColor"
"foundation::diagnostics::Diagnosticable" <|-- "material::toggle_buttons::_ResolveFillColor"

class "material::toggle_buttons::_DefaultFillColor" {
  +ColorScheme colorScheme
  +Color resolve()
}

"material::toggle_buttons::_DefaultFillColor" o-- "material::color_scheme::ColorScheme"
"material::material_state::MaterialStateProperty" <|-- "material::toggle_buttons::_DefaultFillColor"
"foundation::diagnostics::Diagnosticable" <|-- "material::toggle_buttons::_DefaultFillColor"

class "material::toggle_buttons::_ToggleButtonDefaultOverlay" {
  +bool selected
  +bool unselected
  +ColorScheme? colorScheme
  +Color? focusColor
  +Color? highlightColor
  +Color? hoverColor
  +Color? splashColor
  +Color? disabledColor
  +Color? resolve()
  +String toString()
}

"material::toggle_buttons::_ToggleButtonDefaultOverlay" o-- "material::color_scheme::ColorScheme"
"material::toggle_buttons::_ToggleButtonDefaultOverlay" o-- "dart::ui::Color"
"material::material_state::MaterialStateProperty" <|-- "material::toggle_buttons::_ToggleButtonDefaultOverlay"

class "material::toggle_buttons::_SelectToggleButton" {
  +BorderSide leadingBorderSide
  +BorderSide borderSide
  +BorderSide trailingBorderSide
  +BorderRadius borderRadius
  +bool isFirstButton
  +bool isLastButton
  +Axis direction
  +VerticalDirection verticalDirection
  +_SelectToggleButtonRenderObject createRenderObject()
  +void updateRenderObject()
}

"material::toggle_buttons::_SelectToggleButton" o-- "painting::borders::BorderSide"
"material::toggle_buttons::_SelectToggleButton" o-- "painting::border_radius::BorderRadius"
"material::toggle_buttons::_SelectToggleButton" o-- "painting::basic_types::Axis"
"material::toggle_buttons::_SelectToggleButton" o-- "painting::basic_types::VerticalDirection"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "material::toggle_buttons::_SelectToggleButton"

class "material::toggle_buttons::_SelectToggleButtonRenderObject" {
  -Axis _direction
  -VerticalDirection _verticalDirection
  -BorderSide _leadingBorderSide
  -BorderSide _borderSide
  -BorderSide _trailingBorderSide
  -BorderRadius _borderRadius
  -bool _isFirstButton
  -bool _isLastButton
  -TextDirection _textDirection
  +Axis direction
  +VerticalDirection verticalDirection
  +BorderSide leadingBorderSide
  +BorderSide borderSide
  +BorderSide trailingBorderSide
  +BorderRadius borderRadius
  +bool isFirstButton
  +bool isLastButton
  +TextDirection textDirection
  {static} -double _maxHeight()
  {static} -double _minHeight()
  {static} -double _minWidth()
  {static} -double _maxWidth()
  +double computeDistanceToActualBaseline()
  +double computeMaxIntrinsicHeight()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicWidth()
  +Size computeDryLayout()
  +void performLayout()
  -Size _computeSize()
  +void paint()
}

"material::toggle_buttons::_SelectToggleButtonRenderObject" o-- "painting::basic_types::Axis"
"material::toggle_buttons::_SelectToggleButtonRenderObject" o-- "painting::basic_types::VerticalDirection"
"material::toggle_buttons::_SelectToggleButtonRenderObject" o-- "painting::borders::BorderSide"
"material::toggle_buttons::_SelectToggleButtonRenderObject" o-- "painting::border_radius::BorderRadius"
"material::toggle_buttons::_SelectToggleButtonRenderObject" o-- "dart::ui::TextDirection"
"rendering::shifted_box::RenderShiftedBox" <|-- "material::toggle_buttons::_SelectToggleButtonRenderObject"

class "material::toggle_buttons::_InputPadding" {
  +Size minSize
  +Axis direction
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"material::toggle_buttons::_InputPadding" o-- "dart::ui::Size"
"material::toggle_buttons::_InputPadding" o-- "painting::basic_types::Axis"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "material::toggle_buttons::_InputPadding"

class "material::toggle_buttons::_RenderInputPadding" {
  -Size _minSize
  -Axis _direction
  +Size minSize
  +Axis direction
  +double computeMinIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicWidth()
  +double computeMaxIntrinsicHeight()
  -Size _computeSize()
  +Size computeDryLayout()
  +void performLayout()
  +bool hitTest()
}

"material::toggle_buttons::_RenderInputPadding" o-- "dart::ui::Size"
"material::toggle_buttons::_RenderInputPadding" o-- "painting::basic_types::Axis"
"rendering::shifted_box::RenderShiftedBox" <|-- "material::toggle_buttons::_RenderInputPadding"

class "material::search_anchor::SearchAnchor" {
  +bool? isFullScreen
  +SearchController? searchController
  +Widget Function(Iterable<Widget>)? viewBuilder
  +Widget? viewLeading
  +Iterable<Widget>? viewTrailing
  +String? viewHintText
  +Color? viewBackgroundColor
  +double? viewElevation
  +Color? viewSurfaceTintColor
  +BorderSide? viewSide
  +OutlinedBorder? viewShape
  +TextStyle? headerTextStyle
  +TextStyle? headerHintStyle
  +Color? dividerColor
  +BoxConstraints? viewConstraints
  +TextCapitalization? textCapitalization
  +Widget Function(BuildContext, SearchController) builder
  +FutureOr<Iterable<Widget>> Function(BuildContext, SearchController) suggestionsBuilder
  +State<SearchAnchor> createState()
}

"material::search_anchor::SearchAnchor" o-- "material::search_anchor::SearchController"
"material::search_anchor::SearchAnchor" o-- "material::search_anchor::Widget Function(Iterable<Widget>)"
"material::search_anchor::SearchAnchor" o-- "widgets::framework::Widget"
"material::search_anchor::SearchAnchor" o-- "dart::ui::Color"
"material::search_anchor::SearchAnchor" o-- "painting::borders::BorderSide"
"material::search_anchor::SearchAnchor" o-- "painting::borders::OutlinedBorder"
"material::search_anchor::SearchAnchor" o-- "painting::text_style::TextStyle"
"material::search_anchor::SearchAnchor" o-- "rendering::box::BoxConstraints"
"material::search_anchor::SearchAnchor" o-- "services::text_input::TextCapitalization"
"material::search_anchor::SearchAnchor" o-- "material::search_anchor::Widget Function(BuildContext, SearchController)"
"material::search_anchor::SearchAnchor" o-- "material::search_anchor::FutureOr<Iterable<Widget>> Function(BuildContext, SearchController)"
"widgets::framework::StatefulWidget" <|-- "material::search_anchor::SearchAnchor"

class "material::search_anchor::_SearchAnchorState" {
  -Size? _screenSize
  -bool _anchorIsVisible
  -GlobalKey<State<StatefulWidget>> _anchorKey
  -SearchController? _internalSearchController
  -bool _viewIsOpen
  -SearchController _searchController
  +void initState()
  +void didChangeDependencies()
  +void dispose()
  -void _openView()
  -void _closeView()
  +bool toggleVisibility()
  +bool getShowFullScreenView()
  +Widget build()
}

"material::search_anchor::_SearchAnchorState" o-- "dart::ui::Size"
"material::search_anchor::_SearchAnchorState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"material::search_anchor::_SearchAnchorState" o-- "material::search_anchor::SearchController"
"widgets::framework::State" <|-- "material::search_anchor::_SearchAnchorState"

class "material::search_anchor::_SearchViewRoute" {
  +bool Function()? toggleVisibility
  +TextDirection? textDirection
  +Widget Function(Iterable<Widget>)? viewBuilder
  +Widget? viewLeading
  +Iterable<Widget>? viewTrailing
  +String? viewHintText
  +Color? viewBackgroundColor
  +double? viewElevation
  +Color? viewSurfaceTintColor
  +BorderSide? viewSide
  +OutlinedBorder? viewShape
  +TextStyle? viewHeaderTextStyle
  +TextStyle? viewHeaderHintStyle
  +Color? dividerColor
  +BoxConstraints? viewConstraints
  +TextCapitalization? textCapitalization
  +bool showFullScreenView
  +GlobalKey<State<StatefulWidget>> anchorKey
  +SearchController searchController
  +FutureOr<Iterable<Widget>> Function(BuildContext, SearchController) suggestionsBuilder
  +CapturedThemes capturedThemes
  +SearchViewThemeData viewDefaults
  +SearchViewThemeData viewTheme
  -RectTween _rectTween
  +Color? barrierColor
  +bool barrierDismissible
  +String? barrierLabel
  +Duration transitionDuration
  +Rect? getRect()
  +TickerFuture didPush()
  +bool didPop()
  +void updateViewConfig()
  +void updateTweens()
  +Widget buildPage()
}

"material::search_anchor::_SearchViewRoute" o-- "foundation::basic_types::bool Function()"
"material::search_anchor::_SearchViewRoute" o-- "dart::ui::TextDirection"
"material::search_anchor::_SearchViewRoute" o-- "material::search_anchor::Widget Function(Iterable<Widget>)"
"material::search_anchor::_SearchViewRoute" o-- "widgets::framework::Widget"
"material::search_anchor::_SearchViewRoute" o-- "dart::ui::Color"
"material::search_anchor::_SearchViewRoute" o-- "painting::borders::BorderSide"
"material::search_anchor::_SearchViewRoute" o-- "painting::borders::OutlinedBorder"
"material::search_anchor::_SearchViewRoute" o-- "painting::text_style::TextStyle"
"material::search_anchor::_SearchViewRoute" o-- "rendering::box::BoxConstraints"
"material::search_anchor::_SearchViewRoute" o-- "services::text_input::TextCapitalization"
"material::search_anchor::_SearchViewRoute" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"material::search_anchor::_SearchViewRoute" o-- "material::search_anchor::SearchController"
"material::search_anchor::_SearchViewRoute" o-- "material::search_anchor::FutureOr<Iterable<Widget>> Function(BuildContext, SearchController)"
"material::search_anchor::_SearchViewRoute" o-- "widgets::inherited_theme::CapturedThemes"
"material::search_anchor::_SearchViewRoute" o-- "material::search_view_theme::SearchViewThemeData"
"material::search_anchor::_SearchViewRoute" o-- "animation::tween::RectTween"
"widgets::routes::PopupRoute" <|-- "material::search_anchor::_SearchViewRoute"

class "material::search_anchor::_ViewContent" {
  +Widget Function(Iterable<Widget>)? viewBuilder
  +Widget? viewLeading
  +Iterable<Widget>? viewTrailing
  +String? viewHintText
  +Color? viewBackgroundColor
  +double? viewElevation
  +Color? viewSurfaceTintColor
  +BorderSide? viewSide
  +OutlinedBorder? viewShape
  +TextStyle? viewHeaderTextStyle
  +TextStyle? viewHeaderHintStyle
  +Color? dividerColor
  +TextCapitalization? textCapitalization
  +bool showFullScreenView
  +double topPadding
  +Animation<double> animation
  +double viewMaxWidth
  +Rect viewRect
  +SearchController searchController
  +FutureOr<Iterable<Widget>> Function(BuildContext, SearchController) suggestionsBuilder
  +State<_ViewContent> createState()
}

"material::search_anchor::_ViewContent" o-- "material::search_anchor::Widget Function(Iterable<Widget>)"
"material::search_anchor::_ViewContent" o-- "widgets::framework::Widget"
"material::search_anchor::_ViewContent" o-- "dart::ui::Color"
"material::search_anchor::_ViewContent" o-- "painting::borders::BorderSide"
"material::search_anchor::_ViewContent" o-- "painting::borders::OutlinedBorder"
"material::search_anchor::_ViewContent" o-- "painting::text_style::TextStyle"
"material::search_anchor::_ViewContent" o-- "services::text_input::TextCapitalization"
"material::search_anchor::_ViewContent" o-- "animation::animation::Animation<double>"
"material::search_anchor::_ViewContent" o-- "dart::ui::Rect"
"material::search_anchor::_ViewContent" o-- "material::search_anchor::SearchController"
"material::search_anchor::_ViewContent" o-- "material::search_anchor::FutureOr<Iterable<Widget>> Function(BuildContext, SearchController)"
"widgets::framework::StatefulWidget" <|-- "material::search_anchor::_ViewContent"

class "material::search_anchor::_ViewContentState" {
  -Size? _screenSize
  -Rect _viewRect
  -SearchController _controller
  +Iterable<Widget> result
  -FocusNode _focusNode
  +void initState()
  +void didUpdateWidget()
  +void didChangeDependencies()
  +Widget viewBuilder()
  +Future<void> updateSuggestions()
  +Widget build()
}

"material::search_anchor::_ViewContentState" o-- "dart::ui::Size"
"material::search_anchor::_ViewContentState" o-- "dart::ui::Rect"
"material::search_anchor::_ViewContentState" o-- "material::search_anchor::SearchController"
"material::search_anchor::_ViewContentState" o-- "widgets::focus_manager::FocusNode"
"widgets::framework::State" <|-- "material::search_anchor::_ViewContentState"

class "material::search_anchor::_SearchAnchorWithSearchBar" {
}

"material::search_anchor::SearchAnchor" <|-- "material::search_anchor::_SearchAnchorWithSearchBar"

class "material::search_anchor::SearchController" {
  -_SearchAnchorState? _anchor
  +bool isOpen
  +void openView()
  +void closeView()
  -void _attach()
  -void _detach()
}

"material::search_anchor::SearchController" o-- "material::search_anchor::_SearchAnchorState"
"widgets::editable_text::TextEditingController" <|-- "material::search_anchor::SearchController"

class "material::search_anchor::SearchBar" {
  +TextEditingController? controller
  +FocusNode? focusNode
  +String? hintText
  +Widget? leading
  +Iterable<Widget>? trailing
  +void Function()? onTap
  +void Function(String)? onChanged
  +void Function(String)? onSubmitted
  +BoxConstraints? constraints
  +MaterialStateProperty<double?>? elevation
  +MaterialStateProperty<Color?>? backgroundColor
  +MaterialStateProperty<Color?>? shadowColor
  +MaterialStateProperty<Color?>? surfaceTintColor
  +MaterialStateProperty<Color?>? overlayColor
  +MaterialStateProperty<BorderSide?>? side
  +MaterialStateProperty<OutlinedBorder?>? shape
  +MaterialStateProperty<EdgeInsetsGeometry?>? padding
  +MaterialStateProperty<TextStyle?>? textStyle
  +MaterialStateProperty<TextStyle?>? hintStyle
  +TextCapitalization? textCapitalization
  +State<SearchBar> createState()
}

"material::search_anchor::SearchBar" o-- "widgets::editable_text::TextEditingController"
"material::search_anchor::SearchBar" o-- "widgets::focus_manager::FocusNode"
"material::search_anchor::SearchBar" o-- "widgets::framework::Widget"
"material::search_anchor::SearchBar" o-- "gestures::tap::void Function()"
"material::search_anchor::SearchBar" o-- "foundation::basic_types::void Function(String)"
"material::search_anchor::SearchBar" o-- "rendering::box::BoxConstraints"
"material::search_anchor::SearchBar" o-- "material::material_state::MaterialStateProperty<double>"
"material::search_anchor::SearchBar" o-- "material::material_state::MaterialStateProperty<Color>"
"material::search_anchor::SearchBar" o-- "material::material_state::MaterialStateProperty<BorderSide>"
"material::search_anchor::SearchBar" o-- "material::material_state::MaterialStateProperty<OutlinedBorder>"
"material::search_anchor::SearchBar" o-- "material::material_state::MaterialStateProperty<EdgeInsetsGeometry>"
"material::search_anchor::SearchBar" o-- "material::material_state::MaterialStateProperty<TextStyle>"
"material::search_anchor::SearchBar" o-- "services::text_input::TextCapitalization"
"widgets::framework::StatefulWidget" <|-- "material::search_anchor::SearchBar"

class "material::search_anchor::_SearchBarState" {
  -MaterialStatesController _internalStatesController
  -FocusNode _focusNode
  +void initState()
  +void dispose()
  +Widget build()
}

"material::search_anchor::_SearchBarState" o-- "material::material_state::MaterialStatesController"
"material::search_anchor::_SearchBarState" o-- "widgets::focus_manager::FocusNode"
"widgets::framework::State" <|-- "material::search_anchor::_SearchBarState"

class "material::search_anchor::_SearchBarDefaultsM3" {
  +BuildContext context
  -ColorScheme _colors
  -TextTheme _textTheme
  +MaterialStateProperty<Color?>? backgroundColor
  +MaterialStateProperty<double>? elevation
  +MaterialStateProperty<Color>? shadowColor
  +MaterialStateProperty<Color>? surfaceTintColor
  +MaterialStateProperty<Color?>? overlayColor
  +MaterialStateProperty<OutlinedBorder>? shape
  +MaterialStateProperty<EdgeInsetsGeometry>? padding
  +MaterialStateProperty<TextStyle?> textStyle
  +MaterialStateProperty<TextStyle?> hintStyle
  +BoxConstraints constraints
  +TextCapitalization textCapitalization
}

"material::search_anchor::_SearchBarDefaultsM3" o-- "widgets::framework::BuildContext"
"material::search_anchor::_SearchBarDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::search_anchor::_SearchBarDefaultsM3" o-- "material::text_theme::TextTheme"
"material::search_anchor::_SearchBarDefaultsM3" o-- "material::material_state::MaterialStateProperty<Color>"
"material::search_anchor::_SearchBarDefaultsM3" o-- "material::material_state::MaterialStateProperty<double>"
"material::search_anchor::_SearchBarDefaultsM3" o-- "material::material_state::MaterialStateProperty<OutlinedBorder>"
"material::search_anchor::_SearchBarDefaultsM3" o-- "material::material_state::MaterialStateProperty<EdgeInsetsGeometry>"
"material::search_anchor::_SearchBarDefaultsM3" o-- "material::material_state::MaterialStateProperty<TextStyle>"
"material::search_anchor::_SearchBarDefaultsM3" o-- "rendering::box::BoxConstraints"
"material::search_anchor::_SearchBarDefaultsM3" o-- "services::text_input::TextCapitalization"
"material::search_bar_theme::SearchBarThemeData" <|-- "material::search_anchor::_SearchBarDefaultsM3"

class "material::search_anchor::_SearchViewDefaultsM3" {
  +BuildContext context
  +bool isFullScreen
  -ColorScheme _colors
  -TextTheme _textTheme
  {static} +double fullScreenBarHeight
  +Color? backgroundColor
  +double? elevation
  +Color? surfaceTintColor
  +OutlinedBorder? shape
  +TextStyle? headerTextStyle
  +TextStyle? headerHintStyle
  +BoxConstraints constraints
  +Color? dividerColor
}

"material::search_anchor::_SearchViewDefaultsM3" o-- "widgets::framework::BuildContext"
"material::search_anchor::_SearchViewDefaultsM3" o-- "material::color_scheme::ColorScheme"
"material::search_anchor::_SearchViewDefaultsM3" o-- "material::text_theme::TextTheme"
"material::search_anchor::_SearchViewDefaultsM3" o-- "dart::ui::Color"
"material::search_anchor::_SearchViewDefaultsM3" o-- "painting::borders::OutlinedBorder"
"material::search_anchor::_SearchViewDefaultsM3" o-- "painting::text_style::TextStyle"
"material::search_anchor::_SearchViewDefaultsM3" o-- "rendering::box::BoxConstraints"
"material::search_view_theme::SearchViewThemeData" <|-- "material::search_anchor::_SearchViewDefaultsM3"

class "services::mouse_tracking::MouseTrackerAnnotation" {
  +void Function(PointerEnterEvent)? onEnter
  +void Function(PointerExitEvent)? onExit
  +MouseCursor cursor
  +bool validForMouseTracker
  +void debugFillProperties()
}

"services::mouse_tracking::MouseTrackerAnnotation" o-- "services::mouse_tracking::void Function(PointerEnterEvent)"
"services::mouse_tracking::MouseTrackerAnnotation" o-- "services::mouse_tracking::void Function(PointerExitEvent)"
"services::mouse_tracking::MouseTrackerAnnotation" o-- "services::mouse_cursor::MouseCursor"
"foundation::diagnostics::Diagnosticable" <|-- "services::mouse_tracking::MouseTrackerAnnotation"

abstract class "services::hardware_keyboard::KeyEvent" {
  +PhysicalKeyboardKey physicalKey
  +LogicalKeyboardKey logicalKey
  +String? character
  +Duration timeStamp
  +bool synthesized
  +void debugFillProperties()
}

"services::hardware_keyboard::KeyEvent" o-- "services::keyboard_key.g::PhysicalKeyboardKey"
"services::hardware_keyboard::KeyEvent" o-- "services::keyboard_key.g::LogicalKeyboardKey"
"foundation::diagnostics::Diagnosticable" <|-- "services::hardware_keyboard::KeyEvent"

class "services::hardware_keyboard::KeyDownEvent" {
}

"services::hardware_keyboard::KeyEvent" <|-- "services::hardware_keyboard::KeyDownEvent"

class "services::hardware_keyboard::KeyUpEvent" {
}

"services::hardware_keyboard::KeyEvent" <|-- "services::hardware_keyboard::KeyUpEvent"

class "services::hardware_keyboard::KeyRepeatEvent" {
}

"services::hardware_keyboard::KeyEvent" <|-- "services::hardware_keyboard::KeyRepeatEvent"

class "services::hardware_keyboard::HardwareKeyboard" {
  -Map<PhysicalKeyboardKey, LogicalKeyboardKey> _pressedKeys
  -Set<KeyboardLockMode> _lockModes
  -List<bool Function(KeyEvent)> _handlers
  -bool _duringDispatch
  -List<bool Function(KeyEvent)>? _modifiedHandlers
  {static} +HardwareKeyboard instance
  +Set<PhysicalKeyboardKey> physicalKeysPressed
  +Set<LogicalKeyboardKey> logicalKeysPressed
  +Set<KeyboardLockMode> lockModesEnabled
  +LogicalKeyboardKey? lookUpLayout()
  -void _assertEventIsRegular()
  +void addHandler()
  +void removeHandler()
  +Future<void> syncKeyboardState()
  -bool _dispatchKeyEvent()
  -List<String> _debugPressedKeysDetails()
  +bool handleKeyEvent()
  +void clearState()
}

"services::hardware_keyboard::HardwareKeyboard" o-- "services::hardware_keyboard::HardwareKeyboard"

class "services::hardware_keyboard::KeyMessage" {
  +List<KeyEvent> events
  +RawKeyEvent? rawEvent
  +String toString()
}

"services::hardware_keyboard::KeyMessage" o-- "services::raw_keyboard::RawKeyEvent"

class "services::hardware_keyboard::KeyEventManager" {
  +bool Function(KeyMessage)? keyMessageHandler
  -HardwareKeyboard _hardwareKeyboard
  -RawKeyboard _rawKeyboard
  -KeyDataTransitMode? _transitMode
  -List<KeyEvent> _keyEventsSinceLastMessage
  -Set<PhysicalKeyboardKey> _skippedRawKeysPressed
  +bool handleKeyData()
  -bool _dispatchKeyMessage()
  +Future<Map<String, dynamic>> handleRawKeyMessage()
  -void _convertRawEventAndStore()
  +void clearState()
  {static} -KeyEvent _eventFromData()
}

"services::hardware_keyboard::KeyEventManager" o-- "services::hardware_keyboard::bool Function(KeyMessage)"
"services::hardware_keyboard::KeyEventManager" o-- "services::hardware_keyboard::HardwareKeyboard"
"services::hardware_keyboard::KeyEventManager" o-- "services::raw_keyboard::RawKeyboard"
"services::hardware_keyboard::KeyEventManager" o-- "services::hardware_keyboard::KeyDataTransitMode"

class "services::hardware_keyboard::KeyboardLockMode" {
  +int index
  {static} +List<KeyboardLockMode> values
  {static} +KeyboardLockMode numLock
}

"services::hardware_keyboard::KeyboardLockMode" o-- "services::hardware_keyboard::KeyboardLockMode"
"dart::core::Enum" <|-- "services::hardware_keyboard::KeyboardLockMode"

class "services::hardware_keyboard::KeyDataTransitMode" {
  +int index
  {static} +List<KeyDataTransitMode> values
  {static} +KeyDataTransitMode rawKeyData
  {static} +KeyDataTransitMode keyDataThenRawKeyData
}

"services::hardware_keyboard::KeyDataTransitMode" o-- "services::hardware_keyboard::KeyDataTransitMode"
"dart::core::Enum" <|-- "services::hardware_keyboard::KeyDataTransitMode"

class "services::browser_context_menu::BrowserContextMenu" {
  {static} -BrowserContextMenu _instance
  -bool _enabled
  -MethodChannel _channel
  {static} +bool enabled
  {static} +Future<void> disableContextMenu()
  {static} +Future<void> enableContextMenu()
}

"services::browser_context_menu::BrowserContextMenu" o-- "services::browser_context_menu::BrowserContextMenu"
"services::browser_context_menu::BrowserContextMenu" o-- "services::platform_channel::MethodChannel"

class "services::raw_keyboard_linux::RawKeyEventDataLinux" {
  +KeyHelper keyHelper
  +int unicodeScalarValues
  +int scanCode
  +int keyCode
  +int modifiers
  +bool isDown
  +int? specifiedLogicalKey
  +String keyLabel
  +PhysicalKeyboardKey physicalKey
  +LogicalKeyboardKey logicalKey
  +int hashCode
  +bool isModifierPressed()
  +KeyboardSide getModifierSide()
  +void debugFillProperties()
  +bool ==()
}

"services::raw_keyboard_linux::RawKeyEventDataLinux" o-- "services::raw_keyboard_linux::KeyHelper"
"services::raw_keyboard_linux::RawKeyEventDataLinux" o-- "services::keyboard_key.g::PhysicalKeyboardKey"
"services::raw_keyboard_linux::RawKeyEventDataLinux" o-- "services::keyboard_key.g::LogicalKeyboardKey"
"services::raw_keyboard::RawKeyEventData" <|-- "services::raw_keyboard_linux::RawKeyEventDataLinux"

abstract class "services::raw_keyboard_linux::KeyHelper" {
  +String debugToolkit
  +int platformPlane
  +KeyboardSide getModifierSide()
  +bool isModifierPressed()
  +LogicalKeyboardKey? numpadKey()
  +LogicalKeyboardKey? logicalKey()
}

class "services::raw_keyboard_linux::GLFWKeyHelper" {
  {static} +int modifierCapsLock
  {static} +int modifierShift
  {static} +int modifierControl
  {static} +int modifierAlt
  {static} +int modifierMeta
  {static} +int modifierNumericPad
  +String debugToolkit
  +int platformPlane
  -int _mergeModifiers()
  +bool isModifierPressed()
  +KeyboardSide getModifierSide()
  +LogicalKeyboardKey? numpadKey()
  +LogicalKeyboardKey? logicalKey()
}

"services::raw_keyboard_linux::KeyHelper" <|-- "services::raw_keyboard_linux::GLFWKeyHelper"

class "services::raw_keyboard_linux::GtkKeyHelper" {
  {static} +int modifierShift
  {static} +int modifierCapsLock
  {static} +int modifierControl
  {static} +int modifierMod1
  {static} +int modifierMod2
  {static} +int modifierMeta
  +String debugToolkit
  +int platformPlane
  -int _mergeModifiers()
  +bool isModifierPressed()
  +KeyboardSide getModifierSide()
  +LogicalKeyboardKey? numpadKey()
  +LogicalKeyboardKey? logicalKey()
}

"services::raw_keyboard_linux::KeyHelper" <|-- "services::raw_keyboard_linux::GtkKeyHelper"

class "services::platform_channel::_ProfiledBinaryMessenger" {
  +BinaryMessenger proxy
  +String channelTypeName
  +String codecTypeName
  +Future<void> handlePlatformMessage()
  +Future<ByteData?>? sendWithPostfix()
  +Future<ByteData?>? send()
  +void setMessageHandler()
}

"services::platform_channel::_ProfiledBinaryMessenger" o-- "services::binary_messenger::BinaryMessenger"
"services::binary_messenger::BinaryMessenger" <|-- "services::platform_channel::_ProfiledBinaryMessenger"

class "services::platform_channel::_PlatformChannelStats" {
  +String channel
  +String codec
  +String type
  -int _upCount
  -int _upBytes
  -int _downCount
  -int _downBytes
  +int upBytes
  +int downBytes
  +double averageUpPayload
  +double averageDownPayload
  +void addUpStream()
  +void addDownStream()
}

class "services::platform_channel::BasicMessageChannel" {
  +String name
  +MessageCodec<T> codec
  -BinaryMessenger? _binaryMessenger
  +BinaryMessenger binaryMessenger
  +Future<T?> send()
  +void setMessageHandler()
}

"services::platform_channel::BasicMessageChannel" o-- "services::message_codec::MessageCodec<T>"
"services::platform_channel::BasicMessageChannel" o-- "services::binary_messenger::BinaryMessenger"

class "services::platform_channel::MethodChannel" {
  +String name
  +MethodCodec codec
  -BinaryMessenger? _binaryMessenger
  +BinaryMessenger binaryMessenger
  -Future<T?> _invokeMethod()
  +Future<T?> invokeMethod()
  +Future<List<T>?> invokeListMethod()
  +Future<Map<K, V>?> invokeMapMethod()
  +void setMethodCallHandler()
  -Future<ByteData?> _handleAsMethodCall()
}

"services::platform_channel::MethodChannel" o-- "services::message_codec::MethodCodec"
"services::platform_channel::MethodChannel" o-- "services::binary_messenger::BinaryMessenger"

class "services::platform_channel::OptionalMethodChannel" {
  +Future<T?> invokeMethod()
}

"services::platform_channel::MethodChannel" <|-- "services::platform_channel::OptionalMethodChannel"

class "services::platform_channel::EventChannel" {
  +String name
  +MethodCodec codec
  -BinaryMessenger? _binaryMessenger
  +BinaryMessenger binaryMessenger
  +Stream<dynamic> receiveBroadcastStream()
}

"services::platform_channel::EventChannel" o-- "services::message_codec::MethodCodec"
"services::platform_channel::EventChannel" o-- "services::binary_messenger::BinaryMessenger"

abstract class "services::keyboard_key.g::KeyboardKey" {
}

"foundation::diagnostics::Diagnosticable" <|-- "services::keyboard_key.g::KeyboardKey"

class "services::keyboard_key.g::LogicalKeyboardKey" {
  +int keyId
  {static} +int valueMask
  {static} +int planeMask
  {static} +int unicodePlane
  {static} +int unprintablePlane
  {static} +int flutterPlane
  {static} +int startOfPlatformPlanes
  {static} +int androidPlane
  {static} +int fuchsiaPlane
  {static} +int iosPlane
  {static} +int macosPlane
  {static} +int gtkPlane
  {static} +int windowsPlane
  {static} +int webPlane
  {static} +int glfwPlane
  {static} +LogicalKeyboardKey space
  {static} +LogicalKeyboardKey exclamation
  {static} +LogicalKeyboardKey quote
  {static} +LogicalKeyboardKey numberSign
  {static} +LogicalKeyboardKey dollar
  {static} +LogicalKeyboardKey percent
  {static} +LogicalKeyboardKey ampersand
  {static} +LogicalKeyboardKey quoteSingle
  {static} +LogicalKeyboardKey parenthesisLeft
  {static} +LogicalKeyboardKey parenthesisRight
  {static} +LogicalKeyboardKey asterisk
  {static} +LogicalKeyboardKey add
  {static} +LogicalKeyboardKey comma
  {static} +LogicalKeyboardKey minus
  {static} +LogicalKeyboardKey period
  {static} +LogicalKeyboardKey slash
  {static} +LogicalKeyboardKey digit0
  {static} +LogicalKeyboardKey digit1
  {static} +LogicalKeyboardKey digit2
  {static} +LogicalKeyboardKey digit3
  {static} +LogicalKeyboardKey digit4
  {static} +LogicalKeyboardKey digit5
  {static} +LogicalKeyboardKey digit6
  {static} +LogicalKeyboardKey digit7
  {static} +LogicalKeyboardKey digit8
  {static} +LogicalKeyboardKey digit9
  {static} +LogicalKeyboardKey colon
  {static} +LogicalKeyboardKey semicolon
  {static} +LogicalKeyboardKey less
  {static} +LogicalKeyboardKey equal
  {static} +LogicalKeyboardKey greater
  {static} +LogicalKeyboardKey question
  {static} +LogicalKeyboardKey at
  {static} +LogicalKeyboardKey bracketLeft
  {static} +LogicalKeyboardKey backslash
  {static} +LogicalKeyboardKey bracketRight
  {static} +LogicalKeyboardKey caret
  {static} +LogicalKeyboardKey underscore
  {static} +LogicalKeyboardKey backquote
  {static} +LogicalKeyboardKey keyA
  {static} +LogicalKeyboardKey keyB
  {static} +LogicalKeyboardKey keyC
  {static} +LogicalKeyboardKey keyD
  {static} +LogicalKeyboardKey keyE
  {static} +LogicalKeyboardKey keyF
  {static} +LogicalKeyboardKey keyG
  {static} +LogicalKeyboardKey keyH
  {static} +LogicalKeyboardKey keyI
  {static} +LogicalKeyboardKey keyJ
  {static} +LogicalKeyboardKey keyK
  {static} +LogicalKeyboardKey keyL
  {static} +LogicalKeyboardKey keyM
  {static} +LogicalKeyboardKey keyN
  {static} +LogicalKeyboardKey keyO
  {static} +LogicalKeyboardKey keyP
  {static} +LogicalKeyboardKey keyQ
  {static} +LogicalKeyboardKey keyR
  {static} +LogicalKeyboardKey keyS
  {static} +LogicalKeyboardKey keyT
  {static} +LogicalKeyboardKey keyU
  {static} +LogicalKeyboardKey keyV
  {static} +LogicalKeyboardKey keyW
  {static} +LogicalKeyboardKey keyX
  {static} +LogicalKeyboardKey keyY
  {static} +LogicalKeyboardKey keyZ
  {static} +LogicalKeyboardKey braceLeft
  {static} +LogicalKeyboardKey bar
  {static} +LogicalKeyboardKey braceRight
  {static} +LogicalKeyboardKey tilde
  {static} +LogicalKeyboardKey unidentified
  {static} +LogicalKeyboardKey backspace
  {static} +LogicalKeyboardKey tab
  {static} +LogicalKeyboardKey enter
  {static} +LogicalKeyboardKey escape
  {static} +LogicalKeyboardKey delete
  {static} +LogicalKeyboardKey accel
  {static} +LogicalKeyboardKey altGraph
  {static} +LogicalKeyboardKey capsLock
  {static} +LogicalKeyboardKey fn
  {static} +LogicalKeyboardKey fnLock
  {static} +LogicalKeyboardKey hyper
  {static} +LogicalKeyboardKey numLock
  {static} +LogicalKeyboardKey scrollLock
  {static} +LogicalKeyboardKey superKey
  {static} +LogicalKeyboardKey symbol
  {static} +LogicalKeyboardKey symbolLock
  {static} +LogicalKeyboardKey shiftLevel5
  {static} +LogicalKeyboardKey arrowDown
  {static} +LogicalKeyboardKey arrowLeft
  {static} +LogicalKeyboardKey arrowRight
  {static} +LogicalKeyboardKey arrowUp
  {static} +LogicalKeyboardKey end
  {static} +LogicalKeyboardKey home
  {static} +LogicalKeyboardKey pageDown
  {static} +LogicalKeyboardKey pageUp
  {static} +LogicalKeyboardKey clear
  {static} +LogicalKeyboardKey copy
  {static} +LogicalKeyboardKey crSel
  {static} +LogicalKeyboardKey cut
  {static} +LogicalKeyboardKey eraseEof
  {static} +LogicalKeyboardKey exSel
  {static} +LogicalKeyboardKey insert
  {static} +LogicalKeyboardKey paste
  {static} +LogicalKeyboardKey redo
  {static} +LogicalKeyboardKey undo
  {static} +LogicalKeyboardKey accept
  {static} +LogicalKeyboardKey again
  {static} +LogicalKeyboardKey attn
  {static} +LogicalKeyboardKey cancel
  {static} +LogicalKeyboardKey contextMenu
  {static} +LogicalKeyboardKey execute
  {static} +LogicalKeyboardKey find
  {static} +LogicalKeyboardKey help
  {static} +LogicalKeyboardKey pause
  {static} +LogicalKeyboardKey play
  {static} +LogicalKeyboardKey props
  {static} +LogicalKeyboardKey select
  {static} +LogicalKeyboardKey zoomIn
  {static} +LogicalKeyboardKey zoomOut
  {static} +LogicalKeyboardKey brightnessDown
  {static} +LogicalKeyboardKey brightnessUp
  {static} +LogicalKeyboardKey camera
  {static} +LogicalKeyboardKey eject
  {static} +LogicalKeyboardKey logOff
  {static} +LogicalKeyboardKey power
  {static} +LogicalKeyboardKey powerOff
  {static} +LogicalKeyboardKey printScreen
  {static} +LogicalKeyboardKey hibernate
  {static} +LogicalKeyboardKey standby
  {static} +LogicalKeyboardKey wakeUp
  {static} +LogicalKeyboardKey allCandidates
  {static} +LogicalKeyboardKey alphanumeric
  {static} +LogicalKeyboardKey codeInput
  {static} +LogicalKeyboardKey compose
  {static} +LogicalKeyboardKey convert
  {static} +LogicalKeyboardKey finalMode
  {static} +LogicalKeyboardKey groupFirst
  {static} +LogicalKeyboardKey groupLast
  {static} +LogicalKeyboardKey groupNext
  {static} +LogicalKeyboardKey groupPrevious
  {static} +LogicalKeyboardKey modeChange
  {static} +LogicalKeyboardKey nextCandidate
  {static} +LogicalKeyboardKey nonConvert
  {static} +LogicalKeyboardKey previousCandidate
  {static} +LogicalKeyboardKey process
  {static} +LogicalKeyboardKey singleCandidate
  {static} +LogicalKeyboardKey hangulMode
  {static} +LogicalKeyboardKey hanjaMode
  {static} +LogicalKeyboardKey junjaMode
  {static} +LogicalKeyboardKey eisu
  {static} +LogicalKeyboardKey hankaku
  {static} +LogicalKeyboardKey hiragana
  {static} +LogicalKeyboardKey hiraganaKatakana
  {static} +LogicalKeyboardKey kanaMode
  {static} +LogicalKeyboardKey kanjiMode
  {static} +LogicalKeyboardKey katakana
  {static} +LogicalKeyboardKey romaji
  {static} +LogicalKeyboardKey zenkaku
  {static} +LogicalKeyboardKey zenkakuHankaku
  {static} +LogicalKeyboardKey f1
  {static} +LogicalKeyboardKey f2
  {static} +LogicalKeyboardKey f3
  {static} +LogicalKeyboardKey f4
  {static} +LogicalKeyboardKey f5
  {static} +LogicalKeyboardKey f6
  {static} +LogicalKeyboardKey f7
  {static} +LogicalKeyboardKey f8
  {static} +LogicalKeyboardKey f9
  {static} +LogicalKeyboardKey f10
  {static} +LogicalKeyboardKey f11
  {static} +LogicalKeyboardKey f12
  {static} +LogicalKeyboardKey f13
  {static} +LogicalKeyboardKey f14
  {static} +LogicalKeyboardKey f15
  {static} +LogicalKeyboardKey f16
  {static} +LogicalKeyboardKey f17
  {static} +LogicalKeyboardKey f18
  {static} +LogicalKeyboardKey f19
  {static} +LogicalKeyboardKey f20
  {static} +LogicalKeyboardKey f21
  {static} +LogicalKeyboardKey f22
  {static} +LogicalKeyboardKey f23
  {static} +LogicalKeyboardKey f24
  {static} +LogicalKeyboardKey soft1
  {static} +LogicalKeyboardKey soft2
  {static} +LogicalKeyboardKey soft3
  {static} +LogicalKeyboardKey soft4
  {static} +LogicalKeyboardKey soft5
  {static} +LogicalKeyboardKey soft6
  {static} +LogicalKeyboardKey soft7
  {static} +LogicalKeyboardKey soft8
  {static} +LogicalKeyboardKey close
  {static} +LogicalKeyboardKey mailForward
  {static} +LogicalKeyboardKey mailReply
  {static} +LogicalKeyboardKey mailSend
  {static} +LogicalKeyboardKey mediaPlayPause
  {static} +LogicalKeyboardKey mediaStop
  {static} +LogicalKeyboardKey mediaTrackNext
  {static} +LogicalKeyboardKey mediaTrackPrevious
  {static} +LogicalKeyboardKey newKey
  {static} +LogicalKeyboardKey open
  {static} +LogicalKeyboardKey print
  {static} +LogicalKeyboardKey save
  {static} +LogicalKeyboardKey spellCheck
  {static} +LogicalKeyboardKey audioVolumeDown
  {static} +LogicalKeyboardKey audioVolumeUp
  {static} +LogicalKeyboardKey audioVolumeMute
  {static} +LogicalKeyboardKey launchApplication2
  {static} +LogicalKeyboardKey launchCalendar
  {static} +LogicalKeyboardKey launchMail
  {static} +LogicalKeyboardKey launchMediaPlayer
  {static} +LogicalKeyboardKey launchMusicPlayer
  {static} +LogicalKeyboardKey launchApplication1
  {static} +LogicalKeyboardKey launchScreenSaver
  {static} +LogicalKeyboardKey launchSpreadsheet
  {static} +LogicalKeyboardKey launchWebBrowser
  {static} +LogicalKeyboardKey launchWebCam
  {static} +LogicalKeyboardKey launchWordProcessor
  {static} +LogicalKeyboardKey launchContacts
  {static} +LogicalKeyboardKey launchPhone
  {static} +LogicalKeyboardKey launchAssistant
  {static} +LogicalKeyboardKey launchControlPanel
  {static} +LogicalKeyboardKey browserBack
  {static} +LogicalKeyboardKey browserFavorites
  {static} +LogicalKeyboardKey browserForward
  {static} +LogicalKeyboardKey browserHome
  {static} +LogicalKeyboardKey browserRefresh
  {static} +LogicalKeyboardKey browserSearch
  {static} +LogicalKeyboardKey browserStop
  {static} +LogicalKeyboardKey audioBalanceLeft
  {static} +LogicalKeyboardKey audioBalanceRight
  {static} +LogicalKeyboardKey audioBassBoostDown
  {static} +LogicalKeyboardKey audioBassBoostUp
  {static} +LogicalKeyboardKey audioFaderFront
  {static} +LogicalKeyboardKey audioFaderRear
  {static} +LogicalKeyboardKey audioSurroundModeNext
  {static} +LogicalKeyboardKey avrInput
  {static} +LogicalKeyboardKey avrPower
  {static} +LogicalKeyboardKey channelDown
  {static} +LogicalKeyboardKey channelUp
  {static} +LogicalKeyboardKey colorF0Red
  {static} +LogicalKeyboardKey colorF1Green
  {static} +LogicalKeyboardKey colorF2Yellow
  {static} +LogicalKeyboardKey colorF3Blue
  {static} +LogicalKeyboardKey colorF4Grey
  {static} +LogicalKeyboardKey colorF5Brown
  {static} +LogicalKeyboardKey closedCaptionToggle
  {static} +LogicalKeyboardKey dimmer
  {static} +LogicalKeyboardKey displaySwap
  {static} +LogicalKeyboardKey exit
  {static} +LogicalKeyboardKey favoriteClear0
  {static} +LogicalKeyboardKey favoriteClear1
  {static} +LogicalKeyboardKey favoriteClear2
  {static} +LogicalKeyboardKey favoriteClear3
  {static} +LogicalKeyboardKey favoriteRecall0
  {static} +LogicalKeyboardKey favoriteRecall1
  {static} +LogicalKeyboardKey favoriteRecall2
  {static} +LogicalKeyboardKey favoriteRecall3
  {static} +LogicalKeyboardKey favoriteStore0
  {static} +LogicalKeyboardKey favoriteStore1
  {static} +LogicalKeyboardKey favoriteStore2
  {static} +LogicalKeyboardKey favoriteStore3
  {static} +LogicalKeyboardKey guide
  {static} +LogicalKeyboardKey guideNextDay
  {static} +LogicalKeyboardKey guidePreviousDay
  {static} +LogicalKeyboardKey info
  {static} +LogicalKeyboardKey instantReplay
  {static} +LogicalKeyboardKey link
  {static} +LogicalKeyboardKey listProgram
  {static} +LogicalKeyboardKey liveContent
  {static} +LogicalKeyboardKey lock
  {static} +LogicalKeyboardKey mediaApps
  {static} +LogicalKeyboardKey mediaFastForward
  {static} +LogicalKeyboardKey mediaLast
  {static} +LogicalKeyboardKey mediaPause
  {static} +LogicalKeyboardKey mediaPlay
  {static} +LogicalKeyboardKey mediaRecord
  {static} +LogicalKeyboardKey mediaRewind
  {static} +LogicalKeyboardKey mediaSkip
  {static} +LogicalKeyboardKey nextFavoriteChannel
  {static} +LogicalKeyboardKey nextUserProfile
  {static} +LogicalKeyboardKey onDemand
  {static} +LogicalKeyboardKey pInPDown
  {static} +LogicalKeyboardKey pInPMove
  {static} +LogicalKeyboardKey pInPToggle
  {static} +LogicalKeyboardKey pInPUp
  {static} +LogicalKeyboardKey playSpeedDown
  {static} +LogicalKeyboardKey playSpeedReset
  {static} +LogicalKeyboardKey playSpeedUp
  {static} +LogicalKeyboardKey randomToggle
  {static} +LogicalKeyboardKey rcLowBattery
  {static} +LogicalKeyboardKey recordSpeedNext
  {static} +LogicalKeyboardKey rfBypass
  {static} +LogicalKeyboardKey scanChannelsToggle
  {static} +LogicalKeyboardKey screenModeNext
  {static} +LogicalKeyboardKey settings
  {static} +LogicalKeyboardKey splitScreenToggle
  {static} +LogicalKeyboardKey stbInput
  {static} +LogicalKeyboardKey stbPower
  {static} +LogicalKeyboardKey subtitle
  {static} +LogicalKeyboardKey teletext
  {static} +LogicalKeyboardKey tv
  {static} +LogicalKeyboardKey tvInput
  {static} +LogicalKeyboardKey tvPower
  {static} +LogicalKeyboardKey videoModeNext
  {static} +LogicalKeyboardKey wink
  {static} +LogicalKeyboardKey zoomToggle
  {static} +LogicalKeyboardKey dvr
  {static} +LogicalKeyboardKey mediaAudioTrack
  {static} +LogicalKeyboardKey mediaSkipBackward
  {static} +LogicalKeyboardKey mediaSkipForward
  {static} +LogicalKeyboardKey mediaStepBackward
  {static} +LogicalKeyboardKey mediaStepForward
  {static} +LogicalKeyboardKey mediaTopMenu
  {static} +LogicalKeyboardKey navigateIn
  {static} +LogicalKeyboardKey navigateNext
  {static} +LogicalKeyboardKey navigateOut
  {static} +LogicalKeyboardKey navigatePrevious
  {static} +LogicalKeyboardKey pairing
  {static} +LogicalKeyboardKey mediaClose
  {static} +LogicalKeyboardKey audioBassBoostToggle
  {static} +LogicalKeyboardKey audioTrebleDown
  {static} +LogicalKeyboardKey audioTrebleUp
  {static} +LogicalKeyboardKey microphoneToggle
  {static} +LogicalKeyboardKey microphoneVolumeDown
  {static} +LogicalKeyboardKey microphoneVolumeUp
  {static} +LogicalKeyboardKey microphoneVolumeMute
  {static} +LogicalKeyboardKey speechCorrectionList
  {static} +LogicalKeyboardKey speechInputToggle
  {static} +LogicalKeyboardKey appSwitch
  {static} +LogicalKeyboardKey call
  {static} +LogicalKeyboardKey cameraFocus
  {static} +LogicalKeyboardKey endCall
  {static} +LogicalKeyboardKey goBack
  {static} +LogicalKeyboardKey goHome
  {static} +LogicalKeyboardKey headsetHook
  {static} +LogicalKeyboardKey lastNumberRedial
  {static} +LogicalKeyboardKey notification
  {static} +LogicalKeyboardKey mannerMode
  {static} +LogicalKeyboardKey voiceDial
  {static} +LogicalKeyboardKey tv3DMode
  {static} +LogicalKeyboardKey tvAntennaCable
  {static} +LogicalKeyboardKey tvAudioDescription
  {static} +LogicalKeyboardKey tvAudioDescriptionMixDown
  {static} +LogicalKeyboardKey tvAudioDescriptionMixUp
  {static} +LogicalKeyboardKey tvContentsMenu
  {static} +LogicalKeyboardKey tvDataService
  {static} +LogicalKeyboardKey tvInputComponent1
  {static} +LogicalKeyboardKey tvInputComponent2
  {static} +LogicalKeyboardKey tvInputComposite1
  {static} +LogicalKeyboardKey tvInputComposite2
  {static} +LogicalKeyboardKey tvInputHDMI1
  {static} +LogicalKeyboardKey tvInputHDMI2
  {static} +LogicalKeyboardKey tvInputHDMI3
  {static} +LogicalKeyboardKey tvInputHDMI4
  {static} +LogicalKeyboardKey tvInputVGA1
  {static} +LogicalKeyboardKey tvMediaContext
  {static} +LogicalKeyboardKey tvNetwork
  {static} +LogicalKeyboardKey tvNumberEntry
  {static} +LogicalKeyboardKey tvRadioService
  {static} +LogicalKeyboardKey tvSatellite
  {static} +LogicalKeyboardKey tvSatelliteBS
  {static} +LogicalKeyboardKey tvSatelliteCS
  {static} +LogicalKeyboardKey tvSatelliteToggle
  {static} +LogicalKeyboardKey tvTerrestrialAnalog
  {static} +LogicalKeyboardKey tvTerrestrialDigital
  {static} +LogicalKeyboardKey tvTimer
  {static} +LogicalKeyboardKey key11
  {static} +LogicalKeyboardKey key12
  {static} +LogicalKeyboardKey suspend
  {static} +LogicalKeyboardKey resume
  {static} +LogicalKeyboardKey sleep
  {static} +LogicalKeyboardKey abort
  {static} +LogicalKeyboardKey lang1
  {static} +LogicalKeyboardKey lang2
  {static} +LogicalKeyboardKey lang3
  {static} +LogicalKeyboardKey lang4
  {static} +LogicalKeyboardKey lang5
  {static} +LogicalKeyboardKey intlBackslash
  {static} +LogicalKeyboardKey intlRo
  {static} +LogicalKeyboardKey intlYen
  {static} +LogicalKeyboardKey controlLeft
  {static} +LogicalKeyboardKey controlRight
  {static} +LogicalKeyboardKey shiftLeft
  {static} +LogicalKeyboardKey shiftRight
  {static} +LogicalKeyboardKey altLeft
  {static} +LogicalKeyboardKey altRight
  {static} +LogicalKeyboardKey metaLeft
  {static} +LogicalKeyboardKey metaRight
  {static} +LogicalKeyboardKey control
  {static} +LogicalKeyboardKey shift
  {static} +LogicalKeyboardKey alt
  {static} +LogicalKeyboardKey meta
  {static} +LogicalKeyboardKey numpadEnter
  {static} +LogicalKeyboardKey numpadParenLeft
  {static} +LogicalKeyboardKey numpadParenRight
  {static} +LogicalKeyboardKey numpadMultiply
  {static} +LogicalKeyboardKey numpadAdd
  {static} +LogicalKeyboardKey numpadComma
  {static} +LogicalKeyboardKey numpadSubtract
  {static} +LogicalKeyboardKey numpadDecimal
  {static} +LogicalKeyboardKey numpadDivide
  {static} +LogicalKeyboardKey numpad0
  {static} +LogicalKeyboardKey numpad1
  {static} +LogicalKeyboardKey numpad2
  {static} +LogicalKeyboardKey numpad3
  {static} +LogicalKeyboardKey numpad4
  {static} +LogicalKeyboardKey numpad5
  {static} +LogicalKeyboardKey numpad6
  {static} +LogicalKeyboardKey numpad7
  {static} +LogicalKeyboardKey numpad8
  {static} +LogicalKeyboardKey numpad9
  {static} +LogicalKeyboardKey numpadEqual
  {static} +LogicalKeyboardKey gameButton1
  {static} +LogicalKeyboardKey gameButton2
  {static} +LogicalKeyboardKey gameButton3
  {static} +LogicalKeyboardKey gameButton4
  {static} +LogicalKeyboardKey gameButton5
  {static} +LogicalKeyboardKey gameButton6
  {static} +LogicalKeyboardKey gameButton7
  {static} +LogicalKeyboardKey gameButton8
  {static} +LogicalKeyboardKey gameButton9
  {static} +LogicalKeyboardKey gameButton10
  {static} +LogicalKeyboardKey gameButton11
  {static} +LogicalKeyboardKey gameButton12
  {static} +LogicalKeyboardKey gameButton13
  {static} +LogicalKeyboardKey gameButton14
  {static} +LogicalKeyboardKey gameButton15
  {static} +LogicalKeyboardKey gameButton16
  {static} +LogicalKeyboardKey gameButtonA
  {static} +LogicalKeyboardKey gameButtonB
  {static} +LogicalKeyboardKey gameButtonC
  {static} +LogicalKeyboardKey gameButtonLeft1
  {static} +LogicalKeyboardKey gameButtonLeft2
  {static} +LogicalKeyboardKey gameButtonMode
  {static} +LogicalKeyboardKey gameButtonRight1
  {static} +LogicalKeyboardKey gameButtonRight2
  {static} +LogicalKeyboardKey gameButtonSelect
  {static} +LogicalKeyboardKey gameButtonStart
  {static} +LogicalKeyboardKey gameButtonThumbLeft
  {static} +LogicalKeyboardKey gameButtonThumbRight
  {static} +LogicalKeyboardKey gameButtonX
  {static} +LogicalKeyboardKey gameButtonY
  {static} +LogicalKeyboardKey gameButtonZ
  {static} -Map<int, LogicalKeyboardKey> _knownLogicalKeys
  {static} -Map<LogicalKeyboardKey, LogicalKeyboardKey> _synonyms
  {static} -Map<int, String> _keyLabels
  +String keyLabel
  +String? debugName
  +int hashCode
  +bool isAutogenerated
  +Set<LogicalKeyboardKey> synonyms
  {static} +Iterable<LogicalKeyboardKey> knownLogicalKeys
  {static} -int _nonValueBits()
  {static} -String? _unicodeKeyLabel()
  +bool ==()
  {static} +LogicalKeyboardKey? findKeyByKeyId()
  {static} +bool isControlCharacter()
  {static} +Set<LogicalKeyboardKey> collapseSynonyms()
  +void debugFillProperties()
}

"services::keyboard_key.g::LogicalKeyboardKey" o-- "services::keyboard_key.g::LogicalKeyboardKey"
"services::keyboard_key.g::KeyboardKey" <|-- "services::keyboard_key.g::LogicalKeyboardKey"

class "services::keyboard_key.g::PhysicalKeyboardKey" {
  +int usbHidUsage
  {static} +PhysicalKeyboardKey hyper
  {static} +PhysicalKeyboardKey superKey
  {static} +PhysicalKeyboardKey fn
  {static} +PhysicalKeyboardKey fnLock
  {static} +PhysicalKeyboardKey suspend
  {static} +PhysicalKeyboardKey resume
  {static} +PhysicalKeyboardKey turbo
  {static} +PhysicalKeyboardKey privacyScreenToggle
  {static} +PhysicalKeyboardKey microphoneMuteToggle
  {static} +PhysicalKeyboardKey sleep
  {static} +PhysicalKeyboardKey wakeUp
  {static} +PhysicalKeyboardKey displayToggleIntExt
  {static} +PhysicalKeyboardKey gameButton1
  {static} +PhysicalKeyboardKey gameButton2
  {static} +PhysicalKeyboardKey gameButton3
  {static} +PhysicalKeyboardKey gameButton4
  {static} +PhysicalKeyboardKey gameButton5
  {static} +PhysicalKeyboardKey gameButton6
  {static} +PhysicalKeyboardKey gameButton7
  {static} +PhysicalKeyboardKey gameButton8
  {static} +PhysicalKeyboardKey gameButton9
  {static} +PhysicalKeyboardKey gameButton10
  {static} +PhysicalKeyboardKey gameButton11
  {static} +PhysicalKeyboardKey gameButton12
  {static} +PhysicalKeyboardKey gameButton13
  {static} +PhysicalKeyboardKey gameButton14
  {static} +PhysicalKeyboardKey gameButton15
  {static} +PhysicalKeyboardKey gameButton16
  {static} +PhysicalKeyboardKey gameButtonA
  {static} +PhysicalKeyboardKey gameButtonB
  {static} +PhysicalKeyboardKey gameButtonC
  {static} +PhysicalKeyboardKey gameButtonLeft1
  {static} +PhysicalKeyboardKey gameButtonLeft2
  {static} +PhysicalKeyboardKey gameButtonMode
  {static} +PhysicalKeyboardKey gameButtonRight1
  {static} +PhysicalKeyboardKey gameButtonRight2
  {static} +PhysicalKeyboardKey gameButtonSelect
  {static} +PhysicalKeyboardKey gameButtonStart
  {static} +PhysicalKeyboardKey gameButtonThumbLeft
  {static} +PhysicalKeyboardKey gameButtonThumbRight
  {static} +PhysicalKeyboardKey gameButtonX
  {static} +PhysicalKeyboardKey gameButtonY
  {static} +PhysicalKeyboardKey gameButtonZ
  {static} +PhysicalKeyboardKey usbReserved
  {static} +PhysicalKeyboardKey usbErrorRollOver
  {static} +PhysicalKeyboardKey usbPostFail
  {static} +PhysicalKeyboardKey usbErrorUndefined
  {static} +PhysicalKeyboardKey keyA
  {static} +PhysicalKeyboardKey keyB
  {static} +PhysicalKeyboardKey keyC
  {static} +PhysicalKeyboardKey keyD
  {static} +PhysicalKeyboardKey keyE
  {static} +PhysicalKeyboardKey keyF
  {static} +PhysicalKeyboardKey keyG
  {static} +PhysicalKeyboardKey keyH
  {static} +PhysicalKeyboardKey keyI
  {static} +PhysicalKeyboardKey keyJ
  {static} +PhysicalKeyboardKey keyK
  {static} +PhysicalKeyboardKey keyL
  {static} +PhysicalKeyboardKey keyM
  {static} +PhysicalKeyboardKey keyN
  {static} +PhysicalKeyboardKey keyO
  {static} +PhysicalKeyboardKey keyP
  {static} +PhysicalKeyboardKey keyQ
  {static} +PhysicalKeyboardKey keyR
  {static} +PhysicalKeyboardKey keyS
  {static} +PhysicalKeyboardKey keyT
  {static} +PhysicalKeyboardKey keyU
  {static} +PhysicalKeyboardKey keyV
  {static} +PhysicalKeyboardKey keyW
  {static} +PhysicalKeyboardKey keyX
  {static} +PhysicalKeyboardKey keyY
  {static} +PhysicalKeyboardKey keyZ
  {static} +PhysicalKeyboardKey digit1
  {static} +PhysicalKeyboardKey digit2
  {static} +PhysicalKeyboardKey digit3
  {static} +PhysicalKeyboardKey digit4
  {static} +PhysicalKeyboardKey digit5
  {static} +PhysicalKeyboardKey digit6
  {static} +PhysicalKeyboardKey digit7
  {static} +PhysicalKeyboardKey digit8
  {static} +PhysicalKeyboardKey digit9
  {static} +PhysicalKeyboardKey digit0
  {static} +PhysicalKeyboardKey enter
  {static} +PhysicalKeyboardKey escape
  {static} +PhysicalKeyboardKey backspace
  {static} +PhysicalKeyboardKey tab
  {static} +PhysicalKeyboardKey space
  {static} +PhysicalKeyboardKey minus
  {static} +PhysicalKeyboardKey equal
  {static} +PhysicalKeyboardKey bracketLeft
  {static} +PhysicalKeyboardKey bracketRight
  {static} +PhysicalKeyboardKey backslash
  {static} +PhysicalKeyboardKey semicolon
  {static} +PhysicalKeyboardKey quote
  {static} +PhysicalKeyboardKey backquote
  {static} +PhysicalKeyboardKey comma
  {static} +PhysicalKeyboardKey period
  {static} +PhysicalKeyboardKey slash
  {static} +PhysicalKeyboardKey capsLock
  {static} +PhysicalKeyboardKey f1
  {static} +PhysicalKeyboardKey f2
  {static} +PhysicalKeyboardKey f3
  {static} +PhysicalKeyboardKey f4
  {static} +PhysicalKeyboardKey f5
  {static} +PhysicalKeyboardKey f6
  {static} +PhysicalKeyboardKey f7
  {static} +PhysicalKeyboardKey f8
  {static} +PhysicalKeyboardKey f9
  {static} +PhysicalKeyboardKey f10
  {static} +PhysicalKeyboardKey f11
  {static} +PhysicalKeyboardKey f12
  {static} +PhysicalKeyboardKey printScreen
  {static} +PhysicalKeyboardKey scrollLock
  {static} +PhysicalKeyboardKey pause
  {static} +PhysicalKeyboardKey insert
  {static} +PhysicalKeyboardKey home
  {static} +PhysicalKeyboardKey pageUp
  {static} +PhysicalKeyboardKey delete
  {static} +PhysicalKeyboardKey end
  {static} +PhysicalKeyboardKey pageDown
  {static} +PhysicalKeyboardKey arrowRight
  {static} +PhysicalKeyboardKey arrowLeft
  {static} +PhysicalKeyboardKey arrowDown
  {static} +PhysicalKeyboardKey arrowUp
  {static} +PhysicalKeyboardKey numLock
  {static} +PhysicalKeyboardKey numpadDivide
  {static} +PhysicalKeyboardKey numpadMultiply
  {static} +PhysicalKeyboardKey numpadSubtract
  {static} +PhysicalKeyboardKey numpadAdd
  {static} +PhysicalKeyboardKey numpadEnter
  {static} +PhysicalKeyboardKey numpad1
  {static} +PhysicalKeyboardKey numpad2
  {static} +PhysicalKeyboardKey numpad3
  {static} +PhysicalKeyboardKey numpad4
  {static} +PhysicalKeyboardKey numpad5
  {static} +PhysicalKeyboardKey numpad6
  {static} +PhysicalKeyboardKey numpad7
  {static} +PhysicalKeyboardKey numpad8
  {static} +PhysicalKeyboardKey numpad9
  {static} +PhysicalKeyboardKey numpad0
  {static} +PhysicalKeyboardKey numpadDecimal
  {static} +PhysicalKeyboardKey intlBackslash
  {static} +PhysicalKeyboardKey contextMenu
  {static} +PhysicalKeyboardKey power
  {static} +PhysicalKeyboardKey numpadEqual
  {static} +PhysicalKeyboardKey f13
  {static} +PhysicalKeyboardKey f14
  {static} +PhysicalKeyboardKey f15
  {static} +PhysicalKeyboardKey f16
  {static} +PhysicalKeyboardKey f17
  {static} +PhysicalKeyboardKey f18
  {static} +PhysicalKeyboardKey f19
  {static} +PhysicalKeyboardKey f20
  {static} +PhysicalKeyboardKey f21
  {static} +PhysicalKeyboardKey f22
  {static} +PhysicalKeyboardKey f23
  {static} +PhysicalKeyboardKey f24
  {static} +PhysicalKeyboardKey open
  {static} +PhysicalKeyboardKey help
  {static} +PhysicalKeyboardKey select
  {static} +PhysicalKeyboardKey again
  {static} +PhysicalKeyboardKey undo
  {static} +PhysicalKeyboardKey cut
  {static} +PhysicalKeyboardKey copy
  {static} +PhysicalKeyboardKey paste
  {static} +PhysicalKeyboardKey find
  {static} +PhysicalKeyboardKey audioVolumeMute
  {static} +PhysicalKeyboardKey audioVolumeUp
  {static} +PhysicalKeyboardKey audioVolumeDown
  {static} +PhysicalKeyboardKey numpadComma
  {static} +PhysicalKeyboardKey intlRo
  {static} +PhysicalKeyboardKey kanaMode
  {static} +PhysicalKeyboardKey intlYen
  {static} +PhysicalKeyboardKey convert
  {static} +PhysicalKeyboardKey nonConvert
  {static} +PhysicalKeyboardKey lang1
  {static} +PhysicalKeyboardKey lang2
  {static} +PhysicalKeyboardKey lang3
  {static} +PhysicalKeyboardKey lang4
  {static} +PhysicalKeyboardKey lang5
  {static} +PhysicalKeyboardKey abort
  {static} +PhysicalKeyboardKey props
  {static} +PhysicalKeyboardKey numpadParenLeft
  {static} +PhysicalKeyboardKey numpadParenRight
  {static} +PhysicalKeyboardKey numpadBackspace
  {static} +PhysicalKeyboardKey numpadMemoryStore
  {static} +PhysicalKeyboardKey numpadMemoryRecall
  {static} +PhysicalKeyboardKey numpadMemoryClear
  {static} +PhysicalKeyboardKey numpadMemoryAdd
  {static} +PhysicalKeyboardKey numpadMemorySubtract
  {static} +PhysicalKeyboardKey numpadSignChange
  {static} +PhysicalKeyboardKey numpadClear
  {static} +PhysicalKeyboardKey numpadClearEntry
  {static} +PhysicalKeyboardKey controlLeft
  {static} +PhysicalKeyboardKey shiftLeft
  {static} +PhysicalKeyboardKey altLeft
  {static} +PhysicalKeyboardKey metaLeft
  {static} +PhysicalKeyboardKey controlRight
  {static} +PhysicalKeyboardKey shiftRight
  {static} +PhysicalKeyboardKey altRight
  {static} +PhysicalKeyboardKey metaRight
  {static} +PhysicalKeyboardKey info
  {static} +PhysicalKeyboardKey closedCaptionToggle
  {static} +PhysicalKeyboardKey brightnessUp
  {static} +PhysicalKeyboardKey brightnessDown
  {static} +PhysicalKeyboardKey brightnessToggle
  {static} +PhysicalKeyboardKey brightnessMinimum
  {static} +PhysicalKeyboardKey brightnessMaximum
  {static} +PhysicalKeyboardKey brightnessAuto
  {static} +PhysicalKeyboardKey kbdIllumUp
  {static} +PhysicalKeyboardKey kbdIllumDown
  {static} +PhysicalKeyboardKey mediaLast
  {static} +PhysicalKeyboardKey launchPhone
  {static} +PhysicalKeyboardKey programGuide
  {static} +PhysicalKeyboardKey exit
  {static} +PhysicalKeyboardKey channelUp
  {static} +PhysicalKeyboardKey channelDown
  {static} +PhysicalKeyboardKey mediaPlay
  {static} +PhysicalKeyboardKey mediaPause
  {static} +PhysicalKeyboardKey mediaRecord
  {static} +PhysicalKeyboardKey mediaFastForward
  {static} +PhysicalKeyboardKey mediaRewind
  {static} +PhysicalKeyboardKey mediaTrackNext
  {static} +PhysicalKeyboardKey mediaTrackPrevious
  {static} +PhysicalKeyboardKey mediaStop
  {static} +PhysicalKeyboardKey eject
  {static} +PhysicalKeyboardKey mediaPlayPause
  {static} +PhysicalKeyboardKey speechInputToggle
  {static} +PhysicalKeyboardKey bassBoost
  {static} +PhysicalKeyboardKey mediaSelect
  {static} +PhysicalKeyboardKey launchWordProcessor
  {static} +PhysicalKeyboardKey launchSpreadsheet
  {static} +PhysicalKeyboardKey launchMail
  {static} +PhysicalKeyboardKey launchContacts
  {static} +PhysicalKeyboardKey launchCalendar
  {static} +PhysicalKeyboardKey launchApp2
  {static} +PhysicalKeyboardKey launchApp1
  {static} +PhysicalKeyboardKey launchInternetBrowser
  {static} +PhysicalKeyboardKey logOff
  {static} +PhysicalKeyboardKey lockScreen
  {static} +PhysicalKeyboardKey launchControlPanel
  {static} +PhysicalKeyboardKey selectTask
  {static} +PhysicalKeyboardKey launchDocuments
  {static} +PhysicalKeyboardKey spellCheck
  {static} +PhysicalKeyboardKey launchKeyboardLayout
  {static} +PhysicalKeyboardKey launchScreenSaver
  {static} +PhysicalKeyboardKey launchAudioBrowser
  {static} +PhysicalKeyboardKey launchAssistant
  {static} +PhysicalKeyboardKey newKey
  {static} +PhysicalKeyboardKey close
  {static} +PhysicalKeyboardKey save
  {static} +PhysicalKeyboardKey print
  {static} +PhysicalKeyboardKey browserSearch
  {static} +PhysicalKeyboardKey browserHome
  {static} +PhysicalKeyboardKey browserBack
  {static} +PhysicalKeyboardKey browserForward
  {static} +PhysicalKeyboardKey browserStop
  {static} +PhysicalKeyboardKey browserRefresh
  {static} +PhysicalKeyboardKey browserFavorites
  {static} +PhysicalKeyboardKey zoomIn
  {static} +PhysicalKeyboardKey zoomOut
  {static} +PhysicalKeyboardKey zoomToggle
  {static} +PhysicalKeyboardKey redo
  {static} +PhysicalKeyboardKey mailReply
  {static} +PhysicalKeyboardKey mailForward
  {static} +PhysicalKeyboardKey mailSend
  {static} +PhysicalKeyboardKey keyboardLayoutSelect
  {static} +PhysicalKeyboardKey showAllWindows
  {static} -Map<int, PhysicalKeyboardKey> _knownPhysicalKeys
  {static} -Map<int, String> _debugNames
  +String? debugName
  +int hashCode
  {static} +Iterable<PhysicalKeyboardKey> knownPhysicalKeys
  +bool ==()
  {static} +PhysicalKeyboardKey? findKeyByCode()
  +void debugFillProperties()
}

"services::keyboard_key.g::PhysicalKeyboardKey" o-- "services::keyboard_key.g::PhysicalKeyboardKey"
"services::keyboard_key.g::KeyboardKey" <|-- "services::keyboard_key.g::PhysicalKeyboardKey"

class "services::raw_keyboard_android::RawKeyEventDataAndroid" {
  +int flags
  +int codePoint
  +int plainCodePoint
  +int keyCode
  +int scanCode
  +int metaState
  +int eventSource
  +int vendorId
  +int productId
  +int deviceId
  +int repeatCount
  {static} -int _sourceJoystick
  {static} +int modifierNone
  {static} +int modifierAlt
  {static} +int modifierLeftAlt
  {static} +int modifierRightAlt
  {static} +int modifierShift
  {static} +int modifierLeftShift
  {static} +int modifierRightShift
  {static} +int modifierSym
  {static} +int modifierFunction
  {static} +int modifierControl
  {static} +int modifierLeftControl
  {static} +int modifierRightControl
  {static} +int modifierMeta
  {static} +int modifierLeftMeta
  {static} +int modifierRightMeta
  {static} +int modifierCapsLock
  {static} +int modifierNumLock
  {static} +int modifierScrollLock
  +String keyLabel
  +PhysicalKeyboardKey physicalKey
  +LogicalKeyboardKey logicalKey
  +int hashCode
  -bool _isLeftRightModifierPressed()
  +bool isModifierPressed()
  +KeyboardSide? getModifierSide()
  +void debugFillProperties()
  +bool ==()
}

"services::raw_keyboard_android::RawKeyEventDataAndroid" o-- "services::keyboard_key.g::PhysicalKeyboardKey"
"services::raw_keyboard_android::RawKeyEventDataAndroid" o-- "services::keyboard_key.g::LogicalKeyboardKey"
"services::raw_keyboard::RawKeyEventData" <|-- "services::raw_keyboard_android::RawKeyEventDataAndroid"

class "services::live_text::LiveText" {
  {static} +Future<bool> isLiveTextInputAvailable()
  {static} +void startLiveTextInput()
}

class "services::spell_check::SuggestionSpan" {
  +TextRange range
  +List<String> suggestions
  +int hashCode
  +bool ==()
}

"services::spell_check::SuggestionSpan" o-- "dart::ui::TextRange"

class "services::spell_check::SpellCheckResults" {
  +String spellCheckedText
  +List<SuggestionSpan> suggestionSpans
  +int hashCode
  +bool ==()
}

abstract class "services::spell_check::SpellCheckService" {
  +Future<List<SuggestionSpan>?> fetchSpellCheckSuggestions()
}

class "services::spell_check::DefaultSpellCheckService" {
  +SpellCheckResults? lastSavedResults
  +MethodChannel spellCheckChannel
  {static} +List<SuggestionSpan> mergeResults()
  +Future<List<SuggestionSpan>?> fetchSpellCheckSuggestions()
}

"services::spell_check::DefaultSpellCheckService" o-- "services::spell_check::SpellCheckResults"
"services::spell_check::DefaultSpellCheckService" o-- "services::platform_channel::MethodChannel"
"services::spell_check::SpellCheckService" <|-- "services::spell_check::DefaultSpellCheckService"

abstract class "services::text_layout_metrics::TextLayoutMetrics" {
  {static} +bool isWhitespace()
  {static} +bool isLineTerminator()
  +TextSelection getLineAtOffset()
  +TextRange getWordBoundary()
  +TextPosition getTextPositionAbove()
  +TextPosition getTextPositionBelow()
}

class "services::raw_keyboard_web::RawKeyEventDataWeb" {
  +String code
  +String key
  +int location
  +int metaState
  +int keyCode
  {static} +int modifierNone
  {static} +int modifierShift
  {static} +int modifierAlt
  {static} +int modifierControl
  {static} +int modifierMeta
  {static} +int modifierNumLock
  {static} +int modifierCapsLock
  {static} +int modifierScrollLock
  +String keyLabel
  +PhysicalKeyboardKey physicalKey
  +LogicalKeyboardKey logicalKey
  +int hashCode
  +bool isModifierPressed()
  +KeyboardSide getModifierSide()
  +void debugFillProperties()
  +bool ==()
}

"services::raw_keyboard_web::RawKeyEventDataWeb" o-- "services::keyboard_key.g::PhysicalKeyboardKey"
"services::raw_keyboard_web::RawKeyEventDataWeb" o-- "services::keyboard_key.g::LogicalKeyboardKey"
"services::raw_keyboard::RawKeyEventData" <|-- "services::raw_keyboard_web::RawKeyEventDataWeb"

class "services::text_editing::TextSelection" {
  +int baseOffset
  +int extentOffset
  +TextAffinity affinity
  +bool isDirectional
  +TextPosition base
  +TextPosition extent
  +int hashCode
  +String toString()
  +bool ==()
  +TextSelection copyWith()
  +TextSelection expandTo()
  +TextSelection extendTo()
}

"services::text_editing::TextSelection" o-- "dart::ui::TextAffinity"
"services::text_editing::TextSelection" o-- "dart::ui::TextPosition"
"dart::ui::TextRange" <|-- "services::text_editing::TextSelection"

class "services::_background_isolate_binary_messenger_io::BackgroundIsolateBinaryMessenger" {
  -ReceivePort _receivePort
  -Map<int, Completer<ByteData?>> _completers
  -int _messageCount
  {static} -BinaryMessenger? _instance
  {static} +BinaryMessenger instance
  {static} +void ensureInitialized()
  +Future<void> handlePlatformMessage()
  +Future<ByteData?>? send()
  +void setMessageHandler()
}

"services::_background_isolate_binary_messenger_io::BackgroundIsolateBinaryMessenger" o-- "dart::isolate::ReceivePort"
"services::_background_isolate_binary_messenger_io::BackgroundIsolateBinaryMessenger" o-- "services::binary_messenger::BinaryMessenger"
"services::binary_messenger::BinaryMessenger" <|-- "services::_background_isolate_binary_messenger_io::BackgroundIsolateBinaryMessenger"

abstract class "services::binary_messenger::BinaryMessenger" {
  +Future<void> handlePlatformMessage()
  +Future<ByteData?>? send()
  +void setMessageHandler()
}

class "services::raw_keyboard_ios::RawKeyEventDataIos" {
  +String characters
  +String charactersIgnoringModifiers
  +int keyCode
  +int modifiers
  {static} +int modifierCapsLock
  {static} +int modifierShift
  {static} +int modifierLeftShift
  {static} +int modifierRightShift
  {static} +int modifierControl
  {static} +int modifierLeftControl
  {static} +int modifierRightControl
  {static} +int modifierOption
  {static} +int modifierLeftOption
  {static} +int modifierRightOption
  {static} +int modifierCommand
  {static} +int modifierLeftCommand
  {static} +int modifierRightCommand
  {static} +int modifierNumericPad
  {static} +int modifierHelp
  {static} +int modifierFunction
  {static} +int deviceIndependentMask
  +String keyLabel
  +PhysicalKeyboardKey physicalKey
  +LogicalKeyboardKey logicalKey
  +int hashCode
  {static} -bool _isUnprintableKey()
  -bool _isLeftRightModifierPressed()
  +bool isModifierPressed()
  +KeyboardSide? getModifierSide()
  +void debugFillProperties()
  +bool ==()
}

"services::raw_keyboard_ios::RawKeyEventDataIos" o-- "services::keyboard_key.g::PhysicalKeyboardKey"
"services::raw_keyboard_ios::RawKeyEventDataIos" o-- "services::keyboard_key.g::LogicalKeyboardKey"
"services::raw_keyboard::RawKeyEventData" <|-- "services::raw_keyboard_ios::RawKeyEventDataIos"

abstract class "services::system_sound::SystemSound" {
  {static} +Future<void> play()
}

class "services::system_sound::SystemSoundType" {
  +int index
  {static} +List<SystemSoundType> values
  {static} +SystemSoundType click
  {static} +SystemSoundType alert
}

"services::system_sound::SystemSoundType" o-- "services::system_sound::SystemSoundType"
"dart::core::Enum" <|-- "services::system_sound::SystemSoundType"

abstract class "services::system_navigator::SystemNavigator" {
  {static} +Future<void> setFrameworkHandlesBack()
  {static} +Future<void> pop()
  {static} +Future<void> selectSingleEntryHistory()
  {static} +Future<void> selectMultiEntryHistory()
  {static} +Future<void> routeInformationUpdated()
}

abstract class "services::haptic_feedback::HapticFeedback" {
  {static} +Future<void> vibrate()
  {static} +Future<void> lightImpact()
  {static} +Future<void> mediumImpact()
  {static} +Future<void> heavyImpact()
  {static} +Future<void> selectionClick()
}

class "services::clipboard::ClipboardData" {
  +String? text
}

abstract class "services::clipboard::Clipboard" {
  {static} +String kTextPlain
  {static} +Future<void> setData()
  {static} +Future<ClipboardData?> getData()
  {static} +Future<bool> hasStrings()
}

class "services::font_loader::FontLoader" {
  +String family
  -bool _loaded
  -List<Future<Uint8List>> _fontFutures
  +void addFont()
  +Future<void> load()
  #Future<void> loadFont()
}

class "services::text_input::TextInputType" {
  +int index
  +bool? signed
  +bool? decimal
  {static} +TextInputType text
  {static} +TextInputType multiline
  {static} +TextInputType number
  {static} +TextInputType phone
  {static} +TextInputType datetime
  {static} +TextInputType emailAddress
  {static} +TextInputType url
  {static} +TextInputType visiblePassword
  {static} +TextInputType name
  {static} +TextInputType streetAddress
  {static} +TextInputType none
  {static} +List<TextInputType> values
  {static} -List<String> _names
  -String _name
  +int hashCode
  +Map<String, dynamic> toJson()
  +String toString()
  +bool ==()
}

"services::text_input::TextInputType" o-- "services::text_input::TextInputType"

class "services::text_input::TextInputConfiguration" {
  +TextInputType inputType
  +bool readOnly
  +bool obscureText
  +bool autocorrect
  +AutofillConfiguration autofillConfiguration
  +SmartDashesType smartDashesType
  +SmartQuotesType smartQuotesType
  +bool enableSuggestions
  +bool enableInteractiveSelection
  +String? actionLabel
  +TextInputAction inputAction
  +TextCapitalization textCapitalization
  +Brightness keyboardAppearance
  +bool enableIMEPersonalizedLearning
  +List<String> allowedMimeTypes
  +bool enableDeltaModel
  +TextInputConfiguration copyWith()
  +Map<String, dynamic> toJson()
}

"services::text_input::TextInputConfiguration" o-- "services::text_input::TextInputType"
"services::text_input::TextInputConfiguration" o-- "services::autofill::AutofillConfiguration"
"services::text_input::TextInputConfiguration" o-- "services::text_input::SmartDashesType"
"services::text_input::TextInputConfiguration" o-- "services::text_input::SmartQuotesType"
"services::text_input::TextInputConfiguration" o-- "services::text_input::TextInputAction"
"services::text_input::TextInputConfiguration" o-- "services::text_input::TextCapitalization"
"services::text_input::TextInputConfiguration" o-- "dart::ui::Brightness"

class "services::text_input::RawFloatingCursorPoint" {
  +Offset? offset
  +FloatingCursorDragState state
}

"services::text_input::RawFloatingCursorPoint" o-- "dart::ui::Offset"
"services::text_input::RawFloatingCursorPoint" o-- "services::text_input::FloatingCursorDragState"

class "services::text_input::TextEditingValue" {
  +String text
  +TextSelection selection
  +TextRange composing
  {static} +TextEditingValue empty
  +bool isComposingRangeValid
  +int hashCode
  +TextEditingValue copyWith()
  +TextEditingValue replaced()
  +Map<String, dynamic> toJSON()
  +String toString()
  +bool ==()
  {static} -bool _textRangeIsValid()
}

"services::text_input::TextEditingValue" o-- "services::text_editing::TextSelection"
"services::text_input::TextEditingValue" o-- "dart::ui::TextRange"
"services::text_input::TextEditingValue" o-- "services::text_input::TextEditingValue"

abstract class "services::text_input::ScribbleClient" {
  +String elementIdentifier
  +Rect bounds
  +void onScribbleFocus()
  +bool isInScribbleRect()
}

"services::text_input::ScribbleClient" o-- "dart::ui::Rect"

class "services::text_input::SelectionRect" {
  +int position
  +Rect bounds
  +TextDirection direction
  +int hashCode
  +bool ==()
  +String toString()
}

"services::text_input::SelectionRect" o-- "dart::ui::Rect"
"services::text_input::SelectionRect" o-- "dart::ui::TextDirection"

class "services::text_input::TextInputConnection" {
  -Size? _cachedSize
  -Matrix4? _cachedTransform
  -Rect? _cachedRect
  -Rect? _cachedCaretRect
  -List<SelectionRect> _cachedSelectionRects
  {static} -int _nextId
  -int _id
  -TextInputClient _client
  +bool attached
  +bool scribbleInProgress
  {static} +void debugResetId()
  +void show()
  +void requestAutofill()
  +void updateConfig()
  +void setEditingState()
  +void setEditableSizeAndTransform()
  +void setComposingRect()
  +void setCaretRect()
  +void setSelectionRects()
  +void setStyle()
  +void close()
  +void connectionClosedReceived()
}

"services::text_input::TextInputConnection" o-- "dart::ui::Size"
"services::text_input::TextInputConnection" o-- "vector_math::vector_math_64::Matrix4"
"services::text_input::TextInputConnection" o-- "dart::ui::Rect"
"services::text_input::TextInputConnection" o-- "services::text_input::TextInputClient"

class "services::text_input::TextInput" {
  {static} -TextInput _instance
  -TextInputControl? _currentControl
  -Set<TextInputControl> _inputControls
  {static} -List<TextInputAction> _androidSupportedInputActions
  {static} -List<TextInputAction> _iOSSupportedInputActions
  -MethodChannel _channel
  -TextInputConnection? _currentConnection
  -TextInputConfiguration _currentConfiguration
  -Map<String, ScribbleClient> _scribbleClients
  -bool _scribbleInProgress
  -bool _hidePending
  {static} +Map<String, ScribbleClient> scribbleClients
  +bool scribbleInProgress
  {static} +void setChannel()
  {static} -void _addInputControl()
  {static} -void _removeInputControl()
  {static} +void setInputControl()
  {static} +void restorePlatformInputControl()
  {static} +void ensureInitialized()
  {static} +TextInputConnection attach()
  -void _attach()
  {static} -bool _debugEnsureInputActionWorksOnPlatform()
  -Future<dynamic> _loudlyHandleTextInputInvocation()
  -Future<dynamic> _handleTextInputInvocation()
  -void _scheduleHide()
  -void _setClient()
  -void _clearClient()
  -void _updateConfig()
  -void _setEditingState()
  -void _show()
  -void _hide()
  -void _setEditableSizeAndTransform()
  -void _setComposingTextRect()
  -void _setCaretRect()
  -void _setSelectionRects()
  -void _setStyle()
  -void _requestAutofill()
  -void _updateEditingValue()
  {static} +void updateEditingValue()
  {static} +void finishAutofillContext()
  {static} +void registerScribbleElement()
  {static} +void unregisterScribbleElement()
}

"services::text_input::TextInput" o-- "services::text_input::TextInput"
"services::text_input::TextInput" o-- "services::text_input::TextInputControl"
"services::text_input::TextInput" o-- "services::platform_channel::MethodChannel"
"services::text_input::TextInput" o-- "services::text_input::TextInputConnection"
"services::text_input::TextInput" o-- "services::text_input::TextInputConfiguration"

class "services::text_input::_PlatformTextInputControl" {
  {static} +_PlatformTextInputControl instance
  -MethodChannel _channel
  -Map<String, dynamic> _configurationToJson()
  +void attach()
  +void detach()
  +void updateConfig()
  +void setEditingState()
  +void show()
  +void hide()
  +void setEditableSizeAndTransform()
  +void setComposingRect()
  +void setCaretRect()
  +void setSelectionRects()
  +void setStyle()
  +void requestAutofill()
  +void finishAutofillContext()
}

"services::text_input::_PlatformTextInputControl" o-- "services::text_input::_PlatformTextInputControl"
"services::text_input::_PlatformTextInputControl" o-- "services::platform_channel::MethodChannel"
"services::text_input::TextInputControl" <|-- "services::text_input::_PlatformTextInputControl"

class "services::text_input::SmartDashesType" {
  +int index
  {static} +List<SmartDashesType> values
  {static} +SmartDashesType disabled
  {static} +SmartDashesType enabled
}

"services::text_input::SmartDashesType" o-- "services::text_input::SmartDashesType"
"dart::core::Enum" <|-- "services::text_input::SmartDashesType"

class "services::text_input::SmartQuotesType" {
  +int index
  {static} +List<SmartQuotesType> values
  {static} +SmartQuotesType disabled
  {static} +SmartQuotesType enabled
}

"services::text_input::SmartQuotesType" o-- "services::text_input::SmartQuotesType"
"dart::core::Enum" <|-- "services::text_input::SmartQuotesType"

class "services::text_input::TextInputAction" {
  +int index
  {static} +List<TextInputAction> values
  {static} +TextInputAction none
  {static} +TextInputAction unspecified
  {static} +TextInputAction done
  {static} +TextInputAction go
  {static} +TextInputAction search
  {static} +TextInputAction send
  {static} +TextInputAction next
  {static} +TextInputAction previous
  {static} +TextInputAction continueAction
  {static} +TextInputAction join
  {static} +TextInputAction route
  {static} +TextInputAction emergencyCall
  {static} +TextInputAction newline
}

"services::text_input::TextInputAction" o-- "services::text_input::TextInputAction"
"dart::core::Enum" <|-- "services::text_input::TextInputAction"

class "services::text_input::TextCapitalization" {
  +int index
  {static} +List<TextCapitalization> values
  {static} +TextCapitalization words
  {static} +TextCapitalization sentences
  {static} +TextCapitalization characters
  {static} +TextCapitalization none
}

"services::text_input::TextCapitalization" o-- "services::text_input::TextCapitalization"
"dart::core::Enum" <|-- "services::text_input::TextCapitalization"

class "services::text_input::FloatingCursorDragState" {
  +int index
  {static} +List<FloatingCursorDragState> values
  {static} +FloatingCursorDragState Start
  {static} +FloatingCursorDragState Update
  {static} +FloatingCursorDragState End
}

"services::text_input::FloatingCursorDragState" o-- "services::text_input::FloatingCursorDragState"
"dart::core::Enum" <|-- "services::text_input::FloatingCursorDragState"

class "services::text_input::SelectionChangedCause" {
  +int index
  {static} +List<SelectionChangedCause> values
  {static} +SelectionChangedCause tap
  {static} +SelectionChangedCause doubleTap
  {static} +SelectionChangedCause longPress
  {static} +SelectionChangedCause forcePress
  {static} +SelectionChangedCause keyboard
  {static} +SelectionChangedCause toolbar
  {static} +SelectionChangedCause drag
  {static} +SelectionChangedCause scribble
}

"services::text_input::SelectionChangedCause" o-- "services::text_input::SelectionChangedCause"
"dart::core::Enum" <|-- "services::text_input::SelectionChangedCause"

abstract class "services::text_input::TextSelectionDelegate" {
  +TextEditingValue textEditingValue
  +bool cutEnabled
  +bool copyEnabled
  +bool pasteEnabled
  +bool selectAllEnabled
  +bool lookUpEnabled
  +bool searchWebEnabled
  +bool shareEnabled
  +bool liveTextInputEnabled
  +void userUpdateTextEditingValue()
  +void hideToolbar()
  +void bringIntoView()
  +void cutSelection()
  +Future<void> pasteText()
  +void selectAll()
  +void copySelection()
}

"services::text_input::TextSelectionDelegate" o-- "services::text_input::TextEditingValue"

abstract class "services::text_input::TextInputClient" {
  +TextEditingValue? currentTextEditingValue
  +AutofillScope? currentAutofillScope
  +void updateEditingValue()
  +void performAction()
  +void insertContent()
  +void performPrivateCommand()
  +void updateFloatingCursor()
  +void showAutocorrectionPromptRect()
  +void connectionClosed()
  +void didChangeInputControl()
  +void showToolbar()
  +void insertTextPlaceholder()
  +void removeTextPlaceholder()
  +void performSelector()
}

"services::text_input::TextInputClient" o-- "services::text_input::TextEditingValue"
"services::text_input::TextInputClient" o-- "services::autofill::AutofillScope"

abstract class "services::text_input::DeltaTextInputClient" {
  +void updateEditingValueWithDeltas()
}

"services::text_input::TextInputClient" <|-- "services::text_input::DeltaTextInputClient"

abstract class "services::text_input::TextInputControl" {
  +void attach()
  +void detach()
  +void show()
  +void hide()
  +void updateConfig()
  +void setEditingState()
  +void setEditableSizeAndTransform()
  +void setComposingRect()
  +void setCaretRect()
  +void setSelectionRects()
  +void setStyle()
  +void requestAutofill()
  +void finishAutofillContext()
}

abstract class "services::asset_bundle::AssetBundle" {
  +Future<ByteData> load()
  +Future<ImmutableBuffer> loadBuffer()
  +Future<String> loadString()
  {static} -String _utf8decode()
  +Future<T> loadStructuredData()
  +Future<T> loadStructuredBinaryData()
  +void evict()
  +void clear()
  +String toString()
}

class "services::asset_bundle::NetworkAssetBundle" {
  -Uri _baseUrl
  -HttpClient _httpClient
  -Uri _urlFromKey()
  +Future<ByteData> load()
  +String toString()
}

"services::asset_bundle::NetworkAssetBundle" o-- "dart::_http::HttpClient"
"services::asset_bundle::AssetBundle" <|-- "services::asset_bundle::NetworkAssetBundle"

abstract class "services::asset_bundle::CachingAssetBundle" {
  -Map<String, Future<String>> _stringCache
  -Map<String, Future<dynamic>> _structuredDataCache
  -Map<String, Future<dynamic>> _structuredBinaryDataCache
  +Future<String> loadString()
  +Future<T> loadStructuredData()
  +Future<T> loadStructuredBinaryData()
  +void evict()
  +void clear()
  +Future<ImmutableBuffer> loadBuffer()
}

"services::asset_bundle::AssetBundle" <|-- "services::asset_bundle::CachingAssetBundle"

class "services::asset_bundle::PlatformAssetBundle" {
  +Future<ByteData> load()
  +Future<ImmutableBuffer> loadBuffer()
}

"services::asset_bundle::CachingAssetBundle" <|-- "services::asset_bundle::PlatformAssetBundle"

abstract class "services::text_formatter::TextInputFormatter" {
  +TextEditingValue formatEditUpdate()
  {static} +TextInputFormatter withFunction()
}

class "services::text_formatter::_SimpleTextInputFormatter" {
  +TextEditingValue Function(TextEditingValue, TextEditingValue) formatFunction
  +TextEditingValue formatEditUpdate()
}

"services::text_formatter::_SimpleTextInputFormatter" o-- "services::text_formatter::TextEditingValue Function(TextEditingValue, TextEditingValue)"
"services::text_formatter::TextInputFormatter" <|-- "services::text_formatter::_SimpleTextInputFormatter"

class "services::text_formatter::_MutableTextRange" {
  +int base
  +int extent
  {static} +_MutableTextRange? fromComposingRange()
  {static} +_MutableTextRange? fromTextSelection()
}

class "services::text_formatter::_TextEditingValueAccumulator" {
  +TextEditingValue inputValue
  +StringBuffer stringBuffer
  +_MutableTextRange? selection
  +_MutableTextRange? composingRegion
  +bool debugFinalized
  +TextEditingValue finalize()
}

"services::text_formatter::_TextEditingValueAccumulator" o-- "services::text_input::TextEditingValue"
"services::text_formatter::_TextEditingValueAccumulator" o-- "services::text_formatter::_MutableTextRange"

class "services::text_formatter::FilteringTextInputFormatter" {
  +Pattern filterPattern
  +bool allow
  +String replacementString
  {static} +TextInputFormatter singleLineFormatter
  {static} +TextInputFormatter digitsOnly
  +TextEditingValue formatEditUpdate()
  -void _processRegion()
}

"services::text_formatter::FilteringTextInputFormatter" o-- "services::text_formatter::TextInputFormatter"
"services::text_formatter::TextInputFormatter" <|-- "services::text_formatter::FilteringTextInputFormatter"

class "services::text_formatter::LengthLimitingTextInputFormatter" {
  +int? maxLength
  +MaxLengthEnforcement? maxLengthEnforcement
  {static} +MaxLengthEnforcement getDefaultMaxLengthEnforcement()
  {static} +TextEditingValue truncate()
  +TextEditingValue formatEditUpdate()
}

"services::text_formatter::LengthLimitingTextInputFormatter" o-- "services::text_formatter::MaxLengthEnforcement"
"services::text_formatter::TextInputFormatter" <|-- "services::text_formatter::LengthLimitingTextInputFormatter"

class "services::text_formatter::MaxLengthEnforcement" {
  +int index
  {static} +List<MaxLengthEnforcement> values
  {static} +MaxLengthEnforcement none
  {static} +MaxLengthEnforcement enforced
  {static} +MaxLengthEnforcement truncateAfterCompositionEnds
}

"services::text_formatter::MaxLengthEnforcement" o-- "services::text_formatter::MaxLengthEnforcement"
"dart::core::Enum" <|-- "services::text_formatter::MaxLengthEnforcement"

class "services::raw_keyboard_macos::RawKeyEventDataMacOs" {
  +String characters
  +String charactersIgnoringModifiers
  +int keyCode
  +int modifiers
  +int? specifiedLogicalKey
  {static} +int modifierCapsLock
  {static} +int modifierShift
  {static} +int modifierLeftShift
  {static} +int modifierRightShift
  {static} +int modifierControl
  {static} +int modifierLeftControl
  {static} +int modifierRightControl
  {static} +int modifierOption
  {static} +int modifierLeftOption
  {static} +int modifierRightOption
  {static} +int modifierCommand
  {static} +int modifierLeftCommand
  {static} +int modifierRightCommand
  {static} +int modifierNumericPad
  {static} +int modifierHelp
  {static} +int modifierFunction
  {static} +int deviceIndependentMask
  +String keyLabel
  +PhysicalKeyboardKey physicalKey
  +LogicalKeyboardKey logicalKey
  +int hashCode
  -bool _isLeftRightModifierPressed()
  +bool isModifierPressed()
  +KeyboardSide? getModifierSide()
  +bool shouldDispatchEvent()
  +void debugFillProperties()
  +bool ==()
  {static} -bool _isUnprintableKey()
}

"services::raw_keyboard_macos::RawKeyEventDataMacOs" o-- "services::keyboard_key.g::PhysicalKeyboardKey"
"services::raw_keyboard_macos::RawKeyEventDataMacOs" o-- "services::keyboard_key.g::LogicalKeyboardKey"
"services::raw_keyboard::RawKeyEventData" <|-- "services::raw_keyboard_macos::RawKeyEventDataMacOs"

class "services::_background_isolate_binary_messenger_web::BackgroundIsolateBinaryMessenger" {
  {static} +BinaryMessenger instance
}

"services::_background_isolate_binary_messenger_web::BackgroundIsolateBinaryMessenger" o-- "services::binary_messenger::BinaryMessenger"

class "services::undo_manager::UndoManager" {
  {static} -UndoManager _instance
  -dynamic _channel
  -UndoManagerClient? _currentClient
  {static} +UndoManagerClient? client
  {static} +void setChannel()
  {static} +void setUndoState()
  -Future<dynamic> _handleUndoManagerInvocation()
  -void _setUndoState()
  -UndoDirection _toUndoDirection()
}

"services::undo_manager::UndoManager" o-- "services::undo_manager::UndoManager"
"services::undo_manager::UndoManager" o-- "services::undo_manager::UndoManagerClient"

class "services::undo_manager::UndoDirection" {
  +int index
  {static} +List<UndoDirection> values
  {static} +UndoDirection undo
  {static} +UndoDirection redo
}

"services::undo_manager::UndoDirection" o-- "services::undo_manager::UndoDirection"
"dart::core::Enum" <|-- "services::undo_manager::UndoDirection"

abstract class "services::undo_manager::UndoManagerClient" {
  +bool canUndo
  +bool canRedo
  +void handlePlatformUndo()
  +void undo()
  +void redo()
}

class "services::keyboard_inserted_content::KeyboardInsertedContent" {
  +String mimeType
  +String uri
  +Uint8List? data
  +bool hasData
  +int hashCode
  +String toString()
  +bool ==()
}

"services::keyboard_inserted_content::KeyboardInsertedContent" o-- "dart::typed_data::Uint8List"

class "services::system_chrome::ApplicationSwitcherDescription" {
  +String? label
  +int? primaryColor
}

class "services::system_chrome::SystemUiOverlayStyle" {
  +Color? systemNavigationBarColor
  +Color? systemNavigationBarDividerColor
  +Brightness? systemNavigationBarIconBrightness
  +bool? systemNavigationBarContrastEnforced
  +Color? statusBarColor
  +Brightness? statusBarBrightness
  +Brightness? statusBarIconBrightness
  +bool? systemStatusBarContrastEnforced
  {static} +SystemUiOverlayStyle light
  {static} +SystemUiOverlayStyle dark
  +int hashCode
  -Map<String, dynamic> _toMap()
  +String toString()
  +SystemUiOverlayStyle copyWith()
  +bool ==()
}

"services::system_chrome::SystemUiOverlayStyle" o-- "dart::ui::Color"
"services::system_chrome::SystemUiOverlayStyle" o-- "dart::ui::Brightness"
"services::system_chrome::SystemUiOverlayStyle" o-- "services::system_chrome::SystemUiOverlayStyle"

abstract class "services::system_chrome::SystemChrome" {
  {static} -SystemUiOverlayStyle? _pendingStyle
  {static} -SystemUiOverlayStyle? _latestStyle
  {static} +SystemUiOverlayStyle? latestStyle
  {static} +Future<void> setPreferredOrientations()
  {static} +Future<void> setApplicationSwitcherDescription()
  {static} +Future<void> setEnabledSystemUIMode()
  {static} +Future<void> setSystemUIChangeCallback()
  {static} +Future<void> restoreSystemUIOverlays()
  {static} +void setSystemUIOverlayStyle()
}

"services::system_chrome::SystemChrome" o-- "services::system_chrome::SystemUiOverlayStyle"

class "services::system_chrome::DeviceOrientation" {
  +int index
  {static} +List<DeviceOrientation> values
  {static} +DeviceOrientation portraitUp
  {static} +DeviceOrientation landscapeLeft
  {static} +DeviceOrientation portraitDown
  {static} +DeviceOrientation landscapeRight
}

"services::system_chrome::DeviceOrientation" o-- "services::system_chrome::DeviceOrientation"
"dart::core::Enum" <|-- "services::system_chrome::DeviceOrientation"

class "services::system_chrome::SystemUiOverlay" {
  +int index
  {static} +List<SystemUiOverlay> values
  {static} +SystemUiOverlay top
  {static} +SystemUiOverlay bottom
}

"services::system_chrome::SystemUiOverlay" o-- "services::system_chrome::SystemUiOverlay"
"dart::core::Enum" <|-- "services::system_chrome::SystemUiOverlay"

class "services::system_chrome::SystemUiMode" {
  +int index
  {static} +List<SystemUiMode> values
  {static} +SystemUiMode leanBack
  {static} +SystemUiMode immersive
  {static} +SystemUiMode immersiveSticky
  {static} +SystemUiMode edgeToEdge
  {static} +SystemUiMode manual
}

"services::system_chrome::SystemUiMode" o-- "services::system_chrome::SystemUiMode"
"dart::core::Enum" <|-- "services::system_chrome::SystemUiMode"

abstract class "services::text_boundary::TextBoundary" {
  +int? getLeadingTextBoundaryAt()
  +int? getTrailingTextBoundaryAt()
  +TextRange getTextBoundaryAt()
}

class "services::text_boundary::CharacterBoundary" {
  -String _text
  +int? getLeadingTextBoundaryAt()
  +int? getTrailingTextBoundaryAt()
  +TextRange getTextBoundaryAt()
}

"services::text_boundary::TextBoundary" <|-- "services::text_boundary::CharacterBoundary"

class "services::text_boundary::LineBoundary" {
  -TextLayoutMetrics _textLayout
  +TextRange getTextBoundaryAt()
}

"services::text_boundary::LineBoundary" o-- "services::text_layout_metrics::TextLayoutMetrics"
"services::text_boundary::TextBoundary" <|-- "services::text_boundary::LineBoundary"

class "services::text_boundary::ParagraphBoundary" {
  -String _text
  +int? getLeadingTextBoundaryAt()
  +int? getTrailingTextBoundaryAt()
}

"services::text_boundary::TextBoundary" <|-- "services::text_boundary::ParagraphBoundary"

class "services::text_boundary::DocumentBoundary" {
  -String _text
  +int? getLeadingTextBoundaryAt()
  +int? getTrailingTextBoundaryAt()
}

"services::text_boundary::TextBoundary" <|-- "services::text_boundary::DocumentBoundary"

abstract class "services::asset_manifest::AssetManifest" {
  {static} +Future<AssetManifest> loadFromAssetBundle()
  +List<String> listAssets()
  +List<AssetMetadata>? getAssetVariants()
}

class "services::asset_manifest::_AssetManifestBin" {
  -Map<Object?, Object?> _data
  -Map<String, List<AssetMetadata>> _typeCastedData
  +List<AssetMetadata>? getAssetVariants()
  +List<String> listAssets()
}

"services::asset_manifest::AssetManifest" <|-- "services::asset_manifest::_AssetManifestBin"

class "services::asset_manifest::AssetMetadata" {
  +double? targetDevicePixelRatio
  +String key
  +bool main
}

abstract class "services::system_channels::SystemChannels" {
  {static} +MethodChannel navigation
  {static} +MethodChannel platform
  {static} +MethodChannel textInput
  {static} +MethodChannel spellCheck
  {static} +MethodChannel undoManager
  {static} +BasicMessageChannel<Object?> keyEvent
  {static} +BasicMessageChannel<String?> lifecycle
  {static} +BasicMessageChannel<Object?> system
  {static} +BasicMessageChannel<Object?> accessibility
  {static} +MethodChannel platform_views
  {static} +MethodChannel skia
  {static} +MethodChannel mouseCursor
  {static} +MethodChannel restoration
  {static} +MethodChannel deferredComponent
  {static} +MethodChannel localization
  {static} +MethodChannel menu
  {static} +MethodChannel contextMenu
  {static} +MethodChannel keyboard
}

"services::system_channels::SystemChannels" o-- "services::platform_channel::MethodChannel"
"services::system_channels::SystemChannels" o-- "services::platform_channel::BasicMessageChannel<Object>"
"services::system_channels::SystemChannels" o-- "services::platform_channel::BasicMessageChannel<String>"

class "services::raw_keyboard_fuchsia::RawKeyEventDataFuchsia" {
  +int hidUsage
  +int codePoint
  +int modifiers
  {static} +int modifierNone
  {static} +int modifierCapsLock
  {static} +int modifierLeftShift
  {static} +int modifierRightShift
  {static} +int modifierShift
  {static} +int modifierLeftControl
  {static} +int modifierRightControl
  {static} +int modifierControl
  {static} +int modifierLeftAlt
  {static} +int modifierRightAlt
  {static} +int modifierAlt
  {static} +int modifierLeftMeta
  {static} +int modifierRightMeta
  {static} +int modifierMeta
  +String keyLabel
  +LogicalKeyboardKey logicalKey
  +PhysicalKeyboardKey physicalKey
  +int hashCode
  -bool _isLeftRightModifierPressed()
  +bool isModifierPressed()
  +KeyboardSide? getModifierSide()
  +void debugFillProperties()
  +bool ==()
}

"services::raw_keyboard_fuchsia::RawKeyEventDataFuchsia" o-- "services::keyboard_key.g::LogicalKeyboardKey"
"services::raw_keyboard_fuchsia::RawKeyEventDataFuchsia" o-- "services::keyboard_key.g::PhysicalKeyboardKey"
"services::raw_keyboard::RawKeyEventData" <|-- "services::raw_keyboard_fuchsia::RawKeyEventDataFuchsia"

class "services::raw_keyboard_windows::RawKeyEventDataWindows" {
  +int keyCode
  +int scanCode
  +int characterCodePoint
  +int modifiers
  {static} +int modifierShift
  {static} +int modifierLeftShift
  {static} +int modifierRightShift
  {static} +int modifierControl
  {static} +int modifierLeftControl
  {static} +int modifierRightControl
  {static} +int modifierAlt
  {static} +int modifierLeftAlt
  {static} +int modifierRightAlt
  {static} +int modifierLeftMeta
  {static} +int modifierRightMeta
  {static} +int modifierCaps
  {static} +int modifierNumLock
  {static} +int modifierScrollLock
  +String keyLabel
  +PhysicalKeyboardKey physicalKey
  +LogicalKeyboardKey logicalKey
  +int hashCode
  -bool _isLeftRightModifierPressed()
  +bool isModifierPressed()
  +KeyboardSide? getModifierSide()
  +bool shouldDispatchEvent()
  +void debugFillProperties()
  +bool ==()
}

"services::raw_keyboard_windows::RawKeyEventDataWindows" o-- "services::keyboard_key.g::PhysicalKeyboardKey"
"services::raw_keyboard_windows::RawKeyEventDataWindows" o-- "services::keyboard_key.g::LogicalKeyboardKey"
"services::raw_keyboard::RawKeyEventData" <|-- "services::raw_keyboard_windows::RawKeyEventDataWindows"

abstract class "services::raw_keyboard::RawKeyEventData" {
  +bool isControlPressed
  +bool isShiftPressed
  +bool isAltPressed
  +bool isMetaPressed
  +Map<ModifierKey, KeyboardSide> modifiersPressed
  +PhysicalKeyboardKey physicalKey
  +LogicalKeyboardKey logicalKey
  +String keyLabel
  +bool isModifierPressed()
  +KeyboardSide? getModifierSide()
  +bool shouldDispatchEvent()
}

"services::raw_keyboard::RawKeyEventData" o-- "services::keyboard_key.g::PhysicalKeyboardKey"
"services::raw_keyboard::RawKeyEventData" o-- "services::keyboard_key.g::LogicalKeyboardKey"
"foundation::diagnostics::Diagnosticable" <|-- "services::raw_keyboard::RawKeyEventData"

abstract class "services::raw_keyboard::RawKeyEvent" {
  +String? character
  +bool repeat
  +RawKeyEventData data
  +bool isControlPressed
  +bool isShiftPressed
  +bool isAltPressed
  +bool isMetaPressed
  +PhysicalKeyboardKey physicalKey
  +LogicalKeyboardKey logicalKey
  +bool isKeyPressed()
  +void debugFillProperties()
}

"services::raw_keyboard::RawKeyEvent" o-- "services::raw_keyboard::RawKeyEventData"
"services::raw_keyboard::RawKeyEvent" o-- "services::keyboard_key.g::PhysicalKeyboardKey"
"services::raw_keyboard::RawKeyEvent" o-- "services::keyboard_key.g::LogicalKeyboardKey"
"foundation::diagnostics::Diagnosticable" <|-- "services::raw_keyboard::RawKeyEvent"

class "services::raw_keyboard::RawKeyDownEvent" {
}

"services::raw_keyboard::RawKeyEvent" <|-- "services::raw_keyboard::RawKeyDownEvent"

class "services::raw_keyboard::RawKeyUpEvent" {
}

"services::raw_keyboard::RawKeyEvent" <|-- "services::raw_keyboard::RawKeyUpEvent"

class "services::raw_keyboard::RawKeyboard" {
  {static} +RawKeyboard instance
  -List<void Function(RawKeyEvent)> _listeners
  -bool Function(RawKeyEvent)? _cachedKeyEventHandler
  -bool Function(KeyMessage)? _cachedKeyMessageHandler
  {static} -Map<_ModifierSidePair, Set<PhysicalKeyboardKey>> _modifierKeyMap
  {static} -Map<PhysicalKeyboardKey, LogicalKeyboardKey> _allModifiersExceptFn
  {static} -Map<PhysicalKeyboardKey, LogicalKeyboardKey> _allModifiers
  -Map<PhysicalKeyboardKey, LogicalKeyboardKey> _keysPressed
  +bool Function(RawKeyEvent)? keyEventHandler
  +Set<LogicalKeyboardKey> keysPressed
  +Set<PhysicalKeyboardKey> physicalKeysPressed
  +void addListener()
  +void removeListener()
  +bool handleRawKeyEvent()
  -void _synchronizeModifiers()
  +LogicalKeyboardKey? lookUpLayout()
  +void clearKeysPressed()
}

"services::raw_keyboard::RawKeyboard" o-- "services::raw_keyboard::RawKeyboard"
"services::raw_keyboard::RawKeyboard" o-- "services::raw_keyboard::bool Function(RawKeyEvent)"
"services::raw_keyboard::RawKeyboard" o-- "services::hardware_keyboard::bool Function(KeyMessage)"

class "services::raw_keyboard::_ModifierSidePair" {
  +ModifierKey modifier
  +KeyboardSide? side
  +int hashCode
  +bool ==()
}

"services::raw_keyboard::_ModifierSidePair" o-- "services::raw_keyboard::ModifierKey"
"services::raw_keyboard::_ModifierSidePair" o-- "services::raw_keyboard::KeyboardSide"

class "services::raw_keyboard::KeyboardSide" {
  +int index
  {static} +List<KeyboardSide> values
  {static} +KeyboardSide any
  {static} +KeyboardSide left
  {static} +KeyboardSide right
  {static} +KeyboardSide all
}

"services::raw_keyboard::KeyboardSide" o-- "services::raw_keyboard::KeyboardSide"
"dart::core::Enum" <|-- "services::raw_keyboard::KeyboardSide"

class "services::raw_keyboard::ModifierKey" {
  +int index
  {static} +List<ModifierKey> values
  {static} +ModifierKey controlModifier
  {static} +ModifierKey shiftModifier
  {static} +ModifierKey altModifier
  {static} +ModifierKey metaModifier
  {static} +ModifierKey capsLockModifier
  {static} +ModifierKey numLockModifier
  {static} +ModifierKey scrollLockModifier
  {static} +ModifierKey functionModifier
  {static} +ModifierKey symbolModifier
}

"services::raw_keyboard::ModifierKey" o-- "services::raw_keyboard::ModifierKey"
"dart::core::Enum" <|-- "services::raw_keyboard::ModifierKey"

class "services::platform_views::PlatformViewsRegistry" {
  -int _nextPlatformViewId
  +int getNextPlatformViewId()
}

class "services::platform_views::PlatformViewsService" {
  {static} -PlatformViewsService _instance
  -Map<int, void Function()> _focusCallbacks
  -Future<void> _onMethodCall()
  {static} +AndroidViewController initAndroidView()
  {static} +SurfaceAndroidViewController initSurfaceAndroidView()
  {static} +ExpensiveAndroidViewController initExpensiveAndroidView()
  {static} +Future<UiKitViewController> initUiKitView()
  {static} +Future<AppKitViewController> initAppKitView()
}

"services::platform_views::PlatformViewsService" o-- "services::platform_views::PlatformViewsService"

class "services::platform_views::AndroidPointerProperties" {
  +int id
  +int toolType
  {static} +int kToolTypeUnknown
  {static} +int kToolTypeFinger
  {static} +int kToolTypeStylus
  {static} +int kToolTypeMouse
  {static} +int kToolTypeEraser
  -List<int> _asList()
  +String toString()
}

class "services::platform_views::AndroidPointerCoords" {
  +double orientation
  +double pressure
  +double size
  +double toolMajor
  +double toolMinor
  +double touchMajor
  +double touchMinor
  +double x
  +double y
  -List<double> _asList()
  +String toString()
}

class "services::platform_views::AndroidMotionEvent" {
  +int downTime
  +int eventTime
  +int action
  +int pointerCount
  +List<AndroidPointerProperties> pointerProperties
  +List<AndroidPointerCoords> pointerCoords
  +int metaState
  +int buttonState
  +double xPrecision
  +double yPrecision
  +int deviceId
  +int edgeFlags
  +int source
  +int flags
  +int motionEventId
  -List<dynamic> _asList()
  +String toString()
}

class "services::platform_views::_AndroidMotionEventConverter" {
  +Map<int, AndroidPointerCoords> pointerPositions
  +Map<int, AndroidPointerProperties> pointerProperties
  +Set<int> usedAndroidPointerIds
  +Offset Function(Offset) pointTransformer
  +int? downTimeMillis
  +void handlePointerDownEvent()
  +void updatePointerPositions()
  -void _remove()
  +void handlePointerUpEvent()
  +void handlePointerCancelEvent()
  +AndroidMotionEvent? toAndroidMotionEvent()
  +AndroidPointerProperties propertiesFor()
  +bool isSinglePointerAction()
}

"services::platform_views::_AndroidMotionEventConverter" o-- "services::platform_views::Offset Function(Offset)"

class "services::platform_views::_CreationParams" {
  +dynamic data
  +MessageCodec<dynamic> codec
}

"services::platform_views::_CreationParams" o-- "services::message_codec::MessageCodec<dynamic>"

abstract class "services::platform_views::AndroidViewController" {
  {static} +int kActionDown
  {static} +int kActionUp
  {static} +int kActionMove
  {static} +int kActionCancel
  {static} +int kActionPointerDown
  {static} +int kActionPointerUp
  {static} +int kAndroidLayoutDirectionLtr
  {static} +int kAndroidLayoutDirectionRtl
  +int viewId
  -String _viewType
  -_AndroidMotionEventConverter _motionEventConverter
  -TextDirection _layoutDirection
  -_AndroidViewState _state
  -_CreationParams? _creationParams
  -List<void Function(int)> _platformViewCreatedCallbacks
  -bool _createRequiresSize
  +bool awaitingCreation
  +int? textureId
  +bool requiresViewComposition
  +Offset Function(Offset) pointTransformer
  +bool isCreated
  +List<void Function(int)> createdCallbacks
  {static} -int _getAndroidDirection()
  {static} +int pointerAction()
  -Future<void> _sendDisposeMessage()
  -Future<void> _sendCreateMessage()
  -Future<Size> _sendResizeMessage()
  +Future<void> create()
  +Future<Size> setSize()
  +Future<void> setOffset()
  +Future<void> sendMotionEvent()
  +void addOnPlatformViewCreatedListener()
  +void removeOnPlatformViewCreatedListener()
  +Future<void> setLayoutDirection()
  +Future<void> dispatchPointerEvent()
  +Future<void> clearFocus()
  +Future<void> dispose()
}

"services::platform_views::AndroidViewController" o-- "services::platform_views::_AndroidMotionEventConverter"
"services::platform_views::AndroidViewController" o-- "dart::ui::TextDirection"
"services::platform_views::AndroidViewController" o-- "services::platform_views::_AndroidViewState"
"services::platform_views::AndroidViewController" o-- "services::platform_views::_CreationParams"
"services::platform_views::AndroidViewController" o-- "services::platform_views::Offset Function(Offset)"
"services::platform_views::PlatformViewController" <|-- "services::platform_views::AndroidViewController"

class "services::platform_views::SurfaceAndroidViewController" {
  -_AndroidViewControllerInternals _internals
  -bool _createRequiresSize
  +int? textureId
  +bool requiresViewComposition
  -Future<bool> _sendCreateMessage()
  -Future<void> _sendDisposeMessage()
  -Future<Size> _sendResizeMessage()
  +Future<void> setOffset()
}

"services::platform_views::SurfaceAndroidViewController" o-- "services::platform_views::_AndroidViewControllerInternals"
"services::platform_views::AndroidViewController" <|-- "services::platform_views::SurfaceAndroidViewController"

class "services::platform_views::ExpensiveAndroidViewController" {
  -_AndroidViewControllerInternals _internals
  -bool _createRequiresSize
  +int? textureId
  +bool requiresViewComposition
  -Future<void> _sendCreateMessage()
  -Future<void> _sendDisposeMessage()
  -Future<Size> _sendResizeMessage()
  +Future<void> setOffset()
}

"services::platform_views::ExpensiveAndroidViewController" o-- "services::platform_views::_AndroidViewControllerInternals"
"services::platform_views::AndroidViewController" <|-- "services::platform_views::ExpensiveAndroidViewController"

class "services::platform_views::TextureAndroidViewController" {
  -_TextureAndroidViewControllerInternals _internals
  -bool _createRequiresSize
  +int? textureId
  +bool requiresViewComposition
  -Future<void> _sendCreateMessage()
  -Future<void> _sendDisposeMessage()
  -Future<Size> _sendResizeMessage()
  +Future<void> setOffset()
}

"services::platform_views::TextureAndroidViewController" o-- "services::platform_views::_TextureAndroidViewControllerInternals"
"services::platform_views::AndroidViewController" <|-- "services::platform_views::TextureAndroidViewController"

abstract class "services::platform_views::_AndroidViewControllerInternals" {
  +int? textureId
  +bool requiresViewComposition
  {static} +Future<dynamic> sendCreateMessage()
  +Future<Size> setSize()
  +Future<void> setOffset()
  +Future<void> sendDisposeMessage()
}

class "services::platform_views::_TextureAndroidViewControllerInternals" {
  -Offset _offset
  +int? textureId
  +bool requiresViewComposition
  +Future<Size> setSize()
  +Future<void> setOffset()
  +Future<void> sendDisposeMessage()
}

"services::platform_views::_TextureAndroidViewControllerInternals" o-- "dart::ui::Offset"
"services::platform_views::_AndroidViewControllerInternals" <|-- "services::platform_views::_TextureAndroidViewControllerInternals"

class "services::platform_views::_HybridAndroidViewControllerInternals" {
  +int textureId
  +bool requiresViewComposition
  +Future<Size> setSize()
  +Future<void> setOffset()
  +Future<void> sendDisposeMessage()
}

"services::platform_views::_AndroidViewControllerInternals" <|-- "services::platform_views::_HybridAndroidViewControllerInternals"

abstract class "services::platform_views::DarwinPlatformViewController" {
  +int id
  -bool _debugDisposed
  -TextDirection _layoutDirection
  +Future<void> setLayoutDirection()
  +Future<void> acceptGesture()
  +Future<void> rejectGesture()
  +Future<void> dispose()
}

"services::platform_views::DarwinPlatformViewController" o-- "dart::ui::TextDirection"

class "services::platform_views::UiKitViewController" {
}

"services::platform_views::DarwinPlatformViewController" <|-- "services::platform_views::UiKitViewController"

class "services::platform_views::AppKitViewController" {
}

"services::platform_views::DarwinPlatformViewController" <|-- "services::platform_views::AppKitViewController"

abstract class "services::platform_views::PlatformViewController" {
  +int viewId
  +bool awaitingCreation
  +Future<void> dispatchPointerEvent()
  +Future<void> create()
  +Future<void> dispose()
  +Future<void> clearFocus()
}

class "services::platform_views::_AndroidViewState" {
  +int index
  {static} +List<_AndroidViewState> values
  {static} +_AndroidViewState waitingForSize
  {static} +_AndroidViewState creating
  {static} +_AndroidViewState created
  {static} +_AndroidViewState disposed
}

"services::platform_views::_AndroidViewState" o-- "services::platform_views::_AndroidViewState"
"dart::core::Enum" <|-- "services::platform_views::_AndroidViewState"

class "services::restoration::RestorationManager" {
  -RestorationBucket? _rootBucket
  -Completer<RestorationBucket?>? _pendingRootBucket
  -bool _rootBucketIsValid
  -bool _isReplacing
  -bool _debugDoingUpdate
  -bool _serializationScheduled
  -Set<RestorationBucket> _bucketsNeedingSerialization
  +Future<RestorationBucket?> rootBucket
  +bool isReplacing
  #void initChannels()
  -Future<void> _getRootBucketFromEngine()
  -void _parseAndHandleRestorationUpdateFromEngine()
  #void handleRestorationUpdateFromEngine()
  #Future<void> sendToEngine()
  -Future<void> _methodHandler()
  -Map<Object?, Object?>? _decodeRestorationData()
  -Uint8List _encodeRestorationData()
  #void scheduleSerializationFor()
  #void unscheduleSerializationFor()
  -void _doSerialization()
  +void flushData()
}

"services::restoration::RestorationManager" o-- "services::restoration::RestorationBucket"
"services::restoration::RestorationManager" o-- "dart::async::Completer<RestorationBucket>"
"foundation::change_notifier::ChangeNotifier" <|-- "services::restoration::RestorationManager"

class "services::restoration::RestorationBucket" {
  {static} -String _childrenMapKey
  {static} -String _valuesMapKey
  -Map<Object?, Object?> _rawData
  -Object? _debugOwner
  -RestorationManager? _manager
  -RestorationBucket? _parent
  -String _restorationId
  -Map<String, RestorationBucket> _claimedChildren
  -Map<String, List<RestorationBucket>> _childrenToAdd
  -bool _needsSerialization
  -bool _debugDisposed
  +Object? debugOwner
  +bool isReplacing
  +String restorationId
  -Map<Object?, Object?> _rawChildren
  -Map<Object?, Object?> _rawValues
  +P? read()
  +void write()
  +P? remove()
  +bool contains()
  +RestorationBucket claimChild()
  +void adoptChild()
  -void _dropChild()
  -void _markNeedsSerialization()
  +void finalize()
  -void _recursivelyUpdateManager()
  -void _updateManager()
  -bool _debugAssertIntegrity()
  -void _removeChildData()
  -void _addChildData()
  -void _finalizeAddChildData()
  -void _visitChildren()
  +void rename()
  +void dispose()
  +String toString()
  -bool _debugAssertNotDisposed()
}

"services::restoration::RestorationBucket" o-- "services::restoration::RestorationManager"
"services::restoration::RestorationBucket" o-- "services::restoration::RestorationBucket"

class "services::message_codecs::BinaryCodec" {
  +ByteData? decodeMessage()
  +ByteData? encodeMessage()
}

"services::message_codec::MessageCodec" <|-- "services::message_codecs::BinaryCodec"

class "services::message_codecs::StringCodec" {
  +String? decodeMessage()
  +ByteData? encodeMessage()
}

"services::message_codec::MessageCodec" <|-- "services::message_codecs::StringCodec"

class "services::message_codecs::JSONMessageCodec" {
  +ByteData? encodeMessage()
  +dynamic decodeMessage()
}

"services::message_codec::MessageCodec" <|-- "services::message_codecs::JSONMessageCodec"

class "services::message_codecs::JSONMethodCodec" {
  +ByteData encodeMethodCall()
  +MethodCall decodeMethodCall()
  +dynamic decodeEnvelope()
  +ByteData encodeSuccessEnvelope()
  +ByteData encodeErrorEnvelope()
}

"services::message_codec::MethodCodec" <|-- "services::message_codecs::JSONMethodCodec"

class "services::message_codecs::StandardMessageCodec" {
  {static} -int _valueNull
  {static} -int _valueTrue
  {static} -int _valueFalse
  {static} -int _valueInt32
  {static} -int _valueInt64
  {static} -int _valueLargeInt
  {static} -int _valueFloat64
  {static} -int _valueString
  {static} -int _valueUint8List
  {static} -int _valueInt32List
  {static} -int _valueInt64List
  {static} -int _valueFloat64List
  {static} -int _valueList
  {static} -int _valueMap
  {static} -int _valueFloat32List
  +ByteData? encodeMessage()
  +dynamic decodeMessage()
  +void writeValue()
  +Object? readValue()
  +Object? readValueOfType()
  +void writeSize()
  +int readSize()
}

"services::message_codec::MessageCodec" <|-- "services::message_codecs::StandardMessageCodec"

class "services::message_codecs::StandardMethodCodec" {
  +StandardMessageCodec messageCodec
  +ByteData encodeMethodCall()
  +MethodCall decodeMethodCall()
  +ByteData encodeSuccessEnvelope()
  +ByteData encodeErrorEnvelope()
  +dynamic decodeEnvelope()
}

"services::message_codecs::StandardMethodCodec" o-- "services::message_codecs::StandardMessageCodec"
"services::message_codec::MethodCodec" <|-- "services::message_codecs::StandardMethodCodec"

class "services::autofill::AutofillHints" {
  {static} +String addressCity
  {static} +String addressCityAndState
  {static} +String addressState
  {static} +String birthday
  {static} +String birthdayDay
  {static} +String birthdayMonth
  {static} +String birthdayYear
  {static} +String countryCode
  {static} +String countryName
  {static} +String creditCardExpirationDate
  {static} +String creditCardExpirationDay
  {static} +String creditCardExpirationMonth
  {static} +String creditCardExpirationYear
  {static} +String creditCardFamilyName
  {static} +String creditCardGivenName
  {static} +String creditCardMiddleName
  {static} +String creditCardName
  {static} +String creditCardNumber
  {static} +String creditCardSecurityCode
  {static} +String creditCardType
  {static} +String email
  {static} +String familyName
  {static} +String fullStreetAddress
  {static} +String gender
  {static} +String givenName
  {static} +String impp
  {static} +String jobTitle
  {static} +String language
  {static} +String location
  {static} +String middleInitial
  {static} +String middleName
  {static} +String name
  {static} +String namePrefix
  {static} +String nameSuffix
  {static} +String newPassword
  {static} +String newUsername
  {static} +String nickname
  {static} +String oneTimeCode
  {static} +String organizationName
  {static} +String password
  {static} +String photo
  {static} +String postalAddress
  {static} +String postalAddressExtended
  {static} +String postalAddressExtendedPostalCode
  {static} +String postalCode
  {static} +String streetAddressLevel1
  {static} +String streetAddressLevel2
  {static} +String streetAddressLevel3
  {static} +String streetAddressLevel4
  {static} +String streetAddressLine1
  {static} +String streetAddressLine2
  {static} +String streetAddressLine3
  {static} +String sublocality
  {static} +String telephoneNumber
  {static} +String telephoneNumberAreaCode
  {static} +String telephoneNumberCountryCode
  {static} +String telephoneNumberDevice
  {static} +String telephoneNumberExtension
  {static} +String telephoneNumberLocal
  {static} +String telephoneNumberLocalPrefix
  {static} +String telephoneNumberLocalSuffix
  {static} +String telephoneNumberNational
  {static} +String transactionAmount
  {static} +String transactionCurrency
  {static} +String url
  {static} +String username
}

class "services::autofill::AutofillConfiguration" {
  {static} +AutofillConfiguration disabled
  +bool enabled
  +String uniqueIdentifier
  +List<String> autofillHints
  +TextEditingValue currentEditingValue
  +String? hintText
  +Map<String, dynamic>? toJson()
}

"services::autofill::AutofillConfiguration" o-- "services::autofill::AutofillConfiguration"
"services::autofill::AutofillConfiguration" o-- "services::text_input::TextEditingValue"

abstract class "services::autofill::AutofillClient" {
  +String autofillId
  +TextInputConfiguration textInputConfiguration
  +void autofill()
}

"services::autofill::AutofillClient" o-- "services::text_input::TextInputConfiguration"

abstract class "services::autofill::AutofillScope" {
  +Iterable<AutofillClient> autofillClients
  +AutofillClient? getAutofillClient()
  +TextInputConnection attach()
}

class "services::autofill::_AutofillScopeTextInputConfiguration" {
  +Iterable<TextInputConfiguration> allConfigurations
  +Map<String, dynamic> toJson()
}

"services::text_input::TextInputConfiguration" <|-- "services::autofill::_AutofillScopeTextInputConfiguration"

abstract class "services::autofill::AutofillScopeMixin" {
  +TextInputConnection attach()
}

"services::autofill::AutofillScope" <|-- "services::autofill::AutofillScopeMixin"

abstract class "services::message_codec::MessageCodec" {
  +ByteData? encodeMessage()
  +T? decodeMessage()
}

class "services::message_codec::MethodCall" {
  +String method
  +dynamic arguments
  +String toString()
}

abstract class "services::message_codec::MethodCodec" {
  +ByteData encodeMethodCall()
  +MethodCall decodeMethodCall()
  +dynamic decodeEnvelope()
  +ByteData encodeSuccessEnvelope()
  +ByteData encodeErrorEnvelope()
}

class "services::message_codec::PlatformException" {
  +String code
  +String? message
  +dynamic details
  +String? stacktrace
  +String toString()
}

"dart::core::Exception" <|-- "services::message_codec::PlatformException"

class "services::message_codec::MissingPluginException" {
  +String? message
  +String toString()
}

"dart::core::Exception" <|-- "services::message_codec::MissingPluginException"

abstract class "services::deferred_component::DeferredComponent" {
  {static} +Future<void> installDeferredComponent()
  {static} +Future<void> uninstallDeferredComponent()
}

class "services::mouse_cursor::MouseCursorManager" {
  +MouseCursor fallbackMouseCursor
  -Map<int, MouseCursorSession> _lastSession
  +MouseCursor? debugDeviceActiveCursor()
  +void handleDeviceCursorUpdate()
}

"services::mouse_cursor::MouseCursorManager" o-- "services::mouse_cursor::MouseCursor"

abstract class "services::mouse_cursor::MouseCursorSession" {
  +MouseCursor cursor
  +int device
  #Future<void> activate()
  #void dispose()
}

"services::mouse_cursor::MouseCursorSession" o-- "services::mouse_cursor::MouseCursor"

abstract class "services::mouse_cursor::MouseCursor" {
  {static} +MouseCursor defer
  {static} +MouseCursor uncontrolled
  +String debugDescription
  #MouseCursorSession createSession()
  +String toString()
}

"services::mouse_cursor::MouseCursor" o-- "services::mouse_cursor::MouseCursor"
"foundation::diagnostics::Diagnosticable" <|-- "services::mouse_cursor::MouseCursor"

class "services::mouse_cursor::_DeferringMouseCursor" {
  +String debugDescription
  +MouseCursorSession createSession()
  {static} +MouseCursor? firstNonDeferred()
}

"services::mouse_cursor::MouseCursor" <|-- "services::mouse_cursor::_DeferringMouseCursor"

class "services::mouse_cursor::_NoopMouseCursorSession" {
  +Future<void> activate()
  +void dispose()
}

"services::mouse_cursor::MouseCursorSession" <|-- "services::mouse_cursor::_NoopMouseCursorSession"

class "services::mouse_cursor::_NoopMouseCursor" {
  +String debugDescription
  #_NoopMouseCursorSession createSession()
}

"services::mouse_cursor::MouseCursor" <|-- "services::mouse_cursor::_NoopMouseCursor"

class "services::mouse_cursor::_SystemMouseCursorSession" {
  +SystemMouseCursor cursor
  +Future<void> activate()
  +void dispose()
}

"services::mouse_cursor::_SystemMouseCursorSession" o-- "services::mouse_cursor::SystemMouseCursor"
"services::mouse_cursor::MouseCursorSession" <|-- "services::mouse_cursor::_SystemMouseCursorSession"

class "services::mouse_cursor::SystemMouseCursor" {
  +String kind
  +String debugDescription
  +int hashCode
  #MouseCursorSession createSession()
  +bool ==()
  +void debugFillProperties()
}

"services::mouse_cursor::MouseCursor" <|-- "services::mouse_cursor::SystemMouseCursor"

class "services::mouse_cursor::SystemMouseCursors" {
  {static} +SystemMouseCursor none
  {static} +SystemMouseCursor basic
  {static} +SystemMouseCursor click
  {static} +SystemMouseCursor forbidden
  {static} +SystemMouseCursor wait
  {static} +SystemMouseCursor progress
  {static} +SystemMouseCursor contextMenu
  {static} +SystemMouseCursor help
  {static} +SystemMouseCursor text
  {static} +SystemMouseCursor verticalText
  {static} +SystemMouseCursor cell
  {static} +SystemMouseCursor precise
  {static} +SystemMouseCursor move
  {static} +SystemMouseCursor grab
  {static} +SystemMouseCursor grabbing
  {static} +SystemMouseCursor noDrop
  {static} +SystemMouseCursor alias
  {static} +SystemMouseCursor copy
  {static} +SystemMouseCursor disappearing
  {static} +SystemMouseCursor allScroll
  {static} +SystemMouseCursor resizeLeftRight
  {static} +SystemMouseCursor resizeUpDown
  {static} +SystemMouseCursor resizeUpLeftDownRight
  {static} +SystemMouseCursor resizeUpRightDownLeft
  {static} +SystemMouseCursor resizeUp
  {static} +SystemMouseCursor resizeDown
  {static} +SystemMouseCursor resizeLeft
  {static} +SystemMouseCursor resizeRight
  {static} +SystemMouseCursor resizeUpLeft
  {static} +SystemMouseCursor resizeUpRight
  {static} +SystemMouseCursor resizeDownLeft
  {static} +SystemMouseCursor resizeDownRight
  {static} +SystemMouseCursor resizeColumn
  {static} +SystemMouseCursor resizeRow
  {static} +SystemMouseCursor zoomIn
  {static} +SystemMouseCursor zoomOut
}

"services::mouse_cursor::SystemMouseCursors" o-- "services::mouse_cursor::SystemMouseCursor"

abstract class "services::text_editing_delta::TextEditingDelta" {
  +String oldText
  +TextSelection selection
  +TextRange composing
  +TextEditingValue apply()
}

"services::text_editing_delta::TextEditingDelta" o-- "services::text_editing::TextSelection"
"services::text_editing_delta::TextEditingDelta" o-- "dart::ui::TextRange"
"foundation::diagnostics::Diagnosticable" <|-- "services::text_editing_delta::TextEditingDelta"

class "services::text_editing_delta::TextEditingDeltaInsertion" {
  +String textInserted
  +int insertionOffset
  +TextEditingValue apply()
  +void debugFillProperties()
}

"services::text_editing_delta::TextEditingDelta" <|-- "services::text_editing_delta::TextEditingDeltaInsertion"

class "services::text_editing_delta::TextEditingDeltaDeletion" {
  +TextRange deletedRange
  +String textDeleted
  +TextEditingValue apply()
  +void debugFillProperties()
}

"services::text_editing_delta::TextEditingDeltaDeletion" o-- "dart::ui::TextRange"
"services::text_editing_delta::TextEditingDelta" <|-- "services::text_editing_delta::TextEditingDeltaDeletion"

class "services::text_editing_delta::TextEditingDeltaReplacement" {
  +String replacementText
  +TextRange replacedRange
  +String textReplaced
  +TextEditingValue apply()
  +void debugFillProperties()
}

"services::text_editing_delta::TextEditingDeltaReplacement" o-- "dart::ui::TextRange"
"services::text_editing_delta::TextEditingDelta" <|-- "services::text_editing_delta::TextEditingDeltaReplacement"

class "services::text_editing_delta::TextEditingDeltaNonTextUpdate" {
  +TextEditingValue apply()
  +void debugFillProperties()
}

"services::text_editing_delta::TextEditingDelta" <|-- "services::text_editing_delta::TextEditingDeltaNonTextUpdate"

class "services::service_extensions::ServicesServiceExtensions" {
  +int index
  {static} +List<ServicesServiceExtensions> values
  {static} +ServicesServiceExtensions evict
}

"services::service_extensions::ServicesServiceExtensions" o-- "services::service_extensions::ServicesServiceExtensions"
"dart::core::Enum" <|-- "services::service_extensions::ServicesServiceExtensions"

class "services::binding::_DefaultBinaryMessenger" {
  +Future<void> handlePlatformMessage()
  +Future<ByteData?> send()
  +void setMessageHandler()
}

"services::binary_messenger::BinaryMessenger" <|-- "services::binding::_DefaultBinaryMessenger"

abstract class "services::binding::ServicesBinding" {
  {static} -ServicesBinding? _instance
  -HardwareKeyboard _keyboard
  -KeyEventManager _keyEventManager
  -BinaryMessenger _defaultBinaryMessenger
  -RestorationManager _restorationManager
  -Future<void> Function(bool)? _systemUiChangeCallback
  {static} +ServicesBinding instance
  +HardwareKeyboard keyboard
  +KeyEventManager keyEventManager
  +BinaryMessenger defaultBinaryMessenger
  {static} +dynamic rootIsolateToken
  +ChannelBuffers channelBuffers
  +RestorationManager restorationManager
  +void initInstances()
  -void _initKeyboard()
  #BinaryMessenger createBinaryMessenger()
  #void handleMemoryPressure()
  #Future<void> handleSystemMessage()
  #void initLicenses()
  -Stream<LicenseEntry> _addLicenses()
  {static} -List<LicenseEntry> _parseLicenses()
  +void initServiceExtensions()
  #void evict()
  #void readInitialLifecycleStateFromNativeWindow()
  -Future<String?> _handleLifecycleMessage()
  -List<AppLifecycleState> _generateStateTransitions()
  {static} -bool _debugVerifyLifecycleChange()
  -Future<dynamic> _handlePlatformMessage()
  {static} -AppLifecycleState? _parseAppLifecycleMessage()
  +Future<dynamic> handleRequestAppExit()
  +Future<dynamic> exitApplication()
  #RestorationManager createRestorationManager()
  +void setSystemUiChangeCallback()
  #Future<void> initializationComplete()
}

"services::binding::ServicesBinding" o-- "services::binding::ServicesBinding"
"services::binding::ServicesBinding" o-- "services::hardware_keyboard::HardwareKeyboard"
"services::binding::ServicesBinding" o-- "services::hardware_keyboard::KeyEventManager"
"services::binding::ServicesBinding" o-- "services::binary_messenger::BinaryMessenger"
"services::binding::ServicesBinding" o-- "services::restoration::RestorationManager"
"services::binding::ServicesBinding" o-- "services::binding::Future<void> Function(bool)"
"services::binding::ServicesBinding" o-- "dart::ui::ChannelBuffers"

abstract class "widgets::two_dimensional_scroll_view::TwoDimensionalScrollView" {
  +TwoDimensionalChildDelegate delegate
  +double? cacheExtent
  +DiagonalDragBehavior diagonalDragBehavior
  +bool? primary
  +Axis mainAxis
  +ScrollableDetails verticalDetails
  +ScrollableDetails horizontalDetails
  +DragStartBehavior dragStartBehavior
  +ScrollViewKeyboardDismissBehavior keyboardDismissBehavior
  +Clip clipBehavior
  +Widget buildViewport()
  +Widget build()
  +void debugFillProperties()
}

"widgets::two_dimensional_scroll_view::TwoDimensionalScrollView" o-- "widgets::scroll_delegate::TwoDimensionalChildDelegate"
"widgets::two_dimensional_scroll_view::TwoDimensionalScrollView" o-- "widgets::scrollable::DiagonalDragBehavior"
"widgets::two_dimensional_scroll_view::TwoDimensionalScrollView" o-- "painting::basic_types::Axis"
"widgets::two_dimensional_scroll_view::TwoDimensionalScrollView" o-- "widgets::scrollable_helpers::ScrollableDetails"
"widgets::two_dimensional_scroll_view::TwoDimensionalScrollView" o-- "gestures::recognizer::DragStartBehavior"
"widgets::two_dimensional_scroll_view::TwoDimensionalScrollView" o-- "widgets::scroll_view::ScrollViewKeyboardDismissBehavior"
"widgets::two_dimensional_scroll_view::TwoDimensionalScrollView" o-- "dart::ui::Clip"
"widgets::framework::StatelessWidget" <|-- "widgets::two_dimensional_scroll_view::TwoDimensionalScrollView"

class "widgets::single_child_scroll_view::SingleChildScrollView" {
  +Axis scrollDirection
  +bool reverse
  +EdgeInsetsGeometry? padding
  +ScrollController? controller
  +bool? primary
  +ScrollPhysics? physics
  +Widget? child
  +DragStartBehavior dragStartBehavior
  +Clip clipBehavior
  +String? restorationId
  +ScrollViewKeyboardDismissBehavior keyboardDismissBehavior
  -AxisDirection _getDirection()
  +Widget build()
}

"widgets::single_child_scroll_view::SingleChildScrollView" o-- "painting::basic_types::Axis"
"widgets::single_child_scroll_view::SingleChildScrollView" o-- "painting::edge_insets::EdgeInsetsGeometry"
"widgets::single_child_scroll_view::SingleChildScrollView" o-- "widgets::scroll_controller::ScrollController"
"widgets::single_child_scroll_view::SingleChildScrollView" o-- "widgets::scroll_physics::ScrollPhysics"
"widgets::single_child_scroll_view::SingleChildScrollView" o-- "widgets::framework::Widget"
"widgets::single_child_scroll_view::SingleChildScrollView" o-- "gestures::recognizer::DragStartBehavior"
"widgets::single_child_scroll_view::SingleChildScrollView" o-- "dart::ui::Clip"
"widgets::single_child_scroll_view::SingleChildScrollView" o-- "widgets::scroll_view::ScrollViewKeyboardDismissBehavior"
"widgets::framework::StatelessWidget" <|-- "widgets::single_child_scroll_view::SingleChildScrollView"

class "widgets::single_child_scroll_view::_SingleChildViewport" {
  +AxisDirection axisDirection
  +ViewportOffset offset
  +Clip clipBehavior
  +_RenderSingleChildViewport createRenderObject()
  +void updateRenderObject()
  +SingleChildRenderObjectElement createElement()
}

"widgets::single_child_scroll_view::_SingleChildViewport" o-- "painting::basic_types::AxisDirection"
"widgets::single_child_scroll_view::_SingleChildViewport" o-- "rendering::viewport_offset::ViewportOffset"
"widgets::single_child_scroll_view::_SingleChildViewport" o-- "dart::ui::Clip"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::single_child_scroll_view::_SingleChildViewport"

class "widgets::single_child_scroll_view::_SingleChildViewportElement" {
}

"widgets::framework::SingleChildRenderObjectElement" <|-- "widgets::single_child_scroll_view::_SingleChildViewportElement"
"widgets::framework::NotifiableElementMixin" <|-- "widgets::single_child_scroll_view::_SingleChildViewportElement"
"widgets::scroll_notification::ViewportElementMixin" <|-- "widgets::single_child_scroll_view::_SingleChildViewportElement"

class "widgets::single_child_scroll_view::_RenderSingleChildViewport" {
  -AxisDirection _axisDirection
  -ViewportOffset _offset
  -Clip _clipBehavior
  -LayerHandle<ClipRectLayer> _clipRectLayer
  +AxisDirection axisDirection
  +Axis axis
  +ViewportOffset offset
  +Clip clipBehavior
  +bool isRepaintBoundary
  -double _viewportExtent
  -double _minScrollExtent
  -double _maxScrollExtent
  -Offset _paintOffset
  -void _hasScrolled()
  +void setupParentData()
  +void attach()
  +void detach()
  -BoxConstraints _getInnerConstraints()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +Size computeDryLayout()
  +void performLayout()
  -Offset _paintOffsetForPosition()
  -bool _shouldClipAtPaintOffset()
  +void paint()
  +void dispose()
  +void applyPaintTransform()
  +Rect? describeApproximatePaintClip()
  +bool hitTestChildren()
  +RevealedOffset getOffsetToReveal()
  +void showOnScreen()
  +void debugFillProperties()
  +Rect describeSemanticsClip()
}

"widgets::single_child_scroll_view::_RenderSingleChildViewport" o-- "painting::basic_types::AxisDirection"
"widgets::single_child_scroll_view::_RenderSingleChildViewport" o-- "rendering::viewport_offset::ViewportOffset"
"widgets::single_child_scroll_view::_RenderSingleChildViewport" o-- "dart::ui::Clip"
"widgets::single_child_scroll_view::_RenderSingleChildViewport" o-- "rendering::layer::LayerHandle<ClipRectLayer>"
"widgets::single_child_scroll_view::_RenderSingleChildViewport" o-- "painting::basic_types::Axis"
"widgets::single_child_scroll_view::_RenderSingleChildViewport" o-- "dart::ui::Offset"
"rendering::box::RenderBox" <|-- "widgets::single_child_scroll_view::_RenderSingleChildViewport"
"rendering::object::RenderObjectWithChildMixin" <|-- "widgets::single_child_scroll_view::_RenderSingleChildViewport"
"rendering::viewport::RenderAbstractViewport" <|-- "widgets::single_child_scroll_view::_RenderSingleChildViewport"

class "widgets::implicit_animations::BoxConstraintsTween" {
  +BoxConstraints lerp()
}

"animation::tween::Tween" <|-- "widgets::implicit_animations::BoxConstraintsTween"

class "widgets::implicit_animations::DecorationTween" {
  +Decoration lerp()
}

"animation::tween::Tween" <|-- "widgets::implicit_animations::DecorationTween"

class "widgets::implicit_animations::EdgeInsetsTween" {
  +EdgeInsets lerp()
}

"animation::tween::Tween" <|-- "widgets::implicit_animations::EdgeInsetsTween"

class "widgets::implicit_animations::EdgeInsetsGeometryTween" {
  +EdgeInsetsGeometry lerp()
}

"animation::tween::Tween" <|-- "widgets::implicit_animations::EdgeInsetsGeometryTween"

class "widgets::implicit_animations::BorderRadiusTween" {
  +BorderRadius? lerp()
}

"animation::tween::Tween" <|-- "widgets::implicit_animations::BorderRadiusTween"

class "widgets::implicit_animations::BorderTween" {
  +Border? lerp()
}

"animation::tween::Tween" <|-- "widgets::implicit_animations::BorderTween"

class "widgets::implicit_animations::Matrix4Tween" {
  +Matrix4 lerp()
}

"animation::tween::Tween" <|-- "widgets::implicit_animations::Matrix4Tween"

class "widgets::implicit_animations::TextStyleTween" {
  +TextStyle lerp()
}

"animation::tween::Tween" <|-- "widgets::implicit_animations::TextStyleTween"

abstract class "widgets::implicit_animations::ImplicitlyAnimatedWidget" {
  +Curve curve
  +Duration duration
  +void Function()? onEnd
  +ImplicitlyAnimatedWidgetState<ImplicitlyAnimatedWidget> createState()
  +void debugFillProperties()
}

"widgets::implicit_animations::ImplicitlyAnimatedWidget" o-- "animation::curves::Curve"
"widgets::implicit_animations::ImplicitlyAnimatedWidget" o-- "dart::ui::void Function()"
"widgets::framework::StatefulWidget" <|-- "widgets::implicit_animations::ImplicitlyAnimatedWidget"

abstract class "widgets::implicit_animations::ImplicitlyAnimatedWidgetState" {
  -AnimationController _controller
  -CurvedAnimation _animation
  +AnimationController controller
  +Animation<double> animation
  +void initState()
  +void didUpdateWidget()
  -CurvedAnimation _createCurve()
  +void dispose()
  -bool _shouldAnimateTween()
  -void _updateTween()
  -bool _constructTweens()
  #void forEachTween()
  #void didUpdateTweens()
}

"widgets::implicit_animations::ImplicitlyAnimatedWidgetState" o-- "animation::animation_controller::AnimationController"
"widgets::implicit_animations::ImplicitlyAnimatedWidgetState" o-- "animation::animations::CurvedAnimation"
"widgets::implicit_animations::ImplicitlyAnimatedWidgetState" o-- "animation::animation::Animation<double>"
"widgets::framework::State" <|-- "widgets::implicit_animations::ImplicitlyAnimatedWidgetState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "widgets::implicit_animations::ImplicitlyAnimatedWidgetState"

abstract class "widgets::implicit_animations::AnimatedWidgetBaseState" {
  +void initState()
  -void _handleAnimationChanged()
}

"widgets::implicit_animations::ImplicitlyAnimatedWidgetState" <|-- "widgets::implicit_animations::AnimatedWidgetBaseState"

class "widgets::implicit_animations::AnimatedContainer" {
  +Widget? child
  +AlignmentGeometry? alignment
  +EdgeInsetsGeometry? padding
  +Decoration? decoration
  +Decoration? foregroundDecoration
  +BoxConstraints? constraints
  +EdgeInsetsGeometry? margin
  +Matrix4? transform
  +AlignmentGeometry? transformAlignment
  +Clip clipBehavior
  +AnimatedWidgetBaseState<AnimatedContainer> createState()
  +void debugFillProperties()
}

"widgets::implicit_animations::AnimatedContainer" o-- "widgets::framework::Widget"
"widgets::implicit_animations::AnimatedContainer" o-- "painting::alignment::AlignmentGeometry"
"widgets::implicit_animations::AnimatedContainer" o-- "painting::edge_insets::EdgeInsetsGeometry"
"widgets::implicit_animations::AnimatedContainer" o-- "painting::decoration::Decoration"
"widgets::implicit_animations::AnimatedContainer" o-- "rendering::box::BoxConstraints"
"widgets::implicit_animations::AnimatedContainer" o-- "vector_math::vector_math_64::Matrix4"
"widgets::implicit_animations::AnimatedContainer" o-- "dart::ui::Clip"
"widgets::implicit_animations::ImplicitlyAnimatedWidget" <|-- "widgets::implicit_animations::AnimatedContainer"

class "widgets::implicit_animations::_AnimatedContainerState" {
  -AlignmentGeometryTween? _alignment
  -EdgeInsetsGeometryTween? _padding
  -DecorationTween? _decoration
  -DecorationTween? _foregroundDecoration
  -BoxConstraintsTween? _constraints
  -EdgeInsetsGeometryTween? _margin
  -Matrix4Tween? _transform
  -AlignmentGeometryTween? _transformAlignment
  +void forEachTween()
  +Widget build()
  +void debugFillProperties()
}

"widgets::implicit_animations::_AnimatedContainerState" o-- "rendering::tweens::AlignmentGeometryTween"
"widgets::implicit_animations::_AnimatedContainerState" o-- "widgets::implicit_animations::EdgeInsetsGeometryTween"
"widgets::implicit_animations::_AnimatedContainerState" o-- "widgets::implicit_animations::DecorationTween"
"widgets::implicit_animations::_AnimatedContainerState" o-- "widgets::implicit_animations::BoxConstraintsTween"
"widgets::implicit_animations::_AnimatedContainerState" o-- "widgets::implicit_animations::Matrix4Tween"
"widgets::implicit_animations::AnimatedWidgetBaseState" <|-- "widgets::implicit_animations::_AnimatedContainerState"

class "widgets::implicit_animations::AnimatedPadding" {
  +EdgeInsetsGeometry padding
  +Widget? child
  +AnimatedWidgetBaseState<AnimatedPadding> createState()
  +void debugFillProperties()
}

"widgets::implicit_animations::AnimatedPadding" o-- "painting::edge_insets::EdgeInsetsGeometry"
"widgets::implicit_animations::AnimatedPadding" o-- "widgets::framework::Widget"
"widgets::implicit_animations::ImplicitlyAnimatedWidget" <|-- "widgets::implicit_animations::AnimatedPadding"

class "widgets::implicit_animations::_AnimatedPaddingState" {
  -EdgeInsetsGeometryTween? _padding
  +void forEachTween()
  +Widget build()
  +void debugFillProperties()
}

"widgets::implicit_animations::_AnimatedPaddingState" o-- "widgets::implicit_animations::EdgeInsetsGeometryTween"
"widgets::implicit_animations::AnimatedWidgetBaseState" <|-- "widgets::implicit_animations::_AnimatedPaddingState"

class "widgets::implicit_animations::AnimatedAlign" {
  +AlignmentGeometry alignment
  +Widget? child
  +double? heightFactor
  +double? widthFactor
  +AnimatedWidgetBaseState<AnimatedAlign> createState()
  +void debugFillProperties()
}

"widgets::implicit_animations::AnimatedAlign" o-- "painting::alignment::AlignmentGeometry"
"widgets::implicit_animations::AnimatedAlign" o-- "widgets::framework::Widget"
"widgets::implicit_animations::ImplicitlyAnimatedWidget" <|-- "widgets::implicit_animations::AnimatedAlign"

class "widgets::implicit_animations::_AnimatedAlignState" {
  -AlignmentGeometryTween? _alignment
  -Tween<double>? _heightFactorTween
  -Tween<double>? _widthFactorTween
  +void forEachTween()
  +Widget build()
  +void debugFillProperties()
}

"widgets::implicit_animations::_AnimatedAlignState" o-- "rendering::tweens::AlignmentGeometryTween"
"widgets::implicit_animations::_AnimatedAlignState" o-- "animation::tween::Tween<double>"
"widgets::implicit_animations::AnimatedWidgetBaseState" <|-- "widgets::implicit_animations::_AnimatedAlignState"

class "widgets::implicit_animations::AnimatedPositioned" {
  +Widget child
  +double? left
  +double? top
  +double? right
  +double? bottom
  +double? width
  +double? height
  +AnimatedWidgetBaseState<AnimatedPositioned> createState()
  +void debugFillProperties()
}

"widgets::implicit_animations::AnimatedPositioned" o-- "widgets::framework::Widget"
"widgets::implicit_animations::ImplicitlyAnimatedWidget" <|-- "widgets::implicit_animations::AnimatedPositioned"

class "widgets::implicit_animations::_AnimatedPositionedState" {
  -Tween<double>? _left
  -Tween<double>? _top
  -Tween<double>? _right
  -Tween<double>? _bottom
  -Tween<double>? _width
  -Tween<double>? _height
  +void forEachTween()
  +Widget build()
  +void debugFillProperties()
}

"widgets::implicit_animations::_AnimatedPositionedState" o-- "animation::tween::Tween<double>"
"widgets::implicit_animations::AnimatedWidgetBaseState" <|-- "widgets::implicit_animations::_AnimatedPositionedState"

class "widgets::implicit_animations::AnimatedPositionedDirectional" {
  +Widget child
  +double? start
  +double? top
  +double? end
  +double? bottom
  +double? width
  +double? height
  +AnimatedWidgetBaseState<AnimatedPositionedDirectional> createState()
  +void debugFillProperties()
}

"widgets::implicit_animations::AnimatedPositionedDirectional" o-- "widgets::framework::Widget"
"widgets::implicit_animations::ImplicitlyAnimatedWidget" <|-- "widgets::implicit_animations::AnimatedPositionedDirectional"

class "widgets::implicit_animations::_AnimatedPositionedDirectionalState" {
  -Tween<double>? _start
  -Tween<double>? _top
  -Tween<double>? _end
  -Tween<double>? _bottom
  -Tween<double>? _width
  -Tween<double>? _height
  +void forEachTween()
  +Widget build()
  +void debugFillProperties()
}

"widgets::implicit_animations::_AnimatedPositionedDirectionalState" o-- "animation::tween::Tween<double>"
"widgets::implicit_animations::AnimatedWidgetBaseState" <|-- "widgets::implicit_animations::_AnimatedPositionedDirectionalState"

class "widgets::implicit_animations::AnimatedScale" {
  +Widget? child
  +double scale
  +Alignment alignment
  +FilterQuality? filterQuality
  +ImplicitlyAnimatedWidgetState<AnimatedScale> createState()
  +void debugFillProperties()
}

"widgets::implicit_animations::AnimatedScale" o-- "widgets::framework::Widget"
"widgets::implicit_animations::AnimatedScale" o-- "painting::alignment::Alignment"
"widgets::implicit_animations::AnimatedScale" o-- "dart::ui::FilterQuality"
"widgets::implicit_animations::ImplicitlyAnimatedWidget" <|-- "widgets::implicit_animations::AnimatedScale"

class "widgets::implicit_animations::_AnimatedScaleState" {
  -Tween<double>? _scale
  -Animation<double> _scaleAnimation
  +void forEachTween()
  +void didUpdateTweens()
  +Widget build()
}

"widgets::implicit_animations::_AnimatedScaleState" o-- "animation::tween::Tween<double>"
"widgets::implicit_animations::_AnimatedScaleState" o-- "animation::animation::Animation<double>"
"widgets::implicit_animations::ImplicitlyAnimatedWidgetState" <|-- "widgets::implicit_animations::_AnimatedScaleState"

class "widgets::implicit_animations::AnimatedRotation" {
  +Widget? child
  +double turns
  +Alignment alignment
  +FilterQuality? filterQuality
  +ImplicitlyAnimatedWidgetState<AnimatedRotation> createState()
  +void debugFillProperties()
}

"widgets::implicit_animations::AnimatedRotation" o-- "widgets::framework::Widget"
"widgets::implicit_animations::AnimatedRotation" o-- "painting::alignment::Alignment"
"widgets::implicit_animations::AnimatedRotation" o-- "dart::ui::FilterQuality"
"widgets::implicit_animations::ImplicitlyAnimatedWidget" <|-- "widgets::implicit_animations::AnimatedRotation"

class "widgets::implicit_animations::_AnimatedRotationState" {
  -Tween<double>? _turns
  -Animation<double> _turnsAnimation
  +void forEachTween()
  +void didUpdateTweens()
  +Widget build()
}

"widgets::implicit_animations::_AnimatedRotationState" o-- "animation::tween::Tween<double>"
"widgets::implicit_animations::_AnimatedRotationState" o-- "animation::animation::Animation<double>"
"widgets::implicit_animations::ImplicitlyAnimatedWidgetState" <|-- "widgets::implicit_animations::_AnimatedRotationState"

class "widgets::implicit_animations::AnimatedSlide" {
  +Widget? child
  +Offset offset
  +ImplicitlyAnimatedWidgetState<AnimatedSlide> createState()
  +void debugFillProperties()
}

"widgets::implicit_animations::AnimatedSlide" o-- "widgets::framework::Widget"
"widgets::implicit_animations::AnimatedSlide" o-- "dart::ui::Offset"
"widgets::implicit_animations::ImplicitlyAnimatedWidget" <|-- "widgets::implicit_animations::AnimatedSlide"

class "widgets::implicit_animations::_AnimatedSlideState" {
  -Tween<Offset>? _offset
  -Animation<Offset> _offsetAnimation
  +void forEachTween()
  +void didUpdateTweens()
  +Widget build()
}

"widgets::implicit_animations::_AnimatedSlideState" o-- "animation::tween::Tween<Offset>"
"widgets::implicit_animations::_AnimatedSlideState" o-- "animation::animation::Animation<Offset>"
"widgets::implicit_animations::ImplicitlyAnimatedWidgetState" <|-- "widgets::implicit_animations::_AnimatedSlideState"

class "widgets::implicit_animations::AnimatedOpacity" {
  +Widget? child
  +double opacity
  +bool alwaysIncludeSemantics
  +ImplicitlyAnimatedWidgetState<AnimatedOpacity> createState()
  +void debugFillProperties()
}

"widgets::implicit_animations::AnimatedOpacity" o-- "widgets::framework::Widget"
"widgets::implicit_animations::ImplicitlyAnimatedWidget" <|-- "widgets::implicit_animations::AnimatedOpacity"

class "widgets::implicit_animations::_AnimatedOpacityState" {
  -Tween<double>? _opacity
  -Animation<double> _opacityAnimation
  +void forEachTween()
  +void didUpdateTweens()
  +Widget build()
}

"widgets::implicit_animations::_AnimatedOpacityState" o-- "animation::tween::Tween<double>"
"widgets::implicit_animations::_AnimatedOpacityState" o-- "animation::animation::Animation<double>"
"widgets::implicit_animations::ImplicitlyAnimatedWidgetState" <|-- "widgets::implicit_animations::_AnimatedOpacityState"

class "widgets::implicit_animations::SliverAnimatedOpacity" {
  +Widget? sliver
  +double opacity
  +bool alwaysIncludeSemantics
  +ImplicitlyAnimatedWidgetState<SliverAnimatedOpacity> createState()
  +void debugFillProperties()
}

"widgets::implicit_animations::SliverAnimatedOpacity" o-- "widgets::framework::Widget"
"widgets::implicit_animations::ImplicitlyAnimatedWidget" <|-- "widgets::implicit_animations::SliverAnimatedOpacity"

class "widgets::implicit_animations::_SliverAnimatedOpacityState" {
  -Tween<double>? _opacity
  -Animation<double> _opacityAnimation
  +void forEachTween()
  +void didUpdateTweens()
  +Widget build()
}

"widgets::implicit_animations::_SliverAnimatedOpacityState" o-- "animation::tween::Tween<double>"
"widgets::implicit_animations::_SliverAnimatedOpacityState" o-- "animation::animation::Animation<double>"
"widgets::implicit_animations::ImplicitlyAnimatedWidgetState" <|-- "widgets::implicit_animations::_SliverAnimatedOpacityState"

class "widgets::implicit_animations::AnimatedDefaultTextStyle" {
  +Widget child
  +TextStyle style
  +TextAlign? textAlign
  +bool softWrap
  +TextOverflow overflow
  +int? maxLines
  +TextWidthBasis textWidthBasis
  +TextHeightBehavior? textHeightBehavior
  +AnimatedWidgetBaseState<AnimatedDefaultTextStyle> createState()
  +void debugFillProperties()
}

"widgets::implicit_animations::AnimatedDefaultTextStyle" o-- "widgets::framework::Widget"
"widgets::implicit_animations::AnimatedDefaultTextStyle" o-- "painting::text_style::TextStyle"
"widgets::implicit_animations::AnimatedDefaultTextStyle" o-- "dart::ui::TextAlign"
"widgets::implicit_animations::AnimatedDefaultTextStyle" o-- "painting::text_painter::TextOverflow"
"widgets::implicit_animations::AnimatedDefaultTextStyle" o-- "painting::text_painter::TextWidthBasis"
"widgets::implicit_animations::AnimatedDefaultTextStyle" o-- "dart::ui::TextHeightBehavior"
"widgets::implicit_animations::ImplicitlyAnimatedWidget" <|-- "widgets::implicit_animations::AnimatedDefaultTextStyle"

class "widgets::implicit_animations::_AnimatedDefaultTextStyleState" {
  -TextStyleTween? _style
  +void forEachTween()
  +Widget build()
}

"widgets::implicit_animations::_AnimatedDefaultTextStyleState" o-- "widgets::implicit_animations::TextStyleTween"
"widgets::implicit_animations::AnimatedWidgetBaseState" <|-- "widgets::implicit_animations::_AnimatedDefaultTextStyleState"

class "widgets::implicit_animations::AnimatedPhysicalModel" {
  +Widget child
  +BoxShape shape
  +Clip clipBehavior
  +BorderRadius borderRadius
  +double elevation
  +Color color
  +bool animateColor
  +Color shadowColor
  +bool animateShadowColor
  +AnimatedWidgetBaseState<AnimatedPhysicalModel> createState()
  +void debugFillProperties()
}

"widgets::implicit_animations::AnimatedPhysicalModel" o-- "widgets::framework::Widget"
"widgets::implicit_animations::AnimatedPhysicalModel" o-- "painting::box_border::BoxShape"
"widgets::implicit_animations::AnimatedPhysicalModel" o-- "dart::ui::Clip"
"widgets::implicit_animations::AnimatedPhysicalModel" o-- "painting::border_radius::BorderRadius"
"widgets::implicit_animations::AnimatedPhysicalModel" o-- "dart::ui::Color"
"widgets::implicit_animations::ImplicitlyAnimatedWidget" <|-- "widgets::implicit_animations::AnimatedPhysicalModel"

class "widgets::implicit_animations::_AnimatedPhysicalModelState" {
  -BorderRadiusTween? _borderRadius
  -Tween<double>? _elevation
  -ColorTween? _color
  -ColorTween? _shadowColor
  +void forEachTween()
  +Widget build()
}

"widgets::implicit_animations::_AnimatedPhysicalModelState" o-- "widgets::implicit_animations::BorderRadiusTween"
"widgets::implicit_animations::_AnimatedPhysicalModelState" o-- "animation::tween::Tween<double>"
"widgets::implicit_animations::_AnimatedPhysicalModelState" o-- "animation::tween::ColorTween"
"widgets::implicit_animations::AnimatedWidgetBaseState" <|-- "widgets::implicit_animations::_AnimatedPhysicalModelState"

class "widgets::implicit_animations::AnimatedFractionallySizedBox" {
  +Widget? child
  +double? heightFactor
  +double? widthFactor
  +AlignmentGeometry alignment
  +AnimatedWidgetBaseState<AnimatedFractionallySizedBox> createState()
  +void debugFillProperties()
}

"widgets::implicit_animations::AnimatedFractionallySizedBox" o-- "widgets::framework::Widget"
"widgets::implicit_animations::AnimatedFractionallySizedBox" o-- "painting::alignment::AlignmentGeometry"
"widgets::implicit_animations::ImplicitlyAnimatedWidget" <|-- "widgets::implicit_animations::AnimatedFractionallySizedBox"

class "widgets::implicit_animations::_AnimatedFractionallySizedBoxState" {
  -AlignmentGeometryTween? _alignment
  -Tween<double>? _heightFactorTween
  -Tween<double>? _widthFactorTween
  +void forEachTween()
  +Widget build()
  +void debugFillProperties()
}

"widgets::implicit_animations::_AnimatedFractionallySizedBoxState" o-- "rendering::tweens::AlignmentGeometryTween"
"widgets::implicit_animations::_AnimatedFractionallySizedBoxState" o-- "animation::tween::Tween<double>"
"widgets::implicit_animations::AnimatedWidgetBaseState" <|-- "widgets::implicit_animations::_AnimatedFractionallySizedBoxState"

class "widgets::animated_cross_fade::AnimatedCrossFade" {
  +Widget firstChild
  +Widget secondChild
  +CrossFadeState crossFadeState
  +Duration duration
  +Duration? reverseDuration
  +Curve firstCurve
  +Curve secondCurve
  +Curve sizeCurve
  +AlignmentGeometry alignment
  +Widget Function(Widget, Key, Widget, Key) layoutBuilder
  +bool excludeBottomFocus
  {static} +Widget defaultLayoutBuilder()
  +State<AnimatedCrossFade> createState()
  +void debugFillProperties()
}

"widgets::animated_cross_fade::AnimatedCrossFade" o-- "widgets::framework::Widget"
"widgets::animated_cross_fade::AnimatedCrossFade" o-- "widgets::animated_cross_fade::CrossFadeState"
"widgets::animated_cross_fade::AnimatedCrossFade" o-- "animation::curves::Curve"
"widgets::animated_cross_fade::AnimatedCrossFade" o-- "painting::alignment::AlignmentGeometry"
"widgets::animated_cross_fade::AnimatedCrossFade" o-- "widgets::animated_cross_fade::Widget Function(Widget, Key, Widget, Key)"
"widgets::framework::StatefulWidget" <|-- "widgets::animated_cross_fade::AnimatedCrossFade"

class "widgets::animated_cross_fade::_AnimatedCrossFadeState" {
  -AnimationController _controller
  -Animation<double> _firstAnimation
  -Animation<double> _secondAnimation
  -bool _isTransitioning
  +void initState()
  -Animation<double> _initAnimation()
  +void dispose()
  +void didUpdateWidget()
  +Widget build()
  +void debugFillProperties()
}

"widgets::animated_cross_fade::_AnimatedCrossFadeState" o-- "animation::animation_controller::AnimationController"
"widgets::animated_cross_fade::_AnimatedCrossFadeState" o-- "animation::animation::Animation<double>"
"widgets::framework::State" <|-- "widgets::animated_cross_fade::_AnimatedCrossFadeState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "widgets::animated_cross_fade::_AnimatedCrossFadeState"

class "widgets::animated_cross_fade::CrossFadeState" {
  +int index
  {static} +List<CrossFadeState> values
  {static} +CrossFadeState showFirst
  {static} +CrossFadeState showSecond
}

"widgets::animated_cross_fade::CrossFadeState" o-- "widgets::animated_cross_fade::CrossFadeState"
"dart::core::Enum" <|-- "widgets::animated_cross_fade::CrossFadeState"

abstract class "widgets::window::Window" {
}

class "widgets::grid_paper::_GridPaperPainter" {
  +Color color
  +double interval
  +int divisions
  +int subdivisions
  +void paint()
  +bool shouldRepaint()
  +bool hitTest()
}

"widgets::grid_paper::_GridPaperPainter" o-- "dart::ui::Color"
"rendering::custom_paint::CustomPainter" <|-- "widgets::grid_paper::_GridPaperPainter"

class "widgets::grid_paper::GridPaper" {
  +Color color
  +double interval
  +int divisions
  +int subdivisions
  +Widget? child
  +Widget build()
}

"widgets::grid_paper::GridPaper" o-- "dart::ui::Color"
"widgets::grid_paper::GridPaper" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::grid_paper::GridPaper"

class "widgets::tween_animation_builder::TweenAnimationBuilder" {
  +Tween<T> tween
  +Widget Function(BuildContext, T, Widget?) builder
  +Widget? child
  +ImplicitlyAnimatedWidgetState<ImplicitlyAnimatedWidget> createState()
}

"widgets::tween_animation_builder::TweenAnimationBuilder" o-- "animation::tween::Tween<T>"
"widgets::tween_animation_builder::TweenAnimationBuilder" o-- "widgets::value_listenable_builder::Widget Function(BuildContext, T, Widget)"
"widgets::tween_animation_builder::TweenAnimationBuilder" o-- "widgets::framework::Widget"
"widgets::implicit_animations::ImplicitlyAnimatedWidget" <|-- "widgets::tween_animation_builder::TweenAnimationBuilder"

class "widgets::tween_animation_builder::_TweenAnimationBuilderState" {
  -Tween<T>? _currentTween
  +void initState()
  +void forEachTween()
  +Widget build()
}

"widgets::tween_animation_builder::_TweenAnimationBuilderState" o-- "animation::tween::Tween<T>"
"widgets::implicit_animations::AnimatedWidgetBaseState" <|-- "widgets::tween_animation_builder::_TweenAnimationBuilderState"

class "widgets::widget_span::WidgetSpan" {
  +Widget child
  +int hashCode
  {static} +List<Widget> extractFromInlineSpan()
  +void build()
  +bool visitChildren()
  +bool visitDirectChildren()
  +InlineSpan? getSpanForPositionVisitor()
  +int? codeUnitAtVisitor()
  +RenderComparison compareTo()
  +bool ==()
  +InlineSpan? getSpanForPosition()
  +bool debugAssertIsValid()
  +void debugFillProperties()
}

"widgets::widget_span::WidgetSpan" o-- "widgets::framework::Widget"
"painting::placeholder_span::PlaceholderSpan" <|-- "widgets::widget_span::WidgetSpan"

class "widgets::widget_span::_WidgetSpanParentData" {
  +WidgetSpan span
  +Type debugTypicalAncestorWidgetClass
  +void applyParentData()
}

"widgets::widget_span::_WidgetSpanParentData" o-- "widgets::widget_span::WidgetSpan"
"widgets::framework::ParentDataWidget" <|-- "widgets::widget_span::_WidgetSpanParentData"

class "widgets::widget_span::_AutoScaleInlineWidget" {
  +WidgetSpan span
  +double textScaleFactor
  +_RenderScaledInlineWidget createRenderObject()
  +void updateRenderObject()
}

"widgets::widget_span::_AutoScaleInlineWidget" o-- "widgets::widget_span::WidgetSpan"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::widget_span::_AutoScaleInlineWidget"

class "widgets::widget_span::_RenderScaledInlineWidget" {
  -double _scale
  -PlaceholderAlignment _alignment
  -TextBaseline? _baseline
  +double scale
  +PlaceholderAlignment alignment
  +TextBaseline? baseline
  +double computeMaxIntrinsicHeight()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMinIntrinsicWidth()
  +double? computeDistanceToActualBaseline()
  +Size computeDryLayout()
  +void performLayout()
  +void applyPaintTransform()
  +void paint()
  +bool hitTestChildren()
}

"widgets::widget_span::_RenderScaledInlineWidget" o-- "dart::ui::PlaceholderAlignment"
"widgets::widget_span::_RenderScaledInlineWidget" o-- "dart::ui::TextBaseline"
"rendering::box::RenderBox" <|-- "widgets::widget_span::_RenderScaledInlineWidget"
"rendering::object::RenderObjectWithChildMixin" <|-- "widgets::widget_span::_RenderScaledInlineWidget"

class "widgets::context_menu_controller::ContextMenuController" {
  +void Function()? onRemove
  {static} -ContextMenuController? _shownInstance
  {static} -OverlayEntry? _menuOverlayEntry
  +bool isShown
  +void show()
  {static} +void removeAny()
  +void markNeedsBuild()
  +void remove()
}

"widgets::context_menu_controller::ContextMenuController" o-- "dart::ui::void Function()"
"widgets::context_menu_controller::ContextMenuController" o-- "widgets::context_menu_controller::ContextMenuController"
"widgets::context_menu_controller::ContextMenuController" o-- "widgets::overlay::OverlayEntry"

class "widgets::scrollable_helpers::ScrollableDetails" {
  +AxisDirection direction
  +ScrollController? controller
  +ScrollPhysics? physics
  +Clip? decorationClipBehavior
  +Clip? clipBehavior
  +int hashCode
  +ScrollableDetails copyWith()
  +String toString()
  +bool ==()
}

"widgets::scrollable_helpers::ScrollableDetails" o-- "painting::basic_types::AxisDirection"
"widgets::scrollable_helpers::ScrollableDetails" o-- "widgets::scroll_controller::ScrollController"
"widgets::scrollable_helpers::ScrollableDetails" o-- "widgets::scroll_physics::ScrollPhysics"
"widgets::scrollable_helpers::ScrollableDetails" o-- "dart::ui::Clip"

class "widgets::scrollable_helpers::EdgeDraggingAutoScroller" {
  +ScrollableState scrollable
  +void Function()? onScrollViewScrolled
  +double velocityScalar
  -Rect _dragTargetRelatedToScrollOrigin
  -bool _scrolling
  +bool scrolling
  -AxisDirection _axisDirection
  -Axis _scrollDirection
  -double _offsetExtent()
  -double _sizeExtent()
  +void startAutoScrollIfNecessary()
  +void stopAutoScroll()
  -Future<void> _scroll()
}

"widgets::scrollable_helpers::EdgeDraggingAutoScroller" o-- "widgets::scrollable::ScrollableState"
"widgets::scrollable_helpers::EdgeDraggingAutoScroller" o-- "dart::ui::void Function()"
"widgets::scrollable_helpers::EdgeDraggingAutoScroller" o-- "dart::ui::Rect"
"widgets::scrollable_helpers::EdgeDraggingAutoScroller" o-- "painting::basic_types::AxisDirection"
"widgets::scrollable_helpers::EdgeDraggingAutoScroller" o-- "painting::basic_types::Axis"

class "widgets::scrollable_helpers::ScrollIncrementDetails" {
  +ScrollIncrementType type
  +ScrollMetrics metrics
}

"widgets::scrollable_helpers::ScrollIncrementDetails" o-- "widgets::scrollable_helpers::ScrollIncrementType"
"widgets::scrollable_helpers::ScrollIncrementDetails" o-- "widgets::scroll_metrics::ScrollMetrics"

class "widgets::scrollable_helpers::ScrollIntent" {
  +AxisDirection direction
  +ScrollIncrementType type
}

"widgets::scrollable_helpers::ScrollIntent" o-- "painting::basic_types::AxisDirection"
"widgets::scrollable_helpers::ScrollIntent" o-- "widgets::scrollable_helpers::ScrollIncrementType"
"widgets::actions::Intent" <|-- "widgets::scrollable_helpers::ScrollIntent"

class "widgets::scrollable_helpers::ScrollAction" {
  +bool isEnabled()
  {static} -double _calculateScrollIncrement()
  {static} +double getDirectionalIncrement()
  +void invoke()
}

"widgets::actions::ContextAction" <|-- "widgets::scrollable_helpers::ScrollAction"

class "widgets::scrollable_helpers::ScrollIncrementType" {
  +int index
  {static} +List<ScrollIncrementType> values
  {static} +ScrollIncrementType line
  {static} +ScrollIncrementType page
}

"widgets::scrollable_helpers::ScrollIncrementType" o-- "widgets::scrollable_helpers::ScrollIncrementType"
"dart::core::Enum" <|-- "widgets::scrollable_helpers::ScrollIncrementType"

class "widgets::scroll_metrics::FixedScrollMetrics" {
  -double? _minScrollExtent
  -double? _maxScrollExtent
  -double? _pixels
  -double? _viewportDimension
  +AxisDirection axisDirection
  +double devicePixelRatio
  +double minScrollExtent
  +double maxScrollExtent
  +bool hasContentDimensions
  +double pixels
  +bool hasPixels
  +double viewportDimension
  +bool hasViewportDimension
  +String toString()
}

"widgets::scroll_metrics::FixedScrollMetrics" o-- "painting::basic_types::AxisDirection"
"widgets::scroll_metrics::ScrollMetrics" <|-- "widgets::scroll_metrics::FixedScrollMetrics"

abstract class "widgets::scroll_metrics::ScrollMetrics" {
  +double minScrollExtent
  +double maxScrollExtent
  +bool hasContentDimensions
  +double pixels
  +bool hasPixels
  +double viewportDimension
  +bool hasViewportDimension
  +AxisDirection axisDirection
  +Axis axis
  +bool outOfRange
  +bool atEdge
  +double extentBefore
  +double extentInside
  +double extentAfter
  +double extentTotal
  +double devicePixelRatio
  +ScrollMetrics copyWith()
}

"widgets::scroll_metrics::ScrollMetrics" o-- "painting::basic_types::AxisDirection"
"widgets::scroll_metrics::ScrollMetrics" o-- "painting::basic_types::Axis"

class "widgets::default_text_editing_shortcuts::DefaultTextEditingShortcuts" {
  +Widget child
  {static} -Map<ShortcutActivator, Intent> _commonShortcuts
  {static} -Map<ShortcutActivator, Intent> _androidShortcuts
  {static} -Map<ShortcutActivator, Intent> _fuchsiaShortcuts
  {static} -Map<ShortcutActivator, Intent> _linuxShortcuts
  {static} -Map<ShortcutActivator, Intent> _macShortcuts
  {static} -Map<ShortcutActivator, Intent> _iOSShortcuts
  {static} -Map<ShortcutActivator, Intent> _windowsShortcuts
  {static} -Map<ShortcutActivator, Intent> _webDisablingTextShortcuts
  {static} -Map<ShortcutActivator, Intent> _commonDisablingTextShortcuts
  {static} -Map<ShortcutActivator, Intent> _macDisablingTextShortcuts
  {static} -Map<ShortcutActivator, Intent> _iOSDisablingTextShortcuts
  {static} -Map<ShortcutActivator, Intent> _shortcuts
  -Map<ShortcutActivator, Intent>? _getDisablingShortcut()
  +Widget build()
}

"widgets::default_text_editing_shortcuts::DefaultTextEditingShortcuts" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::default_text_editing_shortcuts::DefaultTextEditingShortcuts"

abstract class "widgets::transitions::AnimatedWidget" {
  +Listenable listenable
  #Widget build()
  +State<AnimatedWidget> createState()
  +void debugFillProperties()
}

"widgets::transitions::AnimatedWidget" o-- "foundation::change_notifier::Listenable"
"widgets::framework::StatefulWidget" <|-- "widgets::transitions::AnimatedWidget"

class "widgets::transitions::_AnimatedState" {
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  -void _handleChange()
  +Widget build()
}

"widgets::framework::State" <|-- "widgets::transitions::_AnimatedState"

class "widgets::transitions::SlideTransition" {
  +TextDirection? textDirection
  +bool transformHitTests
  +Widget? child
  +Animation<Offset> position
  +Widget build()
}

"widgets::transitions::SlideTransition" o-- "dart::ui::TextDirection"
"widgets::transitions::SlideTransition" o-- "widgets::framework::Widget"
"widgets::transitions::SlideTransition" o-- "animation::animation::Animation<Offset>"
"widgets::transitions::AnimatedWidget" <|-- "widgets::transitions::SlideTransition"

class "widgets::transitions::MatrixTransition" {
  +Matrix4 Function(double) onTransform
  +Alignment alignment
  +FilterQuality? filterQuality
  +Widget? child
  +Animation<double> animation
  +Widget build()
}

"widgets::transitions::MatrixTransition" o-- "widgets::transitions::Matrix4 Function(double)"
"widgets::transitions::MatrixTransition" o-- "painting::alignment::Alignment"
"widgets::transitions::MatrixTransition" o-- "dart::ui::FilterQuality"
"widgets::transitions::MatrixTransition" o-- "widgets::framework::Widget"
"widgets::transitions::MatrixTransition" o-- "animation::animation::Animation<double>"
"widgets::transitions::AnimatedWidget" <|-- "widgets::transitions::MatrixTransition"

class "widgets::transitions::ScaleTransition" {
  +Animation<double> scale
  {static} -Matrix4 _handleScaleMatrix()
}

"widgets::transitions::ScaleTransition" o-- "animation::animation::Animation<double>"
"widgets::transitions::MatrixTransition" <|-- "widgets::transitions::ScaleTransition"

class "widgets::transitions::RotationTransition" {
  +Animation<double> turns
  {static} -Matrix4 _handleTurnsMatrix()
}

"widgets::transitions::RotationTransition" o-- "animation::animation::Animation<double>"
"widgets::transitions::MatrixTransition" <|-- "widgets::transitions::RotationTransition"

class "widgets::transitions::SizeTransition" {
  +Axis axis
  +double axisAlignment
  +Widget? child
  +Animation<double> sizeFactor
  +Widget build()
}

"widgets::transitions::SizeTransition" o-- "painting::basic_types::Axis"
"widgets::transitions::SizeTransition" o-- "widgets::framework::Widget"
"widgets::transitions::SizeTransition" o-- "animation::animation::Animation<double>"
"widgets::transitions::AnimatedWidget" <|-- "widgets::transitions::SizeTransition"

class "widgets::transitions::FadeTransition" {
  +Animation<double> opacity
  +bool alwaysIncludeSemantics
  +RenderAnimatedOpacity createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::transitions::FadeTransition" o-- "animation::animation::Animation<double>"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::transitions::FadeTransition"

class "widgets::transitions::SliverFadeTransition" {
  +Animation<double> opacity
  +bool alwaysIncludeSemantics
  +RenderSliverAnimatedOpacity createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::transitions::SliverFadeTransition" o-- "animation::animation::Animation<double>"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::transitions::SliverFadeTransition"

class "widgets::transitions::RelativeRectTween" {
  +RelativeRect lerp()
}

"animation::tween::Tween" <|-- "widgets::transitions::RelativeRectTween"

class "widgets::transitions::PositionedTransition" {
  +Widget child
  +Animation<RelativeRect> rect
  +Widget build()
}

"widgets::transitions::PositionedTransition" o-- "widgets::framework::Widget"
"widgets::transitions::PositionedTransition" o-- "animation::animation::Animation<RelativeRect>"
"widgets::transitions::AnimatedWidget" <|-- "widgets::transitions::PositionedTransition"

class "widgets::transitions::RelativePositionedTransition" {
  +Size size
  +Widget child
  +Animation<Rect?> rect
  +Widget build()
}

"widgets::transitions::RelativePositionedTransition" o-- "dart::ui::Size"
"widgets::transitions::RelativePositionedTransition" o-- "widgets::framework::Widget"
"widgets::transitions::RelativePositionedTransition" o-- "animation::animation::Animation<Rect>"
"widgets::transitions::AnimatedWidget" <|-- "widgets::transitions::RelativePositionedTransition"

class "widgets::transitions::DecoratedBoxTransition" {
  +Animation<Decoration> decoration
  +DecorationPosition position
  +Widget child
  +Widget build()
}

"widgets::transitions::DecoratedBoxTransition" o-- "animation::animation::Animation<Decoration>"
"widgets::transitions::DecoratedBoxTransition" o-- "rendering::proxy_box::DecorationPosition"
"widgets::transitions::DecoratedBoxTransition" o-- "widgets::framework::Widget"
"widgets::transitions::AnimatedWidget" <|-- "widgets::transitions::DecoratedBoxTransition"

class "widgets::transitions::AlignTransition" {
  +double? widthFactor
  +double? heightFactor
  +Widget child
  +Animation<AlignmentGeometry> alignment
  +Widget build()
}

"widgets::transitions::AlignTransition" o-- "widgets::framework::Widget"
"widgets::transitions::AlignTransition" o-- "animation::animation::Animation<AlignmentGeometry>"
"widgets::transitions::AnimatedWidget" <|-- "widgets::transitions::AlignTransition"

class "widgets::transitions::DefaultTextStyleTransition" {
  +TextAlign? textAlign
  +bool softWrap
  +TextOverflow overflow
  +int? maxLines
  +Widget child
  +Animation<TextStyle> style
  +Widget build()
}

"widgets::transitions::DefaultTextStyleTransition" o-- "dart::ui::TextAlign"
"widgets::transitions::DefaultTextStyleTransition" o-- "painting::text_painter::TextOverflow"
"widgets::transitions::DefaultTextStyleTransition" o-- "widgets::framework::Widget"
"widgets::transitions::DefaultTextStyleTransition" o-- "animation::animation::Animation<TextStyle>"
"widgets::transitions::AnimatedWidget" <|-- "widgets::transitions::DefaultTextStyleTransition"

class "widgets::transitions::ListenableBuilder" {
  +Widget Function(BuildContext, Widget?) builder
  +Widget? child
  +Listenable listenable
  +Widget build()
}

"widgets::transitions::ListenableBuilder" o-- "widgets::framework::Widget Function(BuildContext, Widget)"
"widgets::transitions::ListenableBuilder" o-- "widgets::framework::Widget"
"widgets::transitions::ListenableBuilder" o-- "foundation::change_notifier::Listenable"
"widgets::transitions::AnimatedWidget" <|-- "widgets::transitions::ListenableBuilder"

class "widgets::transitions::AnimatedBuilder" {
  +Listenable animation
  +Listenable listenable
  +Widget Function(BuildContext, Widget?) builder
}

"widgets::transitions::AnimatedBuilder" o-- "foundation::change_notifier::Listenable"
"widgets::transitions::AnimatedBuilder" o-- "widgets::framework::Widget Function(BuildContext, Widget)"
"widgets::transitions::ListenableBuilder" <|-- "widgets::transitions::AnimatedBuilder"

abstract class "widgets::sliver_persistent_header::SliverPersistentHeaderDelegate" {
  +double minExtent
  +double maxExtent
  +TickerProvider? vsync
  +FloatingHeaderSnapConfiguration? snapConfiguration
  +OverScrollHeaderStretchConfiguration? stretchConfiguration
  +PersistentHeaderShowOnScreenConfiguration? showOnScreenConfiguration
  +Widget build()
  +bool shouldRebuild()
}

"widgets::sliver_persistent_header::SliverPersistentHeaderDelegate" o-- "scheduler::ticker::TickerProvider"
"widgets::sliver_persistent_header::SliverPersistentHeaderDelegate" o-- "rendering::sliver_persistent_header::FloatingHeaderSnapConfiguration"
"widgets::sliver_persistent_header::SliverPersistentHeaderDelegate" o-- "rendering::sliver_persistent_header::OverScrollHeaderStretchConfiguration"
"widgets::sliver_persistent_header::SliverPersistentHeaderDelegate" o-- "rendering::sliver_persistent_header::PersistentHeaderShowOnScreenConfiguration"

class "widgets::sliver_persistent_header::SliverPersistentHeader" {
  +SliverPersistentHeaderDelegate delegate
  +bool pinned
  +bool floating
  +Widget build()
  +void debugFillProperties()
}

"widgets::sliver_persistent_header::SliverPersistentHeader" o-- "widgets::sliver_persistent_header::SliverPersistentHeaderDelegate"
"widgets::framework::StatelessWidget" <|-- "widgets::sliver_persistent_header::SliverPersistentHeader"

class "widgets::sliver_persistent_header::_FloatingHeader" {
  +Widget child
  +_FloatingHeaderState createState()
}

"widgets::sliver_persistent_header::_FloatingHeader" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::sliver_persistent_header::_FloatingHeader"

class "widgets::sliver_persistent_header::_FloatingHeaderState" {
  -ScrollPosition? _position
  +void didChangeDependencies()
  +void dispose()
  -RenderSliverFloatingPersistentHeader? _headerRenderer()
  -void _isScrollingListener()
  +Widget build()
}

"widgets::sliver_persistent_header::_FloatingHeaderState" o-- "widgets::scroll_position::ScrollPosition"
"widgets::framework::State" <|-- "widgets::sliver_persistent_header::_FloatingHeaderState"

class "widgets::sliver_persistent_header::_SliverPersistentHeaderElement" {
  +bool floating
  +Element? child
  +_RenderSliverPersistentHeaderForWidgetsMixin renderObject
  +void mount()
  +void unmount()
  +void update()
  +void performRebuild()
  -void _build()
  +void forgetChild()
  +void insertRenderObjectChild()
  +void moveRenderObjectChild()
  +void removeRenderObjectChild()
  +void visitChildren()
}

"widgets::sliver_persistent_header::_SliverPersistentHeaderElement" o-- "widgets::framework::Element"
"widgets::sliver_persistent_header::_SliverPersistentHeaderElement" o-- "widgets::sliver_persistent_header::_RenderSliverPersistentHeaderForWidgetsMixin"
"widgets::framework::RenderObjectElement" <|-- "widgets::sliver_persistent_header::_SliverPersistentHeaderElement"

abstract class "widgets::sliver_persistent_header::_SliverPersistentHeaderRenderObjectWidget" {
  +SliverPersistentHeaderDelegate delegate
  +bool floating
  +_SliverPersistentHeaderElement createElement()
  +_RenderSliverPersistentHeaderForWidgetsMixin createRenderObject()
  +void debugFillProperties()
}

"widgets::sliver_persistent_header::_SliverPersistentHeaderRenderObjectWidget" o-- "widgets::sliver_persistent_header::SliverPersistentHeaderDelegate"
"widgets::framework::RenderObjectWidget" <|-- "widgets::sliver_persistent_header::_SliverPersistentHeaderRenderObjectWidget"

class "widgets::sliver_persistent_header::_SliverScrollingPersistentHeader" {
  +_RenderSliverPersistentHeaderForWidgetsMixin createRenderObject()
  +void updateRenderObject()
}

"widgets::sliver_persistent_header::_SliverPersistentHeaderRenderObjectWidget" <|-- "widgets::sliver_persistent_header::_SliverScrollingPersistentHeader"

class "widgets::sliver_persistent_header::_RenderSliverScrollingPersistentHeaderForWidgets" {
}

"rendering::sliver_persistent_header::RenderSliverScrollingPersistentHeader" <|-- "widgets::sliver_persistent_header::_RenderSliverScrollingPersistentHeaderForWidgets"
"widgets::sliver_persistent_header::_RenderSliverPersistentHeaderForWidgetsMixin" <|-- "widgets::sliver_persistent_header::_RenderSliverScrollingPersistentHeaderForWidgets"

class "widgets::sliver_persistent_header::_SliverPinnedPersistentHeader" {
  +_RenderSliverPersistentHeaderForWidgetsMixin createRenderObject()
  +void updateRenderObject()
}

"widgets::sliver_persistent_header::_SliverPersistentHeaderRenderObjectWidget" <|-- "widgets::sliver_persistent_header::_SliverPinnedPersistentHeader"

class "widgets::sliver_persistent_header::_RenderSliverPinnedPersistentHeaderForWidgets" {
}

"rendering::sliver_persistent_header::RenderSliverPinnedPersistentHeader" <|-- "widgets::sliver_persistent_header::_RenderSliverPinnedPersistentHeaderForWidgets"
"widgets::sliver_persistent_header::_RenderSliverPersistentHeaderForWidgetsMixin" <|-- "widgets::sliver_persistent_header::_RenderSliverPinnedPersistentHeaderForWidgets"

class "widgets::sliver_persistent_header::_SliverFloatingPersistentHeader" {
  +_RenderSliverPersistentHeaderForWidgetsMixin createRenderObject()
  +void updateRenderObject()
}

"widgets::sliver_persistent_header::_SliverPersistentHeaderRenderObjectWidget" <|-- "widgets::sliver_persistent_header::_SliverFloatingPersistentHeader"

class "widgets::sliver_persistent_header::_RenderSliverFloatingPinnedPersistentHeaderForWidgets" {
}

"rendering::sliver_persistent_header::RenderSliverFloatingPinnedPersistentHeader" <|-- "widgets::sliver_persistent_header::_RenderSliverFloatingPinnedPersistentHeaderForWidgets"
"widgets::sliver_persistent_header::_RenderSliverPersistentHeaderForWidgetsMixin" <|-- "widgets::sliver_persistent_header::_RenderSliverFloatingPinnedPersistentHeaderForWidgets"

class "widgets::sliver_persistent_header::_SliverFloatingPinnedPersistentHeader" {
  +_RenderSliverPersistentHeaderForWidgetsMixin createRenderObject()
  +void updateRenderObject()
}

"widgets::sliver_persistent_header::_SliverPersistentHeaderRenderObjectWidget" <|-- "widgets::sliver_persistent_header::_SliverFloatingPinnedPersistentHeader"

class "widgets::sliver_persistent_header::_RenderSliverFloatingPersistentHeaderForWidgets" {
}

"rendering::sliver_persistent_header::RenderSliverFloatingPersistentHeader" <|-- "widgets::sliver_persistent_header::_RenderSliverFloatingPersistentHeaderForWidgets"
"widgets::sliver_persistent_header::_RenderSliverPersistentHeaderForWidgetsMixin" <|-- "widgets::sliver_persistent_header::_RenderSliverFloatingPersistentHeaderForWidgets"

abstract class "widgets::sliver_persistent_header::_RenderSliverPersistentHeaderForWidgetsMixin" {
  -_SliverPersistentHeaderElement? _element
  +double minExtent
  +double maxExtent
  +void updateChild()
  #void triggerRebuild()
}

"widgets::sliver_persistent_header::_RenderSliverPersistentHeaderForWidgetsMixin" o-- "widgets::sliver_persistent_header::_SliverPersistentHeaderElement"

class "widgets::page_storage::PageStorageKey" {
}

"foundation::key::ValueKey" <|-- "widgets::page_storage::PageStorageKey"

class "widgets::page_storage::_StorageEntryIdentifier" {
  +List<PageStorageKey<dynamic>> keys
  +bool isNotEmpty
  +int hashCode
  +bool ==()
  +String toString()
}

class "widgets::page_storage::PageStorageBucket" {
  -Map<Object, dynamic>? _storage
  {static} -bool _maybeAddKey()
  -List<PageStorageKey<dynamic>> _allKeys()
  -_StorageEntryIdentifier _computeIdentifier()
  +void writeState()
  +dynamic readState()
}

class "widgets::page_storage::PageStorage" {
  +Widget child
  +PageStorageBucket bucket
  {static} +PageStorageBucket? maybeOf()
  {static} +PageStorageBucket of()
  +Widget build()
}

"widgets::page_storage::PageStorage" o-- "widgets::framework::Widget"
"widgets::page_storage::PageStorage" o-- "widgets::page_storage::PageStorageBucket"
"widgets::framework::StatelessWidget" <|-- "widgets::page_storage::PageStorage"

abstract class "widgets::tap_region::TapRegionRegistry" {
  +void registerTapRegion()
  +void unregisterTapRegion()
  {static} +TapRegionRegistry of()
  {static} +TapRegionRegistry? maybeOf()
}

class "widgets::tap_region::TapRegionSurface" {
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::tap_region::TapRegionSurface"

class "widgets::tap_region::RenderTapRegionSurface" {
  -Expando<BoxHitTestResult> _cachedResults
  -Set<RenderTapRegion> _registeredRegions
  -Map<Object?, Set<RenderTapRegion>> _groupIdToRegions
  +void registerTapRegion()
  +void unregisterTapRegion()
  +bool hitTest()
  +void handleEvent()
  -Iterable<HitTestTarget> _getRegionsHit()
}

"rendering::proxy_box::RenderProxyBoxWithHitTestBehavior" <|-- "widgets::tap_region::RenderTapRegionSurface"
"widgets::tap_region::TapRegionRegistry" <|-- "widgets::tap_region::RenderTapRegionSurface"

class "widgets::tap_region::TapRegion" {
  +bool enabled
  +HitTestBehavior behavior
  +void Function(PointerDownEvent)? onTapOutside
  +void Function(PointerDownEvent)? onTapInside
  +Object? groupId
  +String? debugLabel
  +RenderObject createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::tap_region::TapRegion" o-- "rendering::proxy_box::HitTestBehavior"
"widgets::tap_region::TapRegion" o-- "widgets::tap_region::void Function(PointerDownEvent)"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::tap_region::TapRegion"

class "widgets::tap_region::RenderTapRegion" {
  -bool _isRegistered
  +void Function(PointerDownEvent)? onTapOutside
  +void Function(PointerDownEvent)? onTapInside
  +String? debugLabel
  -bool _enabled
  -Object? _groupId
  -TapRegionRegistry? _registry
  +bool enabled
  +Object? groupId
  +TapRegionRegistry? registry
  +void layout()
  +void dispose()
  +void debugFillProperties()
}

"widgets::tap_region::RenderTapRegion" o-- "widgets::tap_region::void Function(PointerDownEvent)"
"widgets::tap_region::RenderTapRegion" o-- "widgets::tap_region::TapRegionRegistry"
"rendering::proxy_box::RenderProxyBoxWithHitTestBehavior" <|-- "widgets::tap_region::RenderTapRegion"

class "widgets::tap_region::TextFieldTapRegion" {
}

"widgets::tap_region::TapRegion" <|-- "widgets::tap_region::TextFieldTapRegion"

class "widgets::spell_check::SpellCheckConfiguration" {
  +dynamic spellCheckService
  +Color? misspelledSelectionColor
  +TextStyle? misspelledTextStyle
  +Widget Function(BuildContext, EditableTextState)? spellCheckSuggestionsToolbarBuilder
  -bool _spellCheckEnabled
  +bool spellCheckEnabled
  +int hashCode
  +SpellCheckConfiguration copyWith()
  +String toString()
  +bool ==()
}

"widgets::spell_check::SpellCheckConfiguration" o-- "dart::ui::Color"
"widgets::spell_check::SpellCheckConfiguration" o-- "painting::text_style::TextStyle"
"widgets::spell_check::SpellCheckConfiguration" o-- "widgets::editable_text::Widget Function(BuildContext, EditableTextState)"

class "widgets::router::RouteInformation" {
  -String? _location
  -Uri? _uri
  +Object? state
  +String location
  +Uri uri
}

class "widgets::router::RouterConfig" {
  +RouteInformationProvider? routeInformationProvider
  +RouteInformationParser<T>? routeInformationParser
  +RouterDelegate<T> routerDelegate
  +BackButtonDispatcher? backButtonDispatcher
}

"widgets::router::RouterConfig" o-- "widgets::router::RouteInformationProvider"
"widgets::router::RouterConfig" o-- "widgets::router::RouteInformationParser<T>"
"widgets::router::RouterConfig" o-- "widgets::router::RouterDelegate<T>"
"widgets::router::RouterConfig" o-- "widgets::router::BackButtonDispatcher"

class "widgets::router::Router" {
  +RouteInformationProvider? routeInformationProvider
  +RouteInformationParser<T>? routeInformationParser
  +RouterDelegate<T> routerDelegate
  +BackButtonDispatcher? backButtonDispatcher
  +String? restorationScopeId
  {static} +Router<T> of()
  {static} +Router<T>? maybeOf()
  {static} +void navigate()
  {static} +void neglect()
  +State<Router<T>> createState()
}

"widgets::router::Router" o-- "widgets::router::RouteInformationProvider"
"widgets::router::Router" o-- "widgets::router::RouteInformationParser<T>"
"widgets::router::Router" o-- "widgets::router::RouterDelegate<T>"
"widgets::router::Router" o-- "widgets::router::BackButtonDispatcher"
"widgets::framework::StatefulWidget" <|-- "widgets::router::Router"

class "widgets::router::_RouterState" {
  -Object? _currentRouterTransaction
  -RouteInformationReportingType? _currentIntentionToReport
  -_RestorableRouteInformation _routeInformation
  -bool _routeParsePending
  -bool _routeInformationReportingTaskScheduled
  +String? restorationId
  +void initState()
  +void restoreState()
  -void _scheduleRouteInformationReportingTask()
  -void _reportRouteInformation()
  -RouteInformation? _retrieveNewRouteInformation()
  -void _setStateWithExplicitReportStatus()
  -void _maybeNeedToReportRouteInformation()
  +void didChangeDependencies()
  +void didUpdateWidget()
  +void dispose()
  -void _processRouteInformation()
  -Future<void> Function(T) _processParsedRouteInformation()
  -void _handleRouteInformationProviderNotification()
  -Future<bool> _handleBackButtonDispatcherNotification()
  -Future<bool> Function(bool) _handleRoutePopped()
  -Future<void> _rebuild()
  -void _handleRouterDelegateNotification()
  +Widget build()
}

"widgets::router::_RouterState" o-- "widgets::router::RouteInformationReportingType"
"widgets::router::_RouterState" o-- "widgets::router::_RestorableRouteInformation"
"widgets::framework::State" <|-- "widgets::router::_RouterState"
"widgets::restoration::RestorationMixin" <|-- "widgets::router::_RouterState"

class "widgets::router::_RouterScope" {
  +ValueListenable<RouteInformation?>? routeInformationProvider
  +BackButtonDispatcher? backButtonDispatcher
  +RouteInformationParser<Object?>? routeInformationParser
  +RouterDelegate<Object?> routerDelegate
  +_RouterState<Object?> routerState
  +bool updateShouldNotify()
}

"widgets::router::_RouterScope" o-- "foundation::change_notifier::ValueListenable<RouteInformation>"
"widgets::router::_RouterScope" o-- "widgets::router::BackButtonDispatcher"
"widgets::router::_RouterScope" o-- "widgets::router::RouteInformationParser<Object>"
"widgets::router::_RouterScope" o-- "widgets::router::RouterDelegate<Object>"
"widgets::router::_RouterScope" o-- "widgets::router::_RouterState<Object>"
"widgets::framework::InheritedWidget" <|-- "widgets::router::_RouterScope"

class "widgets::router::_CallbackHookProvider" {
  -ObserverList<T Function()> _callbacks
  +bool hasCallbacks
  +void addCallback()
  +void removeCallback()
  #T invokeCallback()
}

"widgets::router::_CallbackHookProvider" o-- "foundation::observer_list::ObserverList<T Function()>"

abstract class "widgets::router::BackButtonDispatcher" {
  -LinkedHashSet<ChildBackButtonDispatcher> _children
  +bool hasCallbacks
  +Future<bool> invokeCallback()
  +ChildBackButtonDispatcher createChildBackButtonDispatcher()
  +void takePriority()
  +void deferTo()
  +void forget()
}

"widgets::router::BackButtonDispatcher" o-- "dart::collection::LinkedHashSet<ChildBackButtonDispatcher>"
"widgets::router::_CallbackHookProvider" <|-- "widgets::router::BackButtonDispatcher"

class "widgets::router::RootBackButtonDispatcher" {
  +void addCallback()
  +void removeCallback()
  +Future<bool> didPopRoute()
}

"widgets::router::BackButtonDispatcher" <|-- "widgets::router::RootBackButtonDispatcher"
"widgets::binding::WidgetsBindingObserver" <|-- "widgets::router::RootBackButtonDispatcher"

class "widgets::router::ChildBackButtonDispatcher" {
  +BackButtonDispatcher parent
  #Future<bool> notifiedByParent()
  +void takePriority()
  +void deferTo()
  +void removeCallback()
}

"widgets::router::ChildBackButtonDispatcher" o-- "widgets::router::BackButtonDispatcher"
"widgets::router::BackButtonDispatcher" <|-- "widgets::router::ChildBackButtonDispatcher"

class "widgets::router::BackButtonListener" {
  +Widget child
  +Future<bool> Function() onBackButtonPressed
  +State<BackButtonListener> createState()
}

"widgets::router::BackButtonListener" o-- "widgets::framework::Widget"
"widgets::router::BackButtonListener" o-- "foundation::basic_types::Future<bool> Function()"
"widgets::framework::StatefulWidget" <|-- "widgets::router::BackButtonListener"

class "widgets::router::_BackButtonListenerState" {
  +BackButtonDispatcher? dispatcher
  +void didChangeDependencies()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"widgets::router::_BackButtonListenerState" o-- "widgets::router::BackButtonDispatcher"
"widgets::framework::State" <|-- "widgets::router::_BackButtonListenerState"

abstract class "widgets::router::RouteInformationParser" {
  +Future<T> parseRouteInformation()
  +Future<T> parseRouteInformationWithDependencies()
  +RouteInformation? restoreRouteInformation()
}

abstract class "widgets::router::RouterDelegate" {
  +T? currentConfiguration
  +Future<void> setInitialRoutePath()
  +Future<void> setRestoredRoutePath()
  +Future<void> setNewRoutePath()
  +Future<bool> popRoute()
  +Widget build()
}

"foundation::change_notifier::Listenable" <|-- "widgets::router::RouterDelegate"

abstract class "widgets::router::RouteInformationProvider" {
  +void routerReportsNewRouteInformation()
}

"foundation::change_notifier::ValueListenable" <|-- "widgets::router::RouteInformationProvider"

class "widgets::router::PlatformRouteInformationProvider" {
  -RouteInformation _value
  -RouteInformation _valueInEngine
  +RouteInformation value
  {static} -bool _equals()
  +void routerReportsNewRouteInformation()
  -void _platformReportsNewRouteInformation()
  +void addListener()
  +void removeListener()
  +void dispose()
  +Future<bool> didPushRouteInformation()
}

"widgets::router::PlatformRouteInformationProvider" o-- "widgets::router::RouteInformation"
"widgets::router::RouteInformationProvider" <|-- "widgets::router::PlatformRouteInformationProvider"
"widgets::binding::WidgetsBindingObserver" <|-- "widgets::router::PlatformRouteInformationProvider"
"foundation::change_notifier::ChangeNotifier" <|-- "widgets::router::PlatformRouteInformationProvider"

class "widgets::router::_RestorableRouteInformation" {
  +RouteInformation? createDefaultValue()
  +void didUpdateValue()
  +RouteInformation? fromPrimitives()
  +Object? toPrimitives()
}

"widgets::restoration_properties::RestorableValue" <|-- "widgets::router::_RestorableRouteInformation"

class "widgets::router::RouteInformationReportingType" {
  +int index
  {static} +List<RouteInformationReportingType> values
  {static} +RouteInformationReportingType none
  {static} +RouteInformationReportingType neglect
  {static} +RouteInformationReportingType navigate
}

"widgets::router::RouteInformationReportingType" o-- "widgets::router::RouteInformationReportingType"
"dart::core::Enum" <|-- "widgets::router::RouteInformationReportingType"

abstract class "widgets::router::PopNavigatorRouterDelegateMixin" {
  +GlobalKey<NavigatorState>? navigatorKey
  +Future<bool> popRoute()
}

"widgets::router::PopNavigatorRouterDelegateMixin" o-- "widgets::framework::GlobalKey<NavigatorState>"

abstract class "widgets::routes::OverlayRoute" {
  -List<OverlayEntry> _overlayEntries
  +List<OverlayEntry> overlayEntries
  +bool finishedWhenPopped
  +Iterable<OverlayEntry> createOverlayEntries()
  +void install()
  +bool didPop()
  +void dispose()
}

"widgets::navigator::Route" <|-- "widgets::routes::OverlayRoute"

abstract class "widgets::routes::TransitionRoute" {
  -Completer<T?> _transitionCompleter
  -dynamic _performanceModeRequestHandle
  -bool _popFinalized
  -Animation<double>? _animation
  -AnimationController? _controller
  -ProxyAnimation _secondaryAnimation
  +bool willDisposeAnimationController
  -T? _result
  -void Function()? _trainHoppingListenerRemover
  +Future<T?> completed
  +Duration transitionDuration
  +Duration reverseTransitionDuration
  +bool opaque
  +bool allowSnapshotting
  +bool finishedWhenPopped
  +Animation<double>? animation
  +AnimationController? controller
  +Animation<double>? secondaryAnimation
  +String debugLabel
  +AnimationController createAnimationController()
  +Animation<double> createAnimation()
  -void _handleStatusChanged()
  +void install()
  +TickerFuture didPush()
  +void didAdd()
  +void didReplace()
  +bool didPop()
  +void didPopNext()
  +void didChangeNext()
  -void _updateSecondaryAnimation()
  -void _setSecondaryAnimation()
  +bool canTransitionTo()
  +bool canTransitionFrom()
  +void dispose()
  +String toString()
}

"widgets::routes::TransitionRoute" o-- "dart::async::Completer<T>"
"widgets::routes::TransitionRoute" o-- "animation::animation::Animation<double>"
"widgets::routes::TransitionRoute" o-- "animation::animation_controller::AnimationController"
"widgets::routes::TransitionRoute" o-- "animation::animations::ProxyAnimation"
"widgets::routes::TransitionRoute" o-- "dart::ui::void Function()"
"widgets::routes::OverlayRoute" <|-- "widgets::routes::TransitionRoute"

class "widgets::routes::LocalHistoryEntry" {
  +void Function()? onRemove
  -LocalHistoryRoute<dynamic>? _owner
  +bool impliesAppBarDismissal
  +void remove()
  -void _notifyRemoved()
}

"widgets::routes::LocalHistoryEntry" o-- "dart::ui::void Function()"
"widgets::routes::LocalHistoryEntry" o-- "widgets::routes::LocalHistoryRoute<dynamic>"

class "widgets::routes::_DismissModalAction" {
  +BuildContext context
  +bool isEnabled()
  +Object invoke()
}

"widgets::routes::_DismissModalAction" o-- "widgets::framework::BuildContext"
"widgets::actions::DismissAction" <|-- "widgets::routes::_DismissModalAction"

class "widgets::routes::_ModalScopeStatus" {
  +bool isCurrent
  +bool canPop
  +bool impliesAppBarDismissal
  +Route<dynamic> route
  +bool updateShouldNotify()
  +void debugFillProperties()
}

"widgets::routes::_ModalScopeStatus" o-- "widgets::navigator::Route<dynamic>"
"widgets::framework::InheritedWidget" <|-- "widgets::routes::_ModalScopeStatus"

class "widgets::routes::_ModalScope" {
  +ModalRoute<T> route
  +_ModalScopeState<T> createState()
}

"widgets::routes::_ModalScope" o-- "widgets::routes::ModalRoute<T>"
"widgets::framework::StatefulWidget" <|-- "widgets::routes::_ModalScope"

class "widgets::routes::_ModalScopeState" {
  -Widget? _page
  -Listenable _listenable
  +FocusScopeNode focusScopeNode
  +ScrollController primaryScrollController
  -bool _shouldIgnoreFocusRequest
  -bool _shouldRequestFocus
  +void initState()
  +void didUpdateWidget()
  +void didChangeDependencies()
  -void _updateFocusScopeNode()
  -void _forceRebuildPage()
  +void dispose()
  -void _routeSetState()
  +Widget build()
}

"widgets::routes::_ModalScopeState" o-- "widgets::framework::Widget"
"widgets::routes::_ModalScopeState" o-- "foundation::change_notifier::Listenable"
"widgets::routes::_ModalScopeState" o-- "widgets::focus_manager::FocusScopeNode"
"widgets::routes::_ModalScopeState" o-- "widgets::scroll_controller::ScrollController"
"widgets::framework::State" <|-- "widgets::routes::_ModalScopeState"

abstract class "widgets::routes::ModalRoute" {
  +ImageFilter? filter
  +TraversalEdgeBehavior? traversalEdgeBehavior
  -bool _offstage
  -ProxyAnimation? _animationProxy
  -ProxyAnimation? _secondaryAnimationProxy
  -List<Future<bool> Function()> _willPopCallbacks
  -Set<PopEntry> _popEntries
  -GlobalKey<_ModalScopeState<T>> _scopeKey
  -GlobalKey<State<StatefulWidget>> _subtreeKey
  -PageStorageBucket _storageBucket
  -OverlayEntry _modalBarrier
  -Widget? _modalScopeCache
  -OverlayEntry _modalScope
  +bool barrierDismissible
  +bool semanticsDismissible
  +Color? barrierColor
  +String? barrierLabel
  +Curve barrierCurve
  +bool maintainState
  +bool offstage
  +BuildContext? subtreeContext
  +Animation<double>? animation
  +Animation<double>? secondaryAnimation
  +RoutePopDisposition popDisposition
  +bool hasScopedWillPopCallback
  +bool canPop
  +bool impliesAppBarDismissal
  {static} +ModalRoute<T>? of()
  #void setState()
  {static} +bool Function(Route<dynamic>) withName()
  +Widget buildPage()
  +Widget buildTransitions()
  +void install()
  +TickerFuture didPush()
  +void didAdd()
  +Future<RoutePopDisposition> willPop()
  +void onPopInvoked()
  +void addScopedWillPopCallback()
  +void removeScopedWillPopCallback()
  +void registerPopEntry()
  +void unregisterPopEntry()
  -void _handlePopEntryChange()
  +void didChangePrevious()
  +void changedInternalState()
  +void changedExternalState()
  -Widget _buildModalBarrier()
  +Widget buildModalBarrier()
  -Widget _buildModalScope()
  +Iterable<OverlayEntry> createOverlayEntries()
  +String toString()
}

"widgets::routes::ModalRoute" o-- "dart::ui::ImageFilter"
"widgets::routes::ModalRoute" o-- "widgets::focus_traversal::TraversalEdgeBehavior"
"widgets::routes::ModalRoute" o-- "animation::animations::ProxyAnimation"
"widgets::routes::ModalRoute" o-- "widgets::framework::GlobalKey<_ModalScopeState<T>>"
"widgets::routes::ModalRoute" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::routes::ModalRoute" o-- "widgets::page_storage::PageStorageBucket"
"widgets::routes::ModalRoute" o-- "widgets::overlay::OverlayEntry"
"widgets::routes::ModalRoute" o-- "widgets::framework::Widget"
"widgets::routes::ModalRoute" o-- "dart::ui::Color"
"widgets::routes::ModalRoute" o-- "animation::curves::Curve"
"widgets::routes::ModalRoute" o-- "widgets::framework::BuildContext"
"widgets::routes::ModalRoute" o-- "animation::animation::Animation<double>"
"widgets::routes::ModalRoute" o-- "widgets::navigator::RoutePopDisposition"
"widgets::routes::TransitionRoute" <|-- "widgets::routes::ModalRoute"
"widgets::routes::LocalHistoryRoute" <|-- "widgets::routes::ModalRoute"

abstract class "widgets::routes::PopupRoute" {
  +bool opaque
  +bool maintainState
  +bool allowSnapshotting
}

"widgets::routes::ModalRoute" <|-- "widgets::routes::PopupRoute"

class "widgets::routes::RouteObserver" {
  -Map<R, Set<RouteAware>> _listeners
  +bool debugObservingRoute()
  +void subscribe()
  +void unsubscribe()
  +void didPop()
  +void didPush()
}

"widgets::navigator::NavigatorObserver" <|-- "widgets::routes::RouteObserver"

class "widgets::routes::RouteAware" {
  +void didPopNext()
  +void didPush()
  +void didPop()
  +void didPushNext()
}

class "widgets::routes::RawDialogRoute" {
  -Widget Function(BuildContext, Animation<double>, Animation<double>) _pageBuilder
  -bool _barrierDismissible
  -String? _barrierLabel
  -Color? _barrierColor
  -Duration _transitionDuration
  -Widget Function(BuildContext, Animation<double>, Animation<double>, Widget)? _transitionBuilder
  +Offset? anchorPoint
  +bool barrierDismissible
  +String? barrierLabel
  +Color? barrierColor
  +Duration transitionDuration
  +Widget buildPage()
  +Widget buildTransitions()
}

"widgets::routes::RawDialogRoute" o-- "widgets::routes::Widget Function(BuildContext, Animation<double>, Animation<double>)"
"widgets::routes::RawDialogRoute" o-- "dart::ui::Color"
"widgets::routes::RawDialogRoute" o-- "widgets::routes::Widget Function(BuildContext, Animation<double>, Animation<double>, Widget)"
"widgets::routes::RawDialogRoute" o-- "dart::ui::Offset"
"widgets::routes::PopupRoute" <|-- "widgets::routes::RawDialogRoute"

abstract class "widgets::routes::PopEntry" {
  +void Function(bool)? onPopInvoked
  +ValueListenable<bool> canPopNotifier
  +String toString()
}

"widgets::routes::PopEntry" o-- "widgets::routes::void Function(bool)"
"widgets::routes::PopEntry" o-- "foundation::change_notifier::ValueListenable<bool>"

abstract class "widgets::routes::LocalHistoryRoute" {
  -List<LocalHistoryEntry>? _localHistory
  -int _entriesImpliesAppBarDismissal
  +RoutePopDisposition popDisposition
  +bool willHandlePopInternally
  +void addLocalHistoryEntry()
  +void removeLocalHistoryEntry()
  +Future<RoutePopDisposition> willPop()
  +bool didPop()
}

"widgets::routes::LocalHistoryRoute" o-- "widgets::navigator::RoutePopDisposition"

abstract class "widgets::routes::" {
}

class "widgets::basic::_UbiquitousInheritedElement" {
  +void setDependencies()
  +Object? getDependencies()
  +void notifyClients()
  {static} -void _recurseChildren()
}

"widgets::framework::InheritedElement" <|-- "widgets::basic::_UbiquitousInheritedElement"

abstract class "widgets::basic::_UbiquitousInheritedWidget" {
  +InheritedElement createElement()
}

"widgets::framework::InheritedWidget" <|-- "widgets::basic::_UbiquitousInheritedWidget"

class "widgets::basic::Directionality" {
  +TextDirection textDirection
  {static} +TextDirection of()
  {static} +TextDirection? maybeOf()
  +bool updateShouldNotify()
  +void debugFillProperties()
}

"widgets::basic::Directionality" o-- "dart::ui::TextDirection"
"widgets::basic::_UbiquitousInheritedWidget" <|-- "widgets::basic::Directionality"

class "widgets::basic::Opacity" {
  +double opacity
  +bool alwaysIncludeSemantics
  +RenderOpacity createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::Opacity"

class "widgets::basic::ShaderMask" {
  +Shader Function(Rect) shaderCallback
  +BlendMode blendMode
  +RenderShaderMask createRenderObject()
  +void updateRenderObject()
}

"widgets::basic::ShaderMask" o-- "rendering::proxy_box::Shader Function(Rect)"
"widgets::basic::ShaderMask" o-- "dart::ui::BlendMode"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::ShaderMask"

class "widgets::basic::BackdropFilter" {
  +ImageFilter filter
  +BlendMode blendMode
  +RenderBackdropFilter createRenderObject()
  +void updateRenderObject()
}

"widgets::basic::BackdropFilter" o-- "dart::ui::ImageFilter"
"widgets::basic::BackdropFilter" o-- "dart::ui::BlendMode"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::BackdropFilter"

class "widgets::basic::CustomPaint" {
  +CustomPainter? painter
  +CustomPainter? foregroundPainter
  +Size size
  +bool isComplex
  +bool willChange
  +RenderCustomPaint createRenderObject()
  +void updateRenderObject()
  +void didUnmountRenderObject()
}

"widgets::basic::CustomPaint" o-- "rendering::custom_paint::CustomPainter"
"widgets::basic::CustomPaint" o-- "dart::ui::Size"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::CustomPaint"

class "widgets::basic::ClipRect" {
  +CustomClipper<Rect>? clipper
  +Clip clipBehavior
  +RenderClipRect createRenderObject()
  +void updateRenderObject()
  +void didUnmountRenderObject()
  +void debugFillProperties()
}

"widgets::basic::ClipRect" o-- "rendering::proxy_box::CustomClipper<Rect>"
"widgets::basic::ClipRect" o-- "dart::ui::Clip"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::ClipRect"

class "widgets::basic::ClipRRect" {
  +BorderRadiusGeometry borderRadius
  +CustomClipper<RRect>? clipper
  +Clip clipBehavior
  +RenderClipRRect createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::ClipRRect" o-- "painting::border_radius::BorderRadiusGeometry"
"widgets::basic::ClipRRect" o-- "rendering::proxy_box::CustomClipper<RRect>"
"widgets::basic::ClipRRect" o-- "dart::ui::Clip"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::ClipRRect"

class "widgets::basic::ClipOval" {
  +CustomClipper<Rect>? clipper
  +Clip clipBehavior
  +RenderClipOval createRenderObject()
  +void updateRenderObject()
  +void didUnmountRenderObject()
  +void debugFillProperties()
}

"widgets::basic::ClipOval" o-- "rendering::proxy_box::CustomClipper<Rect>"
"widgets::basic::ClipOval" o-- "dart::ui::Clip"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::ClipOval"

class "widgets::basic::ClipPath" {
  +CustomClipper<Path>? clipper
  +Clip clipBehavior
  {static} +Widget shape()
  +RenderClipPath createRenderObject()
  +void updateRenderObject()
  +void didUnmountRenderObject()
  +void debugFillProperties()
}

"widgets::basic::ClipPath" o-- "rendering::proxy_box::CustomClipper<Path>"
"widgets::basic::ClipPath" o-- "dart::ui::Clip"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::ClipPath"

class "widgets::basic::PhysicalModel" {
  +BoxShape shape
  +Clip clipBehavior
  +BorderRadius? borderRadius
  +double elevation
  +Color color
  +Color shadowColor
  +RenderPhysicalModel createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::PhysicalModel" o-- "painting::box_border::BoxShape"
"widgets::basic::PhysicalModel" o-- "dart::ui::Clip"
"widgets::basic::PhysicalModel" o-- "painting::border_radius::BorderRadius"
"widgets::basic::PhysicalModel" o-- "dart::ui::Color"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::PhysicalModel"

class "widgets::basic::PhysicalShape" {
  +CustomClipper<Path> clipper
  +Clip clipBehavior
  +double elevation
  +Color color
  +Color shadowColor
  +RenderPhysicalShape createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::PhysicalShape" o-- "rendering::proxy_box::CustomClipper<Path>"
"widgets::basic::PhysicalShape" o-- "dart::ui::Clip"
"widgets::basic::PhysicalShape" o-- "dart::ui::Color"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::PhysicalShape"

class "widgets::basic::Transform" {
  +Matrix4 transform
  +Offset? origin
  +AlignmentGeometry? alignment
  +bool transformHitTests
  +FilterQuality? filterQuality
  {static} -Matrix4 _computeRotation()
  {static} -Matrix4 _createZRotation()
  +RenderTransform createRenderObject()
  +void updateRenderObject()
}

"widgets::basic::Transform" o-- "vector_math::vector_math_64::Matrix4"
"widgets::basic::Transform" o-- "dart::ui::Offset"
"widgets::basic::Transform" o-- "painting::alignment::AlignmentGeometry"
"widgets::basic::Transform" o-- "dart::ui::FilterQuality"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::Transform"

class "widgets::basic::CompositedTransformTarget" {
  +LayerLink link
  +RenderLeaderLayer createRenderObject()
  +void updateRenderObject()
}

"widgets::basic::CompositedTransformTarget" o-- "rendering::layer::LayerLink"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::CompositedTransformTarget"

class "widgets::basic::CompositedTransformFollower" {
  +LayerLink link
  +bool showWhenUnlinked
  +Alignment targetAnchor
  +Alignment followerAnchor
  +Offset offset
  +RenderFollowerLayer createRenderObject()
  +void updateRenderObject()
}

"widgets::basic::CompositedTransformFollower" o-- "rendering::layer::LayerLink"
"widgets::basic::CompositedTransformFollower" o-- "painting::alignment::Alignment"
"widgets::basic::CompositedTransformFollower" o-- "dart::ui::Offset"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::CompositedTransformFollower"

class "widgets::basic::FittedBox" {
  +BoxFit fit
  +AlignmentGeometry alignment
  +Clip clipBehavior
  +RenderFittedBox createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::FittedBox" o-- "painting::box_fit::BoxFit"
"widgets::basic::FittedBox" o-- "painting::alignment::AlignmentGeometry"
"widgets::basic::FittedBox" o-- "dart::ui::Clip"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::FittedBox"

class "widgets::basic::FractionalTranslation" {
  +Offset translation
  +bool transformHitTests
  +RenderFractionalTranslation createRenderObject()
  +void updateRenderObject()
}

"widgets::basic::FractionalTranslation" o-- "dart::ui::Offset"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::FractionalTranslation"

class "widgets::basic::RotatedBox" {
  +int quarterTurns
  +RenderRotatedBox createRenderObject()
  +void updateRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::RotatedBox"

class "widgets::basic::Padding" {
  +EdgeInsetsGeometry padding
  +RenderPadding createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::Padding" o-- "painting::edge_insets::EdgeInsetsGeometry"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::Padding"

class "widgets::basic::Align" {
  +AlignmentGeometry alignment
  +double? widthFactor
  +double? heightFactor
  +RenderPositionedBox createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::Align" o-- "painting::alignment::AlignmentGeometry"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::Align"

class "widgets::basic::Center" {
}

"widgets::basic::Align" <|-- "widgets::basic::Center"

class "widgets::basic::CustomSingleChildLayout" {
  +SingleChildLayoutDelegate delegate
  +RenderCustomSingleChildLayoutBox createRenderObject()
  +void updateRenderObject()
}

"widgets::basic::CustomSingleChildLayout" o-- "rendering::shifted_box::SingleChildLayoutDelegate"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::CustomSingleChildLayout"

class "widgets::basic::LayoutId" {
  +Object id
  +Type debugTypicalAncestorWidgetClass
  +void applyParentData()
  +void debugFillProperties()
}

"widgets::framework::ParentDataWidget" <|-- "widgets::basic::LayoutId"

class "widgets::basic::CustomMultiChildLayout" {
  +MultiChildLayoutDelegate delegate
  +RenderCustomMultiChildLayoutBox createRenderObject()
  +void updateRenderObject()
}

"widgets::basic::CustomMultiChildLayout" o-- "rendering::custom_layout::MultiChildLayoutDelegate"
"widgets::framework::MultiChildRenderObjectWidget" <|-- "widgets::basic::CustomMultiChildLayout"

class "widgets::basic::SizedBox" {
  +double? width
  +double? height
  -BoxConstraints _additionalConstraints
  +RenderConstrainedBox createRenderObject()
  +void updateRenderObject()
  +String toStringShort()
  +void debugFillProperties()
}

"widgets::basic::SizedBox" o-- "rendering::box::BoxConstraints"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::SizedBox"

class "widgets::basic::ConstrainedBox" {
  +BoxConstraints constraints
  +RenderConstrainedBox createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::ConstrainedBox" o-- "rendering::box::BoxConstraints"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::ConstrainedBox"

class "widgets::basic::ConstraintsTransformBox" {
  {static} -Map<BoxConstraints Function(BoxConstraints), String> _debugKnownTransforms
  +TextDirection? textDirection
  +AlignmentGeometry alignment
  +BoxConstraints Function(BoxConstraints) constraintsTransform
  +Clip clipBehavior
  -String _debugTransformLabel
  {static} +BoxConstraints unmodified()
  {static} +BoxConstraints unconstrained()
  {static} +BoxConstraints widthUnconstrained()
  {static} +BoxConstraints heightUnconstrained()
  {static} +BoxConstraints maxHeightUnconstrained()
  {static} +BoxConstraints maxWidthUnconstrained()
  {static} +BoxConstraints maxUnconstrained()
  +RenderConstraintsTransformBox createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::ConstraintsTransformBox" o-- "dart::ui::TextDirection"
"widgets::basic::ConstraintsTransformBox" o-- "painting::alignment::AlignmentGeometry"
"widgets::basic::ConstraintsTransformBox" o-- "rendering::shifted_box::BoxConstraints Function(BoxConstraints)"
"widgets::basic::ConstraintsTransformBox" o-- "dart::ui::Clip"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::ConstraintsTransformBox"

class "widgets::basic::UnconstrainedBox" {
  +TextDirection? textDirection
  +AlignmentGeometry alignment
  +Axis? constrainedAxis
  +Clip clipBehavior
  +Widget? child
  -BoxConstraints Function(BoxConstraints) _axisToTransform()
  +Widget build()
  +void debugFillProperties()
}

"widgets::basic::UnconstrainedBox" o-- "dart::ui::TextDirection"
"widgets::basic::UnconstrainedBox" o-- "painting::alignment::AlignmentGeometry"
"widgets::basic::UnconstrainedBox" o-- "painting::basic_types::Axis"
"widgets::basic::UnconstrainedBox" o-- "dart::ui::Clip"
"widgets::basic::UnconstrainedBox" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::basic::UnconstrainedBox"

class "widgets::basic::FractionallySizedBox" {
  +double? widthFactor
  +double? heightFactor
  +AlignmentGeometry alignment
  +RenderFractionallySizedOverflowBox createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::FractionallySizedBox" o-- "painting::alignment::AlignmentGeometry"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::FractionallySizedBox"

class "widgets::basic::LimitedBox" {
  +double maxWidth
  +double maxHeight
  +RenderLimitedBox createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::LimitedBox"

class "widgets::basic::OverflowBox" {
  +AlignmentGeometry alignment
  +double? minWidth
  +double? maxWidth
  +double? minHeight
  +double? maxHeight
  +RenderConstrainedOverflowBox createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::OverflowBox" o-- "painting::alignment::AlignmentGeometry"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::OverflowBox"

class "widgets::basic::SizedOverflowBox" {
  +AlignmentGeometry alignment
  +Size size
  +RenderSizedOverflowBox createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::SizedOverflowBox" o-- "painting::alignment::AlignmentGeometry"
"widgets::basic::SizedOverflowBox" o-- "dart::ui::Size"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::SizedOverflowBox"

class "widgets::basic::Offstage" {
  +bool offstage
  +RenderOffstage createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
  +SingleChildRenderObjectElement createElement()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::Offstage"

class "widgets::basic::_OffstageElement" {
  +void debugVisitOnstageChildren()
}

"widgets::framework::SingleChildRenderObjectElement" <|-- "widgets::basic::_OffstageElement"

class "widgets::basic::AspectRatio" {
  +double aspectRatio
  +RenderAspectRatio createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::AspectRatio"

class "widgets::basic::IntrinsicWidth" {
  +double? stepWidth
  +double? stepHeight
  -double? _stepWidth
  -double? _stepHeight
  +RenderIntrinsicWidth createRenderObject()
  +void updateRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::IntrinsicWidth"

class "widgets::basic::IntrinsicHeight" {
  +RenderIntrinsicHeight createRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::IntrinsicHeight"

class "widgets::basic::Baseline" {
  +double baseline
  +TextBaseline baselineType
  +RenderBaseline createRenderObject()
  +void updateRenderObject()
}

"widgets::basic::Baseline" o-- "dart::ui::TextBaseline"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::Baseline"

class "widgets::basic::IgnoreBaseline" {
  +dynamic createRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::IgnoreBaseline"

class "widgets::basic::SliverToBoxAdapter" {
  +RenderSliverToBoxAdapter createRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::SliverToBoxAdapter"

class "widgets::basic::SliverPadding" {
  +EdgeInsetsGeometry padding
  +RenderSliverPadding createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::SliverPadding" o-- "painting::edge_insets::EdgeInsetsGeometry"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::SliverPadding"

class "widgets::basic::ListBody" {
  +Axis mainAxis
  +bool reverse
  -AxisDirection _getDirection()
  +RenderListBody createRenderObject()
  +void updateRenderObject()
}

"widgets::basic::ListBody" o-- "painting::basic_types::Axis"
"widgets::framework::MultiChildRenderObjectWidget" <|-- "widgets::basic::ListBody"

class "widgets::basic::Stack" {
  +AlignmentGeometry alignment
  +TextDirection? textDirection
  +StackFit fit
  +Clip clipBehavior
  -bool _debugCheckHasDirectionality()
  +RenderStack createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::Stack" o-- "painting::alignment::AlignmentGeometry"
"widgets::basic::Stack" o-- "dart::ui::TextDirection"
"widgets::basic::Stack" o-- "rendering::stack::StackFit"
"widgets::basic::Stack" o-- "dart::ui::Clip"
"widgets::framework::MultiChildRenderObjectWidget" <|-- "widgets::basic::Stack"

class "widgets::basic::IndexedStack" {
  +AlignmentGeometry alignment
  +TextDirection? textDirection
  +Clip clipBehavior
  +StackFit sizing
  +int? index
  +List<Widget> children
  +Widget build()
}

"widgets::basic::IndexedStack" o-- "painting::alignment::AlignmentGeometry"
"widgets::basic::IndexedStack" o-- "dart::ui::TextDirection"
"widgets::basic::IndexedStack" o-- "dart::ui::Clip"
"widgets::basic::IndexedStack" o-- "rendering::stack::StackFit"
"widgets::framework::StatelessWidget" <|-- "widgets::basic::IndexedStack"

class "widgets::basic::_RawIndexedStack" {
  +int? index
  +RenderIndexedStack createRenderObject()
  +void updateRenderObject()
  +MultiChildRenderObjectElement createElement()
}

"widgets::basic::Stack" <|-- "widgets::basic::_RawIndexedStack"

class "widgets::basic::_IndexedStackElement" {
  +_RawIndexedStack widget
  +void debugVisitOnstageChildren()
}

"widgets::basic::_IndexedStackElement" o-- "widgets::basic::_RawIndexedStack"
"widgets::framework::MultiChildRenderObjectElement" <|-- "widgets::basic::_IndexedStackElement"

class "widgets::basic::Positioned" {
  +double? left
  +double? top
  +double? right
  +double? bottom
  +double? width
  +double? height
  +Type debugTypicalAncestorWidgetClass
  +void applyParentData()
  +void debugFillProperties()
}

"widgets::framework::ParentDataWidget" <|-- "widgets::basic::Positioned"

class "widgets::basic::PositionedDirectional" {
  +double? start
  +double? top
  +double? end
  +double? bottom
  +double? width
  +double? height
  +Widget child
  +Widget build()
}

"widgets::basic::PositionedDirectional" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::basic::PositionedDirectional"

class "widgets::basic::Flex" {
  +Axis direction
  +MainAxisAlignment mainAxisAlignment
  +MainAxisSize mainAxisSize
  +CrossAxisAlignment crossAxisAlignment
  +TextDirection? textDirection
  +VerticalDirection verticalDirection
  +TextBaseline? textBaseline
  +Clip clipBehavior
  -bool _needTextDirection
  #TextDirection? getEffectiveTextDirection()
  +RenderFlex createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::Flex" o-- "painting::basic_types::Axis"
"widgets::basic::Flex" o-- "rendering::flex::MainAxisAlignment"
"widgets::basic::Flex" o-- "rendering::flex::MainAxisSize"
"widgets::basic::Flex" o-- "rendering::flex::CrossAxisAlignment"
"widgets::basic::Flex" o-- "dart::ui::TextDirection"
"widgets::basic::Flex" o-- "painting::basic_types::VerticalDirection"
"widgets::basic::Flex" o-- "dart::ui::TextBaseline"
"widgets::basic::Flex" o-- "dart::ui::Clip"
"widgets::framework::MultiChildRenderObjectWidget" <|-- "widgets::basic::Flex"

class "widgets::basic::Row" {
}

"widgets::basic::Flex" <|-- "widgets::basic::Row"

class "widgets::basic::Column" {
}

"widgets::basic::Flex" <|-- "widgets::basic::Column"

class "widgets::basic::Flexible" {
  +int flex
  +FlexFit fit
  +Type debugTypicalAncestorWidgetClass
  +void applyParentData()
  +void debugFillProperties()
}

"widgets::basic::Flexible" o-- "rendering::flex::FlexFit"
"widgets::framework::ParentDataWidget" <|-- "widgets::basic::Flexible"

class "widgets::basic::Expanded" {
}

"widgets::basic::Flexible" <|-- "widgets::basic::Expanded"

class "widgets::basic::Wrap" {
  +Axis direction
  +WrapAlignment alignment
  +double spacing
  +WrapAlignment runAlignment
  +double runSpacing
  +WrapCrossAlignment crossAxisAlignment
  +TextDirection? textDirection
  +VerticalDirection verticalDirection
  +Clip clipBehavior
  +RenderWrap createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::Wrap" o-- "painting::basic_types::Axis"
"widgets::basic::Wrap" o-- "rendering::wrap::WrapAlignment"
"widgets::basic::Wrap" o-- "rendering::wrap::WrapCrossAlignment"
"widgets::basic::Wrap" o-- "dart::ui::TextDirection"
"widgets::basic::Wrap" o-- "painting::basic_types::VerticalDirection"
"widgets::basic::Wrap" o-- "dart::ui::Clip"
"widgets::framework::MultiChildRenderObjectWidget" <|-- "widgets::basic::Wrap"

class "widgets::basic::Flow" {
  +FlowDelegate delegate
  +Clip clipBehavior
  +RenderFlow createRenderObject()
  +void updateRenderObject()
}

"widgets::basic::Flow" o-- "rendering::flow::FlowDelegate"
"widgets::basic::Flow" o-- "dart::ui::Clip"
"widgets::framework::MultiChildRenderObjectWidget" <|-- "widgets::basic::Flow"

class "widgets::basic::RichText" {
  +InlineSpan text
  +TextAlign textAlign
  +TextDirection? textDirection
  +bool softWrap
  +TextOverflow overflow
  +dynamic textScaler
  +int? maxLines
  +Locale? locale
  +StrutStyle? strutStyle
  +TextWidthBasis textWidthBasis
  +TextHeightBehavior? textHeightBehavior
  +SelectionRegistrar? selectionRegistrar
  +Color? selectionColor
  +double textScaleFactor
  {static} -dynamic _effectiveTextScalerFrom()
  +RenderParagraph createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::RichText" o-- "painting::inline_span::InlineSpan"
"widgets::basic::RichText" o-- "dart::ui::TextAlign"
"widgets::basic::RichText" o-- "dart::ui::TextDirection"
"widgets::basic::RichText" o-- "painting::text_painter::TextOverflow"
"widgets::basic::RichText" o-- "dart::ui::Locale"
"widgets::basic::RichText" o-- "painting::strut_style::StrutStyle"
"widgets::basic::RichText" o-- "painting::text_painter::TextWidthBasis"
"widgets::basic::RichText" o-- "dart::ui::TextHeightBehavior"
"widgets::basic::RichText" o-- "rendering::selection::SelectionRegistrar"
"widgets::basic::RichText" o-- "dart::ui::Color"
"widgets::framework::MultiChildRenderObjectWidget" <|-- "widgets::basic::RichText"

class "widgets::basic::RawImage" {
  +Image? image
  +String? debugImageLabel
  +double? width
  +double? height
  +double scale
  +Color? color
  +Animation<double>? opacity
  +FilterQuality filterQuality
  +BlendMode? colorBlendMode
  +BoxFit? fit
  +AlignmentGeometry alignment
  +ImageRepeat repeat
  +Rect? centerSlice
  +bool matchTextDirection
  +bool invertColors
  +bool isAntiAlias
  +RenderImage createRenderObject()
  +void updateRenderObject()
  +void didUnmountRenderObject()
  +void debugFillProperties()
}

"widgets::basic::RawImage" o-- "dart::ui::Image"
"widgets::basic::RawImage" o-- "dart::ui::Color"
"widgets::basic::RawImage" o-- "animation::animation::Animation<double>"
"widgets::basic::RawImage" o-- "dart::ui::FilterQuality"
"widgets::basic::RawImage" o-- "dart::ui::BlendMode"
"widgets::basic::RawImage" o-- "painting::box_fit::BoxFit"
"widgets::basic::RawImage" o-- "painting::alignment::AlignmentGeometry"
"widgets::basic::RawImage" o-- "painting::decoration_image::ImageRepeat"
"widgets::basic::RawImage" o-- "dart::ui::Rect"
"widgets::framework::LeafRenderObjectWidget" <|-- "widgets::basic::RawImage"

class "widgets::basic::DefaultAssetBundle" {
  +AssetBundle bundle
  {static} +AssetBundle of()
  +bool updateShouldNotify()
}

"widgets::basic::DefaultAssetBundle" o-- "services::asset_bundle::AssetBundle"
"widgets::framework::InheritedWidget" <|-- "widgets::basic::DefaultAssetBundle"

class "widgets::basic::WidgetToRenderBoxAdapter" {
  +RenderBox renderBox
  +void Function()? onBuild
  +void Function()? onUnmount
  +RenderBox createRenderObject()
  +void updateRenderObject()
  +void didUnmountRenderObject()
}

"widgets::basic::WidgetToRenderBoxAdapter" o-- "rendering::box::RenderBox"
"widgets::basic::WidgetToRenderBoxAdapter" o-- "dart::ui::void Function()"
"widgets::framework::LeafRenderObjectWidget" <|-- "widgets::basic::WidgetToRenderBoxAdapter"

class "widgets::basic::Listener" {
  +void Function(PointerDownEvent)? onPointerDown
  +void Function(PointerMoveEvent)? onPointerMove
  +void Function(PointerUpEvent)? onPointerUp
  +void Function(PointerHoverEvent)? onPointerHover
  +void Function(PointerCancelEvent)? onPointerCancel
  +void Function(PointerPanZoomStartEvent)? onPointerPanZoomStart
  +void Function(PointerPanZoomUpdateEvent)? onPointerPanZoomUpdate
  +void Function(PointerPanZoomEndEvent)? onPointerPanZoomEnd
  +void Function(PointerSignalEvent)? onPointerSignal
  +HitTestBehavior behavior
  +RenderPointerListener createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::Listener" o-- "rendering::proxy_box::void Function(PointerDownEvent)"
"widgets::basic::Listener" o-- "rendering::proxy_box::void Function(PointerMoveEvent)"
"widgets::basic::Listener" o-- "rendering::proxy_box::void Function(PointerUpEvent)"
"widgets::basic::Listener" o-- "services::mouse_tracking::void Function(PointerHoverEvent)"
"widgets::basic::Listener" o-- "rendering::proxy_box::void Function(PointerCancelEvent)"
"widgets::basic::Listener" o-- "rendering::proxy_box::void Function(PointerPanZoomStartEvent)"
"widgets::basic::Listener" o-- "rendering::proxy_box::void Function(PointerPanZoomUpdateEvent)"
"widgets::basic::Listener" o-- "rendering::proxy_box::void Function(PointerPanZoomEndEvent)"
"widgets::basic::Listener" o-- "rendering::proxy_box::void Function(PointerSignalEvent)"
"widgets::basic::Listener" o-- "rendering::proxy_box::HitTestBehavior"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::Listener"

class "widgets::basic::MouseRegion" {
  +void Function(PointerEnterEvent)? onEnter
  +void Function(PointerHoverEvent)? onHover
  +void Function(PointerExitEvent)? onExit
  +MouseCursor cursor
  +bool opaque
  +HitTestBehavior? hitTestBehavior
  +RenderMouseRegion createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::MouseRegion" o-- "services::mouse_tracking::void Function(PointerEnterEvent)"
"widgets::basic::MouseRegion" o-- "services::mouse_tracking::void Function(PointerHoverEvent)"
"widgets::basic::MouseRegion" o-- "services::mouse_tracking::void Function(PointerExitEvent)"
"widgets::basic::MouseRegion" o-- "services::mouse_cursor::MouseCursor"
"widgets::basic::MouseRegion" o-- "rendering::proxy_box::HitTestBehavior"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::MouseRegion"

class "widgets::basic::RepaintBoundary" {
  {static} +List<RepaintBoundary> wrapAll()
  +RenderRepaintBoundary createRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::RepaintBoundary"

class "widgets::basic::IgnorePointer" {
  +bool ignoring
  +bool? ignoringSemantics
  +RenderIgnorePointer createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::IgnorePointer"

class "widgets::basic::AbsorbPointer" {
  +bool absorbing
  +bool? ignoringSemantics
  +RenderAbsorbPointer createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::AbsorbPointer"

class "widgets::basic::MetaData" {
  +dynamic metaData
  +HitTestBehavior behavior
  +RenderMetaData createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::MetaData" o-- "rendering::proxy_box::HitTestBehavior"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::MetaData"

class "widgets::basic::Semantics" {
  +SemanticsProperties properties
  +bool container
  +bool explicitChildNodes
  +bool excludeSemantics
  +bool blockUserActions
  +RenderSemanticsAnnotations createRenderObject()
  -TextDirection? _getTextDirection()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::Semantics" o-- "semantics::semantics::SemanticsProperties"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::Semantics"

class "widgets::basic::MergeSemantics" {
  +RenderMergeSemantics createRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::MergeSemantics"

class "widgets::basic::BlockSemantics" {
  +bool blocking
  +RenderBlockSemantics createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::BlockSemantics"

class "widgets::basic::ExcludeSemantics" {
  +bool excluding
  +RenderExcludeSemantics createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::ExcludeSemantics"

class "widgets::basic::IndexedSemantics" {
  +int index
  +RenderIndexedSemantics createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::IndexedSemantics"

class "widgets::basic::KeyedSubtree" {
  +Widget child
  {static} +List<Widget> ensureUniqueKeysForList()
  +Widget build()
}

"widgets::basic::KeyedSubtree" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::basic::KeyedSubtree"

class "widgets::basic::Builder" {
  +Widget Function(BuildContext) builder
  +Widget build()
}

"widgets::basic::Builder" o-- "widgets::framework::Widget Function(BuildContext)"
"widgets::framework::StatelessWidget" <|-- "widgets::basic::Builder"

class "widgets::basic::StatefulBuilder" {
  +Widget Function(BuildContext, void Function(void Function())) builder
  +State<StatefulBuilder> createState()
}

"widgets::basic::StatefulBuilder" o-- "widgets::basic::Widget Function(BuildContext, void Function(void Function()))"
"widgets::framework::StatefulWidget" <|-- "widgets::basic::StatefulBuilder"

class "widgets::basic::_StatefulBuilderState" {
  +Widget build()
}

"widgets::framework::State" <|-- "widgets::basic::_StatefulBuilderState"

class "widgets::basic::ColoredBox" {
  +Color color
  +RenderObject createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::basic::ColoredBox" o-- "dart::ui::Color"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::basic::ColoredBox"

class "widgets::basic::_RenderColoredBox" {
  -Color _color
  +Color color
  +void paint()
}

"widgets::basic::_RenderColoredBox" o-- "dart::ui::Color"
"rendering::proxy_box::RenderProxyBoxWithHitTestBehavior" <|-- "widgets::basic::_RenderColoredBox"

class "widgets::disposable_build_context::DisposableBuildContext" {
  -T? _state
  +BuildContext? context
  -bool _debugValidate()
  +void dispose()
}

"widgets::disposable_build_context::DisposableBuildContext" o-- "widgets::framework::BuildContext"

abstract class "widgets::gesture_detector::GestureRecognizerFactory" {
  +T constructor()
  +void initializer()
  -bool _debugAssertTypeMatches()
}

class "widgets::gesture_detector::GestureRecognizerFactoryWithHandlers" {
  -T Function() _constructor
  -void Function(T) _initializer
  +T constructor()
  +void initializer()
}

"widgets::gesture_detector::GestureRecognizerFactoryWithHandlers" o-- "widgets::gesture_detector::T Function()"
"widgets::gesture_detector::GestureRecognizerFactoryWithHandlers" o-- "widgets::gesture_detector::void Function(T)"
"widgets::gesture_detector::GestureRecognizerFactory" <|-- "widgets::gesture_detector::GestureRecognizerFactoryWithHandlers"

class "widgets::gesture_detector::GestureDetector" {
  +Widget? child
  +void Function(TapDownDetails)? onTapDown
  +void Function(TapUpDetails)? onTapUp
  +void Function()? onTap
  +void Function()? onTapCancel
  +void Function()? onSecondaryTap
  +void Function(TapDownDetails)? onSecondaryTapDown
  +void Function(TapUpDetails)? onSecondaryTapUp
  +void Function()? onSecondaryTapCancel
  +void Function(TapDownDetails)? onTertiaryTapDown
  +void Function(TapUpDetails)? onTertiaryTapUp
  +void Function()? onTertiaryTapCancel
  +void Function(TapDownDetails)? onDoubleTapDown
  +void Function()? onDoubleTap
  +void Function()? onDoubleTapCancel
  +void Function(LongPressDownDetails)? onLongPressDown
  +void Function()? onLongPressCancel
  +void Function()? onLongPress
  +void Function(LongPressStartDetails)? onLongPressStart
  +void Function(LongPressMoveUpdateDetails)? onLongPressMoveUpdate
  +void Function()? onLongPressUp
  +void Function(LongPressEndDetails)? onLongPressEnd
  +void Function(LongPressDownDetails)? onSecondaryLongPressDown
  +void Function()? onSecondaryLongPressCancel
  +void Function()? onSecondaryLongPress
  +void Function(LongPressStartDetails)? onSecondaryLongPressStart
  +void Function(LongPressMoveUpdateDetails)? onSecondaryLongPressMoveUpdate
  +void Function()? onSecondaryLongPressUp
  +void Function(LongPressEndDetails)? onSecondaryLongPressEnd
  +void Function(LongPressDownDetails)? onTertiaryLongPressDown
  +void Function()? onTertiaryLongPressCancel
  +void Function()? onTertiaryLongPress
  +void Function(LongPressStartDetails)? onTertiaryLongPressStart
  +void Function(LongPressMoveUpdateDetails)? onTertiaryLongPressMoveUpdate
  +void Function()? onTertiaryLongPressUp
  +void Function(LongPressEndDetails)? onTertiaryLongPressEnd
  +void Function(DragDownDetails)? onVerticalDragDown
  +void Function(DragStartDetails)? onVerticalDragStart
  +void Function(DragUpdateDetails)? onVerticalDragUpdate
  +void Function(DragEndDetails)? onVerticalDragEnd
  +void Function()? onVerticalDragCancel
  +void Function(DragDownDetails)? onHorizontalDragDown
  +void Function(DragStartDetails)? onHorizontalDragStart
  +void Function(DragUpdateDetails)? onHorizontalDragUpdate
  +void Function(DragEndDetails)? onHorizontalDragEnd
  +void Function()? onHorizontalDragCancel
  +void Function(DragDownDetails)? onPanDown
  +void Function(DragStartDetails)? onPanStart
  +void Function(DragUpdateDetails)? onPanUpdate
  +void Function(DragEndDetails)? onPanEnd
  +void Function()? onPanCancel
  +void Function(ScaleStartDetails)? onScaleStart
  +void Function(ScaleUpdateDetails)? onScaleUpdate
  +void Function(ScaleEndDetails)? onScaleEnd
  +void Function(ForcePressDetails)? onForcePressStart
  +void Function(ForcePressDetails)? onForcePressPeak
  +void Function(ForcePressDetails)? onForcePressUpdate
  +void Function(ForcePressDetails)? onForcePressEnd
  +HitTestBehavior? behavior
  +bool excludeFromSemantics
  +DragStartBehavior dragStartBehavior
  +Set<PointerDeviceKind>? supportedDevices
  +bool trackpadScrollCausesScale
  +Offset trackpadScrollToScaleFactor
  +Widget build()
  +void debugFillProperties()
}

"widgets::gesture_detector::GestureDetector" o-- "widgets::framework::Widget"
"widgets::gesture_detector::GestureDetector" o-- "gestures::tap::void Function(TapDownDetails)"
"widgets::gesture_detector::GestureDetector" o-- "gestures::tap::void Function(TapUpDetails)"
"widgets::gesture_detector::GestureDetector" o-- "gestures::tap::void Function()"
"widgets::gesture_detector::GestureDetector" o-- "gestures::long_press::void Function(LongPressDownDetails)"
"widgets::gesture_detector::GestureDetector" o-- "gestures::long_press::void Function()"
"widgets::gesture_detector::GestureDetector" o-- "gestures::long_press::void Function(LongPressStartDetails)"
"widgets::gesture_detector::GestureDetector" o-- "gestures::long_press::void Function(LongPressMoveUpdateDetails)"
"widgets::gesture_detector::GestureDetector" o-- "gestures::long_press::void Function(LongPressEndDetails)"
"widgets::gesture_detector::GestureDetector" o-- "gestures::drag_details::void Function(DragDownDetails)"
"widgets::gesture_detector::GestureDetector" o-- "gestures::drag_details::void Function(DragStartDetails)"
"widgets::gesture_detector::GestureDetector" o-- "gestures::drag_details::void Function(DragUpdateDetails)"
"widgets::gesture_detector::GestureDetector" o-- "gestures::monodrag::void Function(DragEndDetails)"
"widgets::gesture_detector::GestureDetector" o-- "gestures::monodrag::void Function()"
"widgets::gesture_detector::GestureDetector" o-- "gestures::scale::void Function(ScaleStartDetails)"
"widgets::gesture_detector::GestureDetector" o-- "gestures::scale::void Function(ScaleUpdateDetails)"
"widgets::gesture_detector::GestureDetector" o-- "gestures::scale::void Function(ScaleEndDetails)"
"widgets::gesture_detector::GestureDetector" o-- "gestures::force_press::void Function(ForcePressDetails)"
"widgets::gesture_detector::GestureDetector" o-- "rendering::proxy_box::HitTestBehavior"
"widgets::gesture_detector::GestureDetector" o-- "gestures::recognizer::DragStartBehavior"
"widgets::gesture_detector::GestureDetector" o-- "dart::ui::Offset"
"widgets::framework::StatelessWidget" <|-- "widgets::gesture_detector::GestureDetector"

class "widgets::gesture_detector::RawGestureDetector" {
  +Widget? child
  +Map<Type, GestureRecognizerFactory<GestureRecognizer>> gestures
  +HitTestBehavior? behavior
  +bool excludeFromSemantics
  +SemanticsGestureDelegate? semantics
  +RawGestureDetectorState createState()
}

"widgets::gesture_detector::RawGestureDetector" o-- "widgets::framework::Widget"
"widgets::gesture_detector::RawGestureDetector" o-- "rendering::proxy_box::HitTestBehavior"
"widgets::gesture_detector::RawGestureDetector" o-- "widgets::gesture_detector::SemanticsGestureDelegate"
"widgets::framework::StatefulWidget" <|-- "widgets::gesture_detector::RawGestureDetector"

class "widgets::gesture_detector::RawGestureDetectorState" {
  -Map<Type, GestureRecognizer>? _recognizers
  -SemanticsGestureDelegate? _semantics
  -HitTestBehavior _defaultBehavior
  +void initState()
  +void didUpdateWidget()
  +void replaceGestureRecognizers()
  +void replaceSemanticsActions()
  +void dispose()
  -void _syncAll()
  -void _handlePointerDown()
  -void _handlePointerPanZoomStart()
  -void _updateSemanticsForRenderObject()
  +Widget build()
  +void debugFillProperties()
}

"widgets::gesture_detector::RawGestureDetectorState" o-- "widgets::gesture_detector::SemanticsGestureDelegate"
"widgets::gesture_detector::RawGestureDetectorState" o-- "rendering::proxy_box::HitTestBehavior"
"widgets::framework::State" <|-- "widgets::gesture_detector::RawGestureDetectorState"

class "widgets::gesture_detector::_GestureSemantics" {
  +HitTestBehavior behavior
  +void Function(RenderSemanticsGestureHandler) assignSemantics
  +RenderSemanticsGestureHandler createRenderObject()
  +void updateRenderObject()
}

"widgets::gesture_detector::_GestureSemantics" o-- "rendering::proxy_box::HitTestBehavior"
"widgets::gesture_detector::_GestureSemantics" o-- "widgets::gesture_detector::void Function(RenderSemanticsGestureHandler)"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::gesture_detector::_GestureSemantics"

abstract class "widgets::gesture_detector::SemanticsGestureDelegate" {
  +void assignSemantics()
  +String toString()
}

class "widgets::gesture_detector::_DefaultSemanticsGestureDelegate" {
  +RawGestureDetectorState detectorState
  +void assignSemantics()
  -void Function()? _getTapHandler()
  -void Function()? _getLongPressHandler()
  -void Function(DragUpdateDetails)? _getHorizontalDragUpdateHandler()
  -void Function(DragUpdateDetails)? _getVerticalDragUpdateHandler()
}

"widgets::gesture_detector::_DefaultSemanticsGestureDelegate" o-- "widgets::gesture_detector::RawGestureDetectorState"
"widgets::gesture_detector::SemanticsGestureDelegate" <|-- "widgets::gesture_detector::_DefaultSemanticsGestureDelegate"

abstract class "widgets::restoration_properties::RestorableValue" {
  -T? _value
  +T value
  +void initWithValue()
  #void didUpdateValue()
}

"widgets::restoration::RestorableProperty" <|-- "widgets::restoration_properties::RestorableValue"

class "widgets::restoration_properties::_RestorablePrimitiveValueN" {
  -T _defaultValue
  +T createDefaultValue()
  +void didUpdateValue()
  +T fromPrimitives()
  +Object? toPrimitives()
}

"widgets::restoration_properties::RestorableValue" <|-- "widgets::restoration_properties::_RestorablePrimitiveValueN"

class "widgets::restoration_properties::_RestorablePrimitiveValue" {
  +T value
  +T fromPrimitives()
  +Object toPrimitives()
}

"widgets::restoration_properties::_RestorablePrimitiveValueN" <|-- "widgets::restoration_properties::_RestorablePrimitiveValue"

class "widgets::restoration_properties::RestorableNum" {
}

"widgets::restoration_properties::_RestorablePrimitiveValue" <|-- "widgets::restoration_properties::RestorableNum"

class "widgets::restoration_properties::RestorableDouble" {
}

"widgets::restoration_properties::RestorableNum" <|-- "widgets::restoration_properties::RestorableDouble"

class "widgets::restoration_properties::RestorableInt" {
}

"widgets::restoration_properties::RestorableNum" <|-- "widgets::restoration_properties::RestorableInt"

class "widgets::restoration_properties::RestorableString" {
}

"widgets::restoration_properties::_RestorablePrimitiveValue" <|-- "widgets::restoration_properties::RestorableString"

class "widgets::restoration_properties::RestorableBool" {
}

"widgets::restoration_properties::_RestorablePrimitiveValue" <|-- "widgets::restoration_properties::RestorableBool"

class "widgets::restoration_properties::RestorableBoolN" {
}

"widgets::restoration_properties::_RestorablePrimitiveValueN" <|-- "widgets::restoration_properties::RestorableBoolN"

class "widgets::restoration_properties::RestorableNumN" {
}

"widgets::restoration_properties::_RestorablePrimitiveValueN" <|-- "widgets::restoration_properties::RestorableNumN"

class "widgets::restoration_properties::RestorableDoubleN" {
}

"widgets::restoration_properties::RestorableNumN" <|-- "widgets::restoration_properties::RestorableDoubleN"

class "widgets::restoration_properties::RestorableIntN" {
}

"widgets::restoration_properties::RestorableNumN" <|-- "widgets::restoration_properties::RestorableIntN"

class "widgets::restoration_properties::RestorableStringN" {
}

"widgets::restoration_properties::_RestorablePrimitiveValueN" <|-- "widgets::restoration_properties::RestorableStringN"

class "widgets::restoration_properties::RestorableDateTime" {
  -DateTime _defaultValue
  +DateTime createDefaultValue()
  +void didUpdateValue()
  +DateTime fromPrimitives()
  +Object? toPrimitives()
}

"widgets::restoration_properties::RestorableValue" <|-- "widgets::restoration_properties::RestorableDateTime"

class "widgets::restoration_properties::RestorableDateTimeN" {
  -DateTime? _defaultValue
  +DateTime? createDefaultValue()
  +void didUpdateValue()
  +DateTime? fromPrimitives()
  +Object? toPrimitives()
}

"widgets::restoration_properties::RestorableValue" <|-- "widgets::restoration_properties::RestorableDateTimeN"

abstract class "widgets::restoration_properties::RestorableListenable" {
  -T? _value
  +T value
  +void initWithValue()
  +void dispose()
}

"widgets::restoration::RestorableProperty" <|-- "widgets::restoration_properties::RestorableListenable"

abstract class "widgets::restoration_properties::RestorableChangeNotifier" {
  +void initWithValue()
  +void dispose()
  -void _disposeOldValue()
}

"widgets::restoration_properties::RestorableListenable" <|-- "widgets::restoration_properties::RestorableChangeNotifier"

class "widgets::restoration_properties::RestorableTextEditingController" {
  -TextEditingValue _initialValue
  +TextEditingController createDefaultValue()
  +TextEditingController fromPrimitives()
  +Object toPrimitives()
}

"widgets::restoration_properties::RestorableTextEditingController" o-- "services::text_input::TextEditingValue"
"widgets::restoration_properties::RestorableChangeNotifier" <|-- "widgets::restoration_properties::RestorableTextEditingController"

class "widgets::restoration_properties::RestorableEnumN" {
  -T? _defaultValue
  +Set<T> values
  +T? value
  +T? createDefaultValue()
  +void didUpdateValue()
  +T? fromPrimitives()
  +Object? toPrimitives()
}

"widgets::restoration_properties::RestorableValue" <|-- "widgets::restoration_properties::RestorableEnumN"

class "widgets::restoration_properties::RestorableEnum" {
  -T _defaultValue
  +Set<T> values
  +T value
  +T createDefaultValue()
  +void didUpdateValue()
  +T fromPrimitives()
  +Object toPrimitives()
}

"widgets::restoration_properties::RestorableValue" <|-- "widgets::restoration_properties::RestorableEnum"

abstract class "widgets::slotted_render_object_widget::SlottedMultiChildRenderObjectWidget" {
}

"widgets::framework::RenderObjectWidget" <|-- "widgets::slotted_render_object_widget::SlottedMultiChildRenderObjectWidget"
"widgets::slotted_render_object_widget::SlottedMultiChildRenderObjectWidgetMixin" <|-- "widgets::slotted_render_object_widget::SlottedMultiChildRenderObjectWidget"

class "widgets::slotted_render_object_widget::SlottedRenderObjectElement" {
  -Map<SlotType, Element> _slotToChild
  -Map<Key, Element> _keyedChildren
  -List<SlotType>? _debugPreviousSlots
  +SlottedContainerRenderObjectMixin<SlotType, ChildType> renderObject
  +void visitChildren()
  +void forgetChild()
  +void mount()
  +void update()
  -void _updateChildren()
  -bool _debugDuplicateKeys()
  +void insertRenderObjectChild()
  +void removeRenderObjectChild()
  +void moveRenderObjectChild()
}

"widgets::slotted_render_object_widget::SlottedRenderObjectElement" o-- "widgets::slotted_render_object_widget::SlottedContainerRenderObjectMixin<SlotType, ChildType>"
"widgets::framework::RenderObjectElement" <|-- "widgets::slotted_render_object_widget::SlottedRenderObjectElement"

abstract class "widgets::slotted_render_object_widget::SlottedMultiChildRenderObjectWidgetMixin" {
  +Iterable<SlotType> slots
  #Widget? childForSlot()
  +SlottedContainerRenderObjectMixin<SlotType, ChildType> createRenderObject()
  +void updateRenderObject()
  +SlottedRenderObjectElement<SlotType, ChildType> createElement()
}

abstract class "widgets::slotted_render_object_widget::SlottedContainerRenderObjectMixin" {
  -Map<SlotType, ChildType> _slotToChild
  +Iterable<ChildType> children
  #ChildType? childForSlot()
  #String debugNameForSlot()
  +void attach()
  +void detach()
  +void redepthChildren()
  +void visitChildren()
  +List<DiagnosticsNode> debugDescribeChildren()
  -void _addDiagnostics()
  -void _setChild()
  -void _moveChild()
}

abstract class "widgets::async::StreamBuilderBase" {
  +Stream<T>? stream
  +S initial()
  +S afterConnected()
  +S afterData()
  +S afterError()
  +S afterDone()
  +S afterDisconnected()
  +Widget build()
  +State<StreamBuilderBase<T, S>> createState()
}

"widgets::async::StreamBuilderBase" o-- "dart::async::Stream<T>"
"widgets::framework::StatefulWidget" <|-- "widgets::async::StreamBuilderBase"

class "widgets::async::_StreamBuilderBaseState" {
  -StreamSubscription<T>? _subscription
  -S _summary
  +void initState()
  +void didUpdateWidget()
  +Widget build()
  +void dispose()
  -void _subscribe()
  -void _unsubscribe()
}

"widgets::async::_StreamBuilderBaseState" o-- "dart::async::StreamSubscription<T>"
"widgets::framework::State" <|-- "widgets::async::_StreamBuilderBaseState"

class "widgets::async::AsyncSnapshot" {
  +ConnectionState connectionState
  +T? data
  +Object? error
  +StackTrace? stackTrace
  +T requireData
  +bool hasData
  +bool hasError
  +int hashCode
  +AsyncSnapshot<T> inState()
  +String toString()
  +bool ==()
}

"widgets::async::AsyncSnapshot" o-- "widgets::async::ConnectionState"

class "widgets::async::StreamBuilder" {
  +Widget Function(BuildContext, AsyncSnapshot<T>) builder
  +T? initialData
  +AsyncSnapshot<T> initial()
  +AsyncSnapshot<T> afterConnected()
  +AsyncSnapshot<T> afterData()
  +AsyncSnapshot<T> afterError()
  +AsyncSnapshot<T> afterDone()
  +AsyncSnapshot<T> afterDisconnected()
  +Widget build()
}

"widgets::async::StreamBuilder" o-- "widgets::async::Widget Function(BuildContext, AsyncSnapshot<T>)"
"widgets::async::StreamBuilderBase" <|-- "widgets::async::StreamBuilder"

class "widgets::async::FutureBuilder" {
  +Future<T>? future
  +Widget Function(BuildContext, AsyncSnapshot<T>) builder
  +T? initialData
  {static} +bool debugRethrowError
  +State<FutureBuilder<T>> createState()
}

"widgets::async::FutureBuilder" o-- "widgets::async::Widget Function(BuildContext, AsyncSnapshot<T>)"
"widgets::framework::StatefulWidget" <|-- "widgets::async::FutureBuilder"

class "widgets::async::_FutureBuilderState" {
  -Object? _activeCallbackIdentity
  -AsyncSnapshot<T> _snapshot
  +void initState()
  +void didUpdateWidget()
  +Widget build()
  +void dispose()
  -void _subscribe()
  -void _unsubscribe()
}

"widgets::async::_FutureBuilderState" o-- "widgets::async::AsyncSnapshot<T>"
"widgets::framework::State" <|-- "widgets::async::_FutureBuilderState"

class "widgets::async::ConnectionState" {
  +int index
  {static} +List<ConnectionState> values
  {static} +ConnectionState none
  {static} +ConnectionState waiting
  {static} +ConnectionState active
  {static} +ConnectionState done
}

"widgets::async::ConnectionState" o-- "widgets::async::ConnectionState"
"dart::core::Enum" <|-- "widgets::async::ConnectionState"

class "widgets::text::DefaultTextStyle" {
  +TextStyle style
  +TextAlign? textAlign
  +bool softWrap
  +TextOverflow overflow
  +int? maxLines
  +TextWidthBasis textWidthBasis
  +TextHeightBehavior? textHeightBehavior
  {static} +Widget merge()
  {static} +DefaultTextStyle of()
  +bool updateShouldNotify()
  +Widget wrap()
  +void debugFillProperties()
}

"widgets::text::DefaultTextStyle" o-- "painting::text_style::TextStyle"
"widgets::text::DefaultTextStyle" o-- "dart::ui::TextAlign"
"widgets::text::DefaultTextStyle" o-- "painting::text_painter::TextOverflow"
"widgets::text::DefaultTextStyle" o-- "painting::text_painter::TextWidthBasis"
"widgets::text::DefaultTextStyle" o-- "dart::ui::TextHeightBehavior"
"widgets::inherited_theme::InheritedTheme" <|-- "widgets::text::DefaultTextStyle"

class "widgets::text::_NullWidget" {
  +Widget build()
}

"widgets::framework::StatelessWidget" <|-- "widgets::text::_NullWidget"

class "widgets::text::DefaultTextHeightBehavior" {
  +TextHeightBehavior textHeightBehavior
  {static} +TextHeightBehavior? maybeOf()
  {static} +TextHeightBehavior of()
  +bool updateShouldNotify()
  +Widget wrap()
  +void debugFillProperties()
}

"widgets::text::DefaultTextHeightBehavior" o-- "dart::ui::TextHeightBehavior"
"widgets::inherited_theme::InheritedTheme" <|-- "widgets::text::DefaultTextHeightBehavior"

class "widgets::text::Text" {
  +String? data
  +InlineSpan? textSpan
  +TextStyle? style
  +StrutStyle? strutStyle
  +TextAlign? textAlign
  +TextDirection? textDirection
  +Locale? locale
  +bool? softWrap
  +TextOverflow? overflow
  +double? textScaleFactor
  +dynamic textScaler
  +int? maxLines
  +String? semanticsLabel
  +TextWidthBasis? textWidthBasis
  +TextHeightBehavior? textHeightBehavior
  +Color? selectionColor
  +Widget build()
  +void debugFillProperties()
}

"widgets::text::Text" o-- "painting::inline_span::InlineSpan"
"widgets::text::Text" o-- "painting::text_style::TextStyle"
"widgets::text::Text" o-- "painting::strut_style::StrutStyle"
"widgets::text::Text" o-- "dart::ui::TextAlign"
"widgets::text::Text" o-- "dart::ui::TextDirection"
"widgets::text::Text" o-- "dart::ui::Locale"
"widgets::text::Text" o-- "painting::text_painter::TextOverflow"
"widgets::text::Text" o-- "painting::text_painter::TextWidthBasis"
"widgets::text::Text" o-- "dart::ui::TextHeightBehavior"
"widgets::text::Text" o-- "dart::ui::Color"
"widgets::framework::StatelessWidget" <|-- "widgets::text::Text"

abstract class "widgets::actions::Intent" {
  {static} +DoNothingIntent doNothing
}

"widgets::actions::Intent" o-- "widgets::actions::DoNothingIntent"
"foundation::diagnostics::Diagnosticable" <|-- "widgets::actions::Intent"

abstract class "widgets::actions::Action" {
  -ObserverList<void Function(Action<Intent>)> _listeners
  -Action<T>? _currentCallingAction
  +Action<T>? callingAction
  +Type intentType
  +bool isActionEnabled
  -void _updateCallingAction()
  +bool isEnabled()
  -bool _isEnabled()
  +bool consumesKey()
  +KeyEventResult toKeyEventResult()
  #Object? invoke()
  -Object? _invoke()
  +void addActionListener()
  +void removeActionListener()
  #void notifyActionListeners()
  -Action<T> _makeOverridableAction()
}

"widgets::actions::Action" o-- "foundation::observer_list::ObserverList<void Function(Action<Intent>)>"
"widgets::actions::Action" o-- "widgets::actions::Action<T>"
"foundation::diagnostics::Diagnosticable" <|-- "widgets::actions::Action"

class "widgets::actions::ActionListener" {
  +void Function(Action<Intent>) listener
  +Action<Intent> action
  +Widget child
  +State<ActionListener> createState()
}

"widgets::actions::ActionListener" o-- "widgets::actions::void Function(Action<Intent>)"
"widgets::actions::ActionListener" o-- "widgets::actions::Action<Intent>"
"widgets::actions::ActionListener" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::actions::ActionListener"

class "widgets::actions::_ActionListenerState" {
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"widgets::framework::State" <|-- "widgets::actions::_ActionListenerState"

abstract class "widgets::actions::ContextAction" {
  +bool isEnabled()
  #Object? invoke()
  -ContextAction<T> _makeOverridableAction()
}

"widgets::actions::Action" <|-- "widgets::actions::ContextAction"

class "widgets::actions::CallbackAction" {
  #Object? Function(T) onInvoke
  +Object? invoke()
}

"widgets::actions::CallbackAction" o-- "widgets::actions::Object Function(T)"
"widgets::actions::Action" <|-- "widgets::actions::CallbackAction"

class "widgets::actions::ActionDispatcher" {
  +Object? invokeAction()
  +dynamic ()
  +dynamic invokeActionIfEnabled()
}

"foundation::diagnostics::Diagnosticable" <|-- "widgets::actions::ActionDispatcher"

class "widgets::actions::Actions" {
  +ActionDispatcher? dispatcher
  +Map<Type, Action<Intent>> actions
  +Widget child
  {static} -bool _visitActionsAncestors()
  {static} -ActionDispatcher _findDispatcher()
  {static} +void Function()? handler()
  {static} +Action<T> find()
  {static} +Action<T>? maybeFind()
  {static} -Action<T>? _maybeFindWithoutDependingOn()
  {static} -Action<T>? _castAction()
  {static} +ActionDispatcher of()
  {static} +Object? invoke()
  {static} +Object? maybeInvoke()
  +State<Actions> createState()
  +void debugFillProperties()
}

"widgets::actions::Actions" o-- "widgets::actions::ActionDispatcher"
"widgets::actions::Actions" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::actions::Actions"

class "widgets::actions::_ActionsState" {
  +Set<Action<Intent>>? listenedActions
  +Object rebuildKey
  +void initState()
  -void _handleActionChanged()
  -void _updateActionListeners()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"widgets::framework::State" <|-- "widgets::actions::_ActionsState"

class "widgets::actions::_ActionsScope" {
  +ActionDispatcher? dispatcher
  +Map<Type, Action<Intent>> actions
  +Object rebuildKey
  +bool updateShouldNotify()
}

"widgets::actions::_ActionsScope" o-- "widgets::actions::ActionDispatcher"
"widgets::framework::InheritedWidget" <|-- "widgets::actions::_ActionsScope"

class "widgets::actions::FocusableActionDetector" {
  +bool enabled
  +FocusNode? focusNode
  +bool autofocus
  +bool descendantsAreFocusable
  +bool descendantsAreTraversable
  +Map<Type, Action<Intent>>? actions
  +Map<ShortcutActivator, Intent>? shortcuts
  +void Function(bool)? onShowFocusHighlight
  +void Function(bool)? onShowHoverHighlight
  +void Function(bool)? onFocusChange
  +MouseCursor mouseCursor
  +bool includeFocusSemantics
  +Widget child
  +State<FocusableActionDetector> createState()
}

"widgets::actions::FocusableActionDetector" o-- "widgets::focus_manager::FocusNode"
"widgets::actions::FocusableActionDetector" o-- "foundation::basic_types::void Function(bool)"
"widgets::actions::FocusableActionDetector" o-- "services::mouse_cursor::MouseCursor"
"widgets::actions::FocusableActionDetector" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::actions::FocusableActionDetector"

class "widgets::actions::_FocusableActionDetectorState" {
  -bool _canShowHighlight
  -bool _hovering
  -bool _focused
  -GlobalKey<State<StatefulWidget>> _mouseRegionKey
  -bool _canRequestFocus
  +void initState()
  +void dispose()
  -void _updateHighlightMode()
  -void _handleFocusHighlightModeChange()
  -void _handleMouseEnter()
  -void _handleMouseExit()
  -void _handleFocusChange()
  -void _mayTriggerCallback()
  +void didUpdateWidget()
  +Widget build()
}

"widgets::actions::_FocusableActionDetectorState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::framework::State" <|-- "widgets::actions::_FocusableActionDetectorState"

class "widgets::actions::VoidCallbackIntent" {
  +void Function() callback
}

"widgets::actions::VoidCallbackIntent" o-- "dart::ui::void Function()"
"widgets::actions::Intent" <|-- "widgets::actions::VoidCallbackIntent"

class "widgets::actions::VoidCallbackAction" {
  +Object? invoke()
}

"widgets::actions::Action" <|-- "widgets::actions::VoidCallbackAction"

class "widgets::actions::DoNothingIntent" {
}

"widgets::actions::Intent" <|-- "widgets::actions::DoNothingIntent"

class "widgets::actions::DoNothingAndStopPropagationIntent" {
}

"widgets::actions::Intent" <|-- "widgets::actions::DoNothingAndStopPropagationIntent"

class "widgets::actions::DoNothingAction" {
  -bool _consumesKey
  +bool consumesKey()
  +void invoke()
}

"widgets::actions::Action" <|-- "widgets::actions::DoNothingAction"

class "widgets::actions::ActivateIntent" {
}

"widgets::actions::Intent" <|-- "widgets::actions::ActivateIntent"

class "widgets::actions::ButtonActivateIntent" {
}

"widgets::actions::Intent" <|-- "widgets::actions::ButtonActivateIntent"

abstract class "widgets::actions::ActivateAction" {
}

"widgets::actions::Action" <|-- "widgets::actions::ActivateAction"

class "widgets::actions::SelectIntent" {
}

"widgets::actions::Intent" <|-- "widgets::actions::SelectIntent"

abstract class "widgets::actions::SelectAction" {
}

"widgets::actions::Action" <|-- "widgets::actions::SelectAction"

class "widgets::actions::DismissIntent" {
}

"widgets::actions::Intent" <|-- "widgets::actions::DismissIntent"

abstract class "widgets::actions::DismissAction" {
}

"widgets::actions::Action" <|-- "widgets::actions::DismissAction"

class "widgets::actions::PrioritizedIntents" {
  +List<Intent> orderedIntents
}

"widgets::actions::Intent" <|-- "widgets::actions::PrioritizedIntents"

class "widgets::actions::PrioritizedAction" {
  -Action<dynamic> _selectedAction
  -Intent _selectedIntent
  +bool isEnabled()
  +void invoke()
}

"widgets::actions::PrioritizedAction" o-- "widgets::actions::Action<dynamic>"
"widgets::actions::PrioritizedAction" o-- "widgets::actions::Intent"
"widgets::actions::ContextAction" <|-- "widgets::actions::PrioritizedAction"

class "widgets::actions::_OverridableAction" {
  +Action<T> defaultAction
  +BuildContext lookupContext
  +Object? invokeDefaultAction()
  -ContextAction<T> _makeOverridableAction()
}

"widgets::actions::_OverridableAction" o-- "widgets::actions::Action<T>"
"widgets::actions::_OverridableAction" o-- "widgets::framework::BuildContext"
"widgets::actions::ContextAction" <|-- "widgets::actions::_OverridableAction"
"widgets::actions::_OverridableActionMixin" <|-- "widgets::actions::_OverridableAction"

class "widgets::actions::_OverridableContextAction" {
  +ContextAction<T> defaultAction
  +BuildContext lookupContext
  -Object? _invokeOverride()
  +Object? invokeDefaultAction()
  -ContextAction<T> _makeOverridableAction()
}

"widgets::actions::_OverridableContextAction" o-- "widgets::actions::ContextAction<T>"
"widgets::actions::_OverridableContextAction" o-- "widgets::framework::BuildContext"
"widgets::actions::ContextAction" <|-- "widgets::actions::_OverridableContextAction"
"widgets::actions::_OverridableActionMixin" <|-- "widgets::actions::_OverridableContextAction"

class "widgets::actions::_ContextActionToActionAdapter" {
  +BuildContext invokeContext
  +ContextAction<T> action
  +Action<T>? callingAction
  +bool isActionEnabled
  -void _updateCallingAction()
  +bool isEnabled()
  +bool consumesKey()
  +void addActionListener()
  +void removeActionListener()
  #void notifyActionListeners()
  +Object? invoke()
}

"widgets::actions::_ContextActionToActionAdapter" o-- "widgets::framework::BuildContext"
"widgets::actions::_ContextActionToActionAdapter" o-- "widgets::actions::ContextAction<T>"
"widgets::actions::_ContextActionToActionAdapter" o-- "widgets::actions::Action<T>"
"widgets::actions::Action" <|-- "widgets::actions::_ContextActionToActionAdapter"

abstract class "widgets::actions::_OverridableActionMixin" {
  +bool debugAssertMutuallyRecursive
  +bool debugAssertIsActionEnabledMutuallyRecursive
  +bool debugAssertIsEnabledMutuallyRecursive
  +bool debugAssertConsumeKeyMutuallyRecursive
  +Action<T> defaultAction
  +BuildContext lookupContext
  +bool isActionEnabled
  +Object? invokeDefaultAction()
  +Action<T>? getOverrideAction()
  -void _updateCallingAction()
  -Object? _invokeOverride()
  +Object? invoke()
  +bool isOverrideActionEnabled()
  +bool isEnabled()
  +bool consumesKey()
  +void debugFillProperties()
}

"widgets::actions::_OverridableActionMixin" o-- "widgets::actions::Action<T>"
"widgets::actions::_OverridableActionMixin" o-- "widgets::framework::BuildContext"

class "widgets::form::Form" {
  +Widget child
  +Future<bool> Function()? onWillPop
  +bool? canPop
  +void Function(bool)? onPopInvoked
  +void Function()? onChanged
  +AutovalidateMode autovalidateMode
  {static} +FormState? maybeOf()
  {static} +FormState of()
  +FormState createState()
}

"widgets::form::Form" o-- "widgets::framework::Widget"
"widgets::form::Form" o-- "widgets::navigator::Future<bool> Function()"
"widgets::form::Form" o-- "widgets::routes::void Function(bool)"
"widgets::form::Form" o-- "dart::ui::void Function()"
"widgets::form::Form" o-- "widgets::form::AutovalidateMode"
"widgets::framework::StatefulWidget" <|-- "widgets::form::Form"

class "widgets::form::FormState" {
  -int _generation
  -bool _hasInteractedByUser
  -Set<FormFieldState<dynamic>> _fields
  -void _fieldDidChange()
  -void _forceRebuild()
  -void _register()
  -void _unregister()
  +Widget build()
  +void save()
  +void reset()
  +bool validate()
  -bool _validate()
}

"widgets::framework::State" <|-- "widgets::form::FormState"

class "widgets::form::_FormScope" {
  -FormState _formState
  -int _generation
  +Form form
  +bool updateShouldNotify()
}

"widgets::form::_FormScope" o-- "widgets::form::FormState"
"widgets::form::_FormScope" o-- "widgets::form::Form"
"widgets::framework::InheritedWidget" <|-- "widgets::form::_FormScope"

class "widgets::form::FormField" {
  +void Function(T?)? onSaved
  +String? Function(T?)? validator
  +Widget Function(FormFieldState<T>) builder
  +T? initialValue
  +bool enabled
  +AutovalidateMode autovalidateMode
  +String? restorationId
  +FormFieldState<T> createState()
}

"widgets::form::FormField" o-- "widgets::form::void Function(T)"
"widgets::form::FormField" o-- "widgets::form::String Function(T)"
"widgets::form::FormField" o-- "widgets::form::Widget Function(FormFieldState<T>)"
"widgets::form::FormField" o-- "widgets::form::AutovalidateMode"
"widgets::framework::StatefulWidget" <|-- "widgets::form::FormField"

class "widgets::form::FormFieldState" {
  -T? _value
  -RestorableStringN _errorText
  -RestorableBool _hasInteractedByUser
  +T? value
  +String? errorText
  +bool hasError
  +bool hasInteractedByUser
  +bool isValid
  +String? restorationId
  +void save()
  +void reset()
  +bool validate()
  -void _validate()
  +void didChange()
  #void setValue()
  +void restoreState()
  +void deactivate()
  +void dispose()
  +Widget build()
}

"widgets::form::FormFieldState" o-- "widgets::restoration_properties::RestorableStringN"
"widgets::form::FormFieldState" o-- "widgets::restoration_properties::RestorableBool"
"widgets::framework::State" <|-- "widgets::form::FormFieldState"
"widgets::restoration::RestorationMixin" <|-- "widgets::form::FormFieldState"

class "widgets::form::AutovalidateMode" {
  +int index
  {static} +List<AutovalidateMode> values
  {static} +AutovalidateMode disabled
  {static} +AutovalidateMode always
  {static} +AutovalidateMode onUserInteraction
}

"widgets::form::AutovalidateMode" o-- "widgets::form::AutovalidateMode"
"dart::core::Enum" <|-- "widgets::form::AutovalidateMode"

class "widgets::context_menu_button_item::ContextMenuButtonItem" {
  +void Function()? onPressed
  +ContextMenuButtonType type
  +String? label
  +int hashCode
  +ContextMenuButtonItem copyWith()
  +bool ==()
  +String toString()
}

"widgets::context_menu_button_item::ContextMenuButtonItem" o-- "dart::ui::void Function()"
"widgets::context_menu_button_item::ContextMenuButtonItem" o-- "widgets::context_menu_button_item::ContextMenuButtonType"

class "widgets::context_menu_button_item::ContextMenuButtonType" {
  +int index
  {static} +List<ContextMenuButtonType> values
  {static} +ContextMenuButtonType cut
  {static} +ContextMenuButtonType copy
  {static} +ContextMenuButtonType paste
  {static} +ContextMenuButtonType selectAll
  {static} +ContextMenuButtonType delete
  {static} +ContextMenuButtonType lookUp
  {static} +ContextMenuButtonType searchWeb
  {static} +ContextMenuButtonType share
  {static} +ContextMenuButtonType liveTextInput
  {static} +ContextMenuButtonType custom
}

"widgets::context_menu_button_item::ContextMenuButtonType" o-- "widgets::context_menu_button_item::ContextMenuButtonType"
"dart::core::Enum" <|-- "widgets::context_menu_button_item::ContextMenuButtonType"

class "widgets::image::Image" {
  +ImageProvider<Object> image
  +Widget Function(BuildContext, Widget, int?, bool)? frameBuilder
  +Widget Function(BuildContext, Widget, ImageChunkEvent?)? loadingBuilder
  +Widget Function(BuildContext, Object, StackTrace?)? errorBuilder
  +double? width
  +double? height
  +Color? color
  +Animation<double>? opacity
  +FilterQuality filterQuality
  +BlendMode? colorBlendMode
  +BoxFit? fit
  +AlignmentGeometry alignment
  +ImageRepeat repeat
  +Rect? centerSlice
  +bool matchTextDirection
  +bool gaplessPlayback
  +String? semanticLabel
  +bool excludeFromSemantics
  +bool isAntiAlias
  +State<Image> createState()
  +void debugFillProperties()
}

"widgets::image::Image" o-- "painting::image_provider::ImageProvider<Object>"
"widgets::image::Image" o-- "widgets::image::Widget Function(BuildContext, Widget, int, bool)"
"widgets::image::Image" o-- "widgets::image::Widget Function(BuildContext, Widget, ImageChunkEvent)"
"widgets::image::Image" o-- "widgets::image::Widget Function(BuildContext, Object, StackTrace)"
"widgets::image::Image" o-- "dart::ui::Color"
"widgets::image::Image" o-- "animation::animation::Animation<double>"
"widgets::image::Image" o-- "dart::ui::FilterQuality"
"widgets::image::Image" o-- "dart::ui::BlendMode"
"widgets::image::Image" o-- "painting::box_fit::BoxFit"
"widgets::image::Image" o-- "painting::alignment::AlignmentGeometry"
"widgets::image::Image" o-- "painting::decoration_image::ImageRepeat"
"widgets::image::Image" o-- "dart::ui::Rect"
"widgets::framework::StatefulWidget" <|-- "widgets::image::Image"

class "widgets::image::_ImageState" {
  -ImageStream? _imageStream
  -ImageInfo? _imageInfo
  -ImageChunkEvent? _loadingProgress
  -bool _isListeningToStream
  -bool _invertColors
  -int? _frameNumber
  -bool _wasSynchronouslyLoaded
  -DisposableBuildContext<State<Image>> _scrollAwareContext
  -Object? _lastException
  -StackTrace? _lastStack
  -ImageStreamCompleterHandle? _completerHandle
  -ImageStreamListener? _imageStreamListener
  +void initState()
  +void dispose()
  +void didChangeDependencies()
  +void didUpdateWidget()
  +void didChangeAccessibilityFeatures()
  +void reassemble()
  -void _updateInvertColors()
  -void _resolveImage()
  -ImageStreamListener _getListener()
  -void _handleImageFrame()
  -void _handleImageChunk()
  -void _replaceImage()
  -void _updateSourceStream()
  -void _listenToStream()
  -void _stopListeningToStream()
  -Widget _debugBuildErrorWidget()
  +Widget build()
  +void debugFillProperties()
}

"widgets::image::_ImageState" o-- "painting::image_stream::ImageStream"
"widgets::image::_ImageState" o-- "painting::image_stream::ImageInfo"
"widgets::image::_ImageState" o-- "painting::image_stream::ImageChunkEvent"
"widgets::image::_ImageState" o-- "widgets::disposable_build_context::DisposableBuildContext<State<Image>>"
"widgets::image::_ImageState" o-- "painting::image_stream::ImageStreamCompleterHandle"
"widgets::image::_ImageState" o-- "painting::image_stream::ImageStreamListener"
"widgets::framework::State" <|-- "widgets::image::_ImageState"
"widgets::binding::WidgetsBindingObserver" <|-- "widgets::image::_ImageState"

class "widgets::undo_history::UndoHistory" {
  +ValueNotifier<T> value
  +bool Function(T?, T)? shouldChangeUndoStack
  +void Function(T) onTriggered
  +FocusNode focusNode
  +UndoHistoryController? controller
  +Widget child
  +State<UndoHistory<T>> createState()
}

"widgets::undo_history::UndoHistory" o-- "foundation::change_notifier::ValueNotifier<T>"
"widgets::undo_history::UndoHistory" o-- "null::bool Function(T, T)"
"widgets::undo_history::UndoHistory" o-- "null::void Function(T)"
"widgets::undo_history::UndoHistory" o-- "widgets::focus_manager::FocusNode"
"widgets::undo_history::UndoHistory" o-- "widgets::undo_history::UndoHistoryController"
"widgets::undo_history::UndoHistory" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::undo_history::UndoHistory"

class "widgets::undo_history::UndoHistoryState" {
  -_UndoStack<T> _stack
  -Timer Function(T) _throttledPush
  -Timer? _throttleTimer
  -bool _duringTrigger
  {static} -Duration _kThrottleDuration
  -T? _lastValue
  -UndoHistoryController? _controller
  -UndoHistoryController _effectiveController
  +bool canUndo
  +bool canRedo
  +void undo()
  +void redo()
  -void _updateState()
  -void _undoFromIntent()
  -void _redoFromIntent()
  -void _update()
  -void _push()
  -void _handleFocus()
  +void handlePlatformUndo()
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"widgets::undo_history::UndoHistoryState" o-- "widgets::undo_history::_UndoStack<T>"
"widgets::undo_history::UndoHistoryState" o-- "widgets::undo_history::Timer Function(T)"
"widgets::undo_history::UndoHistoryState" o-- "dart::async::Timer"
"widgets::undo_history::UndoHistoryState" o-- "widgets::undo_history::UndoHistoryController"
"widgets::framework::State" <|-- "widgets::undo_history::UndoHistoryState"

class "widgets::undo_history::UndoHistoryValue" {
  {static} +UndoHistoryValue empty
  +bool canUndo
  +bool canRedo
  +int hashCode
  +String toString()
  +bool ==()
}

"widgets::undo_history::UndoHistoryValue" o-- "widgets::undo_history::UndoHistoryValue"

class "widgets::undo_history::UndoHistoryController" {
  +ChangeNotifier onUndo
  +ChangeNotifier onRedo
  +void undo()
  +void redo()
  +void dispose()
}

"widgets::undo_history::UndoHistoryController" o-- "foundation::change_notifier::ChangeNotifier"
"foundation::change_notifier::ValueNotifier" <|-- "widgets::undo_history::UndoHistoryController"

class "widgets::undo_history::_UndoStack" {
  -List<T> _list
  -int _index
  +T? currentValue
  +bool canUndo
  +bool canRedo
  +void push()
  +T? undo()
  +T? redo()
  +void clear()
  +String toString()
}

class "widgets::icon_theme_data::IconThemeData" {
  +double? size
  +double? fill
  +double? weight
  +double? grade
  +double? opticalSize
  +Color? color
  -double? _opacity
  +List<Shadow>? shadows
  +bool isConcrete
  +double? opacity
  +int hashCode
  +IconThemeData copyWith()
  +IconThemeData merge()
  +IconThemeData resolve()
  {static} +IconThemeData lerp()
  +bool ==()
  +void debugFillProperties()
}

"widgets::icon_theme_data::IconThemeData" o-- "dart::ui::Color"
"foundation::diagnostics::Diagnosticable" <|-- "widgets::icon_theme_data::IconThemeData"

class "widgets::texture::Texture" {
  +int textureId
  +bool freeze
  +FilterQuality filterQuality
  +TextureBox createRenderObject()
  +void updateRenderObject()
}

"widgets::texture::Texture" o-- "dart::ui::FilterQuality"
"widgets::framework::LeafRenderObjectWidget" <|-- "widgets::texture::Texture"

class "widgets::nested_scroll_view::NestedScrollView" {
  +ScrollController? controller
  +Axis scrollDirection
  +bool reverse
  +ScrollPhysics? physics
  +List<Widget> Function(BuildContext, bool) headerSliverBuilder
  +Widget body
  +DragStartBehavior dragStartBehavior
  +bool floatHeaderSlivers
  +Clip clipBehavior
  +String? restorationId
  +ScrollBehavior? scrollBehavior
  {static} +SliverOverlapAbsorberHandle sliverOverlapAbsorberHandleFor()
  -List<Widget> _buildSlivers()
  +NestedScrollViewState createState()
}

"widgets::nested_scroll_view::NestedScrollView" o-- "widgets::scroll_controller::ScrollController"
"widgets::nested_scroll_view::NestedScrollView" o-- "painting::basic_types::Axis"
"widgets::nested_scroll_view::NestedScrollView" o-- "widgets::scroll_physics::ScrollPhysics"
"widgets::nested_scroll_view::NestedScrollView" o-- "widgets::nested_scroll_view::List<Widget> Function(BuildContext, bool)"
"widgets::nested_scroll_view::NestedScrollView" o-- "widgets::framework::Widget"
"widgets::nested_scroll_view::NestedScrollView" o-- "gestures::recognizer::DragStartBehavior"
"widgets::nested_scroll_view::NestedScrollView" o-- "dart::ui::Clip"
"widgets::nested_scroll_view::NestedScrollView" o-- "widgets::scroll_configuration::ScrollBehavior"
"widgets::framework::StatefulWidget" <|-- "widgets::nested_scroll_view::NestedScrollView"

class "widgets::nested_scroll_view::NestedScrollViewState" {
  -SliverOverlapAbsorberHandle _absorberHandle
  -_NestedScrollCoordinator? _coordinator
  -bool? _lastHasScrolledBody
  +ScrollController innerController
  +ScrollController outerController
  +void initState()
  +void didChangeDependencies()
  +void didUpdateWidget()
  +void dispose()
  -void _handleHasScrolledBodyChanged()
  +Widget build()
}

"widgets::nested_scroll_view::NestedScrollViewState" o-- "widgets::nested_scroll_view::SliverOverlapAbsorberHandle"
"widgets::nested_scroll_view::NestedScrollViewState" o-- "widgets::nested_scroll_view::_NestedScrollCoordinator"
"widgets::nested_scroll_view::NestedScrollViewState" o-- "widgets::scroll_controller::ScrollController"
"widgets::framework::State" <|-- "widgets::nested_scroll_view::NestedScrollViewState"

class "widgets::nested_scroll_view::_NestedScrollViewCustomScrollView" {
  +SliverOverlapAbsorberHandle handle
  +Widget buildViewport()
}

"widgets::nested_scroll_view::_NestedScrollViewCustomScrollView" o-- "widgets::nested_scroll_view::SliverOverlapAbsorberHandle"
"widgets::scroll_view::CustomScrollView" <|-- "widgets::nested_scroll_view::_NestedScrollViewCustomScrollView"

class "widgets::nested_scroll_view::_InheritedNestedScrollView" {
  +NestedScrollViewState state
  +bool updateShouldNotify()
}

"widgets::nested_scroll_view::_InheritedNestedScrollView" o-- "widgets::nested_scroll_view::NestedScrollViewState"
"widgets::framework::InheritedWidget" <|-- "widgets::nested_scroll_view::_InheritedNestedScrollView"

class "widgets::nested_scroll_view::_NestedScrollMetrics" {
  +double minRange
  +double maxRange
  +double correctionOffset
  +_NestedScrollMetrics copyWith()
}

"widgets::scroll_metrics::FixedScrollMetrics" <|-- "widgets::nested_scroll_view::_NestedScrollMetrics"

class "widgets::nested_scroll_view::_NestedScrollCoordinator" {
  -NestedScrollViewState _state
  -ScrollController? _parent
  -void Function() _onHasScrolledBodyChanged
  -bool _floatHeaderSlivers
  -_NestedScrollController _outerController
  -_NestedScrollController _innerController
  -ScrollDirection _userScrollDirection
  -ScrollDragController? _currentDrag
  -_NestedScrollPosition? _outerPosition
  -Iterable<_NestedScrollPosition> _innerPositions
  +bool canScrollBody
  +bool hasScrolledBody
  +ScrollDirection userScrollDirection
  +AxisDirection axisDirection
  +void updateShadow()
  +void updateUserScrollDirection()
  +void beginActivity()
  {static} -IdleScrollActivity _createIdleScrollActivity()
  +void goIdle()
  +void goBallistic()
  +ScrollActivity createOuterBallisticScrollActivity()
  #ScrollActivity createInnerBallisticScrollActivity()
  -_NestedScrollMetrics _getMetrics()
  +double unnestOffset()
  +double nestOffset()
  +void updateCanDrag()
  +Future<void> animateTo()
  +void jumpTo()
  +void pointerScroll()
  +double setPixels()
  +ScrollHoldController hold()
  +void cancel()
  +Drag drag()
  +void applyUserOffset()
  +void setParent()
  +void updateParent()
  +void dispose()
  +String toString()
}

"widgets::nested_scroll_view::_NestedScrollCoordinator" o-- "widgets::nested_scroll_view::NestedScrollViewState"
"widgets::nested_scroll_view::_NestedScrollCoordinator" o-- "widgets::scroll_controller::ScrollController"
"widgets::nested_scroll_view::_NestedScrollCoordinator" o-- "dart::ui::void Function()"
"widgets::nested_scroll_view::_NestedScrollCoordinator" o-- "widgets::nested_scroll_view::_NestedScrollController"
"widgets::nested_scroll_view::_NestedScrollCoordinator" o-- "rendering::viewport_offset::ScrollDirection"
"widgets::nested_scroll_view::_NestedScrollCoordinator" o-- "widgets::scroll_activity::ScrollDragController"
"widgets::nested_scroll_view::_NestedScrollCoordinator" o-- "widgets::nested_scroll_view::_NestedScrollPosition"
"widgets::nested_scroll_view::_NestedScrollCoordinator" o-- "painting::basic_types::AxisDirection"
"widgets::scroll_activity::ScrollActivityDelegate" <|-- "widgets::nested_scroll_view::_NestedScrollCoordinator"
"widgets::scroll_activity::ScrollHoldController" <|-- "widgets::nested_scroll_view::_NestedScrollCoordinator"

class "widgets::nested_scroll_view::_NestedScrollController" {
  +_NestedScrollCoordinator coordinator
  +Iterable<_NestedScrollPosition> nestedPositions
  +ScrollPosition createScrollPosition()
  +void attach()
  +void detach()
  -void _scheduleUpdateShadow()
}

"widgets::nested_scroll_view::_NestedScrollController" o-- "widgets::nested_scroll_view::_NestedScrollCoordinator"
"widgets::scroll_controller::ScrollController" <|-- "widgets::nested_scroll_view::_NestedScrollController"

class "widgets::nested_scroll_view::_NestedScrollPosition" {
  +_NestedScrollCoordinator coordinator
  -ScrollController? _parent
  +TickerProvider vsync
  +AxisDirection axisDirection
  +ScrollDirection userScrollDirection
  +void setParent()
  +void absorb()
  +void restoreScrollOffset()
  +double applyClampedDragUpdate()
  +double applyFullDragUpdate()
  +double applyClampedPointerSignalUpdate()
  +DrivenScrollActivity createDrivenScrollActivity()
  +double applyUserOffset()
  +void goIdle()
  +void goBallistic()
  +ScrollActivity createBallisticScrollActivity()
  +Future<void> animateTo()
  +void jumpTo()
  +void pointerScroll()
  +void jumpToWithoutSettling()
  +void localJumpTo()
  +void applyNewDimensions()
  +void updateCanDrag()
  +ScrollHoldController hold()
  +Drag drag()
}

"widgets::nested_scroll_view::_NestedScrollPosition" o-- "widgets::nested_scroll_view::_NestedScrollCoordinator"
"widgets::nested_scroll_view::_NestedScrollPosition" o-- "widgets::scroll_controller::ScrollController"
"widgets::nested_scroll_view::_NestedScrollPosition" o-- "scheduler::ticker::TickerProvider"
"widgets::nested_scroll_view::_NestedScrollPosition" o-- "painting::basic_types::AxisDirection"
"widgets::nested_scroll_view::_NestedScrollPosition" o-- "rendering::viewport_offset::ScrollDirection"
"widgets::scroll_position::ScrollPosition" <|-- "widgets::nested_scroll_view::_NestedScrollPosition"
"widgets::scroll_activity::ScrollActivityDelegate" <|-- "widgets::nested_scroll_view::_NestedScrollPosition"

class "widgets::nested_scroll_view::_NestedInnerBallisticScrollActivity" {
  +_NestedScrollCoordinator coordinator
  +_NestedScrollPosition delegate
  +void resetActivity()
  +void applyNewDimensions()
  +bool applyMoveTo()
}

"widgets::nested_scroll_view::_NestedInnerBallisticScrollActivity" o-- "widgets::nested_scroll_view::_NestedScrollCoordinator"
"widgets::nested_scroll_view::_NestedInnerBallisticScrollActivity" o-- "widgets::nested_scroll_view::_NestedScrollPosition"
"widgets::scroll_activity::BallisticScrollActivity" <|-- "widgets::nested_scroll_view::_NestedInnerBallisticScrollActivity"

class "widgets::nested_scroll_view::_NestedOuterBallisticScrollActivity" {
  +_NestedScrollCoordinator coordinator
  +_NestedScrollMetrics metrics
  +_NestedScrollPosition delegate
  +void resetActivity()
  +void applyNewDimensions()
  +bool applyMoveTo()
  +String toString()
}

"widgets::nested_scroll_view::_NestedOuterBallisticScrollActivity" o-- "widgets::nested_scroll_view::_NestedScrollCoordinator"
"widgets::nested_scroll_view::_NestedOuterBallisticScrollActivity" o-- "widgets::nested_scroll_view::_NestedScrollMetrics"
"widgets::nested_scroll_view::_NestedOuterBallisticScrollActivity" o-- "widgets::nested_scroll_view::_NestedScrollPosition"
"widgets::scroll_activity::BallisticScrollActivity" <|-- "widgets::nested_scroll_view::_NestedOuterBallisticScrollActivity"

class "widgets::nested_scroll_view::SliverOverlapAbsorberHandle" {
  -int _writers
  -double? _layoutExtent
  -double? _scrollExtent
  +double? layoutExtent
  +double? scrollExtent
  -void _setExtents()
  -void _markNeedsLayout()
  +String toString()
}

"foundation::change_notifier::ChangeNotifier" <|-- "widgets::nested_scroll_view::SliverOverlapAbsorberHandle"

class "widgets::nested_scroll_view::SliverOverlapAbsorber" {
  +SliverOverlapAbsorberHandle handle
  +RenderSliverOverlapAbsorber createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::nested_scroll_view::SliverOverlapAbsorber" o-- "widgets::nested_scroll_view::SliverOverlapAbsorberHandle"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::nested_scroll_view::SliverOverlapAbsorber"

class "widgets::nested_scroll_view::RenderSliverOverlapAbsorber" {
  -SliverOverlapAbsorberHandle _handle
  +SliverOverlapAbsorberHandle handle
  +void attach()
  +void detach()
  +void performLayout()
  +void applyPaintTransform()
  +bool hitTestChildren()
  +void paint()
  +void debugFillProperties()
}

"widgets::nested_scroll_view::RenderSliverOverlapAbsorber" o-- "widgets::nested_scroll_view::SliverOverlapAbsorberHandle"
"rendering::sliver::RenderSliver" <|-- "widgets::nested_scroll_view::RenderSliverOverlapAbsorber"
"rendering::object::RenderObjectWithChildMixin" <|-- "widgets::nested_scroll_view::RenderSliverOverlapAbsorber"

class "widgets::nested_scroll_view::SliverOverlapInjector" {
  +SliverOverlapAbsorberHandle handle
  +RenderSliverOverlapInjector createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::nested_scroll_view::SliverOverlapInjector" o-- "widgets::nested_scroll_view::SliverOverlapAbsorberHandle"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::nested_scroll_view::SliverOverlapInjector"

class "widgets::nested_scroll_view::RenderSliverOverlapInjector" {
  -double? _currentLayoutExtent
  -double? _currentMaxExtent
  -SliverOverlapAbsorberHandle _handle
  +SliverOverlapAbsorberHandle handle
  +void attach()
  +void detach()
  +void performLayout()
  +void debugPaint()
  +void debugFillProperties()
}

"widgets::nested_scroll_view::RenderSliverOverlapInjector" o-- "widgets::nested_scroll_view::SliverOverlapAbsorberHandle"
"rendering::sliver::RenderSliver" <|-- "widgets::nested_scroll_view::RenderSliverOverlapInjector"

class "widgets::nested_scroll_view::NestedScrollViewViewport" {
  +SliverOverlapAbsorberHandle handle
  +RenderNestedScrollViewViewport createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::nested_scroll_view::NestedScrollViewViewport" o-- "widgets::nested_scroll_view::SliverOverlapAbsorberHandle"
"widgets::viewport::Viewport" <|-- "widgets::nested_scroll_view::NestedScrollViewViewport"

class "widgets::nested_scroll_view::RenderNestedScrollViewViewport" {
  -SliverOverlapAbsorberHandle _handle
  +SliverOverlapAbsorberHandle handle
  +void markNeedsLayout()
  +void debugFillProperties()
}

"widgets::nested_scroll_view::RenderNestedScrollViewViewport" o-- "widgets::nested_scroll_view::SliverOverlapAbsorberHandle"
"rendering::viewport::RenderViewport" <|-- "widgets::nested_scroll_view::RenderNestedScrollViewViewport"

class "widgets::nested_scroll_view::_NestedBallisticScrollActivityMode" {
  +int index
  {static} +List<_NestedBallisticScrollActivityMode> values
  {static} +_NestedBallisticScrollActivityMode outer
  {static} +_NestedBallisticScrollActivityMode inner
  {static} +_NestedBallisticScrollActivityMode independent
}

"widgets::nested_scroll_view::_NestedBallisticScrollActivityMode" o-- "widgets::nested_scroll_view::_NestedBallisticScrollActivityMode"
"dart::core::Enum" <|-- "widgets::nested_scroll_view::_NestedBallisticScrollActivityMode"

class "widgets::selection_container::SelectionContainer" {
  +SelectionRegistrar? registrar
  +Widget child
  +SelectionContainerDelegate? delegate
  -bool _disabled
  {static} +SelectionRegistrar? maybeOf()
  +State<SelectionContainer> createState()
}

"widgets::selection_container::SelectionContainer" o-- "rendering::selection::SelectionRegistrar"
"widgets::selection_container::SelectionContainer" o-- "widgets::framework::Widget"
"widgets::selection_container::SelectionContainer" o-- "widgets::selection_container::SelectionContainerDelegate"
"widgets::framework::StatefulWidget" <|-- "widgets::selection_container::SelectionContainer"

class "widgets::selection_container::_SelectionContainerState" {
  -Set<void Function()> _listeners
  {static} -SelectionGeometry _disabledGeometry
  +SelectionGeometry value
  +Size size
  +void initState()
  +void didUpdateWidget()
  +void didChangeDependencies()
  +void addListener()
  +void removeListener()
  +void pushHandleLayers()
  +SelectedContent? getSelectedContent()
  +SelectionResult dispatchSelectionEvent()
  +Matrix4 getTransformTo()
  +void dispose()
  +Widget build()
}

"widgets::selection_container::_SelectionContainerState" o-- "rendering::selection::SelectionGeometry"
"widgets::selection_container::_SelectionContainerState" o-- "dart::ui::Size"
"widgets::framework::State" <|-- "widgets::selection_container::_SelectionContainerState"
"rendering::selection::Selectable" <|-- "widgets::selection_container::_SelectionContainerState"
"rendering::selection::SelectionRegistrant" <|-- "widgets::selection_container::_SelectionContainerState"

class "widgets::selection_container::SelectionRegistrarScope" {
  +SelectionRegistrar? registrar
  +bool updateShouldNotify()
}

"widgets::selection_container::SelectionRegistrarScope" o-- "rendering::selection::SelectionRegistrar"
"widgets::framework::InheritedWidget" <|-- "widgets::selection_container::SelectionRegistrarScope"

abstract class "widgets::selection_container::SelectionContainerDelegate" {
  -BuildContext? _selectionContainerContext
  +bool hasSize
  +Size containerSize
  +Matrix4 getTransformFrom()
  +Matrix4 getTransformTo()
}

"widgets::selection_container::SelectionContainerDelegate" o-- "widgets::framework::BuildContext"
"widgets::selection_container::SelectionContainerDelegate" o-- "dart::ui::Size"
"rendering::selection::SelectionHandler" <|-- "widgets::selection_container::SelectionContainerDelegate"
"rendering::selection::SelectionRegistrar" <|-- "widgets::selection_container::SelectionContainerDelegate"

class "widgets::navigation_toolbar::NavigationToolbar" {
  {static} +double kMiddleSpacing
  +Widget? leading
  +Widget? middle
  +Widget? trailing
  +bool centerMiddle
  +double middleSpacing
  +Widget build()
}

"widgets::navigation_toolbar::NavigationToolbar" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::navigation_toolbar::NavigationToolbar"

class "widgets::navigation_toolbar::_ToolbarLayout" {
  +bool centerMiddle
  +double middleSpacing
  +TextDirection textDirection
  +void performLayout()
  +bool shouldRelayout()
}

"widgets::navigation_toolbar::_ToolbarLayout" o-- "dart::ui::TextDirection"
"rendering::custom_layout::MultiChildLayoutDelegate" <|-- "widgets::navigation_toolbar::_ToolbarLayout"

class "widgets::navigation_toolbar::_ToolbarSlot" {
  +int index
  {static} +List<_ToolbarSlot> values
  {static} +_ToolbarSlot leading
  {static} +_ToolbarSlot middle
  {static} +_ToolbarSlot trailing
}

"widgets::navigation_toolbar::_ToolbarSlot" o-- "widgets::navigation_toolbar::_ToolbarSlot"
"dart::core::Enum" <|-- "widgets::navigation_toolbar::_ToolbarSlot"

abstract class "widgets::two_dimensional_viewport::TwoDimensionalViewport" {
  +ViewportOffset verticalOffset
  +AxisDirection verticalAxisDirection
  +ViewportOffset horizontalOffset
  +AxisDirection horizontalAxisDirection
  +Axis mainAxis
  +double? cacheExtent
  +Clip clipBehavior
  +TwoDimensionalChildDelegate delegate
  +RenderObjectElement createElement()
  +RenderTwoDimensionalViewport createRenderObject()
  +void updateRenderObject()
}

"widgets::two_dimensional_viewport::TwoDimensionalViewport" o-- "rendering::viewport_offset::ViewportOffset"
"widgets::two_dimensional_viewport::TwoDimensionalViewport" o-- "painting::basic_types::AxisDirection"
"widgets::two_dimensional_viewport::TwoDimensionalViewport" o-- "painting::basic_types::Axis"
"widgets::two_dimensional_viewport::TwoDimensionalViewport" o-- "dart::ui::Clip"
"widgets::two_dimensional_viewport::TwoDimensionalViewport" o-- "widgets::scroll_delegate::TwoDimensionalChildDelegate"
"widgets::framework::RenderObjectWidget" <|-- "widgets::two_dimensional_viewport::TwoDimensionalViewport"

class "widgets::two_dimensional_viewport::_TwoDimensionalViewportElement" {
  -Map<ChildVicinity, Element> _vicinityToChild
  -Map<Key, Element> _keyToChild
  -Map<ChildVicinity, Element>? _newVicinityToChild
  -Map<Key, Element>? _newKeyToChild
  +RenderTwoDimensionalViewport renderObject
  -bool _debugIsDoingLayout
  +void performRebuild()
  +void forgetChild()
  +void insertRenderObjectChild()
  +void moveRenderObjectChild()
  +void removeRenderObjectChild()
  +void visitChildren()
  +List<DiagnosticsNode> debugDescribeChildren()
  {static} -int _compareChildren()
  -void _startLayout()
  -void _buildChild()
  -Element? _retrieveOldElement()
  -void _reuseChild()
  -void _endLayout()
}

"widgets::two_dimensional_viewport::_TwoDimensionalViewportElement" o-- "widgets::two_dimensional_viewport::RenderTwoDimensionalViewport"
"widgets::framework::RenderObjectElement" <|-- "widgets::two_dimensional_viewport::_TwoDimensionalViewportElement"
"widgets::framework::NotifiableElementMixin" <|-- "widgets::two_dimensional_viewport::_TwoDimensionalViewportElement"
"widgets::scroll_notification::ViewportElementMixin" <|-- "widgets::two_dimensional_viewport::_TwoDimensionalViewportElement"
"widgets::two_dimensional_viewport::TwoDimensionalChildManager" <|-- "widgets::two_dimensional_viewport::_TwoDimensionalViewportElement"

class "widgets::two_dimensional_viewport::TwoDimensionalViewportParentData" {
  +Offset? layoutOffset
  +ChildVicinity vicinity
  -Size? _paintExtent
  -RenderBox? _previousSibling
  -RenderBox? _nextSibling
  +Offset? paintOffset
  +bool isVisible
  +bool keptAlive
  +String toString()
}

"widgets::two_dimensional_viewport::TwoDimensionalViewportParentData" o-- "dart::ui::Offset"
"widgets::two_dimensional_viewport::TwoDimensionalViewportParentData" o-- "widgets::two_dimensional_viewport::ChildVicinity"
"widgets::two_dimensional_viewport::TwoDimensionalViewportParentData" o-- "dart::ui::Size"
"widgets::two_dimensional_viewport::TwoDimensionalViewportParentData" o-- "rendering::box::RenderBox"
"rendering::object::ParentData" <|-- "widgets::two_dimensional_viewport::TwoDimensionalViewportParentData"
"rendering::sliver_multi_box_adaptor::KeepAliveParentDataMixin" <|-- "widgets::two_dimensional_viewport::TwoDimensionalViewportParentData"

abstract class "widgets::two_dimensional_viewport::RenderTwoDimensionalViewport" {
  -ViewportOffset _horizontalOffset
  -AxisDirection _horizontalAxisDirection
  -ViewportOffset _verticalOffset
  -AxisDirection _verticalAxisDirection
  -TwoDimensionalChildDelegate _delegate
  -Axis _mainAxis
  -double? _cacheExtent
  -Clip _clipBehavior
  -TwoDimensionalChildManager _childManager
  -Map<ChildVicinity, RenderBox> _children
  -Map<ChildVicinity, RenderBox> _activeChildrenForLayoutPass
  -Map<ChildVicinity, RenderBox> _keepAliveBucket
  -List<RenderBox> _debugDanglingKeepAlives
  -bool _hasVisualOverflow
  -LayerHandle<ClipRectLayer> _clipRectLayer
  -int? _leadingXIndex
  -int? _trailingXIndex
  -int? _leadingYIndex
  -int? _trailingYIndex
  -RenderBox? _firstChild
  -RenderBox? _lastChild
  -bool _didResize
  -bool _needsDelegateRebuild
  -List<RenderBox>? _debugOrphans
  +ViewportOffset horizontalOffset
  +AxisDirection horizontalAxisDirection
  +ViewportOffset verticalOffset
  +AxisDirection verticalAxisDirection
  +TwoDimensionalChildDelegate delegate
  +Axis mainAxis
  +double cacheExtent
  +Clip clipBehavior
  +bool isRepaintBoundary
  +bool sizedByParent
  +RenderBox? firstChild
  +RenderBox? lastChild
  +Size viewportDimension
  +bool didResize
  +bool needsDelegateRebuild
  +RenderBox? childBefore()
  +RenderBox? childAfter()
  -void _handleDelegateNotification()
  +void setupParentData()
  #TwoDimensionalViewportParentData parentDataOf()
  #RenderBox? getChildFor()
  +void attach()
  +void detach()
  +void redepthChildren()
  +void visitChildren()
  +void visitChildrenForSemantics()
  +List<DiagnosticsNode> debugDescribeChildren()
  +Size computeDryLayout()
  +bool hitTestChildren()
  +void performResize()
  #RevealedOffset getOffsetToReveal()
  +void showOnScreen()
  {static} +Rect? showInViewport()
  {static} -Rect? _showInViewportForAxisDirection()
  +void markNeedsLayout()
  +void layoutChildSequence()
  +void performLayout()
  -void _cacheKeepAlives()
  -void _reifyChildren()
  -RenderBox? _completeChildParentData()
  -bool _debugCheckContentDimensions()
  +RenderBox? buildOrObtainChildFor()
  +void updateChildPaintData()
  +Size computeChildPaintExtent()
  #Offset computeAbsolutePaintOffsetFor()
  +void paint()
  -void _paintChildren()
  -void _insertChild()
  -void _moveChild()
  -void _removeChild()
  -bool _debugTrackOrphans()
  #bool debugThrowIfNotCheckingIntrinsics()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +void applyPaintTransform()
  +void dispose()
}

"widgets::two_dimensional_viewport::RenderTwoDimensionalViewport" o-- "rendering::viewport_offset::ViewportOffset"
"widgets::two_dimensional_viewport::RenderTwoDimensionalViewport" o-- "painting::basic_types::AxisDirection"
"widgets::two_dimensional_viewport::RenderTwoDimensionalViewport" o-- "widgets::scroll_delegate::TwoDimensionalChildDelegate"
"widgets::two_dimensional_viewport::RenderTwoDimensionalViewport" o-- "painting::basic_types::Axis"
"widgets::two_dimensional_viewport::RenderTwoDimensionalViewport" o-- "dart::ui::Clip"
"widgets::two_dimensional_viewport::RenderTwoDimensionalViewport" o-- "widgets::two_dimensional_viewport::TwoDimensionalChildManager"
"widgets::two_dimensional_viewport::RenderTwoDimensionalViewport" o-- "rendering::layer::LayerHandle<ClipRectLayer>"
"widgets::two_dimensional_viewport::RenderTwoDimensionalViewport" o-- "rendering::box::RenderBox"
"widgets::two_dimensional_viewport::RenderTwoDimensionalViewport" o-- "dart::ui::Size"
"rendering::box::RenderBox" <|-- "widgets::two_dimensional_viewport::RenderTwoDimensionalViewport"
"rendering::viewport::RenderAbstractViewport" <|-- "widgets::two_dimensional_viewport::RenderTwoDimensionalViewport"

abstract class "widgets::two_dimensional_viewport::TwoDimensionalChildManager" {
  -void _startLayout()
  -void _buildChild()
  -void _reuseChild()
  -void _endLayout()
}

class "widgets::two_dimensional_viewport::ChildVicinity" {
  {static} +ChildVicinity invalid
  +int xIndex
  +int yIndex
  +int hashCode
  +bool ==()
  +int compareTo()
  +String toString()
}

"widgets::two_dimensional_viewport::ChildVicinity" o-- "widgets::two_dimensional_viewport::ChildVicinity"
"dart::core::Comparable" <|-- "widgets::two_dimensional_viewport::ChildVicinity"

class "widgets::reorderable_list::ReorderableList" {
  +Widget Function(BuildContext, int) itemBuilder
  +int itemCount
  +void Function(int, int) onReorder
  +void Function(int)? onReorderStart
  +void Function(int)? onReorderEnd
  +Widget Function(Widget, int, Animation<double>)? proxyDecorator
  +EdgeInsetsGeometry? padding
  +Axis scrollDirection
  +bool reverse
  +ScrollController? controller
  +bool? primary
  +ScrollPhysics? physics
  +bool shrinkWrap
  +double anchor
  +double? cacheExtent
  +DragStartBehavior dragStartBehavior
  +ScrollViewKeyboardDismissBehavior keyboardDismissBehavior
  +String? restorationId
  +Clip clipBehavior
  +double? itemExtent
  +dynamic itemExtentBuilder
  +Widget? prototypeItem
  +double? autoScrollerVelocityScalar
  {static} +ReorderableListState of()
  {static} +ReorderableListState? maybeOf()
  +ReorderableListState createState()
}

"widgets::reorderable_list::ReorderableList" o-- "widgets::framework::Widget Function(BuildContext, int)"
"widgets::reorderable_list::ReorderableList" o-- "widgets::reorderable_list::void Function(int, int)"
"widgets::reorderable_list::ReorderableList" o-- "null::void Function(int)"
"widgets::reorderable_list::ReorderableList" o-- "widgets::reorderable_list::Widget Function(Widget, int, Animation<double>)"
"widgets::reorderable_list::ReorderableList" o-- "painting::edge_insets::EdgeInsetsGeometry"
"widgets::reorderable_list::ReorderableList" o-- "painting::basic_types::Axis"
"widgets::reorderable_list::ReorderableList" o-- "widgets::scroll_controller::ScrollController"
"widgets::reorderable_list::ReorderableList" o-- "widgets::scroll_physics::ScrollPhysics"
"widgets::reorderable_list::ReorderableList" o-- "gestures::recognizer::DragStartBehavior"
"widgets::reorderable_list::ReorderableList" o-- "widgets::scroll_view::ScrollViewKeyboardDismissBehavior"
"widgets::reorderable_list::ReorderableList" o-- "dart::ui::Clip"
"widgets::reorderable_list::ReorderableList" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::reorderable_list::ReorderableList"

class "widgets::reorderable_list::ReorderableListState" {
  -GlobalKey<SliverReorderableListState> _sliverReorderableListKey
  +void startItemDragReorder()
  +void cancelReorder()
  +Widget build()
}

"widgets::reorderable_list::ReorderableListState" o-- "widgets::framework::GlobalKey<SliverReorderableListState>"
"widgets::framework::State" <|-- "widgets::reorderable_list::ReorderableListState"

class "widgets::reorderable_list::SliverReorderableList" {
  {static} -double _kDefaultAutoScrollVelocityScalar
  +Widget Function(BuildContext, int) itemBuilder
  +int? Function(Key)? findChildIndexCallback
  +int itemCount
  +void Function(int, int) onReorder
  +void Function(int)? onReorderStart
  +void Function(int)? onReorderEnd
  +Widget Function(Widget, int, Animation<double>)? proxyDecorator
  +double? itemExtent
  +dynamic itemExtentBuilder
  +Widget? prototypeItem
  +double autoScrollerVelocityScalar
  +SliverReorderableListState createState()
  {static} +SliverReorderableListState of()
  {static} +SliverReorderableListState? maybeOf()
}

"widgets::reorderable_list::SliverReorderableList" o-- "widgets::framework::Widget Function(BuildContext, int)"
"widgets::reorderable_list::SliverReorderableList" o-- "widgets::scroll_delegate::int Function(Key)"
"widgets::reorderable_list::SliverReorderableList" o-- "widgets::reorderable_list::void Function(int, int)"
"widgets::reorderable_list::SliverReorderableList" o-- "null::void Function(int)"
"widgets::reorderable_list::SliverReorderableList" o-- "widgets::reorderable_list::Widget Function(Widget, int, Animation<double>)"
"widgets::reorderable_list::SliverReorderableList" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::reorderable_list::SliverReorderableList"

class "widgets::reorderable_list::SliverReorderableListState" {
  -Map<int, _ReorderableItemState> _items
  -OverlayEntry? _overlayEntry
  -int? _dragIndex
  -_DragInfo? _dragInfo
  -int? _insertIndex
  -Offset? _finalDropPosition
  -MultiDragGestureRecognizer? _recognizer
  -int? _recognizerPointer
  -bool _dragStartTransitionComplete
  -EdgeDraggingAutoScroller? _autoScroller
  -ScrollableState _scrollable
  -Axis _scrollDirection
  -bool _reverse
  -Rect _dragTargetRect
  +void didChangeDependencies()
  +void didUpdateWidget()
  +void dispose()
  +void startItemDragReorder()
  +void cancelReorder()
  -void _registerItem()
  -void _unregisterItem()
  -Drag? _dragStart()
  -void _dragUpdate()
  -void _dragCancel()
  -void _dragEnd()
  -void _dropCompleted()
  -void _dragReset()
  -void _resetItemGap()
  -void _handleScrollableAutoScrolled()
  -void _dragUpdateItems()
  -Offset _itemOffsetAt()
  -Widget _itemBuilder()
  -Widget _wrapWithSemantics()
  +Widget build()
}

"widgets::reorderable_list::SliverReorderableListState" o-- "widgets::overlay::OverlayEntry"
"widgets::reorderable_list::SliverReorderableListState" o-- "widgets::reorderable_list::_DragInfo"
"widgets::reorderable_list::SliverReorderableListState" o-- "dart::ui::Offset"
"widgets::reorderable_list::SliverReorderableListState" o-- "gestures::multidrag::MultiDragGestureRecognizer"
"widgets::reorderable_list::SliverReorderableListState" o-- "widgets::scrollable_helpers::EdgeDraggingAutoScroller"
"widgets::reorderable_list::SliverReorderableListState" o-- "widgets::scrollable::ScrollableState"
"widgets::reorderable_list::SliverReorderableListState" o-- "painting::basic_types::Axis"
"widgets::reorderable_list::SliverReorderableListState" o-- "dart::ui::Rect"
"widgets::framework::State" <|-- "widgets::reorderable_list::SliverReorderableListState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "widgets::reorderable_list::SliverReorderableListState"

class "widgets::reorderable_list::_ReorderableItem" {
  +int index
  +Widget child
  +CapturedThemes capturedThemes
  +_ReorderableItemState createState()
}

"widgets::reorderable_list::_ReorderableItem" o-- "widgets::framework::Widget"
"widgets::reorderable_list::_ReorderableItem" o-- "widgets::inherited_theme::CapturedThemes"
"widgets::framework::StatefulWidget" <|-- "widgets::reorderable_list::_ReorderableItem"

class "widgets::reorderable_list::_ReorderableItemState" {
  -SliverReorderableListState _listState
  -Offset _startOffset
  -Offset _targetOffset
  -AnimationController? _offsetAnimation
  -bool _dragging
  +Key key
  +int index
  +bool dragging
  +Offset offset
  +void initState()
  +void dispose()
  +void didUpdateWidget()
  +Widget build()
  +void deactivate()
  +void updateForGap()
  +void resetGap()
  +Rect targetGeometry()
  +void rebuild()
}

"widgets::reorderable_list::_ReorderableItemState" o-- "widgets::reorderable_list::SliverReorderableListState"
"widgets::reorderable_list::_ReorderableItemState" o-- "dart::ui::Offset"
"widgets::reorderable_list::_ReorderableItemState" o-- "animation::animation_controller::AnimationController"
"widgets::reorderable_list::_ReorderableItemState" o-- "foundation::key::Key"
"widgets::framework::State" <|-- "widgets::reorderable_list::_ReorderableItemState"

class "widgets::reorderable_list::ReorderableDragStartListener" {
  +Widget child
  +int index
  +bool enabled
  +Widget build()
  #MultiDragGestureRecognizer createRecognizer()
  -void _startDragging()
}

"widgets::reorderable_list::ReorderableDragStartListener" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::reorderable_list::ReorderableDragStartListener"

class "widgets::reorderable_list::ReorderableDelayedDragStartListener" {
  +MultiDragGestureRecognizer createRecognizer()
}

"widgets::reorderable_list::ReorderableDragStartListener" <|-- "widgets::reorderable_list::ReorderableDelayedDragStartListener"

class "widgets::reorderable_list::_DragInfo" {
  +Axis scrollDirection
  +void Function(_DragInfo, Offset, Offset)? onUpdate
  +void Function(_DragInfo)? onEnd
  +void Function(_DragInfo)? onCancel
  +void Function()? onDropCompleted
  +Widget Function(Widget, int, Animation<double>)? proxyDecorator
  +TickerProvider tickerProvider
  +SliverReorderableListState listState
  +int index
  +Widget child
  +Offset dragPosition
  +Offset dragOffset
  +Size itemSize
  +double itemExtent
  +CapturedThemes capturedThemes
  +ScrollableState? scrollable
  -AnimationController? _proxyAnimation
  +void dispose()
  +void startDrag()
  +void update()
  +void end()
  +void cancel()
  -void _dropCompleted()
  +Widget createProxy()
}

"widgets::reorderable_list::_DragInfo" o-- "painting::basic_types::Axis"
"widgets::reorderable_list::_DragInfo" o-- "widgets::reorderable_list::void Function(_DragInfo, Offset, Offset)"
"widgets::reorderable_list::_DragInfo" o-- "widgets::reorderable_list::void Function(_DragInfo)"
"widgets::reorderable_list::_DragInfo" o-- "dart::ui::void Function()"
"widgets::reorderable_list::_DragInfo" o-- "widgets::reorderable_list::Widget Function(Widget, int, Animation<double>)"
"widgets::reorderable_list::_DragInfo" o-- "scheduler::ticker::TickerProvider"
"widgets::reorderable_list::_DragInfo" o-- "widgets::reorderable_list::SliverReorderableListState"
"widgets::reorderable_list::_DragInfo" o-- "widgets::framework::Widget"
"widgets::reorderable_list::_DragInfo" o-- "dart::ui::Offset"
"widgets::reorderable_list::_DragInfo" o-- "dart::ui::Size"
"widgets::reorderable_list::_DragInfo" o-- "widgets::inherited_theme::CapturedThemes"
"widgets::reorderable_list::_DragInfo" o-- "widgets::scrollable::ScrollableState"
"widgets::reorderable_list::_DragInfo" o-- "animation::animation_controller::AnimationController"
"gestures::drag::Drag" <|-- "widgets::reorderable_list::_DragInfo"

class "widgets::reorderable_list::_DragItemProxy" {
  +SliverReorderableListState listState
  +int index
  +Widget child
  +Offset position
  +Size size
  +AnimationController animation
  +Widget Function(Widget, int, Animation<double>)? proxyDecorator
  +Widget build()
}

"widgets::reorderable_list::_DragItemProxy" o-- "widgets::reorderable_list::SliverReorderableListState"
"widgets::reorderable_list::_DragItemProxy" o-- "widgets::framework::Widget"
"widgets::reorderable_list::_DragItemProxy" o-- "dart::ui::Offset"
"widgets::reorderable_list::_DragItemProxy" o-- "dart::ui::Size"
"widgets::reorderable_list::_DragItemProxy" o-- "animation::animation_controller::AnimationController"
"widgets::reorderable_list::_DragItemProxy" o-- "widgets::reorderable_list::Widget Function(Widget, int, Animation<double>)"
"widgets::framework::StatelessWidget" <|-- "widgets::reorderable_list::_DragItemProxy"

class "widgets::reorderable_list::_ReorderableItemGlobalKey" {
  +Key subKey
  +int index
  +SliverReorderableListState state
  +int hashCode
  +bool ==()
}

"widgets::reorderable_list::_ReorderableItemGlobalKey" o-- "foundation::key::Key"
"widgets::reorderable_list::_ReorderableItemGlobalKey" o-- "widgets::reorderable_list::SliverReorderableListState"
"widgets::framework::GlobalObjectKey" <|-- "widgets::reorderable_list::_ReorderableItemGlobalKey"

abstract class "widgets::pages::PageRoute" {
  +bool fullscreenDialog
  +bool allowSnapshotting
  -bool _barrierDismissible
  +bool opaque
  +bool barrierDismissible
  +bool canTransitionTo()
  +bool canTransitionFrom()
}

"widgets::routes::ModalRoute" <|-- "widgets::pages::PageRoute"

class "widgets::pages::PageRouteBuilder" {
  +Widget Function(BuildContext, Animation<double>, Animation<double>) pageBuilder
  +Widget Function(BuildContext, Animation<double>, Animation<double>, Widget) transitionsBuilder
  +Duration transitionDuration
  +Duration reverseTransitionDuration
  +bool opaque
  +bool barrierDismissible
  +Color? barrierColor
  +String? barrierLabel
  +bool maintainState
  +Widget buildPage()
  +Widget buildTransitions()
}

"widgets::pages::PageRouteBuilder" o-- "widgets::routes::Widget Function(BuildContext, Animation<double>, Animation<double>)"
"widgets::pages::PageRouteBuilder" o-- "widgets::routes::Widget Function(BuildContext, Animation<double>, Animation<double>, Widget)"
"widgets::pages::PageRouteBuilder" o-- "dart::ui::Color"
"widgets::pages::PageRoute" <|-- "widgets::pages::PageRouteBuilder"

class "widgets::scroll_controller::ScrollController" {
  -double _initialScrollOffset
  +bool keepScrollOffset
  +void Function(ScrollPosition)? onAttach
  +void Function(ScrollPosition)? onDetach
  +String? debugLabel
  -List<ScrollPosition> _positions
  +double initialScrollOffset
  +Iterable<ScrollPosition> positions
  +bool hasClients
  +ScrollPosition position
  +double offset
  +Future<void> animateTo()
  +void jumpTo()
  +void attach()
  +void detach()
  +void dispose()
  +ScrollPosition createScrollPosition()
  +String toString()
  +void debugFillDescription()
}

"widgets::scroll_controller::ScrollController" o-- "widgets::scroll_controller::void Function(ScrollPosition)"
"widgets::scroll_controller::ScrollController" o-- "widgets::scroll_position::ScrollPosition"
"foundation::change_notifier::ChangeNotifier" <|-- "widgets::scroll_controller::ScrollController"

class "widgets::scroll_controller::TrackingScrollController" {
  -Map<ScrollPosition, void Function()> _positionToListener
  -ScrollPosition? _lastUpdated
  -double? _lastUpdatedOffset
  +ScrollPosition? mostRecentlyUpdatedPosition
  +double initialScrollOffset
  +void attach()
  +void detach()
  +void dispose()
}

"widgets::scroll_controller::TrackingScrollController" o-- "widgets::scroll_position::ScrollPosition"
"widgets::scroll_controller::ScrollController" <|-- "widgets::scroll_controller::TrackingScrollController"

class "widgets::sliver_layout_builder::SliverLayoutBuilder" {
  +RenderObject createRenderObject()
}

"widgets::layout_builder::ConstrainedLayoutBuilder" <|-- "widgets::sliver_layout_builder::SliverLayoutBuilder"

class "widgets::sliver_layout_builder::_RenderSliverLayoutBuilder" {
  +double childMainAxisPosition()
  +void performLayout()
  +void applyPaintTransform()
  +void paint()
  +bool hitTestChildren()
}

"rendering::sliver::RenderSliver" <|-- "widgets::sliver_layout_builder::_RenderSliverLayoutBuilder"
"rendering::object::RenderObjectWithChildMixin" <|-- "widgets::sliver_layout_builder::_RenderSliverLayoutBuilder"
"widgets::layout_builder::RenderConstrainedLayoutBuilder" <|-- "widgets::sliver_layout_builder::_RenderSliverLayoutBuilder"

abstract class "widgets::navigator::Route" {
  -NavigatorState? _navigator
  -RouteSettings _settings
  -ValueNotifier<String?> _restorationScopeId
  -Completer<T?> _popCompleter
  +NavigatorState? navigator
  +RouteSettings settings
  +ValueListenable<String?> restorationScopeId
  +List<OverlayEntry> overlayEntries
  +RoutePopDisposition popDisposition
  +bool willHandlePopInternally
  +T? currentResult
  +Future<T?> popped
  +bool isCurrent
  +bool isFirst
  +bool hasActiveRouteBelow
  +bool isActive
  -void _updateSettings()
  -void _updateRestorationId()
  #void install()
  #TickerFuture didPush()
  #void didAdd()
  #void didReplace()
  +Future<RoutePopDisposition> willPop()
  +void onPopInvoked()
  +bool didPop()
  #void didComplete()
  #void didPopNext()
  #void didChangeNext()
  #void didChangePrevious()
  #void changedInternalState()
  #void changedExternalState()
  #void dispose()
}

"widgets::navigator::Route" o-- "widgets::navigator::NavigatorState"
"widgets::navigator::Route" o-- "widgets::navigator::RouteSettings"
"widgets::navigator::Route" o-- "foundation::change_notifier::ValueNotifier<String>"
"widgets::navigator::Route" o-- "dart::async::Completer<T>"
"widgets::navigator::Route" o-- "foundation::change_notifier::ValueListenable<String>"
"widgets::navigator::Route" o-- "widgets::navigator::RoutePopDisposition"

class "widgets::navigator::RouteSettings" {
  +String? name
  +Object? arguments
  +String toString()
}

abstract class "widgets::navigator::Page" {
  +LocalKey? key
  +String? restorationId
  +bool canUpdate()
  +Route<T> createRoute()
  +String toString()
}

"widgets::navigator::Page" o-- "foundation::key::LocalKey"
"widgets::navigator::RouteSettings" <|-- "widgets::navigator::Page"

class "widgets::navigator::NavigatorObserver" {
  {static} -Expando<NavigatorState> _navigators
  +NavigatorState? navigator
  +void didPush()
  +void didPop()
  +void didRemove()
  +void didReplace()
  +void didStartUserGesture()
  +void didStopUserGesture()
}

"widgets::navigator::NavigatorObserver" o-- "widgets::navigator::NavigatorState"

class "widgets::navigator::HeroControllerScope" {
  +HeroController? controller
  {static} +HeroController? maybeOf()
  {static} +HeroController of()
  +bool updateShouldNotify()
}

"widgets::navigator::HeroControllerScope" o-- "widgets::heroes::HeroController"
"widgets::framework::InheritedWidget" <|-- "widgets::navigator::HeroControllerScope"

abstract class "widgets::navigator::RouteTransitionRecord" {
  +Route<dynamic> route
  +bool isWaitingForEnteringDecision
  +bool isWaitingForExitingDecision
  +void markForPush()
  +void markForAdd()
  +void markForPop()
  +void markForComplete()
  +void markForRemove()
}

"widgets::navigator::RouteTransitionRecord" o-- "widgets::navigator::Route<dynamic>"

abstract class "widgets::navigator::TransitionDelegate" {
  -Iterable<RouteTransitionRecord> _transition()
  +Iterable<RouteTransitionRecord> resolve()
}

class "widgets::navigator::DefaultTransitionDelegate" {
  +Iterable<RouteTransitionRecord> resolve()
}

"widgets::navigator::TransitionDelegate" <|-- "widgets::navigator::DefaultTransitionDelegate"

class "widgets::navigator::Navigator" {
  +List<Page<dynamic>> pages
  +bool Function(Route<dynamic>, dynamic)? onPopPage
  +TransitionDelegate<dynamic> transitionDelegate
  +String? initialRoute
  +Route<dynamic>? Function(RouteSettings)? onGenerateRoute
  +Route<dynamic>? Function(RouteSettings)? onUnknownRoute
  +List<NavigatorObserver> observers
  +String? restorationScopeId
  +TraversalEdgeBehavior routeTraversalEdgeBehavior
  {static} +String defaultRouteName
  +List<Route<dynamic>> Function(NavigatorState, String) onGenerateInitialRoutes
  +bool reportsRouteUpdateToEngine
  +Clip clipBehavior
  +bool requestFocus
  {static} +Future<T?> pushNamed()
  {static} +String restorablePushNamed()
  {static} +Future<T?> pushReplacementNamed()
  {static} +String restorablePushReplacementNamed()
  {static} +Future<T?> popAndPushNamed()
  {static} +String restorablePopAndPushNamed()
  {static} +Future<T?> pushNamedAndRemoveUntil()
  {static} +String restorablePushNamedAndRemoveUntil()
  {static} +Future<T?> push()
  {static} +String restorablePush()
  {static} +Future<T?> pushReplacement()
  {static} +String restorablePushReplacement()
  {static} +Future<T?> pushAndRemoveUntil()
  {static} +String restorablePushAndRemoveUntil()
  {static} +void replace()
  {static} +String restorableReplace()
  {static} +void replaceRouteBelow()
  {static} +String restorableReplaceRouteBelow()
  {static} +bool canPop()
  {static} +Future<bool> maybePop()
  {static} +void pop()
  {static} +void popUntil()
  {static} +void removeRoute()
  {static} +void removeRouteBelow()
  {static} +NavigatorState of()
  {static} +NavigatorState? maybeOf()
  {static} +List<Route<dynamic>> defaultGenerateInitialRoutes()
  +NavigatorState createState()
}

"widgets::navigator::Navigator" o-- "widgets::navigator::bool Function(Route<dynamic>, dynamic)"
"widgets::navigator::Navigator" o-- "widgets::navigator::TransitionDelegate<dynamic>"
"widgets::navigator::Navigator" o-- "widgets::navigator::Route<dynamic> Function(RouteSettings)"
"widgets::navigator::Navigator" o-- "widgets::focus_traversal::TraversalEdgeBehavior"
"widgets::navigator::Navigator" o-- "widgets::navigator::List<Route<dynamic>> Function(NavigatorState, String)"
"widgets::navigator::Navigator" o-- "dart::ui::Clip"
"widgets::framework::StatefulWidget" <|-- "widgets::navigator::Navigator"

class "widgets::navigator::_NotAnnounced" {
}

"widgets::navigator::Route" <|-- "widgets::navigator::_NotAnnounced"

class "widgets::navigator::_RouteEntry" {
  +Route<dynamic> route
  +_RestorationInformation? restorationInformation
  +bool pageBased
  {static} +int kDebugPopAttemptLimit
  {static} +Route<dynamic> notAnnounced
  +_RouteLifecycle currentState
  +Route<dynamic>? lastAnnouncedPreviousRoute
  +WeakReference<Route<dynamic>> lastAnnouncedPoppedNextRoute
  +Route<dynamic>? lastAnnouncedNextRoute
  +Object? pendingResult
  -bool _reportRemovalToObserver
  -bool _isWaitingForExitingDecision
  +String? restorationId
  +bool willBePresent
  +bool isPresent
  +bool isPresentForRestoration
  +bool suitableForAnnouncement
  +bool suitableForTransitionAnimation
  +bool isWaitingForEnteringDecision
  +bool isWaitingForExitingDecision
  +bool restorationEnabled
  +bool canUpdateFrom()
  +void handleAdd()
  +void handlePush()
  +void handleDidPopNext()
  +bool handlePop()
  +void handleComplete()
  +void handleRemoval()
  +void didAdd()
  +void pop()
  +void remove()
  +void complete()
  +void finalize()
  +void forcedDispose()
  +void dispose()
  +bool shouldAnnounceChangeToNext()
  {static} +bool isPresentPredicate()
  {static} +bool suitableForTransitionAnimationPredicate()
  {static} +bool willBePresentPredicate()
  {static} +bool Function(_RouteEntry) isRoutePredicate()
  +void markNeedsExitingDecision()
  +void markForPush()
  +void markForAdd()
  +void markForPop()
  +void markForComplete()
  +void markForRemove()
}

"widgets::navigator::_RouteEntry" o-- "widgets::navigator::Route<dynamic>"
"widgets::navigator::_RouteEntry" o-- "widgets::navigator::_RestorationInformation"
"widgets::navigator::_RouteEntry" o-- "widgets::navigator::_RouteLifecycle"
"widgets::navigator::RouteTransitionRecord" <|-- "widgets::navigator::_RouteEntry"

abstract class "widgets::navigator::_NavigatorObservation" {
  +Route<dynamic> primaryRoute
  +Route<dynamic>? secondaryRoute
  +void notify()
}

"widgets::navigator::_NavigatorObservation" o-- "widgets::navigator::Route<dynamic>"

class "widgets::navigator::_NavigatorPushObservation" {
  +void notify()
}

"widgets::navigator::_NavigatorObservation" <|-- "widgets::navigator::_NavigatorPushObservation"

class "widgets::navigator::_NavigatorPopObservation" {
  +void notify()
}

"widgets::navigator::_NavigatorObservation" <|-- "widgets::navigator::_NavigatorPopObservation"

class "widgets::navigator::_NavigatorRemoveObservation" {
  +void notify()
}

"widgets::navigator::_NavigatorObservation" <|-- "widgets::navigator::_NavigatorRemoveObservation"

class "widgets::navigator::_NavigatorReplaceObservation" {
  +void notify()
}

"widgets::navigator::_NavigatorObservation" <|-- "widgets::navigator::_NavigatorReplaceObservation"

class "widgets::navigator::_History" {
  -List<_RouteEntry> _value
  +Iterator<_RouteEntry> iterator
  +int indexWhere()
  +void add()
  +void addAll()
  +void clear()
  +void insert()
  +_RouteEntry removeAt()
  +_RouteEntry removeLast()
  +_RouteEntry []()
  +String toString()
}

"dart::core::Iterable" <|-- "widgets::navigator::_History"
"foundation::change_notifier::ChangeNotifier" <|-- "widgets::navigator::_History"

class "widgets::navigator::NavigatorState" {
  -GlobalKey<OverlayState> _overlayKey
  -_History _history
  -Set<_RouteEntry> _entryWaitingForSubTreeDisposal
  -_HistoryProperty _serializableHistory
  -Queue<_NavigatorObservation> _observedRouteAdditions
  -Queue<_NavigatorObservation> _observedRouteDeletions
  +FocusNode focusNode
  -bool _debugLocked
  -HeroController? _heroControllerFromScope
  -List<NavigatorObserver> _effectiveObservers
  -RestorableNum<int> _rawNextPagelessRestorationScopeId
  -String? _lastAnnouncedRouteName
  -bool _debugUpdatingPage
  -bool _flushingHistory
  -int _userGesturesInProgressCount
  +ValueNotifier<bool> userGestureInProgressNotifier
  -Set<int> _activePointers
  +FocusScopeNode focusScopeNode
  -bool _usingPagesAPI
  -int _nextPagelessRestorationScopeId
  +String? restorationId
  +OverlayState? overlay
  -Iterable<OverlayEntry> _allRouteOverlayEntries
  -int _userGesturesInProgress
  +bool userGestureInProgress
  -void _handleHistoryChanged()
  +void initState()
  +void restoreState()
  +void didToggleBucket()
  +void didChangeDependencies()
  -void _forcedDisposeAllRouteEntries()
  {static} -void _disposeRouteEntry()
  -void _updateHeroController()
  -void _updateEffectiveObservers()
  +void didUpdateWidget()
  -void _debugCheckDuplicatedPageKeys()
  +void deactivate()
  +void activate()
  +void dispose()
  -void _updatePages()
  -void _flushHistoryUpdates()
  -void _flushObserverNotifications()
  -void _flushRouteAnnouncement()
  -_RouteEntry? _getRouteBefore()
  -int _getIndexBefore()
  -_RouteEntry? _getRouteAfter()
  -Route<T?>? _routeNamed()
  +Future<T?> pushNamed()
  +String restorablePushNamed()
  +Future<T?> pushReplacementNamed()
  +String restorablePushReplacementNamed()
  +Future<T?> popAndPushNamed()
  +String restorablePopAndPushNamed()
  +Future<T?> pushNamedAndRemoveUntil()
  +String restorablePushNamedAndRemoveUntil()
  +Future<T?> push()
  -bool _debugIsStaticCallback()
  +String restorablePush()
  -void _pushEntry()
  -void _afterNavigation()
  +Future<T?> pushReplacement()
  +String restorablePushReplacement()
  -void _pushReplacementEntry()
  +Future<T?> pushAndRemoveUntil()
  +String restorablePushAndRemoveUntil()
  -void _pushEntryAndRemoveUntil()
  +void replace()
  +String restorableReplace()
  -void _replaceEntry()
  +void replaceRouteBelow()
  +String restorableReplaceRouteBelow()
  -void _replaceEntryBelow()
  +bool canPop()
  +Future<bool> maybePop()
  +void pop()
  +void popUntil()
  +void removeRoute()
  +void removeRouteBelow()
  +void finalizeRoute()
  -Route<T>? _getRouteById()
  +void didStartUserGesture()
  +void didStopUserGesture()
  -void _handlePointerDown()
  -void _handlePointerUpOrCancel()
  -void _cancelActivePointers()
  -_RouteEntry? _firstRouteEntryWhereOrNull()
  -_RouteEntry? _lastRouteEntryWhereOrNull()
  +Widget build()
}

"widgets::navigator::NavigatorState" o-- "widgets::framework::GlobalKey<OverlayState>"
"widgets::navigator::NavigatorState" o-- "widgets::navigator::_History"
"widgets::navigator::NavigatorState" o-- "widgets::navigator::_HistoryProperty"
"widgets::navigator::NavigatorState" o-- "dart::collection::Queue<_NavigatorObservation>"
"widgets::navigator::NavigatorState" o-- "widgets::focus_manager::FocusNode"
"widgets::navigator::NavigatorState" o-- "widgets::heroes::HeroController"
"widgets::navigator::NavigatorState" o-- "widgets::restoration_properties::RestorableNum<int>"
"widgets::navigator::NavigatorState" o-- "foundation::change_notifier::ValueNotifier<bool>"
"widgets::navigator::NavigatorState" o-- "widgets::focus_manager::FocusScopeNode"
"widgets::navigator::NavigatorState" o-- "widgets::overlay::OverlayState"
"widgets::framework::State" <|-- "widgets::navigator::NavigatorState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "widgets::navigator::NavigatorState"
"widgets::restoration::RestorationMixin" <|-- "widgets::navigator::NavigatorState"

abstract class "widgets::navigator::_RestorationInformation" {
  +_RouteRestorationType type
  -Object? _serializableData
  +int restorationScopeId
  +bool isRestorable
  +Object getSerializableData()
  +List<Object> computeSerializableData()
  #Route<dynamic> createRoute()
  +_RouteEntry toRouteEntry()
}

"widgets::navigator::_RestorationInformation" o-- "widgets::navigator::_RouteRestorationType"

class "widgets::navigator::_NamedRestorationInformation" {
  +int restorationScopeId
  +String name
  +Object? arguments
  +List<Object> computeSerializableData()
  +Route<dynamic> createRoute()
}

"widgets::navigator::_RestorationInformation" <|-- "widgets::navigator::_NamedRestorationInformation"

class "widgets::navigator::_AnonymousRestorationInformation" {
  +int restorationScopeId
  +Route<Object?> Function(BuildContext, Object?) routeBuilder
  +Object? arguments
  +bool isRestorable
  +List<Object> computeSerializableData()
  +Route<dynamic> createRoute()
}

"widgets::navigator::_AnonymousRestorationInformation" o-- "widgets::navigator::Route<Object> Function(BuildContext, Object)"
"widgets::navigator::_RestorationInformation" <|-- "widgets::navigator::_AnonymousRestorationInformation"

class "widgets::navigator::_HistoryProperty" {
  -Map<String?, List<Object>>? _pageToPagelessRoutes
  +bool hasData
  +bool enabled
  +void update()
  -void _finalizeEntry()
  -bool _debugMapsEqual()
  +void clear()
  +List<_RouteEntry> restoreEntriesForPage()
  +Map<String?, List<Object>>? createDefaultValue()
  +Map<String?, List<Object>>? fromPrimitives()
  +void initWithValue()
  +Object? toPrimitives()
}

"widgets::restoration::RestorableProperty" <|-- "widgets::navigator::_HistoryProperty"

class "widgets::navigator::RestorableRouteFuture" {
  +NavigatorState Function(BuildContext) navigatorFinder
  +String Function(NavigatorState, Object?) onPresent
  +void Function(T)? onComplete
  -Route<T>? _route
  -bool _disposed
  +bool isPresent
  +Route<T>? route
  +bool enabled
  -NavigatorState _navigator
  +void present()
  +String? createDefaultValue()
  +void initWithValue()
  +Object? toPrimitives()
  +String fromPrimitives()
  +void dispose()
  -void _hookOntoRouteFuture()
  {static} -NavigatorState _defaultNavigatorFinder()
}

"widgets::navigator::RestorableRouteFuture" o-- "widgets::navigator::NavigatorState Function(BuildContext)"
"widgets::navigator::RestorableRouteFuture" o-- "widgets::navigator::String Function(NavigatorState, Object)"
"widgets::navigator::RestorableRouteFuture" o-- "widgets::navigator::void Function(T)"
"widgets::navigator::RestorableRouteFuture" o-- "widgets::navigator::Route<T>"
"widgets::navigator::RestorableRouteFuture" o-- "widgets::navigator::NavigatorState"
"widgets::restoration::RestorableProperty" <|-- "widgets::navigator::RestorableRouteFuture"

class "widgets::navigator::NavigationNotification" {
  +bool canHandlePop
  +String toString()
}

"widgets::notification_listener::Notification" <|-- "widgets::navigator::NavigationNotification"

class "widgets::navigator::RoutePopDisposition" {
  +int index
  {static} +List<RoutePopDisposition> values
  {static} +RoutePopDisposition pop
  {static} +RoutePopDisposition doNotPop
  {static} +RoutePopDisposition bubble
}

"widgets::navigator::RoutePopDisposition" o-- "widgets::navigator::RoutePopDisposition"
"dart::core::Enum" <|-- "widgets::navigator::RoutePopDisposition"

class "widgets::navigator::_RouteLifecycle" {
  +int index
  {static} +List<_RouteLifecycle> values
  {static} +_RouteLifecycle staging
  {static} +_RouteLifecycle add
  {static} +_RouteLifecycle adding
  {static} +_RouteLifecycle push
  {static} +_RouteLifecycle pushReplace
  {static} +_RouteLifecycle pushing
  {static} +_RouteLifecycle replace
  {static} +_RouteLifecycle idle
  {static} +_RouteLifecycle pop
  {static} +_RouteLifecycle complete
  {static} +_RouteLifecycle remove
  {static} +_RouteLifecycle popping
  {static} +_RouteLifecycle removing
  {static} +_RouteLifecycle dispose
  {static} +_RouteLifecycle disposing
  {static} +_RouteLifecycle disposed
}

"widgets::navigator::_RouteLifecycle" o-- "widgets::navigator::_RouteLifecycle"
"dart::core::Enum" <|-- "widgets::navigator::_RouteLifecycle"

class "widgets::navigator::_RouteRestorationType" {
  +int index
  {static} +List<_RouteRestorationType> values
  {static} +_RouteRestorationType named
  {static} +_RouteRestorationType anonymous
}

"widgets::navigator::_RouteRestorationType" o-- "widgets::navigator::_RouteRestorationType"
"dart::core::Enum" <|-- "widgets::navigator::_RouteRestorationType"

class "widgets::text_editing_intents::DoNothingAndStopPropagationTextIntent" {
}

"widgets::actions::Intent" <|-- "widgets::text_editing_intents::DoNothingAndStopPropagationTextIntent"

abstract class "widgets::text_editing_intents::DirectionalTextEditingIntent" {
  +bool forward
}

"widgets::actions::Intent" <|-- "widgets::text_editing_intents::DirectionalTextEditingIntent"

class "widgets::text_editing_intents::DeleteCharacterIntent" {
}

"widgets::text_editing_intents::DirectionalTextEditingIntent" <|-- "widgets::text_editing_intents::DeleteCharacterIntent"

class "widgets::text_editing_intents::DeleteToNextWordBoundaryIntent" {
}

"widgets::text_editing_intents::DirectionalTextEditingIntent" <|-- "widgets::text_editing_intents::DeleteToNextWordBoundaryIntent"

class "widgets::text_editing_intents::DeleteToLineBreakIntent" {
}

"widgets::text_editing_intents::DirectionalTextEditingIntent" <|-- "widgets::text_editing_intents::DeleteToLineBreakIntent"

abstract class "widgets::text_editing_intents::DirectionalCaretMovementIntent" {
  +bool collapseSelection
  +bool collapseAtReversal
  +bool continuesAtWrap
}

"widgets::text_editing_intents::DirectionalTextEditingIntent" <|-- "widgets::text_editing_intents::DirectionalCaretMovementIntent"

class "widgets::text_editing_intents::ExtendSelectionByCharacterIntent" {
}

"widgets::text_editing_intents::DirectionalCaretMovementIntent" <|-- "widgets::text_editing_intents::ExtendSelectionByCharacterIntent"

class "widgets::text_editing_intents::ExtendSelectionToNextWordBoundaryIntent" {
}

"widgets::text_editing_intents::DirectionalCaretMovementIntent" <|-- "widgets::text_editing_intents::ExtendSelectionToNextWordBoundaryIntent"

class "widgets::text_editing_intents::ExtendSelectionToNextWordBoundaryOrCaretLocationIntent" {
}

"widgets::text_editing_intents::DirectionalCaretMovementIntent" <|-- "widgets::text_editing_intents::ExtendSelectionToNextWordBoundaryOrCaretLocationIntent"

class "widgets::text_editing_intents::ExpandSelectionToDocumentBoundaryIntent" {
}

"widgets::text_editing_intents::DirectionalCaretMovementIntent" <|-- "widgets::text_editing_intents::ExpandSelectionToDocumentBoundaryIntent"

class "widgets::text_editing_intents::ExpandSelectionToLineBreakIntent" {
}

"widgets::text_editing_intents::DirectionalCaretMovementIntent" <|-- "widgets::text_editing_intents::ExpandSelectionToLineBreakIntent"

class "widgets::text_editing_intents::ExtendSelectionToLineBreakIntent" {
}

"widgets::text_editing_intents::DirectionalCaretMovementIntent" <|-- "widgets::text_editing_intents::ExtendSelectionToLineBreakIntent"

class "widgets::text_editing_intents::ExtendSelectionVerticallyToAdjacentLineIntent" {
}

"widgets::text_editing_intents::DirectionalCaretMovementIntent" <|-- "widgets::text_editing_intents::ExtendSelectionVerticallyToAdjacentLineIntent"

class "widgets::text_editing_intents::ExtendSelectionVerticallyToAdjacentPageIntent" {
}

"widgets::text_editing_intents::DirectionalCaretMovementIntent" <|-- "widgets::text_editing_intents::ExtendSelectionVerticallyToAdjacentPageIntent"

class "widgets::text_editing_intents::ExtendSelectionToNextParagraphBoundaryIntent" {
}

"widgets::text_editing_intents::DirectionalCaretMovementIntent" <|-- "widgets::text_editing_intents::ExtendSelectionToNextParagraphBoundaryIntent"

class "widgets::text_editing_intents::ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent" {
}

"widgets::text_editing_intents::DirectionalCaretMovementIntent" <|-- "widgets::text_editing_intents::ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent"

class "widgets::text_editing_intents::ExtendSelectionToDocumentBoundaryIntent" {
}

"widgets::text_editing_intents::DirectionalCaretMovementIntent" <|-- "widgets::text_editing_intents::ExtendSelectionToDocumentBoundaryIntent"

class "widgets::text_editing_intents::ScrollToDocumentBoundaryIntent" {
}

"widgets::text_editing_intents::DirectionalTextEditingIntent" <|-- "widgets::text_editing_intents::ScrollToDocumentBoundaryIntent"

class "widgets::text_editing_intents::ExtendSelectionByPageIntent" {
}

"widgets::text_editing_intents::DirectionalTextEditingIntent" <|-- "widgets::text_editing_intents::ExtendSelectionByPageIntent"

class "widgets::text_editing_intents::SelectAllTextIntent" {
  +SelectionChangedCause cause
}

"widgets::text_editing_intents::SelectAllTextIntent" o-- "services::text_input::SelectionChangedCause"
"widgets::actions::Intent" <|-- "widgets::text_editing_intents::SelectAllTextIntent"

class "widgets::text_editing_intents::CopySelectionTextIntent" {
  {static} +CopySelectionTextIntent copy
  +SelectionChangedCause cause
  +bool collapseSelection
}

"widgets::text_editing_intents::CopySelectionTextIntent" o-- "widgets::text_editing_intents::CopySelectionTextIntent"
"widgets::text_editing_intents::CopySelectionTextIntent" o-- "services::text_input::SelectionChangedCause"
"widgets::actions::Intent" <|-- "widgets::text_editing_intents::CopySelectionTextIntent"

class "widgets::text_editing_intents::PasteTextIntent" {
  +SelectionChangedCause cause
}

"widgets::text_editing_intents::PasteTextIntent" o-- "services::text_input::SelectionChangedCause"
"widgets::actions::Intent" <|-- "widgets::text_editing_intents::PasteTextIntent"

class "widgets::text_editing_intents::RedoTextIntent" {
  +SelectionChangedCause cause
}

"widgets::text_editing_intents::RedoTextIntent" o-- "services::text_input::SelectionChangedCause"
"widgets::actions::Intent" <|-- "widgets::text_editing_intents::RedoTextIntent"

class "widgets::text_editing_intents::ReplaceTextIntent" {
  +TextEditingValue currentTextEditingValue
  +String replacementText
  +TextRange replacementRange
  +SelectionChangedCause cause
}

"widgets::text_editing_intents::ReplaceTextIntent" o-- "services::text_input::TextEditingValue"
"widgets::text_editing_intents::ReplaceTextIntent" o-- "dart::ui::TextRange"
"widgets::text_editing_intents::ReplaceTextIntent" o-- "services::text_input::SelectionChangedCause"
"widgets::actions::Intent" <|-- "widgets::text_editing_intents::ReplaceTextIntent"

class "widgets::text_editing_intents::UndoTextIntent" {
  +SelectionChangedCause cause
}

"widgets::text_editing_intents::UndoTextIntent" o-- "services::text_input::SelectionChangedCause"
"widgets::actions::Intent" <|-- "widgets::text_editing_intents::UndoTextIntent"

class "widgets::text_editing_intents::UpdateSelectionIntent" {
  +TextEditingValue currentTextEditingValue
  +TextSelection newSelection
  +SelectionChangedCause cause
}

"widgets::text_editing_intents::UpdateSelectionIntent" o-- "services::text_input::TextEditingValue"
"widgets::text_editing_intents::UpdateSelectionIntent" o-- "services::text_editing::TextSelection"
"widgets::text_editing_intents::UpdateSelectionIntent" o-- "services::text_input::SelectionChangedCause"
"widgets::actions::Intent" <|-- "widgets::text_editing_intents::UpdateSelectionIntent"

class "widgets::text_editing_intents::TransposeCharactersIntent" {
}

"widgets::actions::Intent" <|-- "widgets::text_editing_intents::TransposeCharactersIntent"

class "widgets::pop_scope::PopScope" {
  +Widget child
  +void Function(bool)? onPopInvoked
  +bool canPop
  +State<PopScope> createState()
}

"widgets::pop_scope::PopScope" o-- "widgets::framework::Widget"
"widgets::pop_scope::PopScope" o-- "widgets::routes::void Function(bool)"
"widgets::framework::StatefulWidget" <|-- "widgets::pop_scope::PopScope"

class "widgets::pop_scope::_PopScopeState" {
  -ModalRoute<dynamic>? _route
  +ValueNotifier<bool> canPopNotifier
  +void Function(bool)? onPopInvoked
  +void initState()
  +void didChangeDependencies()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"widgets::pop_scope::_PopScopeState" o-- "widgets::routes::ModalRoute<dynamic>"
"widgets::pop_scope::_PopScopeState" o-- "foundation::change_notifier::ValueNotifier<bool>"
"widgets::pop_scope::_PopScopeState" o-- "widgets::routes::void Function(bool)"
"widgets::framework::State" <|-- "widgets::pop_scope::_PopScopeState"
"widgets::routes::PopEntry" <|-- "widgets::pop_scope::_PopScopeState"

abstract class "widgets::preferred_size::PreferredSizeWidget" {
  +Size preferredSize
}

"widgets::preferred_size::PreferredSizeWidget" o-- "dart::ui::Size"
"widgets::framework::Widget" <|-- "widgets::preferred_size::PreferredSizeWidget"

class "widgets::preferred_size::PreferredSize" {
  +Widget child
  +Size preferredSize
  +Widget build()
}

"widgets::preferred_size::PreferredSize" o-- "widgets::framework::Widget"
"widgets::preferred_size::PreferredSize" o-- "dart::ui::Size"
"widgets::framework::StatelessWidget" <|-- "widgets::preferred_size::PreferredSize"
"widgets::preferred_size::PreferredSizeWidget" <|-- "widgets::preferred_size::PreferredSize"

class "widgets::value_listenable_builder::ValueListenableBuilder" {
  +ValueListenable<T> valueListenable
  +Widget Function(BuildContext, T, Widget?) builder
  +Widget? child
  +State<StatefulWidget> createState()
}

"widgets::value_listenable_builder::ValueListenableBuilder" o-- "foundation::change_notifier::ValueListenable<T>"
"widgets::value_listenable_builder::ValueListenableBuilder" o-- "widgets::value_listenable_builder::Widget Function(BuildContext, T, Widget)"
"widgets::value_listenable_builder::ValueListenableBuilder" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::value_listenable_builder::ValueListenableBuilder"

class "widgets::value_listenable_builder::_ValueListenableBuilderState" {
  +T value
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  -void _valueChanged()
  +Widget build()
}

"widgets::framework::State" <|-- "widgets::value_listenable_builder::_ValueListenableBuilderState"

class "widgets::navigator_pop_handler::NavigatorPopHandler" {
  +Widget child
  +bool enabled
  +void Function()? onPop
  +State<NavigatorPopHandler> createState()
}

"widgets::navigator_pop_handler::NavigatorPopHandler" o-- "widgets::framework::Widget"
"widgets::navigator_pop_handler::NavigatorPopHandler" o-- "dart::ui::void Function()"
"widgets::framework::StatefulWidget" <|-- "widgets::navigator_pop_handler::NavigatorPopHandler"

class "widgets::navigator_pop_handler::_NavigatorPopHandlerState" {
  -bool _canPop
  +Widget build()
}

"widgets::framework::State" <|-- "widgets::navigator_pop_handler::_NavigatorPopHandlerState"

class "widgets::media_query::MediaQueryData" {
  +Size size
  +double devicePixelRatio
  -double _textScaleFactor
  -dynamic _textScaler
  +Brightness platformBrightness
  +EdgeInsets viewInsets
  +EdgeInsets padding
  +EdgeInsets viewPadding
  +EdgeInsets systemGestureInsets
  +bool alwaysUse24HourFormat
  +bool accessibleNavigation
  +bool invertColors
  +bool highContrast
  +bool onOffSwitchLabels
  +bool disableAnimations
  +bool boldText
  +NavigationMode navigationMode
  +DeviceGestureSettings gestureSettings
  +List<DisplayFeature> displayFeatures
  +double textScaleFactor
  +dynamic textScaler
  +Orientation orientation
  +int hashCode
  {static} -dynamic _textScalerFromView()
  +MediaQueryData copyWith()
  +MediaQueryData removePadding()
  +MediaQueryData removeViewInsets()
  +MediaQueryData removeViewPadding()
  +MediaQueryData removeDisplayFeatures()
  +bool ==()
  +String toString()
}

"widgets::media_query::MediaQueryData" o-- "dart::ui::Size"
"widgets::media_query::MediaQueryData" o-- "dart::ui::Brightness"
"widgets::media_query::MediaQueryData" o-- "painting::edge_insets::EdgeInsets"
"widgets::media_query::MediaQueryData" o-- "widgets::media_query::NavigationMode"
"widgets::media_query::MediaQueryData" o-- "gestures::gesture_settings::DeviceGestureSettings"
"widgets::media_query::MediaQueryData" o-- "widgets::media_query::Orientation"

class "widgets::media_query::MediaQuery" {
  +MediaQueryData data
  {static} +Widget fromWindow()
  {static} +Widget fromView()
  {static} +Widget withNoTextScaling()
  {static} +Widget withClampedTextScaling()
  {static} +MediaQueryData of()
  {static} -MediaQueryData _of()
  {static} +MediaQueryData? maybeOf()
  {static} -MediaQueryData? _maybeOf()
  {static} +Size sizeOf()
  {static} +Size? maybeSizeOf()
  {static} +Orientation orientationOf()
  {static} +Orientation? maybeOrientationOf()
  {static} +double devicePixelRatioOf()
  {static} +double? maybeDevicePixelRatioOf()
  {static} +double textScaleFactorOf()
  {static} +double? maybeTextScaleFactorOf()
  {static} +dynamic textScalerOf()
  {static} +dynamic maybeTextScalerOf()
  {static} +Brightness platformBrightnessOf()
  {static} +Brightness? maybePlatformBrightnessOf()
  {static} +EdgeInsets paddingOf()
  {static} +EdgeInsets? maybePaddingOf()
  {static} +EdgeInsets viewInsetsOf()
  {static} +EdgeInsets? maybeViewInsetsOf()
  {static} +EdgeInsets systemGestureInsetsOf()
  {static} +EdgeInsets? maybeSystemGestureInsetsOf()
  {static} +EdgeInsets viewPaddingOf()
  {static} +EdgeInsets? maybeViewPaddingOf()
  {static} +bool alwaysUse24HourFormatOf()
  {static} +bool? maybeAlwaysUse24HourFormatOf()
  {static} +bool accessibleNavigationOf()
  {static} +bool? maybeAccessibleNavigationOf()
  {static} +bool invertColorsOf()
  {static} +bool? maybeInvertColorsOf()
  {static} +bool highContrastOf()
  {static} +bool? maybeHighContrastOf()
  {static} +bool onOffSwitchLabelsOf()
  {static} +bool? maybeOnOffSwitchLabelsOf()
  {static} +bool disableAnimationsOf()
  {static} +bool? maybeDisableAnimationsOf()
  {static} +bool boldTextOf()
  {static} +bool boldTextOverride()
  {static} +bool? maybeBoldTextOf()
  {static} +NavigationMode navigationModeOf()
  {static} +NavigationMode? maybeNavigationModeOf()
  {static} +DeviceGestureSettings gestureSettingsOf()
  {static} +DeviceGestureSettings? maybeGestureSettingsOf()
  {static} +List<DisplayFeature> displayFeaturesOf()
  {static} +List<DisplayFeature>? maybeDisplayFeaturesOf()
  +bool updateShouldNotify()
  +void debugFillProperties()
  +bool updateShouldNotifyDependent()
}

"widgets::media_query::MediaQuery" o-- "widgets::media_query::MediaQueryData"
"widgets::inherited_model::InheritedModel" <|-- "widgets::media_query::MediaQuery"

class "widgets::media_query::_MediaQueryFromView" {
  +FlutterView view
  +bool ignoreParentData
  +Widget child
  +State<_MediaQueryFromView> createState()
}

"widgets::media_query::_MediaQueryFromView" o-- "dart::ui::FlutterView"
"widgets::media_query::_MediaQueryFromView" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::media_query::_MediaQueryFromView"

class "widgets::media_query::_MediaQueryFromViewState" {
  -MediaQueryData? _parentData
  -MediaQueryData? _data
  +void initState()
  +void didChangeDependencies()
  +void didUpdateWidget()
  -void _updateParentData()
  -void _updateData()
  +void didChangeAccessibilityFeatures()
  +void didChangeMetrics()
  +void didChangeTextScaleFactor()
  +void didChangePlatformBrightness()
  +void dispose()
  +Widget build()
}

"widgets::media_query::_MediaQueryFromViewState" o-- "widgets::media_query::MediaQueryData"
"widgets::framework::State" <|-- "widgets::media_query::_MediaQueryFromViewState"
"widgets::binding::WidgetsBindingObserver" <|-- "widgets::media_query::_MediaQueryFromViewState"

class "widgets::media_query::_UnspecifiedTextScaler" {
  +double textScaleFactor
  +dynamic clamp()
  +double scale()
}

class "widgets::media_query::Orientation" {
  +int index
  {static} +List<Orientation> values
  {static} +Orientation portrait
  {static} +Orientation landscape
}

"widgets::media_query::Orientation" o-- "widgets::media_query::Orientation"
"dart::core::Enum" <|-- "widgets::media_query::Orientation"

class "widgets::media_query::_MediaQueryAspect" {
  +int index
  {static} +List<_MediaQueryAspect> values
  {static} +_MediaQueryAspect size
  {static} +_MediaQueryAspect orientation
  {static} +_MediaQueryAspect devicePixelRatio
  {static} +_MediaQueryAspect textScaleFactor
  {static} +_MediaQueryAspect textScaler
  {static} +_MediaQueryAspect platformBrightness
  {static} +_MediaQueryAspect padding
  {static} +_MediaQueryAspect viewInsets
  {static} +_MediaQueryAspect systemGestureInsets
  {static} +_MediaQueryAspect viewPadding
  {static} +_MediaQueryAspect alwaysUse24HourFormat
  {static} +_MediaQueryAspect accessibleNavigation
  {static} +_MediaQueryAspect invertColors
  {static} +_MediaQueryAspect highContrast
  {static} +_MediaQueryAspect onOffSwitchLabels
  {static} +_MediaQueryAspect disableAnimations
  {static} +_MediaQueryAspect boldText
  {static} +_MediaQueryAspect navigationMode
  {static} +_MediaQueryAspect gestureSettings
  {static} +_MediaQueryAspect displayFeatures
}

"widgets::media_query::_MediaQueryAspect" o-- "widgets::media_query::_MediaQueryAspect"
"dart::core::Enum" <|-- "widgets::media_query::_MediaQueryAspect"

class "widgets::media_query::NavigationMode" {
  +int index
  {static} +List<NavigationMode> values
  {static} +NavigationMode traditional
  {static} +NavigationMode directional
}

"widgets::media_query::NavigationMode" o-- "widgets::media_query::NavigationMode"
"dart::core::Enum" <|-- "widgets::media_query::NavigationMode"

class "widgets::draggable_scrollable_sheet::DraggableScrollableController" {
  -_DraggableScrollableSheetScrollController? _attachedController
  -Set<AnimationController> _animationControllers
  +double size
  +double pixels
  +bool isAttached
  +double sizeToPixels()
  +double pixelsToSize()
  +Future<void> animateTo()
  +void jumpTo()
  +void reset()
  -void _assertAttached()
  -void _attach()
  -void _onExtentReplaced()
  -void _detach()
  -void _disposeAnimationControllers()
}

"widgets::draggable_scrollable_sheet::DraggableScrollableController" o-- "widgets::draggable_scrollable_sheet::_DraggableScrollableSheetScrollController"
"foundation::change_notifier::ChangeNotifier" <|-- "widgets::draggable_scrollable_sheet::DraggableScrollableController"

class "widgets::draggable_scrollable_sheet::DraggableScrollableSheet" {
  +double initialChildSize
  +double minChildSize
  +double maxChildSize
  +bool expand
  +bool snap
  +List<double>? snapSizes
  +Duration? snapAnimationDuration
  +DraggableScrollableController? controller
  +bool shouldCloseOnMinExtent
  +Widget Function(BuildContext, ScrollController) builder
  +State<DraggableScrollableSheet> createState()
}

"widgets::draggable_scrollable_sheet::DraggableScrollableSheet" o-- "widgets::draggable_scrollable_sheet::DraggableScrollableController"
"widgets::draggable_scrollable_sheet::DraggableScrollableSheet" o-- "widgets::draggable_scrollable_sheet::Widget Function(BuildContext, ScrollController)"
"widgets::framework::StatefulWidget" <|-- "widgets::draggable_scrollable_sheet::DraggableScrollableSheet"

class "widgets::draggable_scrollable_sheet::DraggableScrollableNotification" {
  +double extent
  +double minExtent
  +double maxExtent
  +double initialExtent
  +BuildContext context
  +bool shouldCloseOnMinExtent
  +void debugFillDescription()
}

"widgets::draggable_scrollable_sheet::DraggableScrollableNotification" o-- "widgets::framework::BuildContext"
"widgets::notification_listener::Notification" <|-- "widgets::draggable_scrollable_sheet::DraggableScrollableNotification"
"widgets::scroll_notification::ViewportNotificationMixin" <|-- "widgets::draggable_scrollable_sheet::DraggableScrollableNotification"

class "widgets::draggable_scrollable_sheet::_DraggableSheetExtent" {
  -void Function()? _cancelActivity
  +double minSize
  +double maxSize
  +bool snap
  +List<double> snapSizes
  +Duration? snapAnimationDuration
  +double initialSize
  +bool shouldCloseOnMinExtent
  -ValueNotifier<double> _currentSize
  +double availablePixels
  +bool hasDragged
  +bool hasChanged
  +bool isAtMin
  +bool isAtMax
  +double currentSize
  +double currentPixels
  +List<double> pixelSnapSizes
  +void startActivity()
  +void addPixelDelta()
  +void updateSize()
  +double pixelsToSize()
  +double sizeToPixels()
  +void dispose()
  +_DraggableSheetExtent copyWith()
}

"widgets::draggable_scrollable_sheet::_DraggableSheetExtent" o-- "dart::ui::void Function()"
"widgets::draggable_scrollable_sheet::_DraggableSheetExtent" o-- "foundation::change_notifier::ValueNotifier<double>"

class "widgets::draggable_scrollable_sheet::_DraggableScrollableSheetState" {
  -_DraggableScrollableSheetScrollController _scrollController
  -_DraggableSheetExtent _extent
  +void initState()
  -List<double> _impliedSnapSizes()
  +void didUpdateWidget()
  +void didChangeDependencies()
  +Widget build()
  +void dispose()
  -void _replaceExtent()
  -String _snapSizeErrorMessage()
}

"widgets::draggable_scrollable_sheet::_DraggableScrollableSheetState" o-- "widgets::draggable_scrollable_sheet::_DraggableScrollableSheetScrollController"
"widgets::draggable_scrollable_sheet::_DraggableScrollableSheetState" o-- "widgets::draggable_scrollable_sheet::_DraggableSheetExtent"
"widgets::framework::State" <|-- "widgets::draggable_scrollable_sheet::_DraggableScrollableSheetState"

class "widgets::draggable_scrollable_sheet::_DraggableScrollableSheetScrollController" {
  +_DraggableSheetExtent extent
  +void Function()? onPositionDetached
  +_DraggableScrollableSheetScrollPosition position
  +_DraggableScrollableSheetScrollPosition createScrollPosition()
  +void debugFillDescription()
  +void reset()
  +void detach()
}

"widgets::draggable_scrollable_sheet::_DraggableScrollableSheetScrollController" o-- "widgets::draggable_scrollable_sheet::_DraggableSheetExtent"
"widgets::draggable_scrollable_sheet::_DraggableScrollableSheetScrollController" o-- "dart::ui::void Function()"
"widgets::draggable_scrollable_sheet::_DraggableScrollableSheetScrollController" o-- "widgets::draggable_scrollable_sheet::_DraggableScrollableSheetScrollPosition"
"widgets::scroll_controller::ScrollController" <|-- "widgets::draggable_scrollable_sheet::_DraggableScrollableSheetScrollController"

class "widgets::draggable_scrollable_sheet::_DraggableScrollableSheetScrollPosition" {
  -void Function()? _dragCancelCallback
  +_DraggableSheetExtent Function() getExtent
  -Set<AnimationController> _ballisticControllers
  +bool listShouldScroll
  +_DraggableSheetExtent extent
  -bool _isAtSnapSize
  -bool _shouldSnap
  +void absorb()
  +void beginActivity()
  +void applyUserOffset()
  +void dispose()
  +void goBallistic()
  +Drag drag()
}

"widgets::draggable_scrollable_sheet::_DraggableScrollableSheetScrollPosition" o-- "dart::ui::void Function()"
"widgets::draggable_scrollable_sheet::_DraggableScrollableSheetScrollPosition" o-- "null::_DraggableSheetExtent Function()"
"widgets::draggable_scrollable_sheet::_DraggableScrollableSheetScrollPosition" o-- "widgets::draggable_scrollable_sheet::_DraggableSheetExtent"
"widgets::scroll_position_with_single_context::ScrollPositionWithSingleContext" <|-- "widgets::draggable_scrollable_sheet::_DraggableScrollableSheetScrollPosition"

class "widgets::draggable_scrollable_sheet::DraggableScrollableActuator" {
  +Widget child
  {static} +bool reset()
  +State<DraggableScrollableActuator> createState()
}

"widgets::draggable_scrollable_sheet::DraggableScrollableActuator" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::draggable_scrollable_sheet::DraggableScrollableActuator"

class "widgets::draggable_scrollable_sheet::_DraggableScrollableActuatorState" {
  -_ResetNotifier _notifier
  +Widget build()
  +void dispose()
}

"widgets::draggable_scrollable_sheet::_DraggableScrollableActuatorState" o-- "widgets::draggable_scrollable_sheet::_ResetNotifier"
"widgets::framework::State" <|-- "widgets::draggable_scrollable_sheet::_DraggableScrollableActuatorState"

class "widgets::draggable_scrollable_sheet::_ResetNotifier" {
  -bool _wasCalled
  +bool sendReset()
}

"foundation::change_notifier::ChangeNotifier" <|-- "widgets::draggable_scrollable_sheet::_ResetNotifier"

class "widgets::draggable_scrollable_sheet::_InheritedResetNotifier" {
  -bool _sendReset()
  {static} +bool shouldReset()
}

"widgets::inherited_notifier::InheritedNotifier" <|-- "widgets::draggable_scrollable_sheet::_InheritedResetNotifier"

class "widgets::draggable_scrollable_sheet::_SnappingSimulation" {
  +double position
  +double velocity
  {static} +double minimumSpeed
  -double _pixelSnapSize
  +double dx()
  +bool isDone()
  +double x()
  -double _getSnapSize()
}

"physics::simulation::Simulation" <|-- "widgets::draggable_scrollable_sheet::_SnappingSimulation"

class "widgets::container::DecoratedBox" {
  +Decoration decoration
  +DecorationPosition position
  +RenderDecoratedBox createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::container::DecoratedBox" o-- "painting::decoration::Decoration"
"widgets::container::DecoratedBox" o-- "rendering::proxy_box::DecorationPosition"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::container::DecoratedBox"

class "widgets::container::Container" {
  +Widget? child
  +AlignmentGeometry? alignment
  +EdgeInsetsGeometry? padding
  +Color? color
  +Decoration? decoration
  +Decoration? foregroundDecoration
  +BoxConstraints? constraints
  +EdgeInsetsGeometry? margin
  +Matrix4? transform
  +AlignmentGeometry? transformAlignment
  +Clip clipBehavior
  -EdgeInsetsGeometry? _paddingIncludingDecoration
  +Widget build()
  +void debugFillProperties()
}

"widgets::container::Container" o-- "widgets::framework::Widget"
"widgets::container::Container" o-- "painting::alignment::AlignmentGeometry"
"widgets::container::Container" o-- "painting::edge_insets::EdgeInsetsGeometry"
"widgets::container::Container" o-- "dart::ui::Color"
"widgets::container::Container" o-- "painting::decoration::Decoration"
"widgets::container::Container" o-- "rendering::box::BoxConstraints"
"widgets::container::Container" o-- "vector_math::vector_math_64::Matrix4"
"widgets::container::Container" o-- "dart::ui::Clip"
"widgets::framework::StatelessWidget" <|-- "widgets::container::Container"

class "widgets::container::_DecorationClipper" {
  +TextDirection textDirection
  +Decoration decoration
  +Path getClip()
  +bool shouldReclip()
}

"widgets::container::_DecorationClipper" o-- "dart::ui::TextDirection"
"widgets::container::_DecorationClipper" o-- "painting::decoration::Decoration"
"rendering::proxy_box::CustomClipper" <|-- "widgets::container::_DecorationClipper"

abstract class "widgets::inherited_theme::InheritedTheme" {
  +Widget wrap()
  {static} +Widget captureAll()
  {static} +CapturedThemes capture()
}

"widgets::framework::InheritedWidget" <|-- "widgets::inherited_theme::InheritedTheme"

class "widgets::inherited_theme::CapturedThemes" {
  -List<InheritedTheme> _themes
  +Widget wrap()
}

class "widgets::inherited_theme::_CaptureAll" {
  +List<InheritedTheme> themes
  +Widget child
  +Widget build()
}

"widgets::inherited_theme::_CaptureAll" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::inherited_theme::_CaptureAll"

class "widgets::scroll_aware_image_provider::ScrollAwareImageProvider" {
  +DisposableBuildContext<State<StatefulWidget>> context
  +ImageProvider<T> imageProvider
  +void resolveStreamForKey()
  +ImageStreamCompleter loadBuffer()
  +ImageStreamCompleter loadImage()
  +Future<T> obtainKey()
}

"widgets::scroll_aware_image_provider::ScrollAwareImageProvider" o-- "widgets::disposable_build_context::DisposableBuildContext<State<StatefulWidget>>"
"widgets::scroll_aware_image_provider::ScrollAwareImageProvider" o-- "painting::image_provider::ImageProvider<T>"
"painting::image_provider::ImageProvider" <|-- "widgets::scroll_aware_image_provider::ScrollAwareImageProvider"

class "widgets::editable_text::_CompositionCallback" {
  +void Function(Layer) compositeCallback
  +bool enabled
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"widgets::editable_text::_CompositionCallback" o-- "rendering::layer::void Function(Layer)"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::editable_text::_CompositionCallback"

class "widgets::editable_text::_RenderCompositionCallback" {
  +void Function(Layer) compositeCallback
  -void Function()? _cancelCallback
  -bool _enabled
  +bool enabled
  +void paint()
}

"widgets::editable_text::_RenderCompositionCallback" o-- "rendering::layer::void Function(Layer)"
"widgets::editable_text::_RenderCompositionCallback" o-- "dart::ui::void Function()"
"rendering::proxy_box::RenderProxyBox" <|-- "widgets::editable_text::_RenderCompositionCallback"

class "widgets::editable_text::TextEditingController" {
  +String text
  +TextEditingValue value
  +TextSelection selection
  +TextSpan buildTextSpan()
  +void clear()
  +void clearComposing()
  +bool isSelectionWithinTextBounds()
  -bool _isSelectionWithinComposingRange()
}

"widgets::editable_text::TextEditingController" o-- "services::text_input::TextEditingValue"
"widgets::editable_text::TextEditingController" o-- "services::text_editing::TextSelection"
"foundation::change_notifier::ValueNotifier" <|-- "widgets::editable_text::TextEditingController"

class "widgets::editable_text::ToolbarOptions" {
  {static} +ToolbarOptions empty
  +bool copy
  +bool cut
  +bool paste
  +bool selectAll
}

"widgets::editable_text::ToolbarOptions" o-- "widgets::editable_text::ToolbarOptions"

class "widgets::editable_text::ContentInsertionConfiguration" {
  +void Function(dynamic) onContentInserted
  +List<String> allowedMimeTypes
}

"widgets::editable_text::ContentInsertionConfiguration" o-- "foundation::basic_types::void Function(dynamic)"

class "widgets::editable_text::_KeyFrame" {
  {static} +List<_KeyFrame> iOSBlinkingCaretKeyFrames
  +double time
  +double value
}

class "widgets::editable_text::_DiscreteKeyFrameSimulation" {
  +double maxDuration
  -List<_KeyFrame> _keyFrames
  -int _lastKeyFrameIndex
  +double dx()
  +bool isDone()
  +double x()
}

"physics::simulation::Simulation" <|-- "widgets::editable_text::_DiscreteKeyFrameSimulation"

class "widgets::editable_text::EditableText" {
  +TextEditingController controller
  +FocusNode focusNode
  +String obscuringCharacter
  +bool obscureText
  +TextHeightBehavior? textHeightBehavior
  +TextWidthBasis textWidthBasis
  +bool readOnly
  +bool forceLine
  +ToolbarOptions toolbarOptions
  +bool showSelectionHandles
  +bool showCursor
  +bool autocorrect
  +SmartDashesType smartDashesType
  +SmartQuotesType smartQuotesType
  +bool enableSuggestions
  +TextStyle style
  +UndoHistoryController? undoController
  -StrutStyle? _strutStyle
  +TextAlign textAlign
  +TextDirection? textDirection
  +TextCapitalization textCapitalization
  +Locale? locale
  +double? textScaleFactor
  +dynamic textScaler
  +Color cursorColor
  +Color? autocorrectionTextRectColor
  +Color backgroundCursorColor
  +int? maxLines
  +int? minLines
  +bool expands
  +bool autofocus
  +Color? selectionColor
  +TextSelectionControls? selectionControls
  +TextInputType keyboardType
  +TextInputAction? textInputAction
  +void Function(String)? onChanged
  +void Function()? onEditingComplete
  +void Function(String)? onSubmitted
  +void Function(String, Map<String, dynamic>)? onAppPrivateCommand
  +void Function(TextSelection, SelectionChangedCause?)? onSelectionChanged
  +void Function()? onSelectionHandleTapped
  +void Function(PointerDownEvent)? onTapOutside
  +List<TextInputFormatter>? inputFormatters
  +MouseCursor? mouseCursor
  +bool rendererIgnoresPointer
  +double cursorWidth
  +double? cursorHeight
  +Radius? cursorRadius
  +bool cursorOpacityAnimates
  +Offset? cursorOffset
  +bool paintCursorAboveText
  +BoxHeightStyle selectionHeightStyle
  +BoxWidthStyle selectionWidthStyle
  +Brightness keyboardAppearance
  +EdgeInsets scrollPadding
  +bool enableInteractiveSelection
  {static} +bool debugDeterministicCursor
  +DragStartBehavior dragStartBehavior
  +ScrollController? scrollController
  +ScrollPhysics? scrollPhysics
  +bool scribbleEnabled
  +Iterable<String>? autofillHints
  +AutofillClient? autofillClient
  +Clip clipBehavior
  +String? restorationId
  +ScrollBehavior? scrollBehavior
  +bool enableIMEPersonalizedLearning
  +ContentInsertionConfiguration? contentInsertionConfiguration
  +Widget Function(BuildContext, EditableTextState)? contextMenuBuilder
  +SpellCheckConfiguration? spellCheckConfiguration
  +TextMagnifierConfiguration magnifierConfiguration
  +StrutStyle strutStyle
  +bool selectionEnabled
  -bool _userSelectionEnabled
  {static} +List<ContextMenuButtonItem> getEditableButtonItems()
  {static} -TextInputType _inferKeyboardType()
  +EditableTextState createState()
  +void debugFillProperties()
}

"widgets::editable_text::EditableText" o-- "widgets::editable_text::TextEditingController"
"widgets::editable_text::EditableText" o-- "widgets::focus_manager::FocusNode"
"widgets::editable_text::EditableText" o-- "dart::ui::TextHeightBehavior"
"widgets::editable_text::EditableText" o-- "painting::text_painter::TextWidthBasis"
"widgets::editable_text::EditableText" o-- "widgets::editable_text::ToolbarOptions"
"widgets::editable_text::EditableText" o-- "services::text_input::SmartDashesType"
"widgets::editable_text::EditableText" o-- "services::text_input::SmartQuotesType"
"widgets::editable_text::EditableText" o-- "painting::text_style::TextStyle"
"widgets::editable_text::EditableText" o-- "widgets::undo_history::UndoHistoryController"
"widgets::editable_text::EditableText" o-- "painting::strut_style::StrutStyle"
"widgets::editable_text::EditableText" o-- "dart::ui::TextAlign"
"widgets::editable_text::EditableText" o-- "dart::ui::TextDirection"
"widgets::editable_text::EditableText" o-- "services::text_input::TextCapitalization"
"widgets::editable_text::EditableText" o-- "dart::ui::Locale"
"widgets::editable_text::EditableText" o-- "dart::ui::Color"
"widgets::editable_text::EditableText" o-- "widgets::text_selection::TextSelectionControls"
"widgets::editable_text::EditableText" o-- "services::text_input::TextInputType"
"widgets::editable_text::EditableText" o-- "services::text_input::TextInputAction"
"widgets::editable_text::EditableText" o-- "foundation::basic_types::void Function(String)"
"widgets::editable_text::EditableText" o-- "dart::ui::void Function()"
"widgets::editable_text::EditableText" o-- "widgets::editable_text::void Function(String, Map<String, dynamic>)"
"widgets::editable_text::EditableText" o-- "widgets::editable_text::void Function(TextSelection, SelectionChangedCause)"
"widgets::editable_text::EditableText" o-- "widgets::tap_region::void Function(PointerDownEvent)"
"widgets::editable_text::EditableText" o-- "services::mouse_cursor::MouseCursor"
"widgets::editable_text::EditableText" o-- "dart::ui::Radius"
"widgets::editable_text::EditableText" o-- "dart::ui::Offset"
"widgets::editable_text::EditableText" o-- "dart::ui::BoxHeightStyle"
"widgets::editable_text::EditableText" o-- "dart::ui::BoxWidthStyle"
"widgets::editable_text::EditableText" o-- "dart::ui::Brightness"
"widgets::editable_text::EditableText" o-- "painting::edge_insets::EdgeInsets"
"widgets::editable_text::EditableText" o-- "gestures::recognizer::DragStartBehavior"
"widgets::editable_text::EditableText" o-- "widgets::scroll_controller::ScrollController"
"widgets::editable_text::EditableText" o-- "widgets::scroll_physics::ScrollPhysics"
"widgets::editable_text::EditableText" o-- "services::autofill::AutofillClient"
"widgets::editable_text::EditableText" o-- "dart::ui::Clip"
"widgets::editable_text::EditableText" o-- "widgets::scroll_configuration::ScrollBehavior"
"widgets::editable_text::EditableText" o-- "widgets::editable_text::ContentInsertionConfiguration"
"widgets::editable_text::EditableText" o-- "widgets::editable_text::Widget Function(BuildContext, EditableTextState)"
"widgets::editable_text::EditableText" o-- "widgets::spell_check::SpellCheckConfiguration"
"widgets::editable_text::EditableText" o-- "widgets::magnifier::TextMagnifierConfiguration"
"widgets::framework::StatefulWidget" <|-- "widgets::editable_text::EditableText"

class "widgets::editable_text::EditableTextState" {
  -Timer? _cursorTimer
  -AnimationController? _backingCursorBlinkOpacityController
  -Simulation _iosBlinkCursorSimulation
  -ValueNotifier<bool> _cursorVisibilityNotifier
  -GlobalKey<State<StatefulWidget>> _editableKey
  +ClipboardStatusNotifier clipboardStatus
  -LiveTextInputStatusNotifier? _liveTextInputStatus
  -TextInputConnection? _textInputConnection
  -TextSelectionOverlay? _selectionOverlay
  -GlobalKey<State<StatefulWidget>> _scrollableKey
  -ScrollController? _internalScrollController
  -LayerLink _toolbarLayerLink
  -LayerLink _startHandleLayerLink
  -LayerLink _endHandleLayerLink
  -bool _didAutoFocus
  -AutofillGroupState? _currentAutofillScope
  -SpellCheckConfiguration _spellCheckConfiguration
  -TextStyle _style
  +dynamic spellCheckResults
  {static} -Duration _floatingCursorResetTime
  -AnimationController? _floatingCursorResetController
  -Orientation? _lastOrientation
  -bool _tickersEnabled
  -TextEditingValue? _lastKnownRemoteTextEditingValue
  -Rect? _startCaretRect
  -TextPosition? _lastTextPosition
  -Offset? _pointOffsetOrigin
  -Offset? _lastBoundedOffset
  -int _batchEditDepth
  -bool _restartConnectionScheduled
  -bool _nextFocusChangeIsInternal
  {static} -Duration _caretAnimationDuration
  {static} -Curve _caretAnimationCurve
  -bool _showCaretOnScreenScheduled
  -double _lastBottomViewInset
  -int _obscureShowCharTicksPending
  -int? _obscureLatestCharIndex
  -_ScribbleCacheKey? _scribbleCacheKey
  +RenderEditable renderEditable
  -int _placeholderLocation
  -TextRange? _currentPromptRectRange
  -Action<TransposeCharactersIntent> _transposeCharactersAction
  -Action<ReplaceTextIntent> _replaceTextAction
  -Action<UpdateSelectionIntent> _updateSelectionAction
  -_UpdateTextSelectionVerticallyAction<DirectionalCaretMovementIntent> _verticalSelectionUpdateAction
  -Map<Type, Action<Intent>> _actions
  -AnimationController _cursorBlinkOpacityController
  -bool _hasInputConnection
  -ScrollController _scrollController
  +AutofillScope? currentAutofillScope
  -AutofillClient _effectiveAutofillClient
  +SpellCheckConfiguration spellCheckConfiguration
  +bool spellCheckEnabled
  -bool _spellCheckResultsReceived
  -bool _shouldCreateInputConnection
  +bool wantKeepAlive
  -Color _cursorColor
  +bool cutEnabled
  +bool copyEnabled
  +bool pasteEnabled
  +bool selectAllEnabled
  +bool lookUpEnabled
  +bool searchWebEnabled
  +bool shareEnabled
  +bool liveTextInputEnabled
  -TextEditingValue _textEditingValueforTextLayoutMetrics
  +TextSelectionToolbarAnchors contextMenuAnchors
  +List<ContextMenuButtonItem> contextMenuButtonItems
  +TextEditingValue currentTextEditingValue
  -Offset _floatingCursorOffset
  -TextEditingValue _value
  -bool _hasFocus
  -bool _isMultiline
  -bool _needsAutofill
  -bool _showBlinkingCursor
  +bool cursorCurrentlyVisible
  +Duration cursorBlinkInterval
  +TextSelectionOverlay? selectionOverlay
  -TextDirection _textDirection
  +TextEditingValue textEditingValue
  -double _devicePixelRatio
  +String autofillId
  +TextInputConfiguration textInputConfiguration
  -void _onChangedClipboardStatus()
  -void _onChangedLiveTextInputStatus()
  +void copySelection()
  +void cutSelection()
  +Future<void> pasteText()
  +void selectAll()
  +Future<void> lookUpSelection()
  +Future<void> searchWebForSelection()
  +Future<void> shareSelection()
  -void _startLiveTextInput()
  +dynamic findSuggestionSpanAtCursorIndex()
  {static} -SpellCheckConfiguration _inferSpellCheckConfiguration()
  +List<ContextMenuButtonItem>? buttonItemsForToolbarOptions()
  -_GlyphHeights _getGlyphHeights()
  +void initState()
  +void didChangeDependencies()
  +void didUpdateWidget()
  +void dispose()
  +void updateEditingValue()
  -bool _checkNeedsAdjustAffinity()
  +void performAction()
  +void performPrivateCommand()
  +void insertContent()
  +void updateFloatingCursor()
  -void _onFloatingCursorResetTick()
  -void _finalizeEditing()
  +void beginBatchEdit()
  +void endBatchEdit()
  -void _updateRemoteEditingValueIfNeeded()
  -RevealedOffset _getOffsetToRevealCaret()
  -void _openInputConnection()
  -void _closeInputConnectionIfNeeded()
  -void _openOrCloseInputConnectionIfNeeded()
  -void _scheduleRestartConnection()
  -void _restartConnectionIfNeeded()
  +void didChangeInputControl()
  +void connectionClosed()
  -void _flagInternalFocus()
  -void _unflagInternalFocus()
  +void requestKeyboard()
  -void _updateOrDisposeSelectionOverlayIfNeeded()
  -void _onEditableScroll()
  -TextSelectionOverlay _createSelectionOverlay()
  -void _handleSelectionChanged()
  -void _scheduleShowCaretOnScreen()
  +void didChangeMetrics()
  -Future<void> _performSpellCheck()
  -void _formatAndSetValue()
  -void _bringIntoViewBySelectionState()
  -void _onCursorColorTick()
  -void _startCursorBlink()
  -void _onCursorTick()
  -void _stopCursorBlink()
  -void _startOrStopCursorTimerIfNeeded()
  -void _didChangeTextEditingValue()
  -void _handleFocusChanged()
  -TextSelection? _adjustedSelectionWhenFocused()
  -void _compositeCallback()
  -void _updateSizeAndTransform()
  -void _schedulePeriodicPostFrameCallbacks()
  -void _updateSelectionRects()
  -void _updateComposingRectIfNeeded()
  -void _updateCaretRectIfNeeded()
  +void userUpdateTextEditingValue()
  +void bringIntoView()
  +bool showToolbar()
  +void hideToolbar()
  +void toggleToolbar()
  +bool showSpellCheckSuggestionsToolbar()
  +void showMagnifier()
  +void hideMagnifier()
  +void insertTextPlaceholder()
  +void removeTextPlaceholder()
  +void performSelector()
  +void autofill()
  +void showAutocorrectionPromptRect()
  -void Function()? _semanticsOnCopy()
  -void Function()? _semanticsOnCut()
  -void Function()? _semanticsOnPaste()
  -TextPosition _moveBeyondTextBoundary()
  -TextPosition _moveToTextBoundary()
  -dynamic _characterBoundary()
  -dynamic _nextWordBoundary()
  -dynamic _linebreak()
  -dynamic _paragraphBoundary()
  -dynamic _documentBoundary()
  -Action<T> _makeOverridable()
  -void _transposeCharacters()
  -void _replaceText()
  -void _scrollToDocumentBoundary()
  -void _scroll()
  -void _extendSelectionByPage()
  -void _updateSelection()
  -Object? _hideToolbarIfVisible()
  -void _defaultOnTapOutside()
  +Widget build()
  +TextSpan buildTextSpan()
}

"widgets::editable_text::EditableTextState" o-- "dart::async::Timer"
"widgets::editable_text::EditableTextState" o-- "animation::animation_controller::AnimationController"
"widgets::editable_text::EditableTextState" o-- "physics::simulation::Simulation"
"widgets::editable_text::EditableTextState" o-- "foundation::change_notifier::ValueNotifier<bool>"
"widgets::editable_text::EditableTextState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::editable_text::EditableTextState" o-- "widgets::text_selection::ClipboardStatusNotifier"
"widgets::editable_text::EditableTextState" o-- "widgets::text_selection::LiveTextInputStatusNotifier"
"widgets::editable_text::EditableTextState" o-- "services::text_input::TextInputConnection"
"widgets::editable_text::EditableTextState" o-- "widgets::text_selection::TextSelectionOverlay"
"widgets::editable_text::EditableTextState" o-- "widgets::scroll_controller::ScrollController"
"widgets::editable_text::EditableTextState" o-- "rendering::layer::LayerLink"
"widgets::editable_text::EditableTextState" o-- "widgets::autofill::AutofillGroupState"
"widgets::editable_text::EditableTextState" o-- "widgets::spell_check::SpellCheckConfiguration"
"widgets::editable_text::EditableTextState" o-- "painting::text_style::TextStyle"
"widgets::editable_text::EditableTextState" o-- "widgets::media_query::Orientation"
"widgets::editable_text::EditableTextState" o-- "services::text_input::TextEditingValue"
"widgets::editable_text::EditableTextState" o-- "dart::ui::Rect"
"widgets::editable_text::EditableTextState" o-- "dart::ui::TextPosition"
"widgets::editable_text::EditableTextState" o-- "dart::ui::Offset"
"widgets::editable_text::EditableTextState" o-- "animation::curves::Curve"
"widgets::editable_text::EditableTextState" o-- "widgets::editable_text::_ScribbleCacheKey"
"widgets::editable_text::EditableTextState" o-- "rendering::editable::RenderEditable"
"widgets::editable_text::EditableTextState" o-- "dart::ui::TextRange"
"widgets::editable_text::EditableTextState" o-- "widgets::actions::Action<TransposeCharactersIntent>"
"widgets::editable_text::EditableTextState" o-- "widgets::actions::Action<ReplaceTextIntent>"
"widgets::editable_text::EditableTextState" o-- "widgets::actions::Action<UpdateSelectionIntent>"
"widgets::editable_text::EditableTextState" o-- "widgets::editable_text::_UpdateTextSelectionVerticallyAction<DirectionalCaretMovementIntent>"
"widgets::editable_text::EditableTextState" o-- "services::autofill::AutofillScope"
"widgets::editable_text::EditableTextState" o-- "services::autofill::AutofillClient"
"widgets::editable_text::EditableTextState" o-- "dart::ui::Color"
"widgets::editable_text::EditableTextState" o-- "widgets::text_selection_toolbar_anchors::TextSelectionToolbarAnchors"
"widgets::editable_text::EditableTextState" o-- "dart::ui::TextDirection"
"widgets::editable_text::EditableTextState" o-- "services::text_input::TextInputConfiguration"
"widgets::framework::State" <|-- "widgets::editable_text::EditableTextState"
"widgets::automatic_keep_alive::AutomaticKeepAliveClientMixin" <|-- "widgets::editable_text::EditableTextState"
"widgets::binding::WidgetsBindingObserver" <|-- "widgets::editable_text::EditableTextState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "widgets::editable_text::EditableTextState"
"services::text_input::TextSelectionDelegate" <|-- "widgets::editable_text::EditableTextState"
"services::text_input::TextInputClient" <|-- "widgets::editable_text::EditableTextState"
"services::autofill::AutofillClient" <|-- "widgets::editable_text::EditableTextState"

class "widgets::editable_text::_Editable" {
  +InlineSpan inlineSpan
  +TextEditingValue value
  +Color? cursorColor
  +LayerLink startHandleLayerLink
  +LayerLink endHandleLayerLink
  +Color? backgroundCursorColor
  +ValueNotifier<bool> showCursor
  +bool forceLine
  +bool readOnly
  +bool hasFocus
  +int? maxLines
  +int? minLines
  +bool expands
  +StrutStyle? strutStyle
  +Color? selectionColor
  +dynamic textScaler
  +TextAlign textAlign
  +TextDirection textDirection
  +Locale? locale
  +String obscuringCharacter
  +bool obscureText
  +TextHeightBehavior? textHeightBehavior
  +TextWidthBasis textWidthBasis
  +ViewportOffset offset
  +bool rendererIgnoresPointer
  +double cursorWidth
  +double? cursorHeight
  +Radius? cursorRadius
  +Offset cursorOffset
  +bool paintCursorAboveText
  +BoxHeightStyle selectionHeightStyle
  +BoxWidthStyle selectionWidthStyle
  +bool enableInteractiveSelection
  +TextSelectionDelegate textSelectionDelegate
  +double devicePixelRatio
  +TextRange? promptRectRange
  +Color? promptRectColor
  +Clip clipBehavior
  +RenderEditable createRenderObject()
  +void updateRenderObject()
}

"widgets::editable_text::_Editable" o-- "painting::inline_span::InlineSpan"
"widgets::editable_text::_Editable" o-- "services::text_input::TextEditingValue"
"widgets::editable_text::_Editable" o-- "dart::ui::Color"
"widgets::editable_text::_Editable" o-- "rendering::layer::LayerLink"
"widgets::editable_text::_Editable" o-- "foundation::change_notifier::ValueNotifier<bool>"
"widgets::editable_text::_Editable" o-- "painting::strut_style::StrutStyle"
"widgets::editable_text::_Editable" o-- "dart::ui::TextAlign"
"widgets::editable_text::_Editable" o-- "dart::ui::TextDirection"
"widgets::editable_text::_Editable" o-- "dart::ui::Locale"
"widgets::editable_text::_Editable" o-- "dart::ui::TextHeightBehavior"
"widgets::editable_text::_Editable" o-- "painting::text_painter::TextWidthBasis"
"widgets::editable_text::_Editable" o-- "rendering::viewport_offset::ViewportOffset"
"widgets::editable_text::_Editable" o-- "dart::ui::Radius"
"widgets::editable_text::_Editable" o-- "dart::ui::Offset"
"widgets::editable_text::_Editable" o-- "dart::ui::BoxHeightStyle"
"widgets::editable_text::_Editable" o-- "dart::ui::BoxWidthStyle"
"widgets::editable_text::_Editable" o-- "services::text_input::TextSelectionDelegate"
"widgets::editable_text::_Editable" o-- "dart::ui::TextRange"
"widgets::editable_text::_Editable" o-- "dart::ui::Clip"
"widgets::framework::MultiChildRenderObjectWidget" <|-- "widgets::editable_text::_Editable"

class "widgets::editable_text::_ScribbleCacheKey" {
  +TextAlign textAlign
  +TextDirection textDirection
  +dynamic textScaler
  +TextHeightBehavior? textHeightBehavior
  +Locale? locale
  +StrutStyle structStyle
  +int placeholder
  +Size size
  +InlineSpan inlineSpan
  +RenderComparison compare()
}

"widgets::editable_text::_ScribbleCacheKey" o-- "dart::ui::TextAlign"
"widgets::editable_text::_ScribbleCacheKey" o-- "dart::ui::TextDirection"
"widgets::editable_text::_ScribbleCacheKey" o-- "dart::ui::TextHeightBehavior"
"widgets::editable_text::_ScribbleCacheKey" o-- "dart::ui::Locale"
"widgets::editable_text::_ScribbleCacheKey" o-- "painting::strut_style::StrutStyle"
"widgets::editable_text::_ScribbleCacheKey" o-- "dart::ui::Size"
"widgets::editable_text::_ScribbleCacheKey" o-- "painting::inline_span::InlineSpan"

class "widgets::editable_text::_ScribbleFocusable" {
  +Widget child
  +FocusNode focusNode
  +GlobalKey<State<StatefulWidget>> editableKey
  +void Function() updateSelectionRects
  +bool enabled
  +_ScribbleFocusableState createState()
}

"widgets::editable_text::_ScribbleFocusable" o-- "widgets::framework::Widget"
"widgets::editable_text::_ScribbleFocusable" o-- "widgets::focus_manager::FocusNode"
"widgets::editable_text::_ScribbleFocusable" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::editable_text::_ScribbleFocusable" o-- "dart::ui::void Function()"
"widgets::framework::StatefulWidget" <|-- "widgets::editable_text::_ScribbleFocusable"

class "widgets::editable_text::_ScribbleFocusableState" {
  {static} -int _nextElementIdentifier
  -String _elementIdentifier
  +RenderEditable? renderEditable
  +String elementIdentifier
  +Rect bounds
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +void onScribbleFocus()
  +bool isInScribbleRect()
  +Widget build()
}

"widgets::editable_text::_ScribbleFocusableState" o-- "rendering::editable::RenderEditable"
"widgets::editable_text::_ScribbleFocusableState" o-- "dart::ui::Rect"
"widgets::framework::State" <|-- "widgets::editable_text::_ScribbleFocusableState"
"services::text_input::ScribbleClient" <|-- "widgets::editable_text::_ScribbleFocusableState"

class "widgets::editable_text::_ScribblePlaceholder" {
  +Size size
  +void build()
}

"widgets::editable_text::_ScribblePlaceholder" o-- "dart::ui::Size"
"widgets::widget_span::WidgetSpan" <|-- "widgets::editable_text::_ScribblePlaceholder"

class "widgets::editable_text::_CodePointBoundary" {
  -String _text
  -bool _breaksSurrogatePair()
  +int? getLeadingTextBoundaryAt()
  +int? getTrailingTextBoundaryAt()
}

class "widgets::editable_text::_DeleteTextAction" {
  +EditableTextState state
  +dynamic Function() getTextBoundary
  -TextPosition Function(TextPosition, bool, dynamic) _applyTextBoundary
  +bool isActionEnabled
  +Object? invoke()
}

"widgets::editable_text::_DeleteTextAction" o-- "widgets::editable_text::EditableTextState"
"widgets::editable_text::_DeleteTextAction" o-- "null::dynamic Function()"
"widgets::editable_text::_DeleteTextAction" o-- "widgets::editable_text::TextPosition Function(TextPosition, bool, dynamic)"
"widgets::actions::ContextAction" <|-- "widgets::editable_text::_DeleteTextAction"

class "widgets::editable_text::_UpdateTextSelectionAction" {
  +EditableTextState state
  +bool ignoreNonCollapsedSelection
  +bool isExpand
  +bool extentAtIndex
  +dynamic Function() getTextBoundary
  +TextPosition Function(TextPosition, bool, dynamic) applyTextBoundary
  {static} +int NEWLINE_CODE_UNIT
  +bool isActionEnabled
  -bool _isAtWordwrapUpstream()
  -bool _isAtWordwrapDownstream()
  +Object? invoke()
}

"widgets::editable_text::_UpdateTextSelectionAction" o-- "widgets::editable_text::EditableTextState"
"widgets::editable_text::_UpdateTextSelectionAction" o-- "null::dynamic Function()"
"widgets::editable_text::_UpdateTextSelectionAction" o-- "widgets::editable_text::TextPosition Function(TextPosition, bool, dynamic)"
"widgets::actions::ContextAction" <|-- "widgets::editable_text::_UpdateTextSelectionAction"

class "widgets::editable_text::_UpdateTextSelectionVerticallyAction" {
  +EditableTextState state
  -VerticalCaretMovementRun? _verticalMovementRun
  -TextSelection? _runSelection
  +bool isActionEnabled
  +void stopCurrentVerticalRunIfSelectionChanges()
  +void invoke()
}

"widgets::editable_text::_UpdateTextSelectionVerticallyAction" o-- "widgets::editable_text::EditableTextState"
"widgets::editable_text::_UpdateTextSelectionVerticallyAction" o-- "rendering::editable::VerticalCaretMovementRun"
"widgets::editable_text::_UpdateTextSelectionVerticallyAction" o-- "services::text_editing::TextSelection"
"widgets::actions::ContextAction" <|-- "widgets::editable_text::_UpdateTextSelectionVerticallyAction"

class "widgets::editable_text::_SelectAllAction" {
  +EditableTextState state
  +bool isActionEnabled
  +Object? invoke()
}

"widgets::editable_text::_SelectAllAction" o-- "widgets::editable_text::EditableTextState"
"widgets::actions::ContextAction" <|-- "widgets::editable_text::_SelectAllAction"

class "widgets::editable_text::_CopySelectionAction" {
  +EditableTextState state
  +bool isActionEnabled
  +void invoke()
}

"widgets::editable_text::_CopySelectionAction" o-- "widgets::editable_text::EditableTextState"
"widgets::actions::ContextAction" <|-- "widgets::editable_text::_CopySelectionAction"

class "widgets::editable_text::_GlyphHeights" {
  +double start
  +double end
}

class "widgets::editable_text::_WebClipboardStatusNotifier" {
  +ClipboardStatus value
  +Future<void> update()
}

"widgets::editable_text::_WebClipboardStatusNotifier" o-- "widgets::text_selection::ClipboardStatus"
"widgets::text_selection::ClipboardStatusNotifier" <|-- "widgets::editable_text::_WebClipboardStatusNotifier"

abstract class "widgets::scroll_delegate::SliverChildDelegate" {
  +int? estimatedChildCount
  +Widget? build()
  +double? estimateMaxScrollOffset()
  +void didFinishLayout()
  +bool shouldRebuild()
  +int? findIndexByKey()
  +String toString()
  #void debugFillDescription()
}

class "widgets::scroll_delegate::_SaltedValueKey" {
}

"foundation::key::ValueKey" <|-- "widgets::scroll_delegate::_SaltedValueKey"

class "widgets::scroll_delegate::SliverChildBuilderDelegate" {
  +Widget? Function(BuildContext, int) builder
  +int? childCount
  +bool addAutomaticKeepAlives
  +bool addRepaintBoundaries
  +bool addSemanticIndexes
  +int semanticIndexOffset
  +int? Function(Widget, int) semanticIndexCallback
  +int? Function(Key)? findChildIndexCallback
  +int? estimatedChildCount
  +int? findIndexByKey()
  +Widget? build()
  +bool shouldRebuild()
}

"widgets::scroll_delegate::SliverChildBuilderDelegate" o-- "widgets::framework::Widget Function(BuildContext, int)"
"widgets::scroll_delegate::SliverChildBuilderDelegate" o-- "widgets::scroll_delegate::int Function(Widget, int)"
"widgets::scroll_delegate::SliverChildBuilderDelegate" o-- "widgets::scroll_delegate::int Function(Key)"
"widgets::scroll_delegate::SliverChildDelegate" <|-- "widgets::scroll_delegate::SliverChildBuilderDelegate"

class "widgets::scroll_delegate::SliverChildListDelegate" {
  +bool addAutomaticKeepAlives
  +bool addRepaintBoundaries
  +bool addSemanticIndexes
  +int semanticIndexOffset
  +int? Function(Widget, int) semanticIndexCallback
  +List<Widget> children
  -Map<Key?, int>? _keyToIndex
  -bool _isConstantInstance
  +int? estimatedChildCount
  -int? _findChildIndex()
  +int? findIndexByKey()
  +Widget? build()
  +bool shouldRebuild()
}

"widgets::scroll_delegate::SliverChildListDelegate" o-- "widgets::scroll_delegate::int Function(Widget, int)"
"widgets::scroll_delegate::SliverChildDelegate" <|-- "widgets::scroll_delegate::SliverChildListDelegate"

class "widgets::scroll_delegate::_SelectionKeepAlive" {
  +Widget child
  +State<_SelectionKeepAlive> createState()
}

"widgets::scroll_delegate::_SelectionKeepAlive" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::scroll_delegate::_SelectionKeepAlive"

class "widgets::scroll_delegate::_SelectionKeepAliveState" {
  -Set<Selectable>? _selectablesWithSelections
  -Map<Selectable, void Function()>? _selectableAttachments
  -SelectionRegistrar? _registrar
  -bool _wantKeepAlive
  +bool wantKeepAlive
  +void Function() listensTo()
  -void _updateSelectablesWithSelections()
  +void didChangeDependencies()
  +void add()
  +void remove()
  +void dispose()
  +Widget build()
}

"widgets::scroll_delegate::_SelectionKeepAliveState" o-- "rendering::selection::SelectionRegistrar"
"widgets::framework::State" <|-- "widgets::scroll_delegate::_SelectionKeepAliveState"
"widgets::automatic_keep_alive::AutomaticKeepAliveClientMixin" <|-- "widgets::scroll_delegate::_SelectionKeepAliveState"
"rendering::selection::SelectionRegistrar" <|-- "widgets::scroll_delegate::_SelectionKeepAliveState"

abstract class "widgets::scroll_delegate::TwoDimensionalChildDelegate" {
  +Widget? build()
  +bool shouldRebuild()
}

"foundation::change_notifier::ChangeNotifier" <|-- "widgets::scroll_delegate::TwoDimensionalChildDelegate"

class "widgets::scroll_delegate::TwoDimensionalChildBuilderDelegate" {
  +Widget? Function(BuildContext, ChildVicinity) builder
  -int? _maxXIndex
  -int? _maxYIndex
  +bool addRepaintBoundaries
  +bool addAutomaticKeepAlives
  +int? maxXIndex
  +int? maxYIndex
  +Widget? build()
  +bool shouldRebuild()
}

"widgets::scroll_delegate::TwoDimensionalChildBuilderDelegate" o-- "widgets::two_dimensional_viewport::Widget Function(BuildContext, ChildVicinity)"
"widgets::scroll_delegate::TwoDimensionalChildDelegate" <|-- "widgets::scroll_delegate::TwoDimensionalChildBuilderDelegate"

class "widgets::scroll_delegate::TwoDimensionalChildListDelegate" {
  +List<List<Widget>> children
  +bool addRepaintBoundaries
  +bool addAutomaticKeepAlives
  +Widget? build()
  +bool shouldRebuild()
}

"widgets::scroll_delegate::TwoDimensionalChildDelegate" <|-- "widgets::scroll_delegate::TwoDimensionalChildListDelegate"

class "widgets::placeholder::_PlaceholderPainter" {
  +Color color
  +double strokeWidth
  +void paint()
  +bool shouldRepaint()
  +bool hitTest()
}

"widgets::placeholder::_PlaceholderPainter" o-- "dart::ui::Color"
"rendering::custom_paint::CustomPainter" <|-- "widgets::placeholder::_PlaceholderPainter"

class "widgets::placeholder::Placeholder" {
  +Color color
  +double strokeWidth
  +double fallbackWidth
  +double fallbackHeight
  +Widget? child
  +Widget build()
  +void debugFillProperties()
}

"widgets::placeholder::Placeholder" o-- "dart::ui::Color"
"widgets::placeholder::Placeholder" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::placeholder::Placeholder"

class "widgets::icon::Icon" {
  +IconData? icon
  +double? size
  +double? fill
  +double? weight
  +double? grade
  +double? opticalSize
  +Color? color
  +List<Shadow>? shadows
  +String? semanticLabel
  +TextDirection? textDirection
  +Widget build()
  +void debugFillProperties()
}

"widgets::icon::Icon" o-- "widgets::icon_data::IconData"
"widgets::icon::Icon" o-- "dart::ui::Color"
"widgets::icon::Icon" o-- "dart::ui::TextDirection"
"widgets::framework::StatelessWidget" <|-- "widgets::icon::Icon"

class "widgets::bottom_navigation_bar_item::BottomNavigationBarItem" {
  +Widget icon
  +Widget activeIcon
  +String? label
  +Color? backgroundColor
  +String? tooltip
}

"widgets::bottom_navigation_bar_item::BottomNavigationBarItem" o-- "widgets::framework::Widget"
"widgets::bottom_navigation_bar_item::BottomNavigationBarItem" o-- "dart::ui::Color"

abstract class "widgets::layout_builder::ConstrainedLayoutBuilder" {
  +Widget Function(BuildContext, ConstraintType) builder
  +RenderObjectElement createElement()
}

"widgets::layout_builder::ConstrainedLayoutBuilder" o-- "null::Widget Function(BuildContext, ConstraintType)"
"widgets::framework::RenderObjectWidget" <|-- "widgets::layout_builder::ConstrainedLayoutBuilder"

class "widgets::layout_builder::_LayoutBuilderElement" {
  -Element? _child
  +RenderConstrainedLayoutBuilder<ConstraintType, RenderObject> renderObject
  +void visitChildren()
  +void forgetChild()
  +void mount()
  +void update()
  +void performRebuild()
  +void unmount()
  -void _layout()
  +void insertRenderObjectChild()
  +void moveRenderObjectChild()
  +void removeRenderObjectChild()
}

"widgets::layout_builder::_LayoutBuilderElement" o-- "widgets::framework::Element"
"widgets::layout_builder::_LayoutBuilderElement" o-- "widgets::layout_builder::RenderConstrainedLayoutBuilder<ConstraintType, RenderObject>"
"widgets::framework::RenderObjectElement" <|-- "widgets::layout_builder::_LayoutBuilderElement"

class "widgets::layout_builder::LayoutBuilder" {
  +RenderObject createRenderObject()
}

"widgets::layout_builder::ConstrainedLayoutBuilder" <|-- "widgets::layout_builder::LayoutBuilder"

class "widgets::layout_builder::_RenderLayoutBuilder" {
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +Size computeDryLayout()
  +void performLayout()
  +double? computeDistanceToActualBaseline()
  +bool hitTestChildren()
  +void paint()
  -bool _debugThrowIfNotCheckingIntrinsics()
}

"rendering::box::RenderBox" <|-- "widgets::layout_builder::_RenderLayoutBuilder"
"rendering::object::RenderObjectWithChildMixin" <|-- "widgets::layout_builder::_RenderLayoutBuilder"
"widgets::layout_builder::RenderConstrainedLayoutBuilder" <|-- "widgets::layout_builder::_RenderLayoutBuilder"

abstract class "widgets::layout_builder::RenderConstrainedLayoutBuilder" {
  -void Function(ConstraintType)? _callback
  -bool _needsBuild
  -Constraints? _previousConstraints
  +void updateCallback()
  +void markNeedsBuild()
  +void rebuildIfNecessary()
}

"widgets::layout_builder::RenderConstrainedLayoutBuilder" o-- "rendering::object::void Function(ConstraintType)"
"widgets::layout_builder::RenderConstrainedLayoutBuilder" o-- "rendering::object::Constraints"

class "widgets::primary_scroll_controller::PrimaryScrollController" {
  +ScrollController? controller
  +Axis? scrollDirection
  +Set<TargetPlatform> automaticallyInheritForPlatforms
  {static} +bool shouldInherit()
  {static} +ScrollController? maybeOf()
  {static} +ScrollController of()
  +bool updateShouldNotify()
  +void debugFillProperties()
}

"widgets::primary_scroll_controller::PrimaryScrollController" o-- "widgets::scroll_controller::ScrollController"
"widgets::primary_scroll_controller::PrimaryScrollController" o-- "painting::basic_types::Axis"
"widgets::framework::InheritedWidget" <|-- "widgets::primary_scroll_controller::PrimaryScrollController"

abstract class "widgets::scroll_position::ScrollPosition" {
  +ScrollPhysics physics
  +ScrollContext context
  +bool keepScrollOffset
  +String? debugLabel
  -double? _minScrollExtent
  -double? _maxScrollExtent
  -double _impliedVelocity
  -double? _pixels
  -double? _viewportDimension
  -bool _haveDimensions
  -bool _didChangeViewportDimensionOrReceiveCorrection
  -bool _pendingDimensions
  -ScrollMetrics? _lastMetrics
  -bool _haveScheduledUpdateNotification
  -Axis? _lastAxis
  -Set<SemanticsAction>? _semanticActions
  +ValueNotifier<bool> isScrollingNotifier
  -ScrollActivity? _activity
  +double minScrollExtent
  +double maxScrollExtent
  +bool hasContentDimensions
  +double pixels
  +bool hasPixels
  +double viewportDimension
  +bool hasViewportDimension
  +bool haveDimensions
  +double devicePixelRatio
  +bool allowImplicitScrolling
  +ScrollActivity? activity
  #void absorb()
  +double setPixels()
  +void correctPixels()
  +void correctBy()
  #void forcePixels()
  #void saveScrollOffset()
  #void restoreScrollOffset()
  +void restoreOffset()
  #void saveOffset()
  #double applyBoundaryConditions()
  +bool applyViewportDimension()
  -bool _isMetricsChanged()
  +bool applyContentDimensions()
  #bool correctForNewDimensions()
  #void applyNewDimensions()
  -void _updateSemanticActions()
  -ScrollPositionAlignmentPolicy _maybeFlipAlignment()
  -ScrollPositionAlignmentPolicy _applyAxisDirectionToAlignmentPolicy()
  +Future<void> ensureVisible()
  +Future<void> animateTo()
  +void jumpTo()
  +void pointerScroll()
  +Future<void> moveTo()
  +void jumpToWithoutSettling()
  +ScrollHoldController hold()
  +Drag drag()
  +void beginActivity()
  +void didStartScroll()
  +void didUpdateScrollPositionBy()
  +void didEndScroll()
  +void didOverscrollBy()
  +void didUpdateScrollDirection()
  +void didUpdateScrollMetrics()
  +bool recommendDeferredLoading()
  +void dispose()
  +void notifyListeners()
  +void debugFillDescription()
}

"widgets::scroll_position::ScrollPosition" o-- "widgets::scroll_physics::ScrollPhysics"
"widgets::scroll_position::ScrollPosition" o-- "widgets::scroll_context::ScrollContext"
"widgets::scroll_position::ScrollPosition" o-- "widgets::scroll_metrics::ScrollMetrics"
"widgets::scroll_position::ScrollPosition" o-- "painting::basic_types::Axis"
"widgets::scroll_position::ScrollPosition" o-- "foundation::change_notifier::ValueNotifier<bool>"
"widgets::scroll_position::ScrollPosition" o-- "widgets::scroll_activity::ScrollActivity"
"rendering::viewport_offset::ViewportOffset" <|-- "widgets::scroll_position::ScrollPosition"
"widgets::scroll_metrics::ScrollMetrics" <|-- "widgets::scroll_position::ScrollPosition"

class "widgets::scroll_position::ScrollMetricsNotification" {
  +ScrollMetrics metrics
  +BuildContext context
  +ScrollUpdateNotification asScrollUpdate()
  +void debugFillDescription()
}

"widgets::scroll_position::ScrollMetricsNotification" o-- "widgets::scroll_metrics::ScrollMetrics"
"widgets::scroll_position::ScrollMetricsNotification" o-- "widgets::framework::BuildContext"
"widgets::notification_listener::Notification" <|-- "widgets::scroll_position::ScrollMetricsNotification"
"widgets::scroll_notification::ViewportNotificationMixin" <|-- "widgets::scroll_position::ScrollMetricsNotification"

class "widgets::scroll_position::ScrollPositionAlignmentPolicy" {
  +int index
  {static} +List<ScrollPositionAlignmentPolicy> values
  {static} +ScrollPositionAlignmentPolicy explicit
  {static} +ScrollPositionAlignmentPolicy keepVisibleAtEnd
  {static} +ScrollPositionAlignmentPolicy keepVisibleAtStart
}

"widgets::scroll_position::ScrollPositionAlignmentPolicy" o-- "widgets::scroll_position::ScrollPositionAlignmentPolicy"
"dart::core::Enum" <|-- "widgets::scroll_position::ScrollPositionAlignmentPolicy"

class "widgets::image_icon::ImageIcon" {
  +ImageProvider<Object>? image
  +double? size
  +Color? color
  +String? semanticLabel
  +Widget build()
  +void debugFillProperties()
}

"widgets::image_icon::ImageIcon" o-- "painting::image_provider::ImageProvider<Object>"
"widgets::image_icon::ImageIcon" o-- "dart::ui::Color"
"widgets::framework::StatelessWidget" <|-- "widgets::image_icon::ImageIcon"

class "widgets::scrollable::Scrollable" {
  +AxisDirection axisDirection
  +ScrollController? controller
  +ScrollPhysics? physics
  +Widget Function(BuildContext, ViewportOffset) viewportBuilder
  +double Function(ScrollIncrementDetails)? incrementCalculator
  +bool excludeFromSemantics
  +int? semanticChildCount
  +DragStartBehavior dragStartBehavior
  +String? restorationId
  +ScrollBehavior? scrollBehavior
  +Clip clipBehavior
  +Axis axis
  +ScrollableState createState()
  +void debugFillProperties()
  {static} +ScrollableState? maybeOf()
  {static} +ScrollableState of()
  {static} +bool recommendDeferredLoadingForContext()
  {static} +Future<void> ensureVisible()
}

"widgets::scrollable::Scrollable" o-- "painting::basic_types::AxisDirection"
"widgets::scrollable::Scrollable" o-- "widgets::scroll_controller::ScrollController"
"widgets::scrollable::Scrollable" o-- "widgets::scroll_physics::ScrollPhysics"
"widgets::scrollable::Scrollable" o-- "widgets::scrollable::Widget Function(BuildContext, ViewportOffset)"
"widgets::scrollable::Scrollable" o-- "widgets::scrollable_helpers::double Function(ScrollIncrementDetails)"
"widgets::scrollable::Scrollable" o-- "gestures::recognizer::DragStartBehavior"
"widgets::scrollable::Scrollable" o-- "widgets::scroll_configuration::ScrollBehavior"
"widgets::scrollable::Scrollable" o-- "dart::ui::Clip"
"widgets::scrollable::Scrollable" o-- "painting::basic_types::Axis"
"widgets::framework::StatefulWidget" <|-- "widgets::scrollable::Scrollable"

class "widgets::scrollable::_ScrollableScope" {
  +ScrollableState scrollable
  +ScrollPosition position
  +bool updateShouldNotify()
}

"widgets::scrollable::_ScrollableScope" o-- "widgets::scrollable::ScrollableState"
"widgets::scrollable::_ScrollableScope" o-- "widgets::scroll_position::ScrollPosition"
"widgets::framework::InheritedWidget" <|-- "widgets::scrollable::_ScrollableScope"

class "widgets::scrollable::ScrollableState" {
  -ScrollPosition? _position
  -ScrollPhysics? _physics
  -double _devicePixelRatio
  -_RestorableScrollOffset _persistedScrollOffset
  -ScrollBehavior _configuration
  -ScrollController? _fallbackScrollController
  -DeviceGestureSettings? _mediaQueryGestureSettings
  -GlobalKey<State<StatefulWidget>> _scrollSemanticsKey
  -GlobalKey<RawGestureDetectorState> _gestureDetectorKey
  -GlobalKey<State<StatefulWidget>> _ignorePointerKey
  -Map<Type, GestureRecognizerFactory<GestureRecognizer>> _gestureRecognizers
  -bool _shouldIgnorePointer
  -bool? _lastCanDrag
  -Axis? _lastAxisDirection
  -Drag? _drag
  -ScrollHoldController? _hold
  +ScrollPosition position
  +ScrollPhysics? resolvedPhysics
  +Offset deltaToScrollOrigin
  -ScrollController _effectiveScrollController
  +AxisDirection axisDirection
  +TickerProvider vsync
  +double devicePixelRatio
  +BuildContext? notificationContext
  +BuildContext storageContext
  +String? restorationId
  -void _updatePosition()
  +void restoreState()
  +void saveOffset()
  +void initState()
  +void didChangeDependencies()
  -bool _shouldUpdatePosition()
  +void didUpdateWidget()
  +void dispose()
  #void setSemanticsActions()
  #void setCanDrag()
  #void setIgnorePointer()
  -void _handleDragDown()
  -void _handleDragStart()
  -void _handleDragUpdate()
  -void _handleDragEnd()
  -void _handleDragCancel()
  -void _disposeHold()
  -void _disposeDrag()
  -double _targetScrollOffsetForPointerScroll()
  -double _pointerSignalEventDelta()
  -void _receivedPointerSignal()
  -void _handlePointerScroll()
  -bool _handleScrollMetricsNotification()
  -Widget _buildChrome()
  +Widget build()
  -dynamic Function(List<Future<void>>, ScrollableState) _performEnsureVisible()
  +void debugFillProperties()
}

"widgets::scrollable::ScrollableState" o-- "widgets::scroll_position::ScrollPosition"
"widgets::scrollable::ScrollableState" o-- "widgets::scroll_physics::ScrollPhysics"
"widgets::scrollable::ScrollableState" o-- "widgets::scrollable::_RestorableScrollOffset"
"widgets::scrollable::ScrollableState" o-- "widgets::scroll_configuration::ScrollBehavior"
"widgets::scrollable::ScrollableState" o-- "widgets::scroll_controller::ScrollController"
"widgets::scrollable::ScrollableState" o-- "gestures::gesture_settings::DeviceGestureSettings"
"widgets::scrollable::ScrollableState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::scrollable::ScrollableState" o-- "widgets::framework::GlobalKey<RawGestureDetectorState>"
"widgets::scrollable::ScrollableState" o-- "painting::basic_types::Axis"
"widgets::scrollable::ScrollableState" o-- "gestures::drag::Drag"
"widgets::scrollable::ScrollableState" o-- "widgets::scroll_activity::ScrollHoldController"
"widgets::scrollable::ScrollableState" o-- "dart::ui::Offset"
"widgets::scrollable::ScrollableState" o-- "painting::basic_types::AxisDirection"
"widgets::scrollable::ScrollableState" o-- "scheduler::ticker::TickerProvider"
"widgets::scrollable::ScrollableState" o-- "widgets::framework::BuildContext"
"widgets::framework::State" <|-- "widgets::scrollable::ScrollableState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "widgets::scrollable::ScrollableState"
"widgets::restoration::RestorationMixin" <|-- "widgets::scrollable::ScrollableState"
"widgets::scroll_context::ScrollContext" <|-- "widgets::scrollable::ScrollableState"

class "widgets::scrollable::_ScrollableSelectionHandler" {
  +ScrollableState state
  +ScrollPosition position
  +Widget child
  +SelectionRegistrar registrar
  +_ScrollableSelectionHandlerState createState()
}

"widgets::scrollable::_ScrollableSelectionHandler" o-- "widgets::scrollable::ScrollableState"
"widgets::scrollable::_ScrollableSelectionHandler" o-- "widgets::scroll_position::ScrollPosition"
"widgets::scrollable::_ScrollableSelectionHandler" o-- "widgets::framework::Widget"
"widgets::scrollable::_ScrollableSelectionHandler" o-- "rendering::selection::SelectionRegistrar"
"widgets::framework::StatefulWidget" <|-- "widgets::scrollable::_ScrollableSelectionHandler"

class "widgets::scrollable::_ScrollableSelectionHandlerState" {
  -_ScrollableSelectionContainerDelegate _selectionDelegate
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"widgets::scrollable::_ScrollableSelectionHandlerState" o-- "widgets::scrollable::_ScrollableSelectionContainerDelegate"
"widgets::framework::State" <|-- "widgets::scrollable::_ScrollableSelectionHandlerState"

class "widgets::scrollable::_ScrollableSelectionContainerDelegate" {
  {static} -double _kDefaultDragTargetSize
  {static} -double _kDefaultSelectToScrollVelocityScalar
  +ScrollableState state
  -EdgeDraggingAutoScroller _autoScroller
  -bool _scheduledLayoutChange
  -Offset? _currentDragStartRelatedToOrigin
  -Offset? _currentDragEndRelatedToOrigin
  -bool _selectionStartsInScrollable
  -ScrollPosition _position
  -Map<Selectable, double> _selectableStartEdgeUpdateRecords
  -Map<Selectable, double> _selectableEndEdgeUpdateRecords
  +ScrollPosition position
  -void _scheduleLayoutChange()
  +void didChangeSelectables()
  +SelectionResult handleClearSelection()
  +SelectionResult handleSelectionEdgeUpdate()
  -Offset _inferPositionRelatedToOrigin()
  -void _updateDragLocationsFromGeometries()
  +SelectionResult handleSelectAll()
  +SelectionResult handleSelectWord()
  +SelectionResult handleGranularlyExtendSelection()
  +SelectionResult handleDirectionallyExtendSelection()
  -void _jumpToEdge()
  -bool _globalPositionInScrollable()
  -Rect _dragTargetFromEvent()
  +SelectionResult dispatchSelectionEventToChild()
  +void ensureChildUpdated()
  +void dispose()
}

"widgets::scrollable::_ScrollableSelectionContainerDelegate" o-- "widgets::scrollable::ScrollableState"
"widgets::scrollable::_ScrollableSelectionContainerDelegate" o-- "widgets::scrollable_helpers::EdgeDraggingAutoScroller"
"widgets::scrollable::_ScrollableSelectionContainerDelegate" o-- "dart::ui::Offset"
"widgets::scrollable::_ScrollableSelectionContainerDelegate" o-- "widgets::scroll_position::ScrollPosition"
"widgets::selectable_region::MultiSelectableSelectionContainerDelegate" <|-- "widgets::scrollable::_ScrollableSelectionContainerDelegate"

class "widgets::scrollable::_ScrollSemantics" {
  +ScrollPosition position
  +bool allowImplicitScrolling
  +int? semanticChildCount
  +_RenderScrollSemantics createRenderObject()
  +void updateRenderObject()
}

"widgets::scrollable::_ScrollSemantics" o-- "widgets::scroll_position::ScrollPosition"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::scrollable::_ScrollSemantics"

class "widgets::scrollable::_RenderScrollSemantics" {
  -ScrollPosition _position
  -bool _allowImplicitScrolling
  -int? _semanticChildCount
  -SemanticsNode? _innerNode
  +ScrollPosition position
  +bool allowImplicitScrolling
  +int? semanticChildCount
  +void describeSemanticsConfiguration()
  +void assembleSemanticsNode()
  +void clearSemantics()
}

"widgets::scrollable::_RenderScrollSemantics" o-- "widgets::scroll_position::ScrollPosition"
"widgets::scrollable::_RenderScrollSemantics" o-- "semantics::semantics::SemanticsNode"
"rendering::proxy_box::RenderProxyBox" <|-- "widgets::scrollable::_RenderScrollSemantics"

class "widgets::scrollable::_RestorableScrollOffset" {
  +bool enabled
  +double? createDefaultValue()
  +void didUpdateValue()
  +double fromPrimitives()
  +Object? toPrimitives()
}

"widgets::restoration_properties::RestorableValue" <|-- "widgets::scrollable::_RestorableScrollOffset"

class "widgets::scrollable::TwoDimensionalScrollable" {
  +DiagonalDragBehavior diagonalDragBehavior
  +ScrollableDetails horizontalDetails
  +ScrollableDetails verticalDetails
  +Widget Function(BuildContext, ViewportOffset, ViewportOffset) viewportBuilder
  +double Function(ScrollIncrementDetails)? incrementCalculator
  +String? restorationId
  +bool excludeFromSemantics
  +DragStartBehavior dragStartBehavior
  +State<TwoDimensionalScrollable> createState()
  {static} +TwoDimensionalScrollableState? maybeOf()
  {static} +TwoDimensionalScrollableState of()
}

"widgets::scrollable::TwoDimensionalScrollable" o-- "widgets::scrollable::DiagonalDragBehavior"
"widgets::scrollable::TwoDimensionalScrollable" o-- "widgets::scrollable_helpers::ScrollableDetails"
"widgets::scrollable::TwoDimensionalScrollable" o-- "widgets::scrollable::Widget Function(BuildContext, ViewportOffset, ViewportOffset)"
"widgets::scrollable::TwoDimensionalScrollable" o-- "widgets::scrollable_helpers::double Function(ScrollIncrementDetails)"
"widgets::scrollable::TwoDimensionalScrollable" o-- "gestures::recognizer::DragStartBehavior"
"widgets::framework::StatefulWidget" <|-- "widgets::scrollable::TwoDimensionalScrollable"

class "widgets::scrollable::TwoDimensionalScrollableState" {
  -ScrollController? _verticalFallbackController
  -ScrollController? _horizontalFallbackController
  -GlobalKey<ScrollableState> _verticalOuterScrollableKey
  -GlobalKey<ScrollableState> _horizontalInnerScrollableKey
  +ScrollableState verticalScrollable
  +ScrollableState horizontalScrollable
  +void initState()
  +void didUpdateWidget()
  +Widget build()
  +void dispose()
}

"widgets::scrollable::TwoDimensionalScrollableState" o-- "widgets::scroll_controller::ScrollController"
"widgets::scrollable::TwoDimensionalScrollableState" o-- "widgets::framework::GlobalKey<ScrollableState>"
"widgets::scrollable::TwoDimensionalScrollableState" o-- "widgets::scrollable::ScrollableState"
"widgets::framework::State" <|-- "widgets::scrollable::TwoDimensionalScrollableState"

class "widgets::scrollable::_TwoDimensionalScrollableScope" {
  +TwoDimensionalScrollableState twoDimensionalScrollable
  +bool updateShouldNotify()
}

"widgets::scrollable::_TwoDimensionalScrollableScope" o-- "widgets::scrollable::TwoDimensionalScrollableState"
"widgets::framework::InheritedWidget" <|-- "widgets::scrollable::_TwoDimensionalScrollableScope"

class "widgets::scrollable::_VerticalOuterDimension" {
  +DiagonalDragBehavior diagonalDragBehavior
  +_VerticalOuterDimensionState createState()
}

"widgets::scrollable::_VerticalOuterDimension" o-- "widgets::scrollable::DiagonalDragBehavior"
"widgets::scrollable::Scrollable" <|-- "widgets::scrollable::_VerticalOuterDimension"

class "widgets::scrollable::_VerticalOuterDimensionState" {
  +DiagonalDragBehavior diagonalDragBehavior
  -dynamic Function(List<Future<void>>, ScrollableState) _performEnsureVisible()
  +void setCanDrag()
  -Widget _buildChrome()
}

"widgets::scrollable::_VerticalOuterDimensionState" o-- "widgets::scrollable::DiagonalDragBehavior"
"widgets::scrollable::ScrollableState" <|-- "widgets::scrollable::_VerticalOuterDimensionState"

class "widgets::scrollable::_HorizontalInnerDimension" {
  +DiagonalDragBehavior diagonalDragBehavior
  +_HorizontalInnerDimensionState createState()
}

"widgets::scrollable::_HorizontalInnerDimension" o-- "widgets::scrollable::DiagonalDragBehavior"
"widgets::scrollable::Scrollable" <|-- "widgets::scrollable::_HorizontalInnerDimension"

class "widgets::scrollable::_HorizontalInnerDimensionState" {
  +ScrollableState verticalScrollable
  +Axis? lockedAxis
  +Offset? lastDragOffset
  +DiagonalDragBehavior diagonalDragBehavior
  +void didChangeDependencies()
  -dynamic Function(List<Future<void>>, ScrollableState) _performEnsureVisible()
  -void _evaluateLockedAxis()
  -void _handleDragDown()
  -void _handleDragStart()
  -void _handleDragUpdate()
  -void _handleDragEnd()
  -void _handleDragCancel()
  +void setCanDrag()
  -Widget _buildChrome()
}

"widgets::scrollable::_HorizontalInnerDimensionState" o-- "widgets::scrollable::ScrollableState"
"widgets::scrollable::_HorizontalInnerDimensionState" o-- "painting::basic_types::Axis"
"widgets::scrollable::_HorizontalInnerDimensionState" o-- "dart::ui::Offset"
"widgets::scrollable::_HorizontalInnerDimensionState" o-- "widgets::scrollable::DiagonalDragBehavior"
"widgets::scrollable::ScrollableState" <|-- "widgets::scrollable::_HorizontalInnerDimensionState"

class "widgets::scrollable::DiagonalDragBehavior" {
  +int index
  {static} +List<DiagonalDragBehavior> values
  {static} +DiagonalDragBehavior none
  {static} +DiagonalDragBehavior weightedEvent
  {static} +DiagonalDragBehavior weightedContinuous
  {static} +DiagonalDragBehavior free
}

"widgets::scrollable::DiagonalDragBehavior" o-- "widgets::scrollable::DiagonalDragBehavior"
"dart::core::Enum" <|-- "widgets::scrollable::DiagonalDragBehavior"

class "widgets::orientation_builder::OrientationBuilder" {
  +Widget Function(BuildContext, Orientation) builder
  -Widget _buildWithConstraints()
  +Widget build()
}

"widgets::orientation_builder::OrientationBuilder" o-- "widgets::orientation_builder::Widget Function(BuildContext, Orientation)"
"widgets::framework::StatelessWidget" <|-- "widgets::orientation_builder::OrientationBuilder"

class "widgets::focus_manager::_Autofocus" {
  +FocusScopeNode scope
  +FocusNode autofocusNode
  +void applyIfValid()
}

"widgets::focus_manager::_Autofocus" o-- "widgets::focus_manager::FocusScopeNode"
"widgets::focus_manager::_Autofocus" o-- "widgets::focus_manager::FocusNode"

class "widgets::focus_manager::FocusAttachment" {
  -FocusNode _node
  +bool isAttached
  +void detach()
  +void reparent()
}

"widgets::focus_manager::FocusAttachment" o-- "widgets::focus_manager::FocusNode"

class "widgets::focus_manager::FocusNode" {
  -bool _skipTraversal
  -bool _canRequestFocus
  -bool _descendantsAreFocusable
  -bool _descendantsAreTraversable
  -BuildContext? _context
  +KeyEventResult Function(FocusNode, RawKeyEvent)? onKey
  +KeyEventResult Function(FocusNode, KeyEvent)? onKeyEvent
  -FocusManager? _manager
  -List<FocusNode>? _ancestors
  -List<FocusNode>? _descendants
  -bool _hasKeyboardToken
  -FocusNode? _parent
  -List<FocusNode> _children
  -String? _debugLabel
  -FocusAttachment? _attachment
  -bool _requestFocusWhenReparented
  +bool skipTraversal
  +bool canRequestFocus
  +bool descendantsAreFocusable
  +bool descendantsAreTraversable
  +BuildContext? context
  +FocusNode? parent
  +Iterable<FocusNode> children
  +Iterable<FocusNode> traversalChildren
  +String? debugLabel
  +Iterable<FocusNode> descendants
  +Iterable<FocusNode> traversalDescendants
  +Iterable<FocusNode> ancestors
  +bool hasFocus
  +bool hasPrimaryFocus
  +FocusHighlightMode highlightMode
  +FocusScopeNode? nearestScope
  +FocusScopeNode? enclosingScope
  +Size size
  +Offset offset
  +Rect rect
  +void unfocus()
  +bool consumeKeyboardToken()
  -void _markNextFocus()
  -void _removeChild()
  -void _updateManager()
  -void _reparent()
  +FocusAttachment attach()
  +void dispose()
  -void _notify()
  +void requestFocus()
  -void _doRequestFocus()
  -void _setAsFocusedChildForScope()
  +bool nextFocus()
  +bool previousFocus()
  +bool focusInDirection()
  +void debugFillProperties()
  +List<DiagnosticsNode> debugDescribeChildren()
  +String toStringShort()
}

"widgets::focus_manager::FocusNode" o-- "widgets::framework::BuildContext"
"widgets::focus_manager::FocusNode" o-- "widgets::focus_manager::KeyEventResult Function(FocusNode, RawKeyEvent)"
"widgets::focus_manager::FocusNode" o-- "widgets::focus_manager::KeyEventResult Function(FocusNode, KeyEvent)"
"widgets::focus_manager::FocusNode" o-- "widgets::focus_manager::FocusManager"
"widgets::focus_manager::FocusNode" o-- "widgets::focus_manager::FocusNode"
"widgets::focus_manager::FocusNode" o-- "widgets::focus_manager::FocusAttachment"
"widgets::focus_manager::FocusNode" o-- "widgets::focus_manager::FocusHighlightMode"
"widgets::focus_manager::FocusNode" o-- "widgets::focus_manager::FocusScopeNode"
"widgets::focus_manager::FocusNode" o-- "dart::ui::Size"
"widgets::focus_manager::FocusNode" o-- "dart::ui::Offset"
"widgets::focus_manager::FocusNode" o-- "dart::ui::Rect"
"foundation::diagnostics::DiagnosticableTreeMixin" <|-- "widgets::focus_manager::FocusNode"
"foundation::change_notifier::ChangeNotifier" <|-- "widgets::focus_manager::FocusNode"

class "widgets::focus_manager::FocusScopeNode" {
  +TraversalEdgeBehavior traversalEdgeBehavior
  -List<FocusNode> _focusedChildren
  +FocusScopeNode nearestScope
  +bool isFirstFocus
  +FocusNode? focusedChild
  +Iterable<FocusNode> traversalChildren
  +Iterable<FocusNode> traversalDescendants
  +void setFirstFocus()
  +void autofocus()
  -void _doRequestFocus()
  +void debugFillProperties()
}

"widgets::focus_manager::FocusScopeNode" o-- "widgets::focus_traversal::TraversalEdgeBehavior"
"widgets::focus_manager::FocusScopeNode" o-- "widgets::focus_manager::FocusScopeNode"
"widgets::focus_manager::FocusScopeNode" o-- "widgets::focus_manager::FocusNode"
"widgets::focus_manager::FocusNode" <|-- "widgets::focus_manager::FocusScopeNode"

class "widgets::focus_manager::FocusManager" {
  -_HighlightModeManager _highlightManager
  +FocusScopeNode rootScope
  -FocusNode? _primaryFocus
  -Set<FocusNode> _dirtyNodes
  -FocusNode? _markedForFocus
  -List<_Autofocus> _pendingAutofocuses
  -bool _haveScheduledUpdate
  {static} +FocusManager instance
  +FocusHighlightStrategy highlightStrategy
  +FocusHighlightMode highlightMode
  +FocusNode? primaryFocus
  +void registerGlobalHandlers()
  +void dispose()
  +void addHighlightModeListener()
  +void removeHighlightModeListener()
  -void _markDetached()
  -void _markPropertiesChanged()
  -void _markNextFocus()
  -void _markNeedsUpdate()
  +void applyFocusChangesIfNeeded()
  +List<DiagnosticsNode> debugDescribeChildren()
  +void debugFillProperties()
}

"widgets::focus_manager::FocusManager" o-- "widgets::focus_manager::_HighlightModeManager"
"widgets::focus_manager::FocusManager" o-- "widgets::focus_manager::FocusScopeNode"
"widgets::focus_manager::FocusManager" o-- "widgets::focus_manager::FocusNode"
"widgets::focus_manager::FocusManager" o-- "widgets::focus_manager::FocusManager"
"widgets::focus_manager::FocusManager" o-- "widgets::focus_manager::FocusHighlightStrategy"
"widgets::focus_manager::FocusManager" o-- "widgets::focus_manager::FocusHighlightMode"
"foundation::diagnostics::DiagnosticableTreeMixin" <|-- "widgets::focus_manager::FocusManager"
"foundation::change_notifier::ChangeNotifier" <|-- "widgets::focus_manager::FocusManager"

class "widgets::focus_manager::_HighlightModeManager" {
  -bool? _lastInteractionWasTouch
  -FocusHighlightMode? _highlightMode
  -FocusHighlightStrategy _strategy
  -HashedObserverList<void Function(FocusHighlightMode)> _listeners
  +FocusHighlightMode highlightMode
  +FocusHighlightStrategy strategy
  {static} -FocusHighlightMode _defaultModeForPlatform
  +void addListener()
  +void removeListener()
  +void registerGlobalHandlers()
  +void dispose()
  +void notifyListeners()
  +void handlePointerEvent()
  +bool handleKeyMessage()
  +void updateMode()
}

"widgets::focus_manager::_HighlightModeManager" o-- "widgets::focus_manager::FocusHighlightMode"
"widgets::focus_manager::_HighlightModeManager" o-- "widgets::focus_manager::FocusHighlightStrategy"
"widgets::focus_manager::_HighlightModeManager" o-- "foundation::observer_list::HashedObserverList<void Function(FocusHighlightMode)>"

class "widgets::focus_manager::KeyEventResult" {
  +int index
  {static} +List<KeyEventResult> values
  {static} +KeyEventResult handled
  {static} +KeyEventResult ignored
  {static} +KeyEventResult skipRemainingHandlers
}

"widgets::focus_manager::KeyEventResult" o-- "widgets::focus_manager::KeyEventResult"
"dart::core::Enum" <|-- "widgets::focus_manager::KeyEventResult"

class "widgets::focus_manager::UnfocusDisposition" {
  +int index
  {static} +List<UnfocusDisposition> values
  {static} +UnfocusDisposition scope
  {static} +UnfocusDisposition previouslyFocusedChild
}

"widgets::focus_manager::UnfocusDisposition" o-- "widgets::focus_manager::UnfocusDisposition"
"dart::core::Enum" <|-- "widgets::focus_manager::UnfocusDisposition"

class "widgets::focus_manager::FocusHighlightMode" {
  +int index
  {static} +List<FocusHighlightMode> values
  {static} +FocusHighlightMode touch
  {static} +FocusHighlightMode traditional
}

"widgets::focus_manager::FocusHighlightMode" o-- "widgets::focus_manager::FocusHighlightMode"
"dart::core::Enum" <|-- "widgets::focus_manager::FocusHighlightMode"

class "widgets::focus_manager::FocusHighlightStrategy" {
  +int index
  {static} +List<FocusHighlightStrategy> values
  {static} +FocusHighlightStrategy automatic
  {static} +FocusHighlightStrategy alwaysTouch
  {static} +FocusHighlightStrategy alwaysTraditional
}

"widgets::focus_manager::FocusHighlightStrategy" o-- "widgets::focus_manager::FocusHighlightStrategy"
"dart::core::Enum" <|-- "widgets::focus_manager::FocusHighlightStrategy"

class "widgets::focus_traversal::_FocusTraversalGroupInfo" {
  +FocusNode? groupNode
  +FocusTraversalPolicy policy
  +List<FocusNode> members
}

"widgets::focus_traversal::_FocusTraversalGroupInfo" o-- "widgets::focus_manager::FocusNode"
"widgets::focus_traversal::_FocusTraversalGroupInfo" o-- "widgets::focus_traversal::FocusTraversalPolicy"

abstract class "widgets::focus_traversal::FocusTraversalPolicy" {
  +void Function(FocusNode, {double? alignment, ScrollPositionAlignmentPolicy? alignmentPolicy, Curve? curve, Duration? duration}) requestFocusCallback
  {static} +void defaultTraversalRequestFocusCallback()
  +FocusNode? findFirstFocus()
  +FocusNode findLastFocus()
  -FocusNode _findInitialFocus()
  +FocusNode? findFirstFocusInDirection()
  +void invalidateScopeData()
  +void changedScope()
  +bool next()
  +bool previous()
  +bool inDirection()
  #Iterable<FocusNode> sortDescendants()
  {static} -bool _canRequestTraversalFocus()
  {static} -Iterable<FocusNode> _getDescendantsWithoutExpandingScope()
  {static} -Map<FocusNode?, _FocusTraversalGroupInfo> _findGroups()
  -List<FocusNode> _sortAllDescendants()
  -bool _moveFocus()
}

"widgets::focus_traversal::FocusTraversalPolicy" o-- "widgets::focus_traversal::void Function(FocusNode, {double alignment, ScrollPositionAlignmentPolicy alignmentPolicy, Curve curve, Duration duration})"
"foundation::diagnostics::Diagnosticable" <|-- "widgets::focus_traversal::FocusTraversalPolicy"

class "widgets::focus_traversal::_DirectionalPolicyDataEntry" {
  +TraversalDirection direction
  +FocusNode node
}

"widgets::focus_traversal::_DirectionalPolicyDataEntry" o-- "widgets::focus_traversal::TraversalDirection"
"widgets::focus_traversal::_DirectionalPolicyDataEntry" o-- "widgets::focus_manager::FocusNode"

class "widgets::focus_traversal::_DirectionalPolicyData" {
  +List<_DirectionalPolicyDataEntry> history
}

class "widgets::focus_traversal::WidgetOrderTraversalPolicy" {
  +Iterable<FocusNode> sortDescendants()
}

"widgets::focus_traversal::FocusTraversalPolicy" <|-- "widgets::focus_traversal::WidgetOrderTraversalPolicy"
"widgets::focus_traversal::DirectionalFocusTraversalPolicyMixin" <|-- "widgets::focus_traversal::WidgetOrderTraversalPolicy"

class "widgets::focus_traversal::_ReadingOrderSortData" {
  +TextDirection? directionality
  +Rect rect
  +FocusNode node
  -List<Directionality>? _directionalAncestors
  +Iterable<Directionality> directionalAncestors
  {static} -TextDirection? _findDirectionality()
  {static} +TextDirection? commonDirectionalityOf()
  {static} +void sortWithDirectionality()
  +void debugFillProperties()
}

"widgets::focus_traversal::_ReadingOrderSortData" o-- "dart::ui::TextDirection"
"widgets::focus_traversal::_ReadingOrderSortData" o-- "dart::ui::Rect"
"widgets::focus_traversal::_ReadingOrderSortData" o-- "widgets::focus_manager::FocusNode"
"foundation::diagnostics::Diagnosticable" <|-- "widgets::focus_traversal::_ReadingOrderSortData"

class "widgets::focus_traversal::_ReadingOrderDirectionalGroupData" {
  +List<_ReadingOrderSortData> members
  -Rect? _rect
  -List<Directionality>? _memberAncestors
  +TextDirection? directionality
  +Rect rect
  +List<Directionality> memberAncestors
  {static} +void sortWithDirectionality()
  +void debugFillProperties()
}

"widgets::focus_traversal::_ReadingOrderDirectionalGroupData" o-- "dart::ui::Rect"
"widgets::focus_traversal::_ReadingOrderDirectionalGroupData" o-- "dart::ui::TextDirection"
"foundation::diagnostics::Diagnosticable" <|-- "widgets::focus_traversal::_ReadingOrderDirectionalGroupData"

class "widgets::focus_traversal::ReadingOrderTraversalPolicy" {
  -List<_ReadingOrderDirectionalGroupData> _collectDirectionalityGroups()
  -_ReadingOrderSortData _pickNext()
  +Iterable<FocusNode> sortDescendants()
}

"widgets::focus_traversal::FocusTraversalPolicy" <|-- "widgets::focus_traversal::ReadingOrderTraversalPolicy"
"widgets::focus_traversal::DirectionalFocusTraversalPolicyMixin" <|-- "widgets::focus_traversal::ReadingOrderTraversalPolicy"

abstract class "widgets::focus_traversal::FocusOrder" {
  +int compareTo()
  #int doCompare()
}

"foundation::diagnostics::Diagnosticable" <|-- "widgets::focus_traversal::FocusOrder"
"dart::core::Comparable" <|-- "widgets::focus_traversal::FocusOrder"

class "widgets::focus_traversal::NumericFocusOrder" {
  +double order
  +int doCompare()
  +void debugFillProperties()
}

"widgets::focus_traversal::FocusOrder" <|-- "widgets::focus_traversal::NumericFocusOrder"

class "widgets::focus_traversal::LexicalFocusOrder" {
  +String order
  +int doCompare()
  +void debugFillProperties()
}

"widgets::focus_traversal::FocusOrder" <|-- "widgets::focus_traversal::LexicalFocusOrder"

class "widgets::focus_traversal::_OrderedFocusInfo" {
  +FocusNode node
  +FocusOrder order
}

"widgets::focus_traversal::_OrderedFocusInfo" o-- "widgets::focus_manager::FocusNode"
"widgets::focus_traversal::_OrderedFocusInfo" o-- "widgets::focus_traversal::FocusOrder"

class "widgets::focus_traversal::OrderedTraversalPolicy" {
  +FocusTraversalPolicy? secondary
  +Iterable<FocusNode> sortDescendants()
}

"widgets::focus_traversal::OrderedTraversalPolicy" o-- "widgets::focus_traversal::FocusTraversalPolicy"
"widgets::focus_traversal::FocusTraversalPolicy" <|-- "widgets::focus_traversal::OrderedTraversalPolicy"
"widgets::focus_traversal::DirectionalFocusTraversalPolicyMixin" <|-- "widgets::focus_traversal::OrderedTraversalPolicy"

class "widgets::focus_traversal::FocusTraversalOrder" {
  +FocusOrder order
  {static} +FocusOrder of()
  {static} +FocusOrder? maybeOf()
  +bool updateShouldNotify()
  +void debugFillProperties()
}

"widgets::focus_traversal::FocusTraversalOrder" o-- "widgets::focus_traversal::FocusOrder"
"widgets::framework::InheritedWidget" <|-- "widgets::focus_traversal::FocusTraversalOrder"

class "widgets::focus_traversal::FocusTraversalGroup" {
  +FocusTraversalPolicy policy
  +bool descendantsAreFocusable
  +bool descendantsAreTraversable
  +Widget child
  {static} +FocusTraversalPolicy? maybeOfNode()
  {static} -_FocusTraversalGroupNode? _getGroupNode()
  {static} +FocusTraversalPolicy of()
  {static} +FocusTraversalPolicy? maybeOf()
  +State<FocusTraversalGroup> createState()
  +void debugFillProperties()
}

"widgets::focus_traversal::FocusTraversalGroup" o-- "widgets::focus_traversal::FocusTraversalPolicy"
"widgets::focus_traversal::FocusTraversalGroup" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::focus_traversal::FocusTraversalGroup"

class "widgets::focus_traversal::_FocusTraversalGroupNode" {
  +FocusTraversalPolicy policy
}

"widgets::focus_traversal::_FocusTraversalGroupNode" o-- "widgets::focus_traversal::FocusTraversalPolicy"
"widgets::focus_manager::FocusNode" <|-- "widgets::focus_traversal::_FocusTraversalGroupNode"

class "widgets::focus_traversal::_FocusTraversalGroupState" {
  +_FocusTraversalGroupNode focusNode
  +void dispose()
  +void didUpdateWidget()
  +Widget build()
}

"widgets::focus_traversal::_FocusTraversalGroupState" o-- "widgets::focus_traversal::_FocusTraversalGroupNode"
"widgets::framework::State" <|-- "widgets::focus_traversal::_FocusTraversalGroupState"

class "widgets::focus_traversal::RequestFocusIntent" {
  +void Function(FocusNode, {double? alignment, ScrollPositionAlignmentPolicy? alignmentPolicy, Curve? curve, Duration? duration}) requestFocusCallback
  +FocusNode focusNode
}

"widgets::focus_traversal::RequestFocusIntent" o-- "widgets::focus_traversal::void Function(FocusNode, {double alignment, ScrollPositionAlignmentPolicy alignmentPolicy, Curve curve, Duration duration})"
"widgets::focus_traversal::RequestFocusIntent" o-- "widgets::focus_manager::FocusNode"
"widgets::actions::Intent" <|-- "widgets::focus_traversal::RequestFocusIntent"

class "widgets::focus_traversal::RequestFocusAction" {
  +void invoke()
}

"widgets::actions::Action" <|-- "widgets::focus_traversal::RequestFocusAction"

class "widgets::focus_traversal::NextFocusIntent" {
}

"widgets::actions::Intent" <|-- "widgets::focus_traversal::NextFocusIntent"

class "widgets::focus_traversal::NextFocusAction" {
  +bool invoke()
  +KeyEventResult toKeyEventResult()
}

"widgets::actions::Action" <|-- "widgets::focus_traversal::NextFocusAction"

class "widgets::focus_traversal::PreviousFocusIntent" {
}

"widgets::actions::Intent" <|-- "widgets::focus_traversal::PreviousFocusIntent"

class "widgets::focus_traversal::PreviousFocusAction" {
  +bool invoke()
  +KeyEventResult toKeyEventResult()
}

"widgets::actions::Action" <|-- "widgets::focus_traversal::PreviousFocusAction"

class "widgets::focus_traversal::DirectionalFocusIntent" {
  +TraversalDirection direction
  +bool ignoreTextFields
  +void debugFillProperties()
}

"widgets::focus_traversal::DirectionalFocusIntent" o-- "widgets::focus_traversal::TraversalDirection"
"widgets::actions::Intent" <|-- "widgets::focus_traversal::DirectionalFocusIntent"

class "widgets::focus_traversal::DirectionalFocusAction" {
  -bool _isForTextField
  +void invoke()
}

"widgets::actions::Action" <|-- "widgets::focus_traversal::DirectionalFocusAction"

class "widgets::focus_traversal::ExcludeFocusTraversal" {
  +bool excluding
  +Widget child
  +Widget build()
}

"widgets::focus_traversal::ExcludeFocusTraversal" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::focus_traversal::ExcludeFocusTraversal"

class "widgets::focus_traversal::TraversalDirection" {
  +int index
  {static} +List<TraversalDirection> values
  {static} +TraversalDirection up
  {static} +TraversalDirection right
  {static} +TraversalDirection down
  {static} +TraversalDirection left
}

"widgets::focus_traversal::TraversalDirection" o-- "widgets::focus_traversal::TraversalDirection"
"dart::core::Enum" <|-- "widgets::focus_traversal::TraversalDirection"

class "widgets::focus_traversal::TraversalEdgeBehavior" {
  +int index
  {static} +List<TraversalEdgeBehavior> values
  {static} +TraversalEdgeBehavior closedLoop
  {static} +TraversalEdgeBehavior leaveFlutterView
}

"widgets::focus_traversal::TraversalEdgeBehavior" o-- "widgets::focus_traversal::TraversalEdgeBehavior"
"dart::core::Enum" <|-- "widgets::focus_traversal::TraversalEdgeBehavior"

abstract class "widgets::focus_traversal::DirectionalFocusTraversalPolicyMixin" {
  -Map<FocusScopeNode, _DirectionalPolicyData> _policyData
  +void invalidateScopeData()
  +void changedScope()
  +FocusNode? findFirstFocusInDirection()
  -FocusNode? _sortAndFindInitial()
  {static} -int _verticalCompare()
  {static} -int _horizontalCompare()
  {static} -Iterable<FocusNode> _sortByDistancePreferVertical()
  {static} -Iterable<FocusNode> _sortByDistancePreferHorizontal()
  {static} -int _verticalCompareClosestEdge()
  {static} -int _horizontalCompareClosestEdge()
  {static} -Iterable<FocusNode> _sortClosestEdgesByDistancePreferHorizontal()
  {static} -Iterable<FocusNode> _sortClosestEdgesByDistancePreferVertical()
  -Iterable<FocusNode> _sortAndFilterHorizontally()
  -Iterable<FocusNode> _sortAndFilterVertically()
  -bool _popPolicyDataIfNeeded()
  -void _pushPolicyData()
  +bool inDirection()
}

class "widgets::color_filter::ColorFiltered" {
  +ColorFilter colorFilter
  +RenderObject createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::color_filter::ColorFiltered" o-- "dart::ui::ColorFilter"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::color_filter::ColorFiltered"

class "widgets::color_filter::_ColorFilterRenderObject" {
  -ColorFilter _colorFilter
  +ColorFilter colorFilter
  +bool alwaysNeedsCompositing
  +void paint()
}

"widgets::color_filter::_ColorFilterRenderObject" o-- "dart::ui::ColorFilter"
"rendering::proxy_box::RenderProxyBox" <|-- "widgets::color_filter::_ColorFilterRenderObject"

class "widgets::title::Title" {
  +String title
  +Color color
  +Widget child
  +Widget build()
  +void debugFillProperties()
}

"widgets::title::Title" o-- "dart::ui::Color"
"widgets::title::Title" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::title::Title"

class "widgets::animated_switcher::_ChildEntry" {
  +AnimationController controller
  +Animation<double> animation
  +Widget transition
  +Widget widgetChild
  +String toString()
}

"widgets::animated_switcher::_ChildEntry" o-- "animation::animation_controller::AnimationController"
"widgets::animated_switcher::_ChildEntry" o-- "animation::animation::Animation<double>"
"widgets::animated_switcher::_ChildEntry" o-- "widgets::framework::Widget"

class "widgets::animated_switcher::AnimatedSwitcher" {
  +Widget? child
  +Duration duration
  +Duration? reverseDuration
  +Curve switchInCurve
  +Curve switchOutCurve
  +Widget Function(Widget, Animation<double>) transitionBuilder
  +Widget Function(Widget?, List<Widget>) layoutBuilder
  +State<AnimatedSwitcher> createState()
  {static} +Widget defaultTransitionBuilder()
  {static} +Widget defaultLayoutBuilder()
  +void debugFillProperties()
}

"widgets::animated_switcher::AnimatedSwitcher" o-- "widgets::framework::Widget"
"widgets::animated_switcher::AnimatedSwitcher" o-- "animation::curves::Curve"
"widgets::animated_switcher::AnimatedSwitcher" o-- "widgets::animated_switcher::Widget Function(Widget, Animation<double>)"
"widgets::animated_switcher::AnimatedSwitcher" o-- "widgets::animated_switcher::Widget Function(Widget, List<Widget>)"
"widgets::framework::StatefulWidget" <|-- "widgets::animated_switcher::AnimatedSwitcher"

class "widgets::animated_switcher::_AnimatedSwitcherState" {
  -_ChildEntry? _currentEntry
  -Set<_ChildEntry> _outgoingEntries
  -List<Widget>? _outgoingWidgets
  -int _childNumber
  +void initState()
  +void didUpdateWidget()
  -void _addEntryForNewChild()
  -_ChildEntry _newEntry()
  -void _markChildWidgetCacheAsDirty()
  -void _updateTransitionForEntry()
  -void _rebuildOutgoingWidgetsIfNeeded()
  +void dispose()
  +Widget build()
}

"widgets::animated_switcher::_AnimatedSwitcherState" o-- "widgets::animated_switcher::_ChildEntry"
"widgets::framework::State" <|-- "widgets::animated_switcher::_AnimatedSwitcherState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "widgets::animated_switcher::_AnimatedSwitcherState"

class "widgets::text_selection_toolbar_anchors::TextSelectionToolbarAnchors" {
  +Offset primaryAnchor
  +Offset? secondaryAnchor
}

"widgets::text_selection_toolbar_anchors::TextSelectionToolbarAnchors" o-- "dart::ui::Offset"

class "widgets::sliver_prototype_extent_list::SliverPrototypeExtentList" {
  +Widget prototypeItem
  +RenderSliverMultiBoxAdaptor createRenderObject()
  +SliverMultiBoxAdaptorElement createElement()
}

"widgets::sliver_prototype_extent_list::SliverPrototypeExtentList" o-- "widgets::framework::Widget"
"widgets::sliver::SliverMultiBoxAdaptorWidget" <|-- "widgets::sliver_prototype_extent_list::SliverPrototypeExtentList"

class "widgets::sliver_prototype_extent_list::_SliverPrototypeExtentListElement" {
  -Element? _prototype
  {static} -Object _prototypeSlot
  +_RenderSliverPrototypeExtentList renderObject
  +void insertRenderObjectChild()
  +void didAdoptChild()
  +void moveRenderObjectChild()
  +void removeRenderObjectChild()
  +void visitChildren()
  +void mount()
  +void update()
}

"widgets::sliver_prototype_extent_list::_SliverPrototypeExtentListElement" o-- "widgets::framework::Element"
"widgets::sliver_prototype_extent_list::_SliverPrototypeExtentListElement" o-- "widgets::sliver_prototype_extent_list::_RenderSliverPrototypeExtentList"
"widgets::sliver::SliverMultiBoxAdaptorElement" <|-- "widgets::sliver_prototype_extent_list::_SliverPrototypeExtentListElement"

class "widgets::sliver_prototype_extent_list::_RenderSliverPrototypeExtentList" {
  -RenderBox? _child
  +RenderBox? child
  +double itemExtent
  +void performLayout()
  +void attach()
  +void detach()
  +void redepthChildren()
  +void visitChildren()
}

"widgets::sliver_prototype_extent_list::_RenderSliverPrototypeExtentList" o-- "rendering::box::RenderBox"
"rendering::sliver_fixed_extent_list::RenderSliverFixedExtentBoxAdaptor" <|-- "widgets::sliver_prototype_extent_list::_RenderSliverPrototypeExtentList"

class "widgets::table::TableRow" {
  +LocalKey? key
  +Decoration? decoration
  +List<Widget> children
  +String toString()
}

"widgets::table::TableRow" o-- "foundation::key::LocalKey"
"widgets::table::TableRow" o-- "painting::decoration::Decoration"

class "widgets::table::_TableElementRow" {
  +LocalKey? key
  +List<Element> children
}

"widgets::table::_TableElementRow" o-- "foundation::key::LocalKey"

class "widgets::table::Table" {
  +List<TableRow> children
  +Map<int, TableColumnWidth>? columnWidths
  +TableColumnWidth defaultColumnWidth
  +TextDirection? textDirection
  +TableBorder? border
  +TableCellVerticalAlignment defaultVerticalAlignment
  +TextBaseline? textBaseline
  -List<Decoration?>? _rowDecorations
  +RenderObjectElement createElement()
  +RenderTable createRenderObject()
  +void updateRenderObject()
}

"widgets::table::Table" o-- "rendering::table::TableColumnWidth"
"widgets::table::Table" o-- "dart::ui::TextDirection"
"widgets::table::Table" o-- "rendering::table_border::TableBorder"
"widgets::table::Table" o-- "rendering::table::TableCellVerticalAlignment"
"widgets::table::Table" o-- "dart::ui::TextBaseline"
"widgets::framework::RenderObjectWidget" <|-- "widgets::table::Table"

class "widgets::table::_TableElement" {
  -List<_TableElementRow> _children
  -bool _doingMountOrUpdate
  -Set<Element> _forgottenChildren
  +RenderTable renderObject
  +void mount()
  +void insertRenderObjectChild()
  +void moveRenderObjectChild()
  +void removeRenderObjectChild()
  +void update()
  -void _updateRenderObjectChildren()
  +void visitChildren()
  +bool forgetChild()
}

"widgets::table::_TableElement" o-- "rendering::table::RenderTable"
"widgets::framework::RenderObjectElement" <|-- "widgets::table::_TableElement"

class "widgets::table::TableCell" {
  +TableCellVerticalAlignment? verticalAlignment
  +Type debugTypicalAncestorWidgetClass
  +void applyParentData()
  +void debugFillProperties()
}

"widgets::table::TableCell" o-- "rendering::table::TableCellVerticalAlignment"
"widgets::framework::ParentDataWidget" <|-- "widgets::table::TableCell"

class "widgets::table::_TableSlot" {
  +int column
  +int row
  +int hashCode
  +bool ==()
  +void debugFillProperties()
}

"foundation::diagnostics::Diagnosticable" <|-- "widgets::table::_TableSlot"

abstract class "widgets::inherited_model::InheritedModel" {
  +InheritedModelElement<T> createElement()
  #bool updateShouldNotifyDependent()
  #bool isSupportedAspect()
  {static} -void _findModels()
  {static} +T? inheritFrom()
}

"widgets::framework::InheritedWidget" <|-- "widgets::inherited_model::InheritedModel"

class "widgets::inherited_model::InheritedModelElement" {
  +void updateDependencies()
  +void notifyDependent()
}

"widgets::framework::InheritedElement" <|-- "widgets::inherited_model::InheritedModelElement"

class "widgets::snapshot_widget::SnapshotController" {
  -bool _allowSnapshotting
  +bool allowSnapshotting
  +void clear()
}

"foundation::change_notifier::ChangeNotifier" <|-- "widgets::snapshot_widget::SnapshotController"

class "widgets::snapshot_widget::SnapshotWidget" {
  +SnapshotController controller
  +SnapshotMode mode
  +bool autoresize
  +SnapshotPainter painter
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"widgets::snapshot_widget::SnapshotWidget" o-- "widgets::snapshot_widget::SnapshotController"
"widgets::snapshot_widget::SnapshotWidget" o-- "widgets::snapshot_widget::SnapshotMode"
"widgets::snapshot_widget::SnapshotWidget" o-- "widgets::snapshot_widget::SnapshotPainter"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::snapshot_widget::SnapshotWidget"

class "widgets::snapshot_widget::_RenderSnapshotWidget" {
  -double _devicePixelRatio
  -SnapshotPainter _painter
  -SnapshotController _controller
  -SnapshotMode _mode
  -bool _autoresize
  -Image? _childRaster
  -Size? _childRasterSize
  -bool _disableSnapshotAttempt
  -Size? _lastCachedSize
  +double devicePixelRatio
  +SnapshotPainter painter
  +SnapshotController controller
  +SnapshotMode mode
  +bool autoresize
  +void attach()
  +void detach()
  +void dispose()
  -void _onRasterValueChanged()
  -Image? _paintAndDetachToImage()
  +void paint()
}

"widgets::snapshot_widget::_RenderSnapshotWidget" o-- "widgets::snapshot_widget::SnapshotPainter"
"widgets::snapshot_widget::_RenderSnapshotWidget" o-- "widgets::snapshot_widget::SnapshotController"
"widgets::snapshot_widget::_RenderSnapshotWidget" o-- "widgets::snapshot_widget::SnapshotMode"
"widgets::snapshot_widget::_RenderSnapshotWidget" o-- "dart::ui::Image"
"widgets::snapshot_widget::_RenderSnapshotWidget" o-- "dart::ui::Size"
"rendering::proxy_box::RenderProxyBox" <|-- "widgets::snapshot_widget::_RenderSnapshotWidget"

abstract class "widgets::snapshot_widget::SnapshotPainter" {
  +void paintSnapshot()
  +void paint()
  +bool shouldRepaint()
}

"foundation::change_notifier::ChangeNotifier" <|-- "widgets::snapshot_widget::SnapshotPainter"

class "widgets::snapshot_widget::_DefaultSnapshotPainter" {
  +bool hasListeners
  +void addListener()
  +void dispose()
  +void notifyListeners()
  +void paint()
  +void paintSnapshot()
  +void removeListener()
  +bool shouldRepaint()
}

"widgets::snapshot_widget::SnapshotPainter" <|-- "widgets::snapshot_widget::_DefaultSnapshotPainter"

class "widgets::snapshot_widget::SnapshotMode" {
  +int index
  {static} +List<SnapshotMode> values
  {static} +SnapshotMode permissive
  {static} +SnapshotMode normal
  {static} +SnapshotMode forced
}

"widgets::snapshot_widget::SnapshotMode" o-- "widgets::snapshot_widget::SnapshotMode"
"dart::core::Enum" <|-- "widgets::snapshot_widget::SnapshotMode"

class "widgets::dual_transition_builder::DualTransitionBuilder" {
  +Animation<double> animation
  +Widget Function(BuildContext, Animation<double>, Widget?) forwardBuilder
  +Widget Function(BuildContext, Animation<double>, Widget?) reverseBuilder
  +Widget? child
  +State<DualTransitionBuilder> createState()
}

"widgets::dual_transition_builder::DualTransitionBuilder" o-- "animation::animation::Animation<double>"
"widgets::dual_transition_builder::DualTransitionBuilder" o-- "widgets::dual_transition_builder::Widget Function(BuildContext, Animation<double>, Widget)"
"widgets::dual_transition_builder::DualTransitionBuilder" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::dual_transition_builder::DualTransitionBuilder"

class "widgets::dual_transition_builder::_DualTransitionBuilderState" {
  -AnimationStatus _effectiveAnimationStatus
  -ProxyAnimation _forwardAnimation
  -ProxyAnimation _reverseAnimation
  +void initState()
  -void _animationListener()
  +void didUpdateWidget()
  -AnimationStatus _calculateEffectiveAnimationStatus()
  -void _updateAnimations()
  +void dispose()
  +Widget build()
}

"widgets::dual_transition_builder::_DualTransitionBuilderState" o-- "animation::animation::AnimationStatus"
"widgets::dual_transition_builder::_DualTransitionBuilderState" o-- "animation::animations::ProxyAnimation"
"widgets::framework::State" <|-- "widgets::dual_transition_builder::_DualTransitionBuilderState"

class "widgets::visibility::Visibility" {
  +Widget child
  +Widget replacement
  +bool visible
  +bool maintainState
  +bool maintainAnimation
  +bool maintainSize
  +bool maintainSemantics
  +bool maintainInteractivity
  {static} +bool of()
  +Widget build()
  +void debugFillProperties()
}

"widgets::visibility::Visibility" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::visibility::Visibility"

class "widgets::visibility::_VisibilityScope" {
  +bool isVisible
  +bool updateShouldNotify()
}

"widgets::framework::InheritedWidget" <|-- "widgets::visibility::_VisibilityScope"

class "widgets::visibility::SliverVisibility" {
  +Widget sliver
  +Widget replacementSliver
  +bool visible
  +bool maintainState
  +bool maintainAnimation
  +bool maintainSize
  +bool maintainSemantics
  +bool maintainInteractivity
  +Widget build()
  +void debugFillProperties()
}

"widgets::visibility::SliverVisibility" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::visibility::SliverVisibility"

class "widgets::visibility::_Visibility" {
  +bool visible
  +bool maintainSemantics
  +_RenderVisibility createRenderObject()
  +void updateRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::visibility::_Visibility"

class "widgets::visibility::_RenderVisibility" {
  -bool _visible
  -bool _maintainSemantics
  +bool visible
  +bool maintainSemantics
  +void visitChildrenForSemantics()
  +void paint()
}

"rendering::proxy_box::RenderProxyBox" <|-- "widgets::visibility::_RenderVisibility"

class "widgets::visibility::_SliverVisibility" {
  +bool visible
  +bool maintainSemantics
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::visibility::_SliverVisibility"

class "widgets::visibility::_RenderSliverVisibility" {
  -bool _visible
  -bool _maintainSemantics
  +bool visible
  +bool maintainSemantics
  +void visitChildrenForSemantics()
  +void paint()
}

"rendering::proxy_sliver::RenderProxySliver" <|-- "widgets::visibility::_RenderSliverVisibility"

class "widgets::annotated_region::AnnotatedRegion" {
  +T value
  +bool sized
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::annotated_region::AnnotatedRegion"

class "widgets::banner::BannerPainter" {
  +String message
  +TextDirection textDirection
  +BannerLocation location
  +TextDirection layoutDirection
  +Color color
  +TextStyle textStyle
  {static} -BoxShadow _shadow
  -bool _prepared
  -TextPainter? _textPainter
  -Paint _paintShadow
  -Paint _paintBanner
  -double _rotation
  +void dispose()
  -void _prepare()
  +void paint()
  +bool shouldRepaint()
  +bool hitTest()
  -double _translationX()
  -double _translationY()
}

"widgets::banner::BannerPainter" o-- "dart::ui::TextDirection"
"widgets::banner::BannerPainter" o-- "widgets::banner::BannerLocation"
"widgets::banner::BannerPainter" o-- "dart::ui::Color"
"widgets::banner::BannerPainter" o-- "painting::text_style::TextStyle"
"widgets::banner::BannerPainter" o-- "painting::box_shadow::BoxShadow"
"widgets::banner::BannerPainter" o-- "painting::text_painter::TextPainter"
"widgets::banner::BannerPainter" o-- "dart::ui::Paint"
"rendering::custom_paint::CustomPainter" <|-- "widgets::banner::BannerPainter"

class "widgets::banner::Banner" {
  +Widget? child
  +String message
  +TextDirection? textDirection
  +BannerLocation location
  +TextDirection? layoutDirection
  +Color color
  +TextStyle textStyle
  +Widget build()
  +void debugFillProperties()
}

"widgets::banner::Banner" o-- "widgets::framework::Widget"
"widgets::banner::Banner" o-- "dart::ui::TextDirection"
"widgets::banner::Banner" o-- "widgets::banner::BannerLocation"
"widgets::banner::Banner" o-- "dart::ui::Color"
"widgets::banner::Banner" o-- "painting::text_style::TextStyle"
"widgets::framework::StatelessWidget" <|-- "widgets::banner::Banner"

class "widgets::banner::CheckedModeBanner" {
  +Widget child
  +Widget build()
  +void debugFillProperties()
}

"widgets::banner::CheckedModeBanner" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::banner::CheckedModeBanner"

class "widgets::banner::BannerLocation" {
  +int index
  {static} +List<BannerLocation> values
  {static} +BannerLocation topStart
  {static} +BannerLocation topEnd
  {static} +BannerLocation bottomStart
  {static} +BannerLocation bottomEnd
}

"widgets::banner::BannerLocation" o-- "widgets::banner::BannerLocation"
"dart::core::Enum" <|-- "widgets::banner::BannerLocation"

abstract class "widgets::inherited_notifier::InheritedNotifier" {
  +T? notifier
  +bool updateShouldNotify()
  +InheritedElement createElement()
}

"widgets::framework::InheritedWidget" <|-- "widgets::inherited_notifier::InheritedNotifier"

class "widgets::inherited_notifier::_InheritedNotifierElement" {
  -bool _dirty
  +void update()
  +Widget build()
  -void _handleUpdate()
  +void notifyClients()
  +void unmount()
}

"widgets::framework::InheritedElement" <|-- "widgets::inherited_notifier::_InheritedNotifierElement"

abstract class "widgets::notification_listener::Notification" {
  +void dispatch()
  +String toString()
  #void debugFillDescription()
}

class "widgets::notification_listener::NotificationListener" {
  +bool Function(T)? onNotification
  +Element createElement()
}

"widgets::notification_listener::NotificationListener" o-- "widgets::notification_listener::bool Function(T)"
"widgets::framework::ProxyWidget" <|-- "widgets::notification_listener::NotificationListener"

class "widgets::notification_listener::_NotificationElement" {
  +bool onNotification()
  +void notifyClients()
}

"widgets::framework::ProxyElement" <|-- "widgets::notification_listener::_NotificationElement"
"widgets::framework::NotifiableElementMixin" <|-- "widgets::notification_listener::_NotificationElement"

class "widgets::notification_listener::LayoutChangedNotification" {
}

"widgets::notification_listener::Notification" <|-- "widgets::notification_listener::LayoutChangedNotification"

class "widgets::performance_overlay::PerformanceOverlay" {
  +int optionsMask
  +int rasterizerThreshold
  +bool checkerboardRasterCacheImages
  +bool checkerboardOffscreenLayers
  +RenderPerformanceOverlay createRenderObject()
  +void updateRenderObject()
}

"widgets::framework::LeafRenderObjectWidget" <|-- "widgets::performance_overlay::PerformanceOverlay"

class "widgets::view::View" {
  +FlutterView view
  +Widget child
  -PipelineOwner? _deprecatedPipelineOwner
  -RenderView? _deprecatedRenderView
  {static} +FlutterView? maybeOf()
  {static} +FlutterView of()
  {static} +PipelineOwner pipelineOwnerOf()
  +Widget build()
}

"widgets::view::View" o-- "dart::ui::FlutterView"
"widgets::view::View" o-- "widgets::framework::Widget"
"widgets::view::View" o-- "rendering::object::PipelineOwner"
"widgets::view::View" o-- "rendering::view::RenderView"
"widgets::framework::StatelessWidget" <|-- "widgets::view::View"

class "widgets::view::_RawView" {
  +FlutterView view
  +Widget Function(BuildContext, PipelineOwner) builder
  -PipelineOwner? _deprecatedPipelineOwner
  -RenderView? _deprecatedRenderView
  +RenderObjectElement createElement()
  +RenderObject createRenderObject()
}

"widgets::view::_RawView" o-- "dart::ui::FlutterView"
"widgets::view::_RawView" o-- "widgets::view::Widget Function(BuildContext, PipelineOwner)"
"widgets::view::_RawView" o-- "rendering::object::PipelineOwner"
"widgets::view::_RawView" o-- "rendering::view::RenderView"
"widgets::framework::RenderObjectWidget" <|-- "widgets::view::_RawView"

class "widgets::view::_RawViewElement" {
  -PipelineOwner _pipelineOwner
  -Element? _child
  -PipelineOwner? _parentPipelineOwner
  -PipelineOwner _effectivePipelineOwner
  +RenderView renderObject
  -void _handleSemanticsOwnerCreated()
  -void _handleSemanticsOwnerDisposed()
  -void _handleSemanticsUpdate()
  -void _updateChild()
  +void mount()
  -void _attachView()
  -void _detachView()
  +void didChangeDependencies()
  +void performRebuild()
  +void activate()
  +void deactivate()
  +void update()
  +void visitChildren()
  +void forgetChild()
  +void insertRenderObjectChild()
  +void moveRenderObjectChild()
  +void removeRenderObjectChild()
  +void unmount()
}

"widgets::view::_RawViewElement" o-- "rendering::object::PipelineOwner"
"widgets::view::_RawViewElement" o-- "widgets::framework::Element"
"widgets::view::_RawViewElement" o-- "rendering::view::RenderView"
"widgets::framework::RenderTreeRootElement" <|-- "widgets::view::_RawViewElement"

class "widgets::view::_ViewScope" {
  +FlutterView? view
  +bool updateShouldNotify()
}

"widgets::view::_ViewScope" o-- "dart::ui::FlutterView"
"widgets::framework::InheritedWidget" <|-- "widgets::view::_ViewScope"

class "widgets::view::_PipelineOwnerScope" {
  +PipelineOwner pipelineOwner
  +bool updateShouldNotify()
}

"widgets::view::_PipelineOwnerScope" o-- "rendering::object::PipelineOwner"
"widgets::framework::InheritedWidget" <|-- "widgets::view::_PipelineOwnerScope"

class "widgets::view::_MultiChildComponentWidget" {
  -List<Widget> _views
  -Widget? _child
  +Element createElement()
}

"widgets::view::_MultiChildComponentWidget" o-- "widgets::framework::Widget"
"widgets::framework::Widget" <|-- "widgets::view::_MultiChildComponentWidget"

class "widgets::view::ViewCollection" {
  +List<Widget> views
}

"widgets::view::_MultiChildComponentWidget" <|-- "widgets::view::ViewCollection"

class "widgets::view::ViewAnchor" {
  +Widget? view
  +Widget child
  +Widget build()
}

"widgets::view::ViewAnchor" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::view::ViewAnchor"

class "widgets::view::_MultiChildComponentElement" {
  -List<Element> _viewElements
  -Set<Element> _forgottenViewElements
  -Element? _childElement
  {static} -Object _viewSlot
  +bool debugDoingBuild
  +Element? renderObjectAttachingChild
  -bool _debugAssertChildren()
  +void attachRenderObject()
  +void mount()
  +void updateSlot()
  -bool _debugCheckMustAttachRenderObject()
  +void update()
  +bool debugExpectsRenderObjectForSlot()
  +void performRebuild()
  +void forgetChild()
  +void visitChildren()
  +List<DiagnosticsNode> debugDescribeChildren()
}

"widgets::view::_MultiChildComponentElement" o-- "widgets::framework::Element"
"widgets::framework::Element" <|-- "widgets::view::_MultiChildComponentElement"

class "widgets::view::_DeprecatedRawViewKey" {
  +FlutterView view
  +PipelineOwner? owner
  +RenderView? renderView
  +int hashCode
  +bool ==()
  +String toString()
}

"widgets::view::_DeprecatedRawViewKey" o-- "dart::ui::FlutterView"
"widgets::view::_DeprecatedRawViewKey" o-- "rendering::object::PipelineOwner"
"widgets::view::_DeprecatedRawViewKey" o-- "rendering::view::RenderView"
"widgets::framework::GlobalKey" <|-- "widgets::view::_DeprecatedRawViewKey"

class "widgets::adapter::RenderObjectToWidgetAdapter" {
  +Widget? child
  +RenderObjectWithChildMixin<T> container
  +String? debugShortDescription
  +RenderObjectToWidgetElement<T> createElement()
  +RenderObjectWithChildMixin<T> createRenderObject()
  +void updateRenderObject()
  +RenderObjectToWidgetElement<T> attachToRenderTree()
  +String toStringShort()
}

"widgets::adapter::RenderObjectToWidgetAdapter" o-- "widgets::framework::Widget"
"widgets::adapter::RenderObjectToWidgetAdapter" o-- "rendering::object::RenderObjectWithChildMixin<T>"
"widgets::framework::RenderObjectWidget" <|-- "widgets::adapter::RenderObjectToWidgetAdapter"

class "widgets::adapter::RenderObjectToWidgetElement" {
  -Element? _child
  {static} -Object _rootChildSlot
  -Widget? _newWidget
  +RenderObjectWithChildMixin<T> renderObject
  +void visitChildren()
  +void forgetChild()
  +void mount()
  +void update()
  +void performRebuild()
  -void _rebuild()
  +void insertRenderObjectChild()
  +void moveRenderObjectChild()
  +void removeRenderObjectChild()
}

"widgets::adapter::RenderObjectToWidgetElement" o-- "widgets::framework::Element"
"widgets::adapter::RenderObjectToWidgetElement" o-- "widgets::framework::Widget"
"widgets::adapter::RenderObjectToWidgetElement" o-- "rendering::object::RenderObjectWithChildMixin<T>"
"widgets::framework::RenderTreeRootElement" <|-- "widgets::adapter::RenderObjectToWidgetElement"
"widgets::framework::RootElementMixin" <|-- "widgets::adapter::RenderObjectToWidgetElement"

class "widgets::lookup_boundary::LookupBoundary" {
  {static} +T? dependOnInheritedWidgetOfExactType()
  {static} +InheritedElement? getElementForInheritedWidgetOfExactType()
  {static} +T? findAncestorWidgetOfExactType()
  {static} +T? findAncestorStateOfType()
  {static} +T? findRootAncestorStateOfType()
  {static} +T? findAncestorRenderObjectOfType()
  {static} +void visitAncestorElements()
  {static} +void visitChildElements()
  {static} +bool debugIsHidingAncestorWidgetOfExactType()
  {static} +bool debugIsHidingAncestorStateOfType()
  {static} +bool debugIsHidingAncestorRenderObjectOfType()
  +bool updateShouldNotify()
}

"widgets::framework::InheritedWidget" <|-- "widgets::lookup_boundary::LookupBoundary"

class "widgets::page_view::PageController" {
  +int initialPage
  +bool keepPage
  +double viewportFraction
  +double? page
  +Future<void> animateToPage()
  +void jumpToPage()
  +Future<void> nextPage()
  +Future<void> previousPage()
  +ScrollPosition createScrollPosition()
  +void attach()
}

"widgets::scroll_controller::ScrollController" <|-- "widgets::page_view::PageController"

class "widgets::page_view::PageMetrics" {
  +double viewportFraction
  +double? page
  +PageMetrics copyWith()
}

"widgets::scroll_metrics::FixedScrollMetrics" <|-- "widgets::page_view::PageMetrics"

class "widgets::page_view::_PagePosition" {
  +int initialPage
  -double _pageToUseOnStartup
  -double? _cachedPage
  -double _viewportFraction
  +double viewportFraction
  -double _initialPageOffset
  +double? page
  +Future<void> ensureVisible()
  +double getPageFromPixels()
  +double getPixelsFromPage()
  +void saveScrollOffset()
  +void restoreScrollOffset()
  +void saveOffset()
  +void restoreOffset()
  +bool applyViewportDimension()
  +void absorb()
  +bool applyContentDimensions()
  +PageMetrics copyWith()
}

"widgets::scroll_position_with_single_context::ScrollPositionWithSingleContext" <|-- "widgets::page_view::_PagePosition"
"widgets::page_view::PageMetrics" <|-- "widgets::page_view::_PagePosition"

class "widgets::page_view::_ForceImplicitScrollPhysics" {
  +bool allowImplicitScrolling
  +_ForceImplicitScrollPhysics applyTo()
}

"widgets::scroll_physics::ScrollPhysics" <|-- "widgets::page_view::_ForceImplicitScrollPhysics"

class "widgets::page_view::PageScrollPhysics" {
  +bool allowImplicitScrolling
  +PageScrollPhysics applyTo()
  -double _getPage()
  -double _getPixels()
  -double _getTargetPixels()
  +Simulation? createBallisticSimulation()
}

"widgets::scroll_physics::ScrollPhysics" <|-- "widgets::page_view::PageScrollPhysics"

class "widgets::page_view::PageView" {
  +bool allowImplicitScrolling
  +String? restorationId
  +Axis scrollDirection
  +bool reverse
  +PageController controller
  +ScrollPhysics? physics
  +bool pageSnapping
  +void Function(int)? onPageChanged
  +SliverChildDelegate childrenDelegate
  +DragStartBehavior dragStartBehavior
  +Clip clipBehavior
  +ScrollBehavior? scrollBehavior
  +bool padEnds
  +State<PageView> createState()
}

"widgets::page_view::PageView" o-- "painting::basic_types::Axis"
"widgets::page_view::PageView" o-- "widgets::page_view::PageController"
"widgets::page_view::PageView" o-- "widgets::scroll_physics::ScrollPhysics"
"widgets::page_view::PageView" o-- "foundation::basic_types::void Function(int)"
"widgets::page_view::PageView" o-- "widgets::scroll_delegate::SliverChildDelegate"
"widgets::page_view::PageView" o-- "gestures::recognizer::DragStartBehavior"
"widgets::page_view::PageView" o-- "dart::ui::Clip"
"widgets::page_view::PageView" o-- "widgets::scroll_configuration::ScrollBehavior"
"widgets::framework::StatefulWidget" <|-- "widgets::page_view::PageView"

class "widgets::page_view::_PageViewState" {
  -int _lastReportedPage
  +void initState()
  -AxisDirection _getDirection()
  +Widget build()
  +void debugFillProperties()
}

"widgets::framework::State" <|-- "widgets::page_view::_PageViewState"

class "widgets::decorated_sliver::DecoratedSliver" {
  +Decoration decoration
  +DecorationPosition position
  +dynamic createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::decorated_sliver::DecoratedSliver" o-- "painting::decoration::Decoration"
"widgets::decorated_sliver::DecoratedSliver" o-- "rendering::proxy_box::DecorationPosition"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::decorated_sliver::DecoratedSliver"

class "widgets::shortcuts::KeySet" {
  -HashSet<T> _keys
  +int hashCode
  {static} -List<int> _tempHashStore3
  {static} -List<int> _tempHashStore4
  +Set<T> keys
  +bool ==()
  {static} -int _computeHashCode()
}

"widgets::shortcuts::KeySet" o-- "dart::collection::HashSet<T>"

abstract class "widgets::shortcuts::ShortcutActivator" {
  +Iterable<LogicalKeyboardKey>? triggers
  +bool accepts()
  {static} +bool isActivatedBy()
  +String debugDescribeKeys()
}

class "widgets::shortcuts::LogicalKeySet" {
  -Set<LogicalKeyboardKey> _triggers
  {static} -Set<LogicalKeyboardKey> _modifiers
  {static} -Map<LogicalKeyboardKey, List<LogicalKeyboardKey>> _unmapSynonyms
  +Iterable<LogicalKeyboardKey> triggers
  +bool accepts()
  +String debugDescribeKeys()
  +void debugFillProperties()
}

"widgets::shortcuts::KeySet" <|-- "widgets::shortcuts::LogicalKeySet"
"foundation::diagnostics::Diagnosticable" <|-- "widgets::shortcuts::LogicalKeySet"
"widgets::shortcuts::ShortcutActivator" <|-- "widgets::shortcuts::LogicalKeySet"

class "widgets::shortcuts::ShortcutMapProperty" {
  +Map<ShortcutActivator, Intent> value
  +String valueToString()
}

"foundation::diagnostics::DiagnosticsProperty" <|-- "widgets::shortcuts::ShortcutMapProperty"

class "widgets::shortcuts::SingleActivator" {
  +LogicalKeyboardKey trigger
  +bool control
  +bool shift
  +bool alt
  +bool meta
  +bool includeRepeats
  +Iterable<LogicalKeyboardKey> triggers
  +bool accepts()
  +ShortcutSerialization serializeForMenu()
  +String debugDescribeKeys()
  +void debugFillProperties()
}

"widgets::shortcuts::SingleActivator" o-- "services::keyboard_key.g::LogicalKeyboardKey"
"foundation::diagnostics::Diagnosticable" <|-- "widgets::shortcuts::SingleActivator"
"widgets::platform_menu_bar::MenuSerializableShortcut" <|-- "widgets::shortcuts::SingleActivator"
"widgets::shortcuts::ShortcutActivator" <|-- "widgets::shortcuts::SingleActivator"

class "widgets::shortcuts::CharacterActivator" {
  +bool alt
  +bool control
  +bool meta
  +bool includeRepeats
  +String character
  +Iterable<LogicalKeyboardKey>? triggers
  +bool accepts()
  +String debugDescribeKeys()
  +ShortcutSerialization serializeForMenu()
  +void debugFillProperties()
}

"foundation::diagnostics::Diagnosticable" <|-- "widgets::shortcuts::CharacterActivator"
"widgets::platform_menu_bar::MenuSerializableShortcut" <|-- "widgets::shortcuts::CharacterActivator"
"widgets::shortcuts::ShortcutActivator" <|-- "widgets::shortcuts::CharacterActivator"

class "widgets::shortcuts::_ActivatorIntentPair" {
  +ShortcutActivator activator
  +Intent intent
  +void debugFillProperties()
}

"widgets::shortcuts::_ActivatorIntentPair" o-- "widgets::shortcuts::ShortcutActivator"
"widgets::shortcuts::_ActivatorIntentPair" o-- "widgets::actions::Intent"
"foundation::diagnostics::Diagnosticable" <|-- "widgets::shortcuts::_ActivatorIntentPair"

class "widgets::shortcuts::ShortcutManager" {
  +bool modal
  -Map<ShortcutActivator, Intent> _shortcuts
  -Map<LogicalKeyboardKey?, List<_ActivatorIntentPair>>? _indexedShortcutsCache
  +Map<ShortcutActivator, Intent> shortcuts
  -Map<LogicalKeyboardKey?, List<_ActivatorIntentPair>> _indexedShortcuts
  {static} -Map<LogicalKeyboardKey?, List<_ActivatorIntentPair>> _indexShortcuts()
  -Intent? _find()
  #KeyEventResult handleKeypress()
  +void debugFillProperties()
}

"foundation::diagnostics::Diagnosticable" <|-- "widgets::shortcuts::ShortcutManager"
"foundation::change_notifier::ChangeNotifier" <|-- "widgets::shortcuts::ShortcutManager"

class "widgets::shortcuts::Shortcuts" {
  +ShortcutManager? manager
  -Map<ShortcutActivator, Intent> _shortcuts
  +Widget child
  +String? debugLabel
  +Map<ShortcutActivator, Intent> shortcuts
  +State<Shortcuts> createState()
  +void debugFillProperties()
}

"widgets::shortcuts::Shortcuts" o-- "widgets::shortcuts::ShortcutManager"
"widgets::shortcuts::Shortcuts" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::shortcuts::Shortcuts"

class "widgets::shortcuts::_ShortcutsState" {
  -ShortcutManager? _internalManager
  +ShortcutManager manager
  +void dispose()
  +void initState()
  +void didUpdateWidget()
  -KeyEventResult _handleOnKey()
  +Widget build()
}

"widgets::shortcuts::_ShortcutsState" o-- "widgets::shortcuts::ShortcutManager"
"widgets::framework::State" <|-- "widgets::shortcuts::_ShortcutsState"

class "widgets::shortcuts::CallbackShortcuts" {
  +Map<ShortcutActivator, void Function()> bindings
  +Widget child
  -bool _applyKeyBinding()
  +Widget build()
}

"widgets::shortcuts::CallbackShortcuts" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::shortcuts::CallbackShortcuts"

class "widgets::shortcuts::ShortcutRegistryEntry" {
  +ShortcutRegistry registry
  +void replaceAll()
  +void dispose()
}

"widgets::shortcuts::ShortcutRegistryEntry" o-- "widgets::shortcuts::ShortcutRegistry"

class "widgets::shortcuts::ShortcutRegistry" {
  -bool _notificationScheduled
  -bool _disposed
  -Map<ShortcutRegistryEntry, Map<ShortcutActivator, Intent>> _registeredShortcuts
  +Map<ShortcutActivator, Intent> shortcuts
  +void dispose()
  +ShortcutRegistryEntry addAll()
  -void _notifyListenersNextFrame()
  {static} +ShortcutRegistry of()
  {static} +ShortcutRegistry? maybeOf()
  -void _replaceAll()
  -void _disposeEntry()
  -bool _debugCheckEntryIsValid()
  -bool _debugCheckForDuplicates()
}

"foundation::change_notifier::ChangeNotifier" <|-- "widgets::shortcuts::ShortcutRegistry"

class "widgets::shortcuts::ShortcutRegistrar" {
  +Widget child
  +State<ShortcutRegistrar> createState()
}

"widgets::shortcuts::ShortcutRegistrar" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::shortcuts::ShortcutRegistrar"

class "widgets::shortcuts::_ShortcutRegistrarState" {
  +ShortcutRegistry registry
  +ShortcutManager manager
  +void initState()
  -void _shortcutsChanged()
  +void dispose()
  +Widget build()
}

"widgets::shortcuts::_ShortcutRegistrarState" o-- "widgets::shortcuts::ShortcutRegistry"
"widgets::shortcuts::_ShortcutRegistrarState" o-- "widgets::shortcuts::ShortcutManager"
"widgets::framework::State" <|-- "widgets::shortcuts::_ShortcutRegistrarState"

class "widgets::shortcuts::_ShortcutRegistrarScope" {
  +ShortcutRegistry registry
  +bool updateShouldNotify()
}

"widgets::shortcuts::_ShortcutRegistrarScope" o-- "widgets::shortcuts::ShortcutRegistry"
"widgets::framework::InheritedWidget" <|-- "widgets::shortcuts::_ShortcutRegistrarScope"

class "widgets::keyboard_listener::KeyboardListener" {
  +FocusNode focusNode
  +bool autofocus
  +bool includeSemantics
  +void Function(KeyEvent)? onKeyEvent
  +Widget child
  +Widget build()
  +void debugFillProperties()
}

"widgets::keyboard_listener::KeyboardListener" o-- "widgets::focus_manager::FocusNode"
"widgets::keyboard_listener::KeyboardListener" o-- "foundation::basic_types::void Function(KeyEvent)"
"widgets::keyboard_listener::KeyboardListener" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::keyboard_listener::KeyboardListener"

class "widgets::image_filter::ImageFiltered" {
  +ImageFilter imageFilter
  +bool enabled
  +RenderObject createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::image_filter::ImageFiltered" o-- "dart::ui::ImageFilter"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::image_filter::ImageFiltered"

class "widgets::image_filter::_ImageFilterRenderObject" {
  -bool _enabled
  -ImageFilter _imageFilter
  +bool enabled
  +ImageFilter imageFilter
  +bool alwaysNeedsCompositing
  +bool isRepaintBoundary
  +OffsetLayer updateCompositedLayer()
}

"widgets::image_filter::_ImageFilterRenderObject" o-- "dart::ui::ImageFilter"
"rendering::proxy_box::RenderProxyBox" <|-- "widgets::image_filter::_ImageFilterRenderObject"

class "widgets::scroll_notification_observer::_ScrollNotificationObserverScope" {
  -ScrollNotificationObserverState _scrollNotificationObserverState
  +bool updateShouldNotify()
}

"widgets::scroll_notification_observer::_ScrollNotificationObserverScope" o-- "widgets::scroll_notification_observer::ScrollNotificationObserverState"
"widgets::framework::InheritedWidget" <|-- "widgets::scroll_notification_observer::_ScrollNotificationObserverScope"

class "widgets::scroll_notification_observer::_ListenerEntry" {
  +void Function(ScrollNotification) listener
}

"widgets::scroll_notification_observer::_ListenerEntry" o-- "widgets::scroll_notification_observer::void Function(ScrollNotification)"
"dart::collection::LinkedListEntry" <|-- "widgets::scroll_notification_observer::_ListenerEntry"

class "widgets::scroll_notification_observer::ScrollNotificationObserver" {
  +Widget child
  {static} +ScrollNotificationObserverState? maybeOf()
  {static} +ScrollNotificationObserverState of()
  +ScrollNotificationObserverState createState()
}

"widgets::scroll_notification_observer::ScrollNotificationObserver" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::scroll_notification_observer::ScrollNotificationObserver"

class "widgets::scroll_notification_observer::ScrollNotificationObserverState" {
  -LinkedList<_ListenerEntry>? _listeners
  -bool _debugAssertNotDisposed()
  +void addListener()
  +void removeListener()
  -void _notifyListeners()
  +Widget build()
  +void dispose()
}

"widgets::scroll_notification_observer::ScrollNotificationObserverState" o-- "dart::collection::LinkedList<_ListenerEntry>"
"widgets::framework::State" <|-- "widgets::scroll_notification_observer::ScrollNotificationObserverState"

class "widgets::shared_app_data::SharedAppData" {
  +Widget child
  +State<StatefulWidget> createState()
  {static} +V getValue()
  {static} +void setValue()
  {static} -bool _debugHasSharedAppData()
}

"widgets::shared_app_data::SharedAppData" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::shared_app_data::SharedAppData"

class "widgets::shared_app_data::_SharedAppDataState" {
  +Map<Object, Object?> data
  +Widget build()
  +V getValue()
  +void setValue()
}

"widgets::framework::State" <|-- "widgets::shared_app_data::_SharedAppDataState"

class "widgets::shared_app_data::_SharedAppModel" {
  +_SharedAppDataState sharedAppDataState
  +Map<Object, Object?> data
  +bool updateShouldNotify()
  +bool updateShouldNotifyDependent()
}

"widgets::shared_app_data::_SharedAppModel" o-- "widgets::shared_app_data::_SharedAppDataState"
"widgets::inherited_model::InheritedModel" <|-- "widgets::shared_app_data::_SharedAppModel"

class "widgets::drag_target::Draggable" {
  +T? data
  +Axis? axis
  +Widget child
  +Widget? childWhenDragging
  +Widget feedback
  +Offset feedbackOffset
  +Offset Function(Draggable<Object>, BuildContext, Offset) dragAnchorStrategy
  +bool ignoringFeedbackSemantics
  +bool ignoringFeedbackPointer
  +Axis? affinity
  +int? maxSimultaneousDrags
  +void Function()? onDragStarted
  +void Function(DragUpdateDetails)? onDragUpdate
  +void Function(Velocity, Offset)? onDraggableCanceled
  +void Function()? onDragCompleted
  +void Function(DraggableDetails)? onDragEnd
  +bool rootOverlay
  +HitTestBehavior hitTestBehavior
  +dynamic allowedButtonsFilter
  #MultiDragGestureRecognizer createRecognizer()
  +State<Draggable<T>> createState()
}

"widgets::drag_target::Draggable" o-- "painting::basic_types::Axis"
"widgets::drag_target::Draggable" o-- "widgets::framework::Widget"
"widgets::drag_target::Draggable" o-- "dart::ui::Offset"
"widgets::drag_target::Draggable" o-- "widgets::drag_target::Offset Function(Draggable<Object>, BuildContext, Offset)"
"widgets::drag_target::Draggable" o-- "dart::ui::void Function()"
"widgets::drag_target::Draggable" o-- "widgets::drag_target::void Function(DragUpdateDetails)"
"widgets::drag_target::Draggable" o-- "widgets::drag_target::void Function(Velocity, Offset)"
"widgets::drag_target::Draggable" o-- "widgets::drag_target::void Function(DraggableDetails)"
"widgets::drag_target::Draggable" o-- "rendering::proxy_box::HitTestBehavior"
"widgets::framework::StatefulWidget" <|-- "widgets::drag_target::Draggable"

class "widgets::drag_target::LongPressDraggable" {
  +bool hapticFeedbackOnStart
  +Duration delay
  +DelayedMultiDragGestureRecognizer createRecognizer()
}

"widgets::drag_target::Draggable" <|-- "widgets::drag_target::LongPressDraggable"

class "widgets::drag_target::_DraggableState" {
  -GestureRecognizer? _recognizer
  -int _activeCount
  +void initState()
  +void dispose()
  +void didChangeDependencies()
  -void _disposeRecognizerIfInactive()
  -void _routePointer()
  -_DragAvatar<T>? _startDrag()
  +Widget build()
}

"widgets::drag_target::_DraggableState" o-- "gestures::recognizer::GestureRecognizer"
"widgets::framework::State" <|-- "widgets::drag_target::_DraggableState"

class "widgets::drag_target::DraggableDetails" {
  +bool wasAccepted
  +Velocity velocity
  +Offset offset
}

"widgets::drag_target::DraggableDetails" o-- "gestures::velocity_tracker::Velocity"
"widgets::drag_target::DraggableDetails" o-- "dart::ui::Offset"

class "widgets::drag_target::DragTargetDetails" {
  +T data
  +Offset offset
}

"widgets::drag_target::DragTargetDetails" o-- "dart::ui::Offset"

class "widgets::drag_target::DragTarget" {
  +Widget Function(BuildContext, List<T?>, List<dynamic>) builder
  +bool Function(T?)? onWillAccept
  +bool Function(DragTargetDetails<T>)? onWillAcceptWithDetails
  +void Function(T)? onAccept
  +void Function(DragTargetDetails<T>)? onAcceptWithDetails
  +void Function(T?)? onLeave
  +void Function(DragTargetDetails<T>)? onMove
  +HitTestBehavior hitTestBehavior
  +State<DragTarget<T>> createState()
}

"widgets::drag_target::DragTarget" o-- "widgets::drag_target::Widget Function(BuildContext, List<T>, List<dynamic>)"
"widgets::drag_target::DragTarget" o-- "widgets::drag_target::bool Function(T)"
"widgets::drag_target::DragTarget" o-- "widgets::drag_target::bool Function(DragTargetDetails<T>)"
"widgets::drag_target::DragTarget" o-- "widgets::drag_target::void Function(T)"
"widgets::drag_target::DragTarget" o-- "widgets::drag_target::void Function(DragTargetDetails<T>)"
"widgets::drag_target::DragTarget" o-- "rendering::proxy_box::HitTestBehavior"
"widgets::framework::StatefulWidget" <|-- "widgets::drag_target::DragTarget"

class "widgets::drag_target::_DragTargetState" {
  -List<_DragAvatar<Object>> _candidateAvatars
  -List<_DragAvatar<Object>> _rejectedAvatars
  +bool isExpectedDataType()
  +bool didEnter()
  +void didLeave()
  +void didDrop()
  +void didMove()
  +Widget build()
}

"widgets::framework::State" <|-- "widgets::drag_target::_DragTargetState"

class "widgets::drag_target::_DragAvatar" {
  +T? data
  +Axis? axis
  +Offset dragStartPoint
  +Widget? feedback
  +Offset feedbackOffset
  +void Function(DragUpdateDetails)? onDragUpdate
  +void Function(Velocity, Offset, bool)? onDragEnd
  +OverlayState overlayState
  +bool ignoringFeedbackSemantics
  +bool ignoringFeedbackPointer
  +int viewId
  -_DragTargetState<Object>? _activeTarget
  -List<_DragTargetState<Object>> _enteredTargets
  -Offset _position
  -Offset? _lastOffset
  -OverlayEntry? _entry
  +void update()
  +void end()
  +void cancel()
  +void updateDrag()
  -Iterable<_DragTargetState<Object>> _getDragTargets()
  -void _leaveAllEntered()
  +void finishDrag()
  -Widget _build()
  -Velocity _restrictVelocityAxis()
  -Offset _restrictAxis()
}

"widgets::drag_target::_DragAvatar" o-- "painting::basic_types::Axis"
"widgets::drag_target::_DragAvatar" o-- "dart::ui::Offset"
"widgets::drag_target::_DragAvatar" o-- "widgets::framework::Widget"
"widgets::drag_target::_DragAvatar" o-- "widgets::drag_target::void Function(DragUpdateDetails)"
"widgets::drag_target::_DragAvatar" o-- "widgets::drag_target::void Function(Velocity, Offset, bool)"
"widgets::drag_target::_DragAvatar" o-- "widgets::overlay::OverlayState"
"widgets::drag_target::_DragAvatar" o-- "widgets::drag_target::_DragTargetState<Object>"
"widgets::drag_target::_DragAvatar" o-- "widgets::overlay::OverlayEntry"
"gestures::drag::Drag" <|-- "widgets::drag_target::_DragAvatar"

class "widgets::drag_target::_DragEndKind" {
  +int index
  {static} +List<_DragEndKind> values
  {static} +_DragEndKind dropped
  {static} +_DragEndKind canceled
}

"widgets::drag_target::_DragEndKind" o-- "widgets::drag_target::_DragEndKind"
"dart::core::Enum" <|-- "widgets::drag_target::_DragEndKind"

class "widgets::overscroll_indicator::GlowingOverscrollIndicator" {
  +bool showLeading
  +bool showTrailing
  +AxisDirection axisDirection
  +Color color
  +bool Function(ScrollNotification) notificationPredicate
  +Widget? child
  +Axis axis
  +State<GlowingOverscrollIndicator> createState()
  +void debugFillProperties()
}

"widgets::overscroll_indicator::GlowingOverscrollIndicator" o-- "painting::basic_types::AxisDirection"
"widgets::overscroll_indicator::GlowingOverscrollIndicator" o-- "dart::ui::Color"
"widgets::overscroll_indicator::GlowingOverscrollIndicator" o-- "widgets::scroll_notification::bool Function(ScrollNotification)"
"widgets::overscroll_indicator::GlowingOverscrollIndicator" o-- "widgets::framework::Widget"
"widgets::overscroll_indicator::GlowingOverscrollIndicator" o-- "painting::basic_types::Axis"
"widgets::framework::StatefulWidget" <|-- "widgets::overscroll_indicator::GlowingOverscrollIndicator"

class "widgets::overscroll_indicator::_GlowingOverscrollIndicatorState" {
  -_GlowController? _leadingController
  -_GlowController? _trailingController
  -Listenable? _leadingAndTrailingListener
  -Type? _lastNotificationType
  -Map<bool, bool> _accepted
  +void initState()
  +void didUpdateWidget()
  -bool _handleScrollNotification()
  +void dispose()
  +Widget build()
}

"widgets::overscroll_indicator::_GlowingOverscrollIndicatorState" o-- "widgets::overscroll_indicator::_GlowController"
"widgets::overscroll_indicator::_GlowingOverscrollIndicatorState" o-- "foundation::change_notifier::Listenable"
"widgets::framework::State" <|-- "widgets::overscroll_indicator::_GlowingOverscrollIndicatorState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "widgets::overscroll_indicator::_GlowingOverscrollIndicatorState"

class "widgets::overscroll_indicator::_GlowController" {
  -_GlowState _state
  -AnimationController _glowController
  -Timer? _pullRecedeTimer
  -double _paintOffset
  -double _paintOffsetScrollPixels
  -Tween<double> _glowOpacityTween
  -Animation<double> _glowOpacity
  -Tween<double> _glowSizeTween
  -Animation<double> _glowSize
  -Ticker _displacementTicker
  -Duration? _displacementTickerLastElapsed
  -double _displacementTarget
  -double _displacement
  -double _pullDistance
  -Color _color
  -Axis _axis
  {static} -Duration _recedeTime
  {static} -Duration _pullTime
  {static} -Duration _pullHoldTime
  {static} -Duration _pullDecayTime
  {static} -Duration _crossAxisHalfTime
  {static} -double _maxOpacity
  {static} -double _pullOpacityGlowFactor
  {static} -double _velocityGlowFactor
  {static} -double _sqrt3
  {static} -double _widthToHeightFactor
  {static} -double _minVelocity
  {static} -double _maxVelocity
  +Color color
  +Axis axis
  +void dispose()
  +void absorbImpact()
  +void pull()
  +void scrollEnd()
  -void _changePhase()
  -void _recede()
  -void _tickDisplacement()
  +void paint()
  +String toString()
}

"widgets::overscroll_indicator::_GlowController" o-- "widgets::overscroll_indicator::_GlowState"
"widgets::overscroll_indicator::_GlowController" o-- "animation::animation_controller::AnimationController"
"widgets::overscroll_indicator::_GlowController" o-- "dart::async::Timer"
"widgets::overscroll_indicator::_GlowController" o-- "animation::tween::Tween<double>"
"widgets::overscroll_indicator::_GlowController" o-- "animation::animation::Animation<double>"
"widgets::overscroll_indicator::_GlowController" o-- "scheduler::ticker::Ticker"
"widgets::overscroll_indicator::_GlowController" o-- "dart::ui::Color"
"widgets::overscroll_indicator::_GlowController" o-- "painting::basic_types::Axis"
"foundation::change_notifier::ChangeNotifier" <|-- "widgets::overscroll_indicator::_GlowController"

class "widgets::overscroll_indicator::_GlowingOverscrollIndicatorPainter" {
  +_GlowController? leadingController
  +_GlowController? trailingController
  +AxisDirection axisDirection
  {static} +double piOver2
  -void _paintSide()
  +void paint()
  +bool shouldRepaint()
  +String toString()
}

"widgets::overscroll_indicator::_GlowingOverscrollIndicatorPainter" o-- "widgets::overscroll_indicator::_GlowController"
"widgets::overscroll_indicator::_GlowingOverscrollIndicatorPainter" o-- "painting::basic_types::AxisDirection"
"rendering::custom_paint::CustomPainter" <|-- "widgets::overscroll_indicator::_GlowingOverscrollIndicatorPainter"

class "widgets::overscroll_indicator::StretchingOverscrollIndicator" {
  +AxisDirection axisDirection
  +bool Function(ScrollNotification) notificationPredicate
  +Clip clipBehavior
  +Widget? child
  +Axis axis
  +State<StretchingOverscrollIndicator> createState()
  +void debugFillProperties()
}

"widgets::overscroll_indicator::StretchingOverscrollIndicator" o-- "painting::basic_types::AxisDirection"
"widgets::overscroll_indicator::StretchingOverscrollIndicator" o-- "widgets::scroll_notification::bool Function(ScrollNotification)"
"widgets::overscroll_indicator::StretchingOverscrollIndicator" o-- "dart::ui::Clip"
"widgets::overscroll_indicator::StretchingOverscrollIndicator" o-- "widgets::framework::Widget"
"widgets::overscroll_indicator::StretchingOverscrollIndicator" o-- "painting::basic_types::Axis"
"widgets::framework::StatefulWidget" <|-- "widgets::overscroll_indicator::StretchingOverscrollIndicator"

class "widgets::overscroll_indicator::_StretchingOverscrollIndicatorState" {
  -_StretchController _stretchController
  -ScrollNotification? _lastNotification
  -OverscrollNotification? _lastOverscrollNotification
  -double _totalOverscroll
  -bool _accepted
  -bool _handleScrollNotification()
  -AlignmentGeometry _getAlignmentForAxisDirection()
  +void dispose()
  +Widget build()
}

"widgets::overscroll_indicator::_StretchingOverscrollIndicatorState" o-- "widgets::overscroll_indicator::_StretchController"
"widgets::overscroll_indicator::_StretchingOverscrollIndicatorState" o-- "widgets::scroll_notification::ScrollNotification"
"widgets::overscroll_indicator::_StretchingOverscrollIndicatorState" o-- "widgets::scroll_notification::OverscrollNotification"
"widgets::framework::State" <|-- "widgets::overscroll_indicator::_StretchingOverscrollIndicatorState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "widgets::overscroll_indicator::_StretchingOverscrollIndicatorState"

class "widgets::overscroll_indicator::_StretchController" {
  -AnimationController _stretchController
  -Animation<double> _stretchSize
  -Tween<double> _stretchSizeTween
  -_StretchState _state
  -double _pullDistance
  -_StretchDirection _stretchDirection
  {static} -double _exponentialScalar
  {static} -double _stretchIntensity
  {static} -double _flingFriction
  {static} -Duration _stretchDuration
  +double pullDistance
  +_StretchDirection stretchDirection
  +double value
  +void absorbImpact()
  +void pull()
  +void scrollEnd()
  -void _changePhase()
  -void _recede()
  +void dispose()
  +String toString()
}

"widgets::overscroll_indicator::_StretchController" o-- "animation::animation_controller::AnimationController"
"widgets::overscroll_indicator::_StretchController" o-- "animation::animation::Animation<double>"
"widgets::overscroll_indicator::_StretchController" o-- "animation::tween::Tween<double>"
"widgets::overscroll_indicator::_StretchController" o-- "widgets::overscroll_indicator::_StretchState"
"widgets::overscroll_indicator::_StretchController" o-- "widgets::overscroll_indicator::_StretchDirection"
"foundation::change_notifier::ChangeNotifier" <|-- "widgets::overscroll_indicator::_StretchController"

class "widgets::overscroll_indicator::OverscrollIndicatorNotification" {
  +bool leading
  +double paintOffset
  #bool accepted
  +void disallowIndicator()
  +void debugFillDescription()
}

"widgets::notification_listener::Notification" <|-- "widgets::overscroll_indicator::OverscrollIndicatorNotification"
"widgets::scroll_notification::ViewportNotificationMixin" <|-- "widgets::overscroll_indicator::OverscrollIndicatorNotification"

class "widgets::overscroll_indicator::_GlowState" {
  +int index
  {static} +List<_GlowState> values
  {static} +_GlowState idle
  {static} +_GlowState absorb
  {static} +_GlowState pull
  {static} +_GlowState recede
}

"widgets::overscroll_indicator::_GlowState" o-- "widgets::overscroll_indicator::_GlowState"
"dart::core::Enum" <|-- "widgets::overscroll_indicator::_GlowState"

class "widgets::overscroll_indicator::_StretchDirection" {
  +int index
  {static} +List<_StretchDirection> values
  {static} +_StretchDirection trailing
  {static} +_StretchDirection leading
}

"widgets::overscroll_indicator::_StretchDirection" o-- "widgets::overscroll_indicator::_StretchDirection"
"dart::core::Enum" <|-- "widgets::overscroll_indicator::_StretchDirection"

class "widgets::overscroll_indicator::_StretchState" {
  +int index
  {static} +List<_StretchState> values
  {static} +_StretchState idle
  {static} +_StretchState absorb
  {static} +_StretchState pull
  {static} +_StretchState recede
}

"widgets::overscroll_indicator::_StretchState" o-- "widgets::overscroll_indicator::_StretchState"
"dart::core::Enum" <|-- "widgets::overscroll_indicator::_StretchState"

class "widgets::heroes::Hero" {
  +Object tag
  +Tween<Rect?> Function(Rect?, Rect?)? createRectTween
  +Widget child
  +Widget Function(BuildContext, Animation<double>, HeroFlightDirection, BuildContext, BuildContext)? flightShuttleBuilder
  +Widget Function(BuildContext, Size, Widget)? placeholderBuilder
  +bool transitionOnUserGestures
  {static} -Map<Object, _HeroState> _allHeroesFor()
  +State<Hero> createState()
  +void debugFillProperties()
}

"widgets::heroes::Hero" o-- "widgets::heroes::Tween<Rect> Function(Rect, Rect)"
"widgets::heroes::Hero" o-- "widgets::framework::Widget"
"widgets::heroes::Hero" o-- "widgets::heroes::Widget Function(BuildContext, Animation<double>, HeroFlightDirection, BuildContext, BuildContext)"
"widgets::heroes::Hero" o-- "widgets::heroes::Widget Function(BuildContext, Size, Widget)"
"widgets::framework::StatefulWidget" <|-- "widgets::heroes::Hero"

class "widgets::heroes::_HeroState" {
  -GlobalKey<State<StatefulWidget>> _key
  -Size? _placeholderSize
  -bool _shouldIncludeChild
  +void startFlight()
  +void endFlight()
  +Widget build()
}

"widgets::heroes::_HeroState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::heroes::_HeroState" o-- "dart::ui::Size"
"widgets::framework::State" <|-- "widgets::heroes::_HeroState"

class "widgets::heroes::_HeroFlightManifest" {
  +HeroFlightDirection type
  +OverlayState overlay
  +Size navigatorSize
  +PageRoute<dynamic> fromRoute
  +PageRoute<dynamic> toRoute
  +_HeroState fromHero
  +_HeroState toHero
  +Tween<Rect?> Function(Rect?, Rect?)? createRectTween
  +Widget Function(BuildContext, Animation<double>, HeroFlightDirection, BuildContext, BuildContext) shuttleBuilder
  +bool isUserGestureTransition
  +bool isDiverted
  +Rect fromHeroLocation
  +Rect toHeroLocation
  +bool isValid
  +Object tag
  +Animation<double> animation
  +Tween<Rect?> createHeroRectTween()
  {static} -Rect _boundingBoxFor()
  +String toString()
}

"widgets::heroes::_HeroFlightManifest" o-- "widgets::heroes::HeroFlightDirection"
"widgets::heroes::_HeroFlightManifest" o-- "widgets::overlay::OverlayState"
"widgets::heroes::_HeroFlightManifest" o-- "dart::ui::Size"
"widgets::heroes::_HeroFlightManifest" o-- "widgets::pages::PageRoute<dynamic>"
"widgets::heroes::_HeroFlightManifest" o-- "widgets::heroes::_HeroState"
"widgets::heroes::_HeroFlightManifest" o-- "widgets::heroes::Tween<Rect> Function(Rect, Rect)"
"widgets::heroes::_HeroFlightManifest" o-- "widgets::heroes::Widget Function(BuildContext, Animation<double>, HeroFlightDirection, BuildContext, BuildContext)"
"widgets::heroes::_HeroFlightManifest" o-- "dart::ui::Rect"
"widgets::heroes::_HeroFlightManifest" o-- "animation::animation::Animation<double>"

class "widgets::heroes::_HeroFlight" {
  +void Function(_HeroFlight) onFlightEnded
  +Tween<Rect?> heroRectTween
  +Widget? shuttle
  -Animation<double> _heroOpacity
  -ProxyAnimation _proxyAnimation
  +_HeroFlightManifest manifest
  +OverlayEntry? overlayEntry
  -bool _aborted
  {static} -Animatable<double> _reverseTween
  -bool _scheduledPerformAnimationUpdate
  -Widget _buildOverlay()
  -void _performAnimationUpdate()
  -void _handleAnimationUpdate()
  +void dispose()
  +void onTick()
  +void start()
  +void divert()
  +void abort()
  +String toString()
}

"widgets::heroes::_HeroFlight" o-- "widgets::heroes::void Function(_HeroFlight)"
"widgets::heroes::_HeroFlight" o-- "animation::tween::Tween<Rect>"
"widgets::heroes::_HeroFlight" o-- "widgets::framework::Widget"
"widgets::heroes::_HeroFlight" o-- "animation::animation::Animation<double>"
"widgets::heroes::_HeroFlight" o-- "animation::animations::ProxyAnimation"
"widgets::heroes::_HeroFlight" o-- "widgets::heroes::_HeroFlightManifest"
"widgets::heroes::_HeroFlight" o-- "widgets::overlay::OverlayEntry"
"widgets::heroes::_HeroFlight" o-- "animation::tween::Animatable<double>"

class "widgets::heroes::HeroController" {
  +Tween<Rect?> Function(Rect?, Rect?)? createRectTween
  -Map<Object, _HeroFlight> _flights
  +void didPush()
  +void didPop()
  +void didReplace()
  +void didStartUserGesture()
  +void didStopUserGesture()
  -void _maybeStartHeroTransition()
  -void _startHeroTransition()
  -void _handleFlightEnded()
  -Widget _defaultHeroFlightShuttleBuilder()
  +void dispose()
}

"widgets::heroes::HeroController" o-- "widgets::heroes::Tween<Rect> Function(Rect, Rect)"
"widgets::navigator::NavigatorObserver" <|-- "widgets::heroes::HeroController"

class "widgets::heroes::HeroMode" {
  +Widget child
  +bool enabled
  +Widget build()
  +void debugFillProperties()
}

"widgets::heroes::HeroMode" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::heroes::HeroMode"

class "widgets::heroes::HeroFlightDirection" {
  +int index
  {static} +List<HeroFlightDirection> values
  {static} +HeroFlightDirection push
  {static} +HeroFlightDirection pop
}

"widgets::heroes::HeroFlightDirection" o-- "widgets::heroes::HeroFlightDirection"
"dart::core::Enum" <|-- "widgets::heroes::HeroFlightDirection"

class "widgets::size_changed_layout_notifier::SizeChangedLayoutNotification" {
}

"widgets::notification_listener::LayoutChangedNotification" <|-- "widgets::size_changed_layout_notifier::SizeChangedLayoutNotification"

class "widgets::size_changed_layout_notifier::SizeChangedLayoutNotifier" {
  +RenderObject createRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::size_changed_layout_notifier::SizeChangedLayoutNotifier"

class "widgets::size_changed_layout_notifier::_RenderSizeChangedWithCallback" {
  +void Function() onLayoutChangedCallback
  -Size? _oldSize
  +void performLayout()
}

"widgets::size_changed_layout_notifier::_RenderSizeChangedWithCallback" o-- "dart::ui::void Function()"
"widgets::size_changed_layout_notifier::_RenderSizeChangedWithCallback" o-- "dart::ui::Size"
"rendering::proxy_box::RenderProxyBox" <|-- "widgets::size_changed_layout_notifier::_RenderSizeChangedWithCallback"

class "widgets::widget_inspector::_ProxyLayer" {
  -Layer _layer
  +void addToScene()
  #bool findAnnotations()
}

"widgets::widget_inspector::_ProxyLayer" o-- "rendering::layer::Layer"
"rendering::layer::Layer" <|-- "widgets::widget_inspector::_ProxyLayer"

class "widgets::widget_inspector::_MulticastCanvas" {
  -Canvas _main
  -Canvas _screenshot
  +void clipPath()
  +void clipRRect()
  +void clipRect()
  +void drawArc()
  +void drawAtlas()
  +void drawCircle()
  +void drawColor()
  +void drawDRRect()
  +void drawImage()
  +void drawImageNine()
  +void drawImageRect()
  +void drawLine()
  +void drawOval()
  +void drawPaint()
  +void drawParagraph()
  +void drawPath()
  +void drawPicture()
  +void drawPoints()
  +void drawRRect()
  +void drawRawAtlas()
  +void drawRawPoints()
  +void drawRect()
  +void drawShadow()
  +void drawVertices()
  +int getSaveCount()
  +void restore()
  +void rotate()
  +void save()
  +void saveLayer()
  +void scale()
  +void skew()
  +void transform()
  +void translate()
  +dynamic noSuchMethod()
}

"widgets::widget_inspector::_MulticastCanvas" o-- "dart::ui::Canvas"
"dart::ui::Canvas" <|-- "widgets::widget_inspector::_MulticastCanvas"

class "widgets::widget_inspector::_ScreenshotContainerLayer" {
  +void addToScene()
}

"rendering::layer::OffsetLayer" <|-- "widgets::widget_inspector::_ScreenshotContainerLayer"

class "widgets::widget_inspector::_ScreenshotData" {
  +RenderObject target
  +OffsetLayer containerLayer
  +bool foundTarget
  +bool includeInScreenshot
  +bool includeInRegularContext
  +Offset screenshotOffset
}

"widgets::widget_inspector::_ScreenshotData" o-- "rendering::object::RenderObject"
"widgets::widget_inspector::_ScreenshotData" o-- "rendering::layer::OffsetLayer"
"widgets::widget_inspector::_ScreenshotData" o-- "dart::ui::Offset"

class "widgets::widget_inspector::_ScreenshotPaintingContext" {
  -_ScreenshotData _data
  -PictureLayer? _screenshotCurrentLayer
  -PictureRecorder? _screenshotRecorder
  -Canvas? _screenshotCanvas
  -_MulticastCanvas? _multicastCanvas
  +Canvas canvas
  -bool _isScreenshotRecording
  -void _startRecordingScreenshot()
  +void stopRecordingIfNeeded()
  -void _stopRecordingScreenshotIfNeeded()
  +void appendLayer()
  +PaintingContext createChildContext()
  +void paintChild()
  {static} +Future<Image> toImage()
}

"widgets::widget_inspector::_ScreenshotPaintingContext" o-- "widgets::widget_inspector::_ScreenshotData"
"widgets::widget_inspector::_ScreenshotPaintingContext" o-- "rendering::layer::PictureLayer"
"widgets::widget_inspector::_ScreenshotPaintingContext" o-- "dart::ui::PictureRecorder"
"widgets::widget_inspector::_ScreenshotPaintingContext" o-- "dart::ui::Canvas"
"widgets::widget_inspector::_ScreenshotPaintingContext" o-- "widgets::widget_inspector::_MulticastCanvas"
"rendering::object::PaintingContext" <|-- "widgets::widget_inspector::_ScreenshotPaintingContext"

class "widgets::widget_inspector::_DiagnosticsPathNode" {
  +DiagnosticsNode node
  +List<DiagnosticsNode> children
  +int? childIndex
}

"widgets::widget_inspector::_DiagnosticsPathNode" o-- "foundation::diagnostics::DiagnosticsNode"

class "widgets::widget_inspector::InspectorReferenceData" {
  -WeakReference<Object>? _ref
  -Object? _value
  +String id
  +int count
  +Object? value
}

class "widgets::widget_inspector::_WidgetInspectorService" {
}

"widgets::widget_inspector::WidgetInspectorService" <|-- "widgets::widget_inspector::_WidgetInspectorService"

class "widgets::widget_inspector::_LocationCount" {
  +int id
  +bool local
  +_Location location
  -int _count
  +int count
  +void reset()
  +void increment()
}

"widgets::widget_inspector::_LocationCount" o-- "widgets::widget_inspector::_Location"

class "widgets::widget_inspector::_ElementLocationStatsTracker" {
  -List<_LocationCount?> _stats
  +List<_LocationCount> active
  +List<_LocationCount> newLocations
  +void add()
  +void resetCounts()
  +Map<String, dynamic> exportToJson()
}

class "widgets::widget_inspector::_WidgetForTypeTests" {
  +Element createElement()
}

"widgets::framework::Widget" <|-- "widgets::widget_inspector::_WidgetForTypeTests"

class "widgets::widget_inspector::WidgetInspector" {
  +Widget child
  +Widget Function(BuildContext, void Function())? selectButtonBuilder
  +State<WidgetInspector> createState()
}

"widgets::widget_inspector::WidgetInspector" o-- "widgets::framework::Widget"
"widgets::widget_inspector::WidgetInspector" o-- "widgets::widget_inspector::Widget Function(BuildContext, void Function())"
"widgets::framework::StatefulWidget" <|-- "widgets::widget_inspector::WidgetInspector"

class "widgets::widget_inspector::_WidgetInspectorState" {
  -Offset? _lastPointerLocation
  +InspectorSelection selection
  +bool isSelectMode
  -GlobalKey<State<StatefulWidget>> _ignorePointerKey
  {static} -double _edgeHitMargin
  +void initState()
  +void dispose()
  -void _selectionInformationChanged()
  -bool _hitTestHelper()
  +List<RenderObject> hitTest()
  -void _inspectAt()
  -void _handlePanDown()
  -void _handlePanUpdate()
  -void _handlePanEnd()
  -void _handleTap()
  -void _handleEnableSelect()
  +Widget build()
}

"widgets::widget_inspector::_WidgetInspectorState" o-- "dart::ui::Offset"
"widgets::widget_inspector::_WidgetInspectorState" o-- "widgets::widget_inspector::InspectorSelection"
"widgets::widget_inspector::_WidgetInspectorState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::framework::State" <|-- "widgets::widget_inspector::_WidgetInspectorState"
"widgets::binding::WidgetsBindingObserver" <|-- "widgets::widget_inspector::_WidgetInspectorState"

class "widgets::widget_inspector::InspectorSelection" {
  -List<RenderObject> _candidates
  -int _index
  -RenderObject? _current
  -Element? _currentElement
  +List<RenderObject> candidates
  +int index
  +RenderObject? current
  +Element? currentElement
  +bool active
  +void clear()
  -void _computeCurrent()
}

"widgets::widget_inspector::InspectorSelection" o-- "rendering::object::RenderObject"
"widgets::widget_inspector::InspectorSelection" o-- "widgets::framework::Element"
"foundation::change_notifier::ChangeNotifier" <|-- "widgets::widget_inspector::InspectorSelection"

class "widgets::widget_inspector::_InspectorOverlay" {
  +InspectorSelection selection
  +_RenderInspectorOverlay createRenderObject()
  +void updateRenderObject()
}

"widgets::widget_inspector::_InspectorOverlay" o-- "widgets::widget_inspector::InspectorSelection"
"widgets::framework::LeafRenderObjectWidget" <|-- "widgets::widget_inspector::_InspectorOverlay"

class "widgets::widget_inspector::_RenderInspectorOverlay" {
  -InspectorSelection _selection
  +InspectorSelection selection
  +bool sizedByParent
  +bool alwaysNeedsCompositing
  +Size computeDryLayout()
  +void paint()
}

"widgets::widget_inspector::_RenderInspectorOverlay" o-- "widgets::widget_inspector::InspectorSelection"
"rendering::box::RenderBox" <|-- "widgets::widget_inspector::_RenderInspectorOverlay"

class "widgets::widget_inspector::_TransformedRect" {
  +Rect rect
  +Matrix4 transform
  +int hashCode
  +bool ==()
}

"widgets::widget_inspector::_TransformedRect" o-- "dart::ui::Rect"
"widgets::widget_inspector::_TransformedRect" o-- "vector_math::vector_math_64::Matrix4"

class "widgets::widget_inspector::_InspectorOverlayRenderState" {
  +Rect overlayRect
  +_TransformedRect selected
  +List<_TransformedRect> candidates
  +String tooltip
  +TextDirection textDirection
  +int hashCode
  +bool ==()
}

"widgets::widget_inspector::_InspectorOverlayRenderState" o-- "dart::ui::Rect"
"widgets::widget_inspector::_InspectorOverlayRenderState" o-- "widgets::widget_inspector::_TransformedRect"
"widgets::widget_inspector::_InspectorOverlayRenderState" o-- "dart::ui::TextDirection"

class "widgets::widget_inspector::_InspectorOverlayLayer" {
  +InspectorSelection selection
  +Rect overlayRect
  +RenderObject? rootRenderObject
  -_InspectorOverlayRenderState? _lastState
  -Picture _picture
  -TextPainter? _textPainter
  -double? _textPainterMaxWidth
  +void dispose()
  +void addToScene()
  -Picture _buildPicture()
  -void _paintDescription()
  #bool findAnnotations()
  -bool _isInInspectorRenderObjectTree()
}

"widgets::widget_inspector::_InspectorOverlayLayer" o-- "widgets::widget_inspector::InspectorSelection"
"widgets::widget_inspector::_InspectorOverlayLayer" o-- "dart::ui::Rect"
"widgets::widget_inspector::_InspectorOverlayLayer" o-- "rendering::object::RenderObject"
"widgets::widget_inspector::_InspectorOverlayLayer" o-- "widgets::widget_inspector::_InspectorOverlayRenderState"
"widgets::widget_inspector::_InspectorOverlayLayer" o-- "dart::ui::Picture"
"widgets::widget_inspector::_InspectorOverlayLayer" o-- "painting::text_painter::TextPainter"
"rendering::layer::Layer" <|-- "widgets::widget_inspector::_InspectorOverlayLayer"

abstract class "widgets::widget_inspector::_HasCreationLocation" {
  -_Location? _location
}

"widgets::widget_inspector::_HasCreationLocation" o-- "widgets::widget_inspector::_Location"

class "widgets::widget_inspector::_Location" {
  +String file
  +int line
  +int column
  +String? name
  +Map<String, Object?> toJsonMap()
  +String toString()
}

class "widgets::widget_inspector::DevToolsDeepLinkProperty" {
}

"foundation::diagnostics::DiagnosticsProperty" <|-- "widgets::widget_inspector::DevToolsDeepLinkProperty"

class "widgets::widget_inspector::InspectorSerializationDelegate" {
  +WidgetInspectorService service
  +String? groupName
  +bool summaryTree
  +int maxDescendantsTruncatableNode
  +bool includeProperties
  +int subtreeDepth
  +bool expandPropertyValues
  +Map<String, Object>? Function(DiagnosticsNode, InspectorSerializationDelegate)? addAdditionalPropertiesCallback
  -List<DiagnosticsNode> _nodesCreatedByLocalProject
  -bool _interactive
  +Map<String, Object?> additionalNodeProperties()
  +DiagnosticsSerializationDelegate delegateForNode()
  +List<DiagnosticsNode> filterChildren()
  +List<DiagnosticsNode> filterProperties()
  +List<DiagnosticsNode> truncateNodesList()
  +DiagnosticsSerializationDelegate copyWith()
}

"widgets::widget_inspector::InspectorSerializationDelegate" o-- "widgets::widget_inspector::WidgetInspectorService"
"widgets::widget_inspector::InspectorSerializationDelegate" o-- "null::Map<String, Object> Function(DiagnosticsNode, InspectorSerializationDelegate)"
"foundation::diagnostics::DiagnosticsSerializationDelegate" <|-- "widgets::widget_inspector::InspectorSerializationDelegate"

class "widgets::widget_inspector::_WidgetFactory" {
}

class "widgets::widget_inspector::WeakMap" {
  -Expando<Object> _objects
  -Map<K, V> _primitives
  -bool _isPrimitive()
  +V? []()
  +void []=()
  +V? remove()
  +void clear()
}

abstract class "widgets::widget_inspector::WidgetInspectorService" {
  -List<String?> _serializeRing
  -int _serializeRingIndex
  {static} -WidgetInspectorService _instance
  +ValueNotifier<bool> isSelectMode
  {static} -bool _debugServiceExtensionsRegistered
  +InspectorSelection selection
  +void Function()? selectionChangedCallback
  -Map<String, Set<InspectorReferenceData>> _groups
  -Map<String, InspectorReferenceData> _idToReferenceData
  -WeakMap<Object, String> _objectToId
  -int _nextId
  -List<String>? _pubRootDirectories
  -HashMap<String, bool> _isLocalCreationCache
  -bool _trackRebuildDirtyWidgets
  -bool _trackRepaintWidgets
  {static} -String _consoleObjectGroup
  -int _errorsSinceReload
  -bool? _widgetCreationTracked
  -Duration _frameStart
  -_ElementLocationStatsTracker _rebuildStats
  -_ElementLocationStatsTracker _repaintStats
  {static} +WidgetInspectorService instance
  #void registerServiceExtension()
  -void _registerSignalServiceExtension()
  -void _registerObjectGroupServiceExtension()
  -void _registerBoolServiceExtension()
  -void _postExtensionStateChangedEvent()
  -void _registerServiceExtensionWithArg()
  -void _registerServiceExtensionVarArgs()
  #Future<void> forceRebuild()
  -void _reportStructuredError()
  -void _resetErrorCount()
  +bool isStructuredErrorsEnabled()
  +void initServiceExtensions()
  -void _clearStats()
  #void disposeAllGroups()
  #void resetAllState()
  #void disposeGroup()
  -void _decrementReferenceCount()
  #String? toId()
  #bool isWidgetTreeReady()
  #Object? toObject()
  #Object? toObjectForSourceLocation()
  #void disposeId()
  #void setPubRootDirectories()
  #void resetPubRootDirectories()
  #void addPubRootDirectories()
  #void removePubRootDirectories()
  #Future<Map<String, dynamic>> pubRootDirectories()
  #bool setSelectionById()
  #bool setSelection()
  -void _sendInspectEvent()
  -String? _devToolsInspectorUriForElement()
  +String devToolsInspectorUri()
  #String getParentChain()
  -List<Object?> _getParentChain()
  -Map<String, Object?>? _pathNodeToJson()
  -List<Element> _getRawElementParentChain()
  -List<_DiagnosticsPathNode> _getElementParentChain()
  -List<_DiagnosticsPathNode>? _getRenderObjectParentChain()
  -Map<String, Object?>? _nodeToJson()
  -bool _isValueCreatedByLocalProject()
  -bool _isLocalCreationLocationImpl()
  -bool _isLocalCreationLocation()
  -String _safeJsonEncode()
  -List<DiagnosticsNode> _truncateNodes()
  -List<Map<String, Object?>> _nodesToJson()
  #String getProperties()
  -List<Object> _getProperties()
  +String getChildren()
  -List<Object> _getChildren()
  +String getChildrenSummaryTree()
  -DiagnosticsNode? _idToDiagnosticsNode()
  {static} +DiagnosticsNode? objectToDiagnosticsNode()
  -List<Object> _getChildrenSummaryTree()
  +String getChildrenDetailsSubtree()
  -List<Object> _getChildrenDetailsSubtree()
  -bool _shouldShowInSummaryTree()
  -List<DiagnosticsNode> _getChildrenFiltered()
  -List<DiagnosticsNode> _filterChildren()
  +String getRootWidget()
  -Map<String, Object?>? _getRootWidget()
  +String getRootWidgetSummaryTree()
  -Map<String, Object?>? _getRootWidgetSummaryTree()
  -Future<Map<String, Object?>> _getRootWidgetSummaryTreeWithPreviews()
  +String getDetailsSubtree()
  -Map<String, Object?>? _getDetailsSubtree()
  #String getSelectedWidget()
  #Future<Image?> screenshot()
  -Future<Map<String, Object?>> _getLayoutExplorerNode()
  -Future<Map<String, dynamic>> _setFlexFit()
  -Future<Map<String, dynamic>> _setFlexFactor()
  -Future<Map<String, dynamic>> _setFlexProperties()
  -T _toEnumEntry()
  -Map<String, Object?>? _getSelectedWidget()
  -DiagnosticsNode? _getSelectedWidgetDiagnosticsNode()
  +String getSelectedSummaryWidget()
  -_Location? _getSelectedSummaryWidgetLocation()
  -DiagnosticsNode? _getSelectedSummaryDiagnosticsNode()
  -Map<String, Object?>? _getSelectedSummaryWidget()
  +bool isWidgetCreationTracked()
  -void _onFrameStart()
  -void _onFrameEnd()
  -void _postStatsEvent()
  #void postEvent()
  #void inspect()
  -void _onRebuildWidget()
  -void _onPaint()
  +void performReassemble()
}

"widgets::widget_inspector::WidgetInspectorService" o-- "widgets::widget_inspector::WidgetInspectorService"
"widgets::widget_inspector::WidgetInspectorService" o-- "foundation::change_notifier::ValueNotifier<bool>"
"widgets::widget_inspector::WidgetInspectorService" o-- "widgets::widget_inspector::InspectorSelection"
"widgets::widget_inspector::WidgetInspectorService" o-- "widgets::widget_inspector::void Function()"
"widgets::widget_inspector::WidgetInspectorService" o-- "widgets::widget_inspector::WeakMap<Object, String>"
"widgets::widget_inspector::WidgetInspectorService" o-- "dart::collection::HashMap<String, bool>"
"widgets::widget_inspector::WidgetInspectorService" o-- "widgets::widget_inspector::_ElementLocationStatsTracker"

class "widgets::viewport::Viewport" {
  +AxisDirection axisDirection
  +AxisDirection? crossAxisDirection
  +double anchor
  +ViewportOffset offset
  +Key? center
  +double? cacheExtent
  +CacheExtentStyle cacheExtentStyle
  +Clip clipBehavior
  {static} +AxisDirection getDefaultCrossAxisDirection()
  +RenderViewport createRenderObject()
  +void updateRenderObject()
  +MultiChildRenderObjectElement createElement()
  +void debugFillProperties()
}

"widgets::viewport::Viewport" o-- "painting::basic_types::AxisDirection"
"widgets::viewport::Viewport" o-- "rendering::viewport_offset::ViewportOffset"
"widgets::viewport::Viewport" o-- "foundation::key::Key"
"widgets::viewport::Viewport" o-- "rendering::viewport::CacheExtentStyle"
"widgets::viewport::Viewport" o-- "dart::ui::Clip"
"widgets::framework::MultiChildRenderObjectWidget" <|-- "widgets::viewport::Viewport"

class "widgets::viewport::_ViewportElement" {
  -bool _doingMountOrUpdate
  -int? _centerSlotIndex
  +RenderViewport renderObject
  +void mount()
  +void update()
  -void _updateCenter()
  +void insertRenderObjectChild()
  +void moveRenderObjectChild()
  +void removeRenderObjectChild()
  +void debugVisitOnstageChildren()
}

"widgets::viewport::_ViewportElement" o-- "rendering::viewport::RenderViewport"
"widgets::framework::MultiChildRenderObjectElement" <|-- "widgets::viewport::_ViewportElement"
"widgets::framework::NotifiableElementMixin" <|-- "widgets::viewport::_ViewportElement"
"widgets::scroll_notification::ViewportElementMixin" <|-- "widgets::viewport::_ViewportElement"

class "widgets::viewport::ShrinkWrappingViewport" {
  +AxisDirection axisDirection
  +AxisDirection? crossAxisDirection
  +ViewportOffset offset
  +Clip clipBehavior
  +RenderShrinkWrappingViewport createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::viewport::ShrinkWrappingViewport" o-- "painting::basic_types::AxisDirection"
"widgets::viewport::ShrinkWrappingViewport" o-- "rendering::viewport_offset::ViewportOffset"
"widgets::viewport::ShrinkWrappingViewport" o-- "dart::ui::Clip"
"widgets::framework::MultiChildRenderObjectWidget" <|-- "widgets::viewport::ShrinkWrappingViewport"

abstract class "widgets::scroll_context::ScrollContext" {
  +BuildContext? notificationContext
  +BuildContext storageContext
  +TickerProvider vsync
  +AxisDirection axisDirection
  +double devicePixelRatio
  +void setIgnorePointer()
  +void setCanDrag()
  +void setSemanticsActions()
  +void saveOffset()
}

"widgets::scroll_context::ScrollContext" o-- "widgets::framework::BuildContext"
"widgets::scroll_context::ScrollContext" o-- "scheduler::ticker::TickerProvider"
"widgets::scroll_context::ScrollContext" o-- "painting::basic_types::AxisDirection"

class "widgets::automatic_keep_alive::AutomaticKeepAlive" {
  +Widget child
  +State<AutomaticKeepAlive> createState()
}

"widgets::automatic_keep_alive::AutomaticKeepAlive" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::automatic_keep_alive::AutomaticKeepAlive"

class "widgets::automatic_keep_alive::_AutomaticKeepAliveState" {
  -Map<Listenable, void Function()>? _handles
  -Widget _child
  -bool _keepingAlive
  +void initState()
  +void didUpdateWidget()
  -void _updateChild()
  +void dispose()
  -bool _addClient()
  -ParentDataElement<KeepAliveParentDataMixin>? _getChildElement()
  -void _updateParentDataOfChild()
  -void Function() _createCallback()
  +Widget build()
  +void debugFillProperties()
}

"widgets::automatic_keep_alive::_AutomaticKeepAliveState" o-- "widgets::framework::Widget"
"widgets::framework::State" <|-- "widgets::automatic_keep_alive::_AutomaticKeepAliveState"

class "widgets::automatic_keep_alive::KeepAliveNotification" {
  +Listenable handle
}

"widgets::automatic_keep_alive::KeepAliveNotification" o-- "foundation::change_notifier::Listenable"
"widgets::notification_listener::Notification" <|-- "widgets::automatic_keep_alive::KeepAliveNotification"

class "widgets::automatic_keep_alive::KeepAliveHandle" {
  +void release()
  +void dispose()
}

"foundation::change_notifier::ChangeNotifier" <|-- "widgets::automatic_keep_alive::KeepAliveHandle"

class "widgets::automatic_keep_alive::_NullWidget" {
  +Widget build()
}

"widgets::framework::StatelessWidget" <|-- "widgets::automatic_keep_alive::_NullWidget"

abstract class "widgets::automatic_keep_alive::AutomaticKeepAliveClientMixin" {
  -KeepAliveHandle? _keepAliveHandle
  +bool wantKeepAlive
  -void _ensureKeepAlive()
  -void _releaseKeepAlive()
  #void updateKeepAlive()
  +void initState()
  +void deactivate()
  +Widget build()
}

"widgets::automatic_keep_alive::AutomaticKeepAliveClientMixin" o-- "widgets::automatic_keep_alive::KeepAliveHandle"

class "widgets::framework::_DebugOnly" {
}

class "widgets::framework::ObjectKey" {
  +Object? value
  +int hashCode
  +bool ==()
  +String toString()
}

"foundation::key::LocalKey" <|-- "widgets::framework::ObjectKey"

abstract class "widgets::framework::GlobalKey" {
  -Element? _currentElement
  +BuildContext? currentContext
  +Widget? currentWidget
  +T? currentState
}

"widgets::framework::GlobalKey" o-- "widgets::framework::Element"
"widgets::framework::GlobalKey" o-- "widgets::framework::BuildContext"
"widgets::framework::GlobalKey" o-- "widgets::framework::Widget"
"foundation::key::Key" <|-- "widgets::framework::GlobalKey"

class "widgets::framework::LabeledGlobalKey" {
  -String? _debugLabel
  +String toString()
}

"widgets::framework::GlobalKey" <|-- "widgets::framework::LabeledGlobalKey"

class "widgets::framework::GlobalObjectKey" {
  +Object value
  +int hashCode
  +bool ==()
  +String toString()
}

"widgets::framework::GlobalKey" <|-- "widgets::framework::GlobalObjectKey"

abstract class "widgets::framework::Widget" {
  +Key? key
  +int hashCode
  #Element createElement()
  +String toStringShort()
  +void debugFillProperties()
  +bool ==()
  {static} +bool canUpdate()
  {static} -int _debugConcreteSubtype()
}

"widgets::framework::Widget" o-- "foundation::key::Key"
"foundation::diagnostics::DiagnosticableTree" <|-- "widgets::framework::Widget"

abstract class "widgets::framework::StatelessWidget" {
  +StatelessElement createElement()
  #Widget build()
}

"widgets::framework::Widget" <|-- "widgets::framework::StatelessWidget"

abstract class "widgets::framework::StatefulWidget" {
  +StatefulElement createElement()
  #State<StatefulWidget> createState()
}

"widgets::framework::Widget" <|-- "widgets::framework::StatefulWidget"

abstract class "widgets::framework::State" {
  -T? _widget
  -_StateLifecycle _debugLifecycleState
  -StatefulElement? _element
  +T widget
  +BuildContext context
  +bool mounted
  -bool _debugTypesAreRight()
  #void initState()
  #void didUpdateWidget()
  #void reassemble()
  #void setState()
  #void deactivate()
  #void activate()
  #void dispose()
  #Widget build()
  #void didChangeDependencies()
  +void debugFillProperties()
}

"widgets::framework::State" o-- "widgets::framework::_StateLifecycle"
"widgets::framework::State" o-- "widgets::framework::StatefulElement"
"widgets::framework::State" o-- "widgets::framework::BuildContext"
"foundation::diagnostics::Diagnosticable" <|-- "widgets::framework::State"

abstract class "widgets::framework::ProxyWidget" {
  +Widget child
}

"widgets::framework::ProxyWidget" o-- "widgets::framework::Widget"
"widgets::framework::Widget" <|-- "widgets::framework::ProxyWidget"

abstract class "widgets::framework::ParentDataWidget" {
  +Type debugTypicalAncestorWidgetClass
  +String debugTypicalAncestorWidgetDescription
  +ParentDataElement<T> createElement()
  +bool debugIsValidRenderObject()
  -Iterable<DiagnosticsNode> _debugDescribeIncorrectParentDataType()
  #void applyParentData()
  #bool debugCanApplyOutOfTurn()
}

"widgets::framework::ProxyWidget" <|-- "widgets::framework::ParentDataWidget"

abstract class "widgets::framework::InheritedWidget" {
  +InheritedElement createElement()
  #bool updateShouldNotify()
}

"widgets::framework::ProxyWidget" <|-- "widgets::framework::InheritedWidget"

abstract class "widgets::framework::RenderObjectWidget" {
  +RenderObjectElement createElement()
  #RenderObject createRenderObject()
  #void updateRenderObject()
  #void didUnmountRenderObject()
}

"widgets::framework::Widget" <|-- "widgets::framework::RenderObjectWidget"

abstract class "widgets::framework::LeafRenderObjectWidget" {
  +LeafRenderObjectElement createElement()
}

"widgets::framework::RenderObjectWidget" <|-- "widgets::framework::LeafRenderObjectWidget"

abstract class "widgets::framework::SingleChildRenderObjectWidget" {
  +Widget? child
  +SingleChildRenderObjectElement createElement()
}

"widgets::framework::SingleChildRenderObjectWidget" o-- "widgets::framework::Widget"
"widgets::framework::RenderObjectWidget" <|-- "widgets::framework::SingleChildRenderObjectWidget"

abstract class "widgets::framework::MultiChildRenderObjectWidget" {
  +List<Widget> children
  +MultiChildRenderObjectElement createElement()
}

"widgets::framework::RenderObjectWidget" <|-- "widgets::framework::MultiChildRenderObjectWidget"

class "widgets::framework::_InactiveElements" {
  -bool _locked
  -Set<Element> _elements
  -void _unmount()
  -void _unmountAll()
  {static} -void _deactivateRecursively()
  +void add()
  +void remove()
  +bool debugContains()
}

abstract class "widgets::framework::BuildContext" {
  +Widget widget
  +BuildOwner? owner
  +bool mounted
  +bool debugDoingBuild
  +Size? size
  +RenderObject? findRenderObject()
  +InheritedWidget dependOnInheritedElement()
  +T? dependOnInheritedWidgetOfExactType()
  +T? getInheritedWidgetOfExactType()
  +InheritedElement? getElementForInheritedWidgetOfExactType()
  +T? findAncestorWidgetOfExactType()
  +T? findAncestorStateOfType()
  +T? findRootAncestorStateOfType()
  +T? findAncestorRenderObjectOfType()
  +void visitAncestorElements()
  +void visitChildElements()
  +void dispatchNotification()
  +DiagnosticsNode describeElement()
  +DiagnosticsNode describeWidget()
  +List<DiagnosticsNode> describeMissingAncestor()
  +DiagnosticsNode describeOwnershipChain()
}

"widgets::framework::BuildContext" o-- "widgets::framework::Widget"
"widgets::framework::BuildContext" o-- "widgets::framework::BuildOwner"
"widgets::framework::BuildContext" o-- "dart::ui::Size"

class "widgets::framework::BuildOwner" {
  +void Function()? onBuildScheduled
  -_InactiveElements _inactiveElements
  -List<Element> _dirtyElements
  -bool _scheduledFlushDirtyElements
  -bool? _dirtyElementsNeedsResorting
  +FocusManager focusManager
  -int _debugStateLockLevel
  -bool _debugBuilding
  -Element? _debugCurrentBuildTarget
  -Map<Element, Set<GlobalKey<State<StatefulWidget>>>>? _debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans
  -Map<GlobalKey<State<StatefulWidget>>, Element> _globalKeyRegistry
  -Set<Element>? _debugIllFatedElements
  -Map<Element, Map<Element, GlobalKey<State<StatefulWidget>>>>? _debugGlobalKeyReservations
  -bool _debugIsInBuildScope
  -bool _debugStateLocked
  +bool debugBuilding
  +int globalKeyCount
  +void scheduleBuildFor()
  +void lockState()
  +void buildScope()
  -void _debugTrackElementThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans()
  -void _debugElementWasRebuilt()
  -void _debugRemoveGlobalKeyReservationFor()
  -void _registerGlobalKey()
  -void _unregisterGlobalKey()
  -void _debugReserveGlobalKeyFor()
  -void _debugVerifyGlobalKeyReservation()
  -void _debugVerifyIllFatedPopulation()
  +void finalizeTree()
  +void reassemble()
}

"widgets::framework::BuildOwner" o-- "dart::ui::void Function()"
"widgets::framework::BuildOwner" o-- "widgets::framework::_InactiveElements"
"widgets::framework::BuildOwner" o-- "widgets::focus_manager::FocusManager"
"widgets::framework::BuildOwner" o-- "widgets::framework::Element"

class "widgets::framework::_NotificationNode" {
  +NotifiableElementMixin? current
  +_NotificationNode? parent
  +void dispatchNotification()
}

"widgets::framework::_NotificationNode" o-- "widgets::framework::NotifiableElementMixin"
"widgets::framework::_NotificationNode" o-- "widgets::framework::_NotificationNode"

abstract class "widgets::framework::Element" {
  -Element? _parent
  -_NotificationNode? _notificationTree
  -Object? _slot
  -int _depth
  -Widget? _widget
  -BuildOwner? _owner
  -_ElementLifecycle _lifecycleState
  -Set<Element>? _debugForgottenChildrenWithGlobalKey
  -dynamic _inheritedElements
  -Set<InheritedElement>? _dependencies
  -bool _hadUnsatisfiedDependencies
  -bool _dirty
  -bool _inDirtyList
  -bool _debugBuiltOnce
  +Object? slot
  +int depth
  +Widget widget
  +bool mounted
  +bool debugIsDefunct
  +bool debugIsActive
  +BuildOwner? owner
  +RenderObject? renderObject
  +Element? renderObjectAttachingChild
  +Size? size
  +bool dirty
  +bool ==()
  {static} -int _sort()
  {static} -int _debugConcreteSubtype()
  #void reassemble()
  -bool _debugIsInScope()
  +List<DiagnosticsNode> describeMissingAncestor()
  {static} +DiagnosticsNode describeElements()
  +DiagnosticsNode describeElement()
  +DiagnosticsNode describeWidget()
  +DiagnosticsNode describeOwnershipChain()
  +void visitChildren()
  +void debugVisitOnstageChildren()
  +void visitChildElements()
  #Element? updateChild()
  #List<Element> updateChildren()
  +void mount()
  -void _debugRemoveGlobalKeyReservation()
  +void update()
  #void updateSlotForChild()
  #void updateSlot()
  -void _updateDepth()
  +void detachRenderObject()
  +void attachRenderObject()
  -Element? _retakeInactiveElement()
  #Element inflateWidget()
  -void _debugCheckForCycles()
  #void deactivateChild()
  #void forgetChild()
  -void _activateWithParent()
  {static} -void _activateRecursively()
  +void activate()
  +void deactivate()
  +void debugDeactivated()
  +void unmount()
  +bool debugExpectsRenderObjectForSlot()
  +RenderObject? findRenderObject()
  -bool _debugCheckStateIsActiveForAncestorLookup()
  #bool doesDependOnInheritedElement()
  +InheritedWidget dependOnInheritedElement()
  +T? dependOnInheritedWidgetOfExactType()
  +T? getInheritedWidgetOfExactType()
  +InheritedElement? getElementForInheritedWidgetOfExactType()
  #void attachNotificationTree()
  -void _updateInheritance()
  +T? findAncestorWidgetOfExactType()
  +T? findAncestorStateOfType()
  +T? findRootAncestorStateOfType()
  +T? findAncestorRenderObjectOfType()
  +void visitAncestorElements()
  +void didChangeDependencies()
  -bool _debugCheckOwnerBuildTargetExists()
  +String debugGetCreatorChain()
  +List<Element> debugGetDiagnosticChain()
  +void dispatchNotification()
  +String toStringShort()
  +DiagnosticsNode toDiagnosticsNode()
  +void debugFillProperties()
  +List<DiagnosticsNode> debugDescribeChildren()
  +void markNeedsBuild()
  +void rebuild()
  #void performRebuild()
}

"widgets::framework::Element" o-- "widgets::framework::Element"
"widgets::framework::Element" o-- "widgets::framework::_NotificationNode"
"widgets::framework::Element" o-- "widgets::framework::Widget"
"widgets::framework::Element" o-- "widgets::framework::BuildOwner"
"widgets::framework::Element" o-- "widgets::framework::_ElementLifecycle"
"widgets::framework::Element" o-- "rendering::object::RenderObject"
"widgets::framework::Element" o-- "dart::ui::Size"
"foundation::diagnostics::DiagnosticableTree" <|-- "widgets::framework::Element"
"widgets::framework::BuildContext" <|-- "widgets::framework::Element"

class "widgets::framework::_ElementDiagnosticableTreeNode" {
  +bool stateful
  +Map<String, Object?> toJsonMap()
}

"foundation::diagnostics::DiagnosticableTreeNode" <|-- "widgets::framework::_ElementDiagnosticableTreeNode"

class "widgets::framework::ErrorWidget" {
  {static} +Widget Function(FlutterErrorDetails) builder
  +String message
  -FlutterError? _flutterError
  {static} -Widget _defaultErrorWidgetBuilder()
  {static} -String _stringify()
  +RenderBox createRenderObject()
  +void debugFillProperties()
}

"widgets::framework::ErrorWidget" o-- "widgets::framework::Widget Function(FlutterErrorDetails)"
"widgets::framework::ErrorWidget" o-- "foundation::assertions::FlutterError"
"widgets::framework::LeafRenderObjectWidget" <|-- "widgets::framework::ErrorWidget"

abstract class "widgets::framework::ComponentElement" {
  -Element? _child
  -bool _debugDoingBuild
  +bool debugDoingBuild
  +Element? renderObjectAttachingChild
  +void mount()
  -void _firstBuild()
  +void performRebuild()
  #Widget build()
  +void visitChildren()
  +void forgetChild()
}

"widgets::framework::ComponentElement" o-- "widgets::framework::Element"
"widgets::framework::Element" <|-- "widgets::framework::ComponentElement"

class "widgets::framework::StatelessElement" {
  +Widget build()
  +void update()
}

"widgets::framework::ComponentElement" <|-- "widgets::framework::StatelessElement"

class "widgets::framework::StatefulElement" {
  -State<StatefulWidget>? _state
  -bool _didChangeDependencies
  +State<StatefulWidget> state
  +Widget build()
  +void reassemble()
  -void _firstBuild()
  +void performRebuild()
  +void update()
  +void activate()
  +void deactivate()
  +void unmount()
  +InheritedWidget dependOnInheritedElement()
  +void didChangeDependencies()
  +DiagnosticsNode toDiagnosticsNode()
  +void debugFillProperties()
}

"widgets::framework::StatefulElement" o-- "widgets::framework::State<StatefulWidget>"
"widgets::framework::ComponentElement" <|-- "widgets::framework::StatefulElement"

abstract class "widgets::framework::ProxyElement" {
  +Widget build()
  +void update()
  #void updated()
  #void notifyClients()
}

"widgets::framework::ComponentElement" <|-- "widgets::framework::ProxyElement"

class "widgets::framework::ParentDataElement" {
  +Type debugParentDataType
  -void _applyParentData()
  +void applyWidgetOutOfTurn()
  +void notifyClients()
}

"widgets::framework::ProxyElement" <|-- "widgets::framework::ParentDataElement"

class "widgets::framework::InheritedElement" {
  -Map<Element, Object?> _dependents
  -void _updateInheritance()
  +void debugDeactivated()
  #Object? getDependencies()
  #void setDependencies()
  #void updateDependencies()
  #void notifyDependent()
  +void updated()
  +void notifyClients()
}

"widgets::framework::ProxyElement" <|-- "widgets::framework::InheritedElement"

abstract class "widgets::framework::RenderObjectElement" {
  -RenderObject? _renderObject
  -bool _debugDoingBuild
  -RenderObjectElement? _ancestorRenderObjectElement
  +RenderObject renderObject
  +Element? renderObjectAttachingChild
  +bool debugDoingBuild
  -RenderObjectElement? _findAncestorRenderObjectElement()
  -void _debugCheckCompetingAncestors()
  -List<ParentDataElement<ParentData>> _findAncestorParentDataElements()
  +void mount()
  +void update()
  -void _debugUpdateRenderObjectOwner()
  +void performRebuild()
  -void _performRebuild()
  +void deactivate()
  +void unmount()
  -void _updateParentData()
  +void updateSlot()
  +void attachRenderObject()
  +void detachRenderObject()
  #void insertRenderObjectChild()
  #void moveRenderObjectChild()
  #void removeRenderObjectChild()
  +void debugFillProperties()
}

"widgets::framework::RenderObjectElement" o-- "rendering::object::RenderObject"
"widgets::framework::RenderObjectElement" o-- "widgets::framework::RenderObjectElement"
"widgets::framework::RenderObjectElement" o-- "widgets::framework::Element"
"widgets::framework::Element" <|-- "widgets::framework::RenderObjectElement"

abstract class "widgets::framework::RootRenderObjectElement" {
}

"widgets::framework::RenderObjectElement" <|-- "widgets::framework::RootRenderObjectElement"
"widgets::framework::RootElementMixin" <|-- "widgets::framework::RootRenderObjectElement"

class "widgets::framework::LeafRenderObjectElement" {
  +void forgetChild()
  +void insertRenderObjectChild()
  +void moveRenderObjectChild()
  +void removeRenderObjectChild()
  +List<DiagnosticsNode> debugDescribeChildren()
}

"widgets::framework::RenderObjectElement" <|-- "widgets::framework::LeafRenderObjectElement"

class "widgets::framework::SingleChildRenderObjectElement" {
  -Element? _child
  +void visitChildren()
  +void forgetChild()
  +void mount()
  +void update()
  +void insertRenderObjectChild()
  +void moveRenderObjectChild()
  +void removeRenderObjectChild()
}

"widgets::framework::SingleChildRenderObjectElement" o-- "widgets::framework::Element"
"widgets::framework::RenderObjectElement" <|-- "widgets::framework::SingleChildRenderObjectElement"

class "widgets::framework::MultiChildRenderObjectElement" {
  -List<Element> _children
  -Set<Element> _forgottenChildren
  +ContainerRenderObjectMixin<RenderObject, ContainerParentDataMixin<RenderObject>> renderObject
  +Iterable<Element> children
  +void insertRenderObjectChild()
  +void moveRenderObjectChild()
  +void removeRenderObjectChild()
  +void visitChildren()
  +void forgetChild()
  -bool _debugCheckHasAssociatedRenderObject()
  +Element inflateWidget()
  +void mount()
  +void update()
}

"widgets::framework::MultiChildRenderObjectElement" o-- "rendering::object::ContainerRenderObjectMixin<RenderObject, ContainerParentDataMixin<RenderObject>>"
"widgets::framework::RenderObjectElement" <|-- "widgets::framework::MultiChildRenderObjectElement"

abstract class "widgets::framework::RenderTreeRootElement" {
  +void attachRenderObject()
  +void detachRenderObject()
  +void updateSlot()
  -bool _debugCheckMustNotAttachRenderObjectToAncestor()
}

"widgets::framework::RenderObjectElement" <|-- "widgets::framework::RenderTreeRootElement"

class "widgets::framework::DebugCreator" {
  +Element element
  +String toString()
}

"widgets::framework::DebugCreator" o-- "widgets::framework::Element"

class "widgets::framework::IndexedSlot" {
  +T value
  +int index
  +int hashCode
  +bool ==()
}

class "widgets::framework::_NullElement" {
  {static} +_NullElement instance
  +bool debugDoingBuild
}

"widgets::framework::_NullElement" o-- "widgets::framework::_NullElement"
"widgets::framework::Element" <|-- "widgets::framework::_NullElement"

class "widgets::framework::_NullWidget" {
  +Element createElement()
}

"widgets::framework::Widget" <|-- "widgets::framework::_NullWidget"

class "widgets::framework::_StateLifecycle" {
  +int index
  {static} +List<_StateLifecycle> values
  {static} +_StateLifecycle created
  {static} +_StateLifecycle initialized
  {static} +_StateLifecycle ready
  {static} +_StateLifecycle defunct
}

"widgets::framework::_StateLifecycle" o-- "widgets::framework::_StateLifecycle"
"dart::core::Enum" <|-- "widgets::framework::_StateLifecycle"

class "widgets::framework::_ElementLifecycle" {
  +int index
  {static} +List<_ElementLifecycle> values
  {static} +_ElementLifecycle initial
  {static} +_ElementLifecycle active
  {static} +_ElementLifecycle inactive
  {static} +_ElementLifecycle defunct
}

"widgets::framework::_ElementLifecycle" o-- "widgets::framework::_ElementLifecycle"
"dart::core::Enum" <|-- "widgets::framework::_ElementLifecycle"

abstract class "widgets::framework::NotifiableElementMixin" {
  +bool onNotification()
  +void attachNotificationTree()
}

abstract class "widgets::framework::RootElementMixin" {
  +void assignOwner()
  +void mount()
}

class "widgets::scroll_configuration::ScrollBehavior" {
  {static} -ScrollPhysics _bouncingPhysics
  {static} -ScrollPhysics _bouncingDesktopPhysics
  {static} -ScrollPhysics _clampingPhysics
  +Set<PointerDeviceKind> dragDevices
  +Set<LogicalKeyboardKey> pointerAxisModifiers
  +ScrollBehavior copyWith()
  +TargetPlatform getPlatform()
  +Widget buildScrollbar()
  +Widget buildOverscrollIndicator()
  +VelocityTracker Function(PointerEvent) velocityTrackerBuilder()
  +ScrollPhysics getScrollPhysics()
  +bool shouldNotify()
  +String toString()
}

"widgets::scroll_configuration::ScrollBehavior" o-- "widgets::scroll_physics::ScrollPhysics"

class "widgets::scroll_configuration::_WrappedScrollBehavior" {
  +ScrollBehavior delegate
  +bool scrollbars
  +bool overscroll
  +ScrollPhysics? physics
  +TargetPlatform? platform
  -Set<PointerDeviceKind>? _dragDevices
  -Set<LogicalKeyboardKey>? _pointerAxisModifiers
  +Set<PointerDeviceKind> dragDevices
  +Set<LogicalKeyboardKey> pointerAxisModifiers
  +Widget buildOverscrollIndicator()
  +Widget buildScrollbar()
  +ScrollBehavior copyWith()
  +TargetPlatform getPlatform()
  +ScrollPhysics getScrollPhysics()
  +bool shouldNotify()
  +VelocityTracker Function(PointerEvent) velocityTrackerBuilder()
  +String toString()
}

"widgets::scroll_configuration::_WrappedScrollBehavior" o-- "widgets::scroll_configuration::ScrollBehavior"
"widgets::scroll_configuration::_WrappedScrollBehavior" o-- "widgets::scroll_physics::ScrollPhysics"
"widgets::scroll_configuration::_WrappedScrollBehavior" o-- "foundation::platform::TargetPlatform"
"widgets::scroll_configuration::ScrollBehavior" <|-- "widgets::scroll_configuration::_WrappedScrollBehavior"

class "widgets::scroll_configuration::ScrollConfiguration" {
  +ScrollBehavior behavior
  {static} +ScrollBehavior of()
  +bool updateShouldNotify()
  +void debugFillProperties()
}

"widgets::scroll_configuration::ScrollConfiguration" o-- "widgets::scroll_configuration::ScrollBehavior"
"widgets::framework::InheritedWidget" <|-- "widgets::scroll_configuration::ScrollConfiguration"

class "widgets::scroll_configuration::AndroidOverscrollIndicator" {
  +int index
  {static} +List<AndroidOverscrollIndicator> values
  {static} +AndroidOverscrollIndicator stretch
  {static} +AndroidOverscrollIndicator glow
}

"widgets::scroll_configuration::AndroidOverscrollIndicator" o-- "widgets::scroll_configuration::AndroidOverscrollIndicator"
"dart::core::Enum" <|-- "widgets::scroll_configuration::AndroidOverscrollIndicator"

class "widgets::animated_scroll_view::AnimatedList" {
  {static} +AnimatedListState of()
  {static} +AnimatedListState? maybeOf()
  +AnimatedListState createState()
}

"widgets::animated_scroll_view::_AnimatedScrollView" <|-- "widgets::animated_scroll_view::AnimatedList"

class "widgets::animated_scroll_view::AnimatedListState" {
  +Widget build()
}

"widgets::animated_scroll_view::_AnimatedScrollViewState" <|-- "widgets::animated_scroll_view::AnimatedListState"

class "widgets::animated_scroll_view::AnimatedGrid" {
  +SliverGridDelegate gridDelegate
  {static} +AnimatedGridState of()
  {static} +AnimatedGridState? maybeOf()
  +AnimatedGridState createState()
}

"widgets::animated_scroll_view::AnimatedGrid" o-- "rendering::sliver_grid::SliverGridDelegate"
"widgets::animated_scroll_view::_AnimatedScrollView" <|-- "widgets::animated_scroll_view::AnimatedGrid"

class "widgets::animated_scroll_view::AnimatedGridState" {
  +Widget build()
}

"widgets::animated_scroll_view::_AnimatedScrollViewState" <|-- "widgets::animated_scroll_view::AnimatedGridState"

abstract class "widgets::animated_scroll_view::_AnimatedScrollView" {
  +Widget Function(BuildContext, int, Animation<double>) itemBuilder
  +int initialItemCount
  +Axis scrollDirection
  +bool reverse
  +ScrollController? controller
  +bool? primary
  +ScrollPhysics? physics
  +bool shrinkWrap
  +EdgeInsetsGeometry? padding
  +Clip clipBehavior
}

"widgets::animated_scroll_view::_AnimatedScrollView" o-- "widgets::animated_scroll_view::Widget Function(BuildContext, int, Animation<double>)"
"widgets::animated_scroll_view::_AnimatedScrollView" o-- "painting::basic_types::Axis"
"widgets::animated_scroll_view::_AnimatedScrollView" o-- "widgets::scroll_controller::ScrollController"
"widgets::animated_scroll_view::_AnimatedScrollView" o-- "widgets::scroll_physics::ScrollPhysics"
"widgets::animated_scroll_view::_AnimatedScrollView" o-- "painting::edge_insets::EdgeInsetsGeometry"
"widgets::animated_scroll_view::_AnimatedScrollView" o-- "dart::ui::Clip"
"widgets::framework::StatefulWidget" <|-- "widgets::animated_scroll_view::_AnimatedScrollView"

abstract class "widgets::animated_scroll_view::_AnimatedScrollViewState" {
  -GlobalKey<_SliverAnimatedMultiBoxAdaptorState<_SliverAnimatedMultiBoxAdaptor>> _sliverAnimatedMultiBoxKey
  +void insertItem()
  +void insertAllItems()
  +void removeItem()
  +void removeAllItems()
  -Widget _wrap()
}

"widgets::animated_scroll_view::_AnimatedScrollViewState" o-- "widgets::framework::GlobalKey<_SliverAnimatedMultiBoxAdaptorState<_SliverAnimatedMultiBoxAdaptor>>"
"widgets::framework::State" <|-- "widgets::animated_scroll_view::_AnimatedScrollViewState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "widgets::animated_scroll_view::_AnimatedScrollViewState"

class "widgets::animated_scroll_view::_ActiveItem" {
  +AnimationController? controller
  +Widget Function(BuildContext, Animation<double>)? removedItemBuilder
  +int itemIndex
  +int compareTo()
}

"widgets::animated_scroll_view::_ActiveItem" o-- "animation::animation_controller::AnimationController"
"widgets::animated_scroll_view::_ActiveItem" o-- "widgets::animated_scroll_view::Widget Function(BuildContext, Animation<double>)"
"dart::core::Comparable" <|-- "widgets::animated_scroll_view::_ActiveItem"

class "widgets::animated_scroll_view::SliverAnimatedList" {
  +SliverAnimatedListState createState()
  {static} +SliverAnimatedListState of()
  {static} +SliverAnimatedListState? maybeOf()
}

"widgets::animated_scroll_view::_SliverAnimatedMultiBoxAdaptor" <|-- "widgets::animated_scroll_view::SliverAnimatedList"

class "widgets::animated_scroll_view::SliverAnimatedListState" {
  +Widget build()
}

"widgets::animated_scroll_view::_SliverAnimatedMultiBoxAdaptorState" <|-- "widgets::animated_scroll_view::SliverAnimatedListState"

class "widgets::animated_scroll_view::SliverAnimatedGrid" {
  +SliverGridDelegate gridDelegate
  +SliverAnimatedGridState createState()
  {static} +SliverAnimatedGridState of()
  {static} +SliverAnimatedGridState? maybeOf()
}

"widgets::animated_scroll_view::SliverAnimatedGrid" o-- "rendering::sliver_grid::SliverGridDelegate"
"widgets::animated_scroll_view::_SliverAnimatedMultiBoxAdaptor" <|-- "widgets::animated_scroll_view::SliverAnimatedGrid"

class "widgets::animated_scroll_view::SliverAnimatedGridState" {
  +Widget build()
}

"widgets::animated_scroll_view::_SliverAnimatedMultiBoxAdaptorState" <|-- "widgets::animated_scroll_view::SliverAnimatedGridState"

abstract class "widgets::animated_scroll_view::_SliverAnimatedMultiBoxAdaptor" {
  +Widget Function(BuildContext, int, Animation<double>) itemBuilder
  +int? Function(Key)? findChildIndexCallback
  +int initialItemCount
}

"widgets::animated_scroll_view::_SliverAnimatedMultiBoxAdaptor" o-- "widgets::animated_scroll_view::Widget Function(BuildContext, int, Animation<double>)"
"widgets::animated_scroll_view::_SliverAnimatedMultiBoxAdaptor" o-- "widgets::scroll_delegate::int Function(Key)"
"widgets::framework::StatefulWidget" <|-- "widgets::animated_scroll_view::_SliverAnimatedMultiBoxAdaptor"

abstract class "widgets::animated_scroll_view::_SliverAnimatedMultiBoxAdaptorState" {
  -List<_ActiveItem> _incomingItems
  -List<_ActiveItem> _outgoingItems
  -int _itemsCount
  +void initState()
  +void dispose()
  -_ActiveItem? _removeActiveItemAt()
  -_ActiveItem? _activeItemAt()
  -int _indexToItemIndex()
  -int _itemIndexToIndex()
  -SliverChildDelegate _createDelegate()
  -Widget _itemBuilder()
  +void insertItem()
  +void insertAllItems()
  +void removeItem()
  +void removeAllItems()
}

"widgets::framework::State" <|-- "widgets::animated_scroll_view::_SliverAnimatedMultiBoxAdaptorState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "widgets::animated_scroll_view::_SliverAnimatedMultiBoxAdaptorState"

class "widgets::icon_theme::IconTheme" {
  +IconThemeData data
  {static} +Widget merge()
  {static} +IconThemeData of()
  {static} -IconThemeData _getInheritedIconThemeData()
  +bool updateShouldNotify()
  +Widget wrap()
  +void debugFillProperties()
}

"widgets::icon_theme::IconTheme" o-- "widgets::icon_theme_data::IconThemeData"
"widgets::inherited_theme::InheritedTheme" <|-- "widgets::icon_theme::IconTheme"

class "widgets::semantics_debugger::SemanticsDebugger" {
  +Widget child
  +TextStyle labelStyle
  +State<SemanticsDebugger> createState()
}

"widgets::semantics_debugger::SemanticsDebugger" o-- "widgets::framework::Widget"
"widgets::semantics_debugger::SemanticsDebugger" o-- "painting::text_style::TextStyle"
"widgets::framework::StatefulWidget" <|-- "widgets::semantics_debugger::SemanticsDebugger"

class "widgets::semantics_debugger::_SemanticsDebuggerState" {
  -_SemanticsClient? _client
  -PipelineOwner? _pipelineOwner
  -Offset? _lastPointerDownLocation
  +void initState()
  +void didChangeDependencies()
  +void dispose()
  +void didChangeMetrics()
  -void _update()
  -void _handlePointerDown()
  -void _handleTap()
  -void _handleLongPress()
  -void _handlePanEnd()
  -void _performAction()
  +Widget build()
}

"widgets::semantics_debugger::_SemanticsDebuggerState" o-- "widgets::semantics_debugger::_SemanticsClient"
"widgets::semantics_debugger::_SemanticsDebuggerState" o-- "rendering::object::PipelineOwner"
"widgets::semantics_debugger::_SemanticsDebuggerState" o-- "dart::ui::Offset"
"widgets::framework::State" <|-- "widgets::semantics_debugger::_SemanticsDebuggerState"
"widgets::binding::WidgetsBindingObserver" <|-- "widgets::semantics_debugger::_SemanticsDebuggerState"

class "widgets::semantics_debugger::_SemanticsClient" {
  -SemanticsHandle? _semanticsHandle
  +int generation
  +void dispose()
  -void _didUpdateSemantics()
}

"widgets::semantics_debugger::_SemanticsClient" o-- "rendering::object::SemanticsHandle"
"foundation::change_notifier::ChangeNotifier" <|-- "widgets::semantics_debugger::_SemanticsClient"

class "widgets::semantics_debugger::_SemanticsDebuggerPainter" {
  +PipelineOwner owner
  +int generation
  +Offset? pointerPosition
  +double devicePixelRatio
  +TextStyle labelStyle
  -SemanticsNode? _rootSemanticsNode
  +void paint()
  +bool shouldRepaint()
  +String getMessage()
  -void _paintMessage()
  -int _findDepth()
  -void _paint()
}

"widgets::semantics_debugger::_SemanticsDebuggerPainter" o-- "rendering::object::PipelineOwner"
"widgets::semantics_debugger::_SemanticsDebuggerPainter" o-- "dart::ui::Offset"
"widgets::semantics_debugger::_SemanticsDebuggerPainter" o-- "painting::text_style::TextStyle"
"widgets::semantics_debugger::_SemanticsDebuggerPainter" o-- "semantics::semantics::SemanticsNode"
"rendering::custom_paint::CustomPainter" <|-- "widgets::semantics_debugger::_SemanticsDebuggerPainter"

class "widgets::semantics_debugger::_IgnorePointerWithSemantics" {
  +_RenderIgnorePointerWithSemantics createRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::semantics_debugger::_IgnorePointerWithSemantics"

class "widgets::semantics_debugger::_RenderIgnorePointerWithSemantics" {
  +bool hitTest()
}

"rendering::proxy_box::RenderProxyBox" <|-- "widgets::semantics_debugger::_RenderIgnorePointerWithSemantics"

class "widgets::text_selection::ToolbarItemsParentData" {
  +bool shouldPaint
  +String toString()
}

"rendering::box::ContainerBoxParentData" <|-- "widgets::text_selection::ToolbarItemsParentData"

abstract class "widgets::text_selection::TextSelectionControls" {
  +Widget buildHandle()
  +Offset getHandleAnchor()
  +Widget buildToolbar()
  +Size getHandleSize()
  +bool canCut()
  +bool canCopy()
  +bool canPaste()
  +bool canSelectAll()
  +void handleCut()
  +void handleCopy()
  +Future<void> handlePaste()
  +void handleSelectAll()
}

class "widgets::text_selection::EmptyTextSelectionControls" {
  +Size getHandleSize()
  +Widget buildToolbar()
  +Widget buildHandle()
  +Offset getHandleAnchor()
}

"widgets::text_selection::TextSelectionControls" <|-- "widgets::text_selection::EmptyTextSelectionControls"

class "widgets::text_selection::TextSelectionOverlay" {
  +BuildContext context
  +RenderEditable renderObject
  +TextSelectionControls? selectionControls
  +TextSelectionDelegate selectionDelegate
  -SelectionOverlay _selectionOverlay
  +Widget Function(BuildContext)? contextMenuBuilder
  -TextEditingValue _value
  -ValueNotifier<bool> _effectiveStartHandleVisibility
  -ValueNotifier<bool> _effectiveEndHandleVisibility
  -ValueNotifier<bool> _effectiveToolbarVisibility
  -bool _handlesVisible
  -double _endHandleDragPosition
  -double _endHandleDragPositionToCenterOfLine
  -double _startHandleDragPosition
  -double _startHandleDragPositionToCenterOfLine
  +TextEditingValue value
  -TextSelection _selection
  +bool handlesVisible
  +bool handlesAreVisible
  +bool toolbarIsVisible
  +bool magnifierIsVisible
  +bool spellCheckToolbarIsVisible
  -void _updateTextSelectionOverlayVisibilities()
  +void showHandles()
  +void hideHandles()
  +void showToolbar()
  +void showSpellCheckSuggestionsToolbar()
  +void showMagnifier()
  +void updateMagnifier()
  +void hideMagnifier()
  +void update()
  -void _updateSelectionOverlay()
  +void updateForScroll()
  +void hide()
  +void hideToolbar()
  +void dispose()
  -double _getStartGlyphHeight()
  -double _getEndGlyphHeight()
  -MagnifierInfo _buildMagnifier()
  -void _handleSelectionEndHandleDragStart()
  -double _getHandleDy()
  -void _handleSelectionEndHandleDragUpdate()
  -void _handleSelectionStartHandleDragStart()
  -void _handleSelectionStartHandleDragUpdate()
  -void _handleAnyDragEnd()
  -void _handleSelectionHandleChanged()
  -TextSelectionHandleType _chooseType()
}

"widgets::text_selection::TextSelectionOverlay" o-- "widgets::framework::BuildContext"
"widgets::text_selection::TextSelectionOverlay" o-- "rendering::editable::RenderEditable"
"widgets::text_selection::TextSelectionOverlay" o-- "widgets::text_selection::TextSelectionControls"
"widgets::text_selection::TextSelectionOverlay" o-- "services::text_input::TextSelectionDelegate"
"widgets::text_selection::TextSelectionOverlay" o-- "widgets::text_selection::SelectionOverlay"
"widgets::text_selection::TextSelectionOverlay" o-- "widgets::framework::Widget Function(BuildContext)"
"widgets::text_selection::TextSelectionOverlay" o-- "services::text_input::TextEditingValue"
"widgets::text_selection::TextSelectionOverlay" o-- "foundation::change_notifier::ValueNotifier<bool>"
"widgets::text_selection::TextSelectionOverlay" o-- "services::text_editing::TextSelection"

class "widgets::text_selection::SelectionOverlay" {
  +BuildContext context
  -ValueNotifier<MagnifierInfo> _magnifierInfo
  -MagnifierController _magnifierController
  +TextMagnifierConfiguration magnifierConfiguration
  -TextSelectionHandleType _startHandleType
  -double _lineHeightAtStart
  -bool _isDraggingStartHandle
  +ValueListenable<bool>? startHandlesVisible
  +void Function(DragStartDetails)? onStartHandleDragStart
  +void Function(DragUpdateDetails)? onStartHandleDragUpdate
  +void Function(DragEndDetails)? onStartHandleDragEnd
  -TextSelectionHandleType _endHandleType
  -double _lineHeightAtEnd
  -bool _isDraggingEndHandle
  +ValueListenable<bool>? endHandlesVisible
  +void Function(DragStartDetails)? onEndHandleDragStart
  +void Function(DragUpdateDetails)? onEndHandleDragUpdate
  +void Function(DragEndDetails)? onEndHandleDragEnd
  +ValueListenable<bool>? toolbarVisible
  -List<TextSelectionPoint> _selectionEndpoints
  +Widget? debugRequiredFor
  +LayerLink toolbarLayerLink
  +LayerLink startHandleLayerLink
  +LayerLink endHandleLayerLink
  +TextSelectionControls? selectionControls
  +TextSelectionDelegate? selectionDelegate
  +DragStartBehavior dragStartBehavior
  +void Function()? onSelectionHandleTapped
  +ClipboardStatusNotifier? clipboardStatus
  -Offset? _toolbarLocation
  {static} +Duration fadeDuration
  -List<OverlayEntry>? _handles
  -OverlayEntry? _toolbar
  -ContextMenuController _contextMenuController
  -ContextMenuController _spellCheckToolbarController
  -bool _buildScheduled
  +bool toolbarIsVisible
  +TextSelectionHandleType startHandleType
  +double lineHeightAtStart
  +TextSelectionHandleType endHandleType
  +double lineHeightAtEnd
  +List<TextSelectionPoint> selectionEndpoints
  +Offset? toolbarLocation
  +void showMagnifier()
  +void hideMagnifier()
  -void _handleStartHandleDragStart()
  -void _handleStartHandleDragUpdate()
  -void _handleStartHandleDragEnd()
  -void _handleEndHandleDragStart()
  -void _handleEndHandleDragUpdate()
  -void _handleEndHandleDragEnd()
  +void showHandles()
  +void hideHandles()
  +void showToolbar()
  +void showSpellCheckSuggestionsToolbar()
  +void markNeedsBuild()
  +void hide()
  +void hideToolbar()
  +void dispose()
  -Widget _buildStartHandle()
  -Widget _buildEndHandle()
  -Widget _buildToolbar()
  +void updateMagnifier()
}

"widgets::text_selection::SelectionOverlay" o-- "widgets::framework::BuildContext"
"widgets::text_selection::SelectionOverlay" o-- "foundation::change_notifier::ValueNotifier<MagnifierInfo>"
"widgets::text_selection::SelectionOverlay" o-- "widgets::magnifier::MagnifierController"
"widgets::text_selection::SelectionOverlay" o-- "widgets::magnifier::TextMagnifierConfiguration"
"widgets::text_selection::SelectionOverlay" o-- "rendering::selection::TextSelectionHandleType"
"widgets::text_selection::SelectionOverlay" o-- "foundation::change_notifier::ValueListenable<bool>"
"widgets::text_selection::SelectionOverlay" o-- "foundation::basic_types::void Function(DragStartDetails)"
"widgets::text_selection::SelectionOverlay" o-- "foundation::basic_types::void Function(DragUpdateDetails)"
"widgets::text_selection::SelectionOverlay" o-- "foundation::basic_types::void Function(DragEndDetails)"
"widgets::text_selection::SelectionOverlay" o-- "widgets::framework::Widget"
"widgets::text_selection::SelectionOverlay" o-- "rendering::layer::LayerLink"
"widgets::text_selection::SelectionOverlay" o-- "widgets::text_selection::TextSelectionControls"
"widgets::text_selection::SelectionOverlay" o-- "services::text_input::TextSelectionDelegate"
"widgets::text_selection::SelectionOverlay" o-- "gestures::recognizer::DragStartBehavior"
"widgets::text_selection::SelectionOverlay" o-- "dart::ui::void Function()"
"widgets::text_selection::SelectionOverlay" o-- "widgets::text_selection::ClipboardStatusNotifier"
"widgets::text_selection::SelectionOverlay" o-- "dart::ui::Offset"
"widgets::text_selection::SelectionOverlay" o-- "widgets::overlay::OverlayEntry"
"widgets::text_selection::SelectionOverlay" o-- "widgets::context_menu_controller::ContextMenuController"

class "widgets::text_selection::_SelectionToolbarWrapper" {
  +Widget child
  +Offset offset
  +LayerLink layerLink
  +ValueListenable<bool>? visibility
  +State<_SelectionToolbarWrapper> createState()
}

"widgets::text_selection::_SelectionToolbarWrapper" o-- "widgets::framework::Widget"
"widgets::text_selection::_SelectionToolbarWrapper" o-- "dart::ui::Offset"
"widgets::text_selection::_SelectionToolbarWrapper" o-- "rendering::layer::LayerLink"
"widgets::text_selection::_SelectionToolbarWrapper" o-- "foundation::change_notifier::ValueListenable<bool>"
"widgets::framework::StatefulWidget" <|-- "widgets::text_selection::_SelectionToolbarWrapper"

class "widgets::text_selection::_SelectionToolbarWrapperState" {
  -AnimationController _controller
  -Animation<double> _opacity
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  -void _toolbarVisibilityChanged()
  +Widget build()
}

"widgets::text_selection::_SelectionToolbarWrapperState" o-- "animation::animation_controller::AnimationController"
"widgets::text_selection::_SelectionToolbarWrapperState" o-- "animation::animation::Animation<double>"
"widgets::framework::State" <|-- "widgets::text_selection::_SelectionToolbarWrapperState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "widgets::text_selection::_SelectionToolbarWrapperState"

class "widgets::text_selection::_SelectionHandleOverlay" {
  +LayerLink handleLayerLink
  +void Function()? onSelectionHandleTapped
  +void Function(DragStartDetails)? onSelectionHandleDragStart
  +void Function(DragUpdateDetails)? onSelectionHandleDragUpdate
  +void Function(DragEndDetails)? onSelectionHandleDragEnd
  +TextSelectionControls selectionControls
  +ValueListenable<bool>? visibility
  +double preferredLineHeight
  +TextSelectionHandleType type
  +DragStartBehavior dragStartBehavior
  +State<_SelectionHandleOverlay> createState()
}

"widgets::text_selection::_SelectionHandleOverlay" o-- "rendering::layer::LayerLink"
"widgets::text_selection::_SelectionHandleOverlay" o-- "dart::ui::void Function()"
"widgets::text_selection::_SelectionHandleOverlay" o-- "foundation::basic_types::void Function(DragStartDetails)"
"widgets::text_selection::_SelectionHandleOverlay" o-- "foundation::basic_types::void Function(DragUpdateDetails)"
"widgets::text_selection::_SelectionHandleOverlay" o-- "foundation::basic_types::void Function(DragEndDetails)"
"widgets::text_selection::_SelectionHandleOverlay" o-- "widgets::text_selection::TextSelectionControls"
"widgets::text_selection::_SelectionHandleOverlay" o-- "foundation::change_notifier::ValueListenable<bool>"
"widgets::text_selection::_SelectionHandleOverlay" o-- "rendering::selection::TextSelectionHandleType"
"widgets::text_selection::_SelectionHandleOverlay" o-- "gestures::recognizer::DragStartBehavior"
"widgets::framework::StatefulWidget" <|-- "widgets::text_selection::_SelectionHandleOverlay"

class "widgets::text_selection::_SelectionHandleOverlayState" {
  -AnimationController _controller
  -Animation<double> _opacity
  +void initState()
  -void _handleVisibilityChanged()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"widgets::text_selection::_SelectionHandleOverlayState" o-- "animation::animation_controller::AnimationController"
"widgets::text_selection::_SelectionHandleOverlayState" o-- "animation::animation::Animation<double>"
"widgets::framework::State" <|-- "widgets::text_selection::_SelectionHandleOverlayState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "widgets::text_selection::_SelectionHandleOverlayState"

abstract class "widgets::text_selection::TextSelectionGestureDetectorBuilderDelegate" {
  +GlobalKey<EditableTextState> editableTextKey
  +bool forcePressEnabled
  +bool selectionEnabled
}

"widgets::text_selection::TextSelectionGestureDetectorBuilderDelegate" o-- "widgets::framework::GlobalKey<EditableTextState>"

class "widgets::text_selection::TextSelectionGestureDetectorBuilder" {
  #TextSelectionGestureDetectorBuilderDelegate delegate
  -bool _shouldShowSelectionToolbar
  -bool _isShiftPressed
  -double _dragStartScrollOffset
  -double _dragStartViewportOffset
  -TextSelection? _dragStartSelection
  -bool? _dragBeganOnPreviousSelection
  -bool _longPressStartedWithoutFocus
  -bool _lastSecondaryTapWasOnSelection
  +bool shouldShowSelectionToolbar
  +EditableTextState editableText
  +RenderEditable renderEditable
  -double _scrollPosition
  -void _showMagnifierIfSupportedByPlatform()
  -void _hideMagnifierIfSupportedByPlatform()
  -bool _positionWasOnSelectionExclusive()
  -bool _positionWasOnSelectionInclusive()
  -bool _positionOnSelection()
  -void _expandSelection()
  -void _extendSelection()
  #void onTapTrackStart()
  #void onTapTrackReset()
  #void onTapDown()
  #void onForcePressStart()
  #void onForcePressEnd()
  #void onSingleTapUp()
  #void onSingleTapCancel()
  #void onSingleLongTapStart()
  #void onSingleLongTapMoveUpdate()
  #void onSingleLongTapEnd()
  #void onSecondaryTap()
  #void onSecondaryTapDown()
  #void onDoubleTapDown()
  -void _selectParagraphsInRange()
  -void _selectLinesInRange()
  -TextRange _moveToTextBoundary()
  -void _selectTextBoundariesInRange()
  #void onTripleTapDown()
  #void onDragSelectionStart()
  #void onDragSelectionUpdate()
  #void onDragSelectionEnd()
  +Widget buildGestureDetector()
}

"widgets::text_selection::TextSelectionGestureDetectorBuilder" o-- "widgets::text_selection::TextSelectionGestureDetectorBuilderDelegate"
"widgets::text_selection::TextSelectionGestureDetectorBuilder" o-- "services::text_editing::TextSelection"
"widgets::text_selection::TextSelectionGestureDetectorBuilder" o-- "widgets::editable_text::EditableTextState"
"widgets::text_selection::TextSelectionGestureDetectorBuilder" o-- "rendering::editable::RenderEditable"

class "widgets::text_selection::TextSelectionGestureDetector" {
  +void Function()? onTapTrackStart
  +void Function()? onTapTrackReset
  +dynamic onTapDown
  +void Function(ForcePressDetails)? onForcePressStart
  +void Function(ForcePressDetails)? onForcePressEnd
  +void Function()? onSecondaryTap
  +void Function(TapDownDetails)? onSecondaryTapDown
  +dynamic onSingleTapUp
  +dynamic onSingleTapCancel
  +void Function(LongPressStartDetails)? onSingleLongTapStart
  +void Function(LongPressMoveUpdateDetails)? onSingleLongTapMoveUpdate
  +void Function(LongPressEndDetails)? onSingleLongTapEnd
  +dynamic onDoubleTapDown
  +dynamic onTripleTapDown
  +dynamic onDragSelectionStart
  +dynamic onDragSelectionUpdate
  +dynamic onDragSelectionEnd
  +HitTestBehavior? behavior
  +Widget child
  +State<StatefulWidget> createState()
}

"widgets::text_selection::TextSelectionGestureDetector" o-- "dart::ui::void Function()"
"widgets::text_selection::TextSelectionGestureDetector" o-- "gestures::force_press::void Function(ForcePressDetails)"
"widgets::text_selection::TextSelectionGestureDetector" o-- "gestures::tap::void Function()"
"widgets::text_selection::TextSelectionGestureDetector" o-- "gestures::tap::void Function(TapDownDetails)"
"widgets::text_selection::TextSelectionGestureDetector" o-- "gestures::long_press::void Function(LongPressStartDetails)"
"widgets::text_selection::TextSelectionGestureDetector" o-- "gestures::long_press::void Function(LongPressMoveUpdateDetails)"
"widgets::text_selection::TextSelectionGestureDetector" o-- "gestures::long_press::void Function(LongPressEndDetails)"
"widgets::text_selection::TextSelectionGestureDetector" o-- "rendering::proxy_box::HitTestBehavior"
"widgets::text_selection::TextSelectionGestureDetector" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::text_selection::TextSelectionGestureDetector"

class "widgets::text_selection::_TextSelectionGestureDetectorState" {
  {static} -int _getEffectiveConsecutiveTapCount()
  -void _handleTapTrackStart()
  -void _handleTapTrackReset()
  -void _handleTapDown()
  -void _handleTapUp()
  -void _handleTapCancel()
  -void _handleDragStart()
  -void _handleDragUpdate()
  -void _handleDragEnd()
  -void _forcePressStarted()
  -void _forcePressEnded()
  -void _handleLongPressStart()
  -void _handleLongPressMoveUpdate()
  -void _handleLongPressEnd()
  +Widget build()
}

"widgets::framework::State" <|-- "widgets::text_selection::_TextSelectionGestureDetectorState"

class "widgets::text_selection::ClipboardStatusNotifier" {
  -bool _disposed
  +Future<void> update()
  +void addListener()
  +void removeListener()
  +void didChangeAppLifecycleState()
  +void dispose()
}

"foundation::change_notifier::ValueNotifier" <|-- "widgets::text_selection::ClipboardStatusNotifier"
"widgets::binding::WidgetsBindingObserver" <|-- "widgets::text_selection::ClipboardStatusNotifier"

class "widgets::text_selection::LiveTextInputStatusNotifier" {
  -bool _disposed
  +Future<void> update()
  +void addListener()
  +void removeListener()
  +void didChangeAppLifecycleState()
  +void dispose()
}

"foundation::change_notifier::ValueNotifier" <|-- "widgets::text_selection::LiveTextInputStatusNotifier"
"widgets::binding::WidgetsBindingObserver" <|-- "widgets::text_selection::LiveTextInputStatusNotifier"

class "widgets::text_selection::ClipboardStatus" {
  +int index
  {static} +List<ClipboardStatus> values
  {static} +ClipboardStatus pasteable
  {static} +ClipboardStatus unknown
  {static} +ClipboardStatus notPasteable
}

"widgets::text_selection::ClipboardStatus" o-- "widgets::text_selection::ClipboardStatus"
"dart::core::Enum" <|-- "widgets::text_selection::ClipboardStatus"

class "widgets::text_selection::LiveTextInputStatus" {
  +int index
  {static} +List<LiveTextInputStatus> values
  {static} +LiveTextInputStatus enabled
  {static} +LiveTextInputStatus unknown
  {static} +LiveTextInputStatus disabled
}

"widgets::text_selection::LiveTextInputStatus" o-- "widgets::text_selection::LiveTextInputStatus"
"dart::core::Enum" <|-- "widgets::text_selection::LiveTextInputStatus"

abstract class "widgets::text_selection::TextSelectionHandleControls" {
  +Widget buildToolbar()
  +bool canCut()
  +bool canCopy()
  +bool canPaste()
  +bool canSelectAll()
  +void handleCut()
  +void handleCopy()
  +Future<void> handlePaste()
  +void handleSelectAll()
}

class "widgets::ticker_provider::TickerMode" {
  +bool enabled
  +Widget child
  {static} +bool of()
  {static} +ValueListenable<bool> getNotifier()
  +State<TickerMode> createState()
}

"widgets::ticker_provider::TickerMode" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::ticker_provider::TickerMode"

class "widgets::ticker_provider::_TickerModeState" {
  -bool _ancestorTicketMode
  -ValueNotifier<bool> _effectiveMode
  +void didChangeDependencies()
  +void didUpdateWidget()
  +void dispose()
  -void _updateEffectiveMode()
  +Widget build()
  +void debugFillProperties()
}

"widgets::ticker_provider::_TickerModeState" o-- "foundation::change_notifier::ValueNotifier<bool>"
"widgets::framework::State" <|-- "widgets::ticker_provider::_TickerModeState"

class "widgets::ticker_provider::_EffectiveTickerMode" {
  +bool enabled
  +ValueNotifier<bool> notifier
  +bool updateShouldNotify()
  +void debugFillProperties()
}

"widgets::ticker_provider::_EffectiveTickerMode" o-- "foundation::change_notifier::ValueNotifier<bool>"
"widgets::framework::InheritedWidget" <|-- "widgets::ticker_provider::_EffectiveTickerMode"

class "widgets::ticker_provider::_WidgetTicker" {
  -TickerProviderStateMixin<StatefulWidget> _creator
  +void dispose()
}

"widgets::ticker_provider::_WidgetTicker" o-- "widgets::ticker_provider::TickerProviderStateMixin<StatefulWidget>"
"scheduler::ticker::Ticker" <|-- "widgets::ticker_provider::_WidgetTicker"

class "widgets::ticker_provider::_ConstantValueListenable" {
  +T value
  +void addListener()
  +void removeListener()
}

"foundation::change_notifier::ValueListenable" <|-- "widgets::ticker_provider::_ConstantValueListenable"

abstract class "widgets::ticker_provider::SingleTickerProviderStateMixin" {
  -Ticker? _ticker
  -ValueListenable<bool>? _tickerModeNotifier
  +Ticker createTicker()
  +void dispose()
  +void activate()
  -void _updateTicker()
  -void _updateTickerModeNotifier()
  +void debugFillProperties()
}

"widgets::ticker_provider::SingleTickerProviderStateMixin" o-- "scheduler::ticker::Ticker"
"widgets::ticker_provider::SingleTickerProviderStateMixin" o-- "foundation::change_notifier::ValueListenable<bool>"
"scheduler::ticker::TickerProvider" <|-- "widgets::ticker_provider::SingleTickerProviderStateMixin"

abstract class "widgets::ticker_provider::TickerProviderStateMixin" {
  -Set<Ticker>? _tickers
  -ValueListenable<bool>? _tickerModeNotifier
  +Ticker createTicker()
  -void _removeTicker()
  +void activate()
  -void _updateTickers()
  -void _updateTickerModeNotifier()
  +void dispose()
  +void debugFillProperties()
}

"widgets::ticker_provider::TickerProviderStateMixin" o-- "foundation::change_notifier::ValueListenable<bool>"
"scheduler::ticker::TickerProvider" <|-- "widgets::ticker_provider::TickerProviderStateMixin"

class "widgets::restoration::RestorationScope" {
  +Widget child
  +String? restorationId
  {static} +RestorationBucket? maybeOf()
  {static} +RestorationBucket of()
  +State<RestorationScope> createState()
}

"widgets::restoration::RestorationScope" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::restoration::RestorationScope"

class "widgets::restoration::_RestorationScopeState" {
  +String? restorationId
  +void restoreState()
  +Widget build()
}

"widgets::framework::State" <|-- "widgets::restoration::_RestorationScopeState"
"widgets::restoration::RestorationMixin" <|-- "widgets::restoration::_RestorationScopeState"

class "widgets::restoration::UnmanagedRestorationScope" {
  +RestorationBucket? bucket
  +bool updateShouldNotify()
}

"widgets::restoration::UnmanagedRestorationScope" o-- "services::restoration::RestorationBucket"
"widgets::framework::InheritedWidget" <|-- "widgets::restoration::UnmanagedRestorationScope"

class "widgets::restoration::RootRestorationScope" {
  +Widget child
  +String? restorationId
  +State<RootRestorationScope> createState()
}

"widgets::restoration::RootRestorationScope" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::restoration::RootRestorationScope"

class "widgets::restoration::_RootRestorationScopeState" {
  -bool? _okToRenderBlankContainer
  -bool _rootBucketValid
  -RestorationBucket? _rootBucket
  -RestorationBucket? _ancestorBucket
  -bool _isLoadingRootBucket
  -bool _needsRootBucketInserted
  -bool _isWaitingForRootBucket
  +void didChangeDependencies()
  +void didUpdateWidget()
  -void _loadRootBucketIfNecessary()
  -void _replaceRootBucket()
  +void dispose()
  +Widget build()
}

"widgets::restoration::_RootRestorationScopeState" o-- "services::restoration::RestorationBucket"
"widgets::framework::State" <|-- "widgets::restoration::_RootRestorationScopeState"

abstract class "widgets::restoration::RestorableProperty" {
  -bool _disposed
  -String? _restorationId
  -RestorationMixin<StatefulWidget>? _owner
  +bool enabled
  +State<StatefulWidget> state
  +bool isRegistered
  +T createDefaultValue()
  +T fromPrimitives()
  +void initWithValue()
  +Object? toPrimitives()
  +void dispose()
  -void _register()
  -void _unregister()
}

"widgets::restoration::RestorableProperty" o-- "widgets::restoration::RestorationMixin<StatefulWidget>"
"widgets::restoration::RestorableProperty" o-- "widgets::framework::State<StatefulWidget>"
"foundation::change_notifier::ChangeNotifier" <|-- "widgets::restoration::RestorableProperty"

abstract class "widgets::restoration::RestorationMixin" {
  -RestorationBucket? _bucket
  -Map<RestorableProperty<Object?>, void Function()> _properties
  -List<RestorableProperty<Object?>>? _debugPropertiesWaitingForReregistration
  -bool _firstRestorePending
  -RestorationBucket? _currentParent
  +String? restorationId
  +RestorationBucket? bucket
  +bool restorePending
  -bool _debugDoingRestore
  #void restoreState()
  #void didToggleBucket()
  #void registerForRestoration()
  #void unregisterFromRestoration()
  #void didUpdateRestorationId()
  +void didUpdateWidget()
  +void didChangeDependencies()
  -void _doRestore()
  -bool _updateBucketIfNecessary()
  -bool _setNewBucketIfNecessary()
  -void _updateProperty()
  -void _unregister()
  +void dispose()
}

"widgets::restoration::RestorationMixin" o-- "services::restoration::RestorationBucket"

class "widgets::app_lifecycle_listener::AppLifecycleListener" {
  -AppLifecycleState? _lifecycleState
  +WidgetsBinding binding
  +void Function(AppLifecycleState)? onStateChange
  +void Function()? onInactive
  +void Function()? onResume
  +void Function()? onHide
  +void Function()? onShow
  +void Function()? onPause
  +void Function()? onRestart
  +Future<dynamic> Function()? onExitRequested
  +void Function()? onDetach
  -bool _debugDisposed
  +void dispose()
  -bool _debugAssertNotDisposed()
  +Future<dynamic> didRequestAppExit()
  +void didChangeAppLifecycleState()
  +void debugFillProperties()
}

"widgets::app_lifecycle_listener::AppLifecycleListener" o-- "dart::ui::AppLifecycleState"
"widgets::app_lifecycle_listener::AppLifecycleListener" o-- "widgets::binding::WidgetsBinding"
"widgets::app_lifecycle_listener::AppLifecycleListener" o-- "foundation::basic_types::void Function(AppLifecycleState)"
"widgets::app_lifecycle_listener::AppLifecycleListener" o-- "dart::ui::void Function()"
"widgets::app_lifecycle_listener::AppLifecycleListener" o-- "widgets::app_lifecycle_listener::Future<dynamic> Function()"
"widgets::binding::WidgetsBindingObserver" <|-- "widgets::app_lifecycle_listener::AppLifecycleListener"
"foundation::diagnostics::Diagnosticable" <|-- "widgets::app_lifecycle_listener::AppLifecycleListener"

class "widgets::scroll_physics::ScrollPhysics" {
  +ScrollPhysics? parent
  {static} -SpringDescription _kDefaultSpring
  +SpringDescription spring
  +Tolerance tolerance
  +double minFlingDistance
  +double minFlingVelocity
  +double maxFlingVelocity
  +double? dragStartDistanceMotionThreshold
  +bool allowImplicitScrolling
  +bool allowUserScrolling
  #ScrollPhysics? buildParent()
  +ScrollPhysics applyTo()
  +double applyPhysicsToUserOffset()
  +bool shouldAcceptUserOffset()
  +bool recommendDeferredLoading()
  +double applyBoundaryConditions()
  +double adjustPositionForNewDimensions()
  +Simulation? createBallisticSimulation()
  +Tolerance toleranceFor()
  +double carriedMomentum()
  +String toString()
}

"widgets::scroll_physics::ScrollPhysics" o-- "widgets::scroll_physics::ScrollPhysics"
"widgets::scroll_physics::ScrollPhysics" o-- "physics::spring_simulation::SpringDescription"
"widgets::scroll_physics::ScrollPhysics" o-- "physics::tolerance::Tolerance"

class "widgets::scroll_physics::RangeMaintainingScrollPhysics" {
  +RangeMaintainingScrollPhysics applyTo()
  +double adjustPositionForNewDimensions()
}

"widgets::scroll_physics::ScrollPhysics" <|-- "widgets::scroll_physics::RangeMaintainingScrollPhysics"

class "widgets::scroll_physics::BouncingScrollPhysics" {
  +ScrollDecelerationRate decelerationRate
  +double minFlingVelocity
  +double dragStartDistanceMotionThreshold
  +double maxFlingVelocity
  +SpringDescription spring
  +BouncingScrollPhysics applyTo()
  +double frictionFactor()
  +double applyPhysicsToUserOffset()
  {static} -double _applyFriction()
  +double applyBoundaryConditions()
  +Simulation? createBallisticSimulation()
  +double carriedMomentum()
}

"widgets::scroll_physics::BouncingScrollPhysics" o-- "widgets::scroll_physics::ScrollDecelerationRate"
"widgets::scroll_physics::BouncingScrollPhysics" o-- "physics::spring_simulation::SpringDescription"
"widgets::scroll_physics::ScrollPhysics" <|-- "widgets::scroll_physics::BouncingScrollPhysics"

class "widgets::scroll_physics::ClampingScrollPhysics" {
  +ClampingScrollPhysics applyTo()
  +double applyBoundaryConditions()
  +Simulation? createBallisticSimulation()
}

"widgets::scroll_physics::ScrollPhysics" <|-- "widgets::scroll_physics::ClampingScrollPhysics"

class "widgets::scroll_physics::AlwaysScrollableScrollPhysics" {
  +AlwaysScrollableScrollPhysics applyTo()
  +bool shouldAcceptUserOffset()
}

"widgets::scroll_physics::ScrollPhysics" <|-- "widgets::scroll_physics::AlwaysScrollableScrollPhysics"

class "widgets::scroll_physics::NeverScrollableScrollPhysics" {
  +bool allowUserScrolling
  +bool allowImplicitScrolling
  +NeverScrollableScrollPhysics applyTo()
}

"widgets::scroll_physics::ScrollPhysics" <|-- "widgets::scroll_physics::NeverScrollableScrollPhysics"

class "widgets::scroll_physics::ScrollDecelerationRate" {
  +int index
  {static} +List<ScrollDecelerationRate> values
  {static} +ScrollDecelerationRate normal
  {static} +ScrollDecelerationRate fast
}

"widgets::scroll_physics::ScrollDecelerationRate" o-- "widgets::scroll_physics::ScrollDecelerationRate"
"dart::core::Enum" <|-- "widgets::scroll_physics::ScrollDecelerationRate"

class "widgets::icon_data::IconData" {
  +int codePoint
  +String? fontFamily
  +String? fontPackage
  +bool matchTextDirection
  +List<String>? fontFamilyFallback
  +int hashCode
  +bool ==()
  +String toString()
}

class "widgets::icon_data::IconDataProperty" {
  +Map<String, Object?> toJsonMap()
}

"foundation::diagnostics::DiagnosticsProperty" <|-- "widgets::icon_data::IconDataProperty"

class "widgets::icon_data::_StaticIconProvider" {
}

class "widgets::overflow_bar::OverflowBar" {
  +double spacing
  +MainAxisAlignment? alignment
  +double overflowSpacing
  +OverflowBarAlignment overflowAlignment
  +VerticalDirection overflowDirection
  +TextDirection? textDirection
  +Clip clipBehavior
  +RenderObject createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::overflow_bar::OverflowBar" o-- "rendering::flex::MainAxisAlignment"
"widgets::overflow_bar::OverflowBar" o-- "widgets::overflow_bar::OverflowBarAlignment"
"widgets::overflow_bar::OverflowBar" o-- "painting::basic_types::VerticalDirection"
"widgets::overflow_bar::OverflowBar" o-- "dart::ui::TextDirection"
"widgets::overflow_bar::OverflowBar" o-- "dart::ui::Clip"
"widgets::framework::MultiChildRenderObjectWidget" <|-- "widgets::overflow_bar::OverflowBar"

class "widgets::overflow_bar::_OverflowBarParentData" {
}

"rendering::box::ContainerBoxParentData" <|-- "widgets::overflow_bar::_OverflowBarParentData"

class "widgets::overflow_bar::_RenderOverflowBar" {
  -double _spacing
  -MainAxisAlignment? _alignment
  -double _overflowSpacing
  -OverflowBarAlignment _overflowAlignment
  -VerticalDirection _overflowDirection
  -TextDirection _textDirection
  -Clip _clipBehavior
  +double spacing
  +MainAxisAlignment? alignment
  +double overflowSpacing
  +OverflowBarAlignment overflowAlignment
  +VerticalDirection overflowDirection
  +TextDirection textDirection
  +Clip clipBehavior
  +void setupParentData()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double? computeDistanceToActualBaseline()
  +Size computeDryLayout()
  +void performLayout()
  +bool hitTestChildren()
  +void paint()
  +void debugFillProperties()
}

"widgets::overflow_bar::_RenderOverflowBar" o-- "rendering::flex::MainAxisAlignment"
"widgets::overflow_bar::_RenderOverflowBar" o-- "widgets::overflow_bar::OverflowBarAlignment"
"widgets::overflow_bar::_RenderOverflowBar" o-- "painting::basic_types::VerticalDirection"
"widgets::overflow_bar::_RenderOverflowBar" o-- "dart::ui::TextDirection"
"widgets::overflow_bar::_RenderOverflowBar" o-- "dart::ui::Clip"
"rendering::box::RenderBox" <|-- "widgets::overflow_bar::_RenderOverflowBar"
"rendering::object::ContainerRenderObjectMixin" <|-- "widgets::overflow_bar::_RenderOverflowBar"
"rendering::box::RenderBoxContainerDefaultsMixin" <|-- "widgets::overflow_bar::_RenderOverflowBar"

class "widgets::overflow_bar::OverflowBarAlignment" {
  +int index
  {static} +List<OverflowBarAlignment> values
  {static} +OverflowBarAlignment start
  {static} +OverflowBarAlignment end
  {static} +OverflowBarAlignment center
}

"widgets::overflow_bar::OverflowBarAlignment" o-- "widgets::overflow_bar::OverflowBarAlignment"
"dart::core::Enum" <|-- "widgets::overflow_bar::OverflowBarAlignment"

class "widgets::fade_in_image::FadeInImage" {
  +ImageProvider<Object> placeholder
  +Widget Function(BuildContext, Object, StackTrace?)? placeholderErrorBuilder
  +ImageProvider<Object> image
  +Widget Function(BuildContext, Object, StackTrace?)? imageErrorBuilder
  +Duration fadeOutDuration
  +Curve fadeOutCurve
  +Duration fadeInDuration
  +Curve fadeInCurve
  +double? width
  +double? height
  +BoxFit? fit
  +BoxFit? placeholderFit
  +FilterQuality filterQuality
  +FilterQuality? placeholderFilterQuality
  +AlignmentGeometry alignment
  +ImageRepeat repeat
  +bool matchTextDirection
  +bool excludeFromSemantics
  +String? imageSemanticLabel
  +State<FadeInImage> createState()
}

"widgets::fade_in_image::FadeInImage" o-- "painting::image_provider::ImageProvider<Object>"
"widgets::fade_in_image::FadeInImage" o-- "widgets::image::Widget Function(BuildContext, Object, StackTrace)"
"widgets::fade_in_image::FadeInImage" o-- "animation::curves::Curve"
"widgets::fade_in_image::FadeInImage" o-- "painting::box_fit::BoxFit"
"widgets::fade_in_image::FadeInImage" o-- "dart::ui::FilterQuality"
"widgets::fade_in_image::FadeInImage" o-- "painting::alignment::AlignmentGeometry"
"widgets::fade_in_image::FadeInImage" o-- "painting::decoration_image::ImageRepeat"
"widgets::framework::StatefulWidget" <|-- "widgets::fade_in_image::FadeInImage"

class "widgets::fade_in_image::_FadeInImageState" {
  {static} -Animation<double> _kOpaqueAnimation
  +bool targetLoaded
  -ProxyAnimation _imageAnimation
  -ProxyAnimation _placeholderAnimation
  -Image _image()
  +Widget build()
}

"widgets::fade_in_image::_FadeInImageState" o-- "animation::animation::Animation<double>"
"widgets::fade_in_image::_FadeInImageState" o-- "animation::animations::ProxyAnimation"
"widgets::framework::State" <|-- "widgets::fade_in_image::_FadeInImageState"

class "widgets::fade_in_image::_AnimatedFadeOutFadeIn" {
  +Widget target
  +ProxyAnimation targetProxyAnimation
  +Widget placeholder
  +ProxyAnimation placeholderProxyAnimation
  +bool isTargetLoaded
  +Duration fadeInDuration
  +Duration fadeOutDuration
  +Curve fadeInCurve
  +Curve fadeOutCurve
  +bool wasSynchronouslyLoaded
  +_AnimatedFadeOutFadeInState createState()
}

"widgets::fade_in_image::_AnimatedFadeOutFadeIn" o-- "widgets::framework::Widget"
"widgets::fade_in_image::_AnimatedFadeOutFadeIn" o-- "animation::animations::ProxyAnimation"
"widgets::fade_in_image::_AnimatedFadeOutFadeIn" o-- "animation::curves::Curve"
"widgets::implicit_animations::ImplicitlyAnimatedWidget" <|-- "widgets::fade_in_image::_AnimatedFadeOutFadeIn"

class "widgets::fade_in_image::_AnimatedFadeOutFadeInState" {
  -Tween<double>? _targetOpacity
  -Tween<double>? _placeholderOpacity
  -Animation<double>? _targetOpacityAnimation
  -Animation<double>? _placeholderOpacityAnimation
  +void forEachTween()
  +void didUpdateTweens()
  +Widget build()
  +void debugFillProperties()
}

"widgets::fade_in_image::_AnimatedFadeOutFadeInState" o-- "animation::tween::Tween<double>"
"widgets::fade_in_image::_AnimatedFadeOutFadeInState" o-- "animation::animation::Animation<double>"
"widgets::implicit_animations::ImplicitlyAnimatedWidgetState" <|-- "widgets::fade_in_image::_AnimatedFadeOutFadeInState"

class "widgets::focus_scope::Focus" {
  +FocusNode? parentNode
  +Widget child
  +FocusNode? focusNode
  +bool autofocus
  +void Function(bool)? onFocusChange
  -KeyEventResult Function(FocusNode, KeyEvent)? _onKeyEvent
  -KeyEventResult Function(FocusNode, RawKeyEvent)? _onKey
  -bool? _canRequestFocus
  -bool? _skipTraversal
  -bool? _descendantsAreFocusable
  -bool? _descendantsAreTraversable
  +bool includeSemantics
  -String? _debugLabel
  -bool _usingExternalFocus
  +KeyEventResult Function(FocusNode, KeyEvent)? onKeyEvent
  +KeyEventResult Function(FocusNode, RawKeyEvent)? onKey
  +bool canRequestFocus
  +bool skipTraversal
  +bool descendantsAreFocusable
  +bool descendantsAreTraversable
  +String? debugLabel
  {static} +FocusNode of()
  {static} +FocusNode? maybeOf()
  {static} +bool isAt()
  +void debugFillProperties()
  +State<Focus> createState()
}

"widgets::focus_scope::Focus" o-- "widgets::focus_manager::FocusNode"
"widgets::focus_scope::Focus" o-- "widgets::framework::Widget"
"widgets::focus_scope::Focus" o-- "foundation::basic_types::void Function(bool)"
"widgets::focus_scope::Focus" o-- "widgets::focus_manager::KeyEventResult Function(FocusNode, KeyEvent)"
"widgets::focus_scope::Focus" o-- "widgets::focus_manager::KeyEventResult Function(FocusNode, RawKeyEvent)"
"widgets::framework::StatefulWidget" <|-- "widgets::focus_scope::Focus"

class "widgets::focus_scope::_FocusWithExternalFocusNode" {
  -bool _usingExternalFocus
  +KeyEventResult Function(FocusNode, KeyEvent)? onKeyEvent
  +KeyEventResult Function(FocusNode, RawKeyEvent)? onKey
  +bool canRequestFocus
  +bool skipTraversal
  +bool descendantsAreFocusable
  -bool? _descendantsAreTraversable
  +String? debugLabel
}

"widgets::focus_scope::_FocusWithExternalFocusNode" o-- "widgets::focus_manager::KeyEventResult Function(FocusNode, KeyEvent)"
"widgets::focus_scope::_FocusWithExternalFocusNode" o-- "widgets::focus_manager::KeyEventResult Function(FocusNode, RawKeyEvent)"
"widgets::focus_scope::Focus" <|-- "widgets::focus_scope::_FocusWithExternalFocusNode"

class "widgets::focus_scope::_FocusState" {
  -FocusNode? _internalNode
  -bool _hadPrimaryFocus
  -bool _couldRequestFocus
  -bool _descendantsWereFocusable
  -bool _descendantsWereTraversable
  -bool _didAutofocus
  -FocusAttachment? _focusAttachment
  +FocusNode focusNode
  +void initState()
  -void _initNode()
  -FocusNode _createNode()
  +void dispose()
  +void didChangeDependencies()
  -void _handleAutofocus()
  +void deactivate()
  +void didUpdateWidget()
  -void _handleFocusChanged()
  +Widget build()
}

"widgets::focus_scope::_FocusState" o-- "widgets::focus_manager::FocusNode"
"widgets::focus_scope::_FocusState" o-- "widgets::focus_manager::FocusAttachment"
"widgets::framework::State" <|-- "widgets::focus_scope::_FocusState"

class "widgets::focus_scope::FocusScope" {
  {static} +FocusScopeNode of()
  +State<Focus> createState()
}

"widgets::focus_scope::Focus" <|-- "widgets::focus_scope::FocusScope"

class "widgets::focus_scope::_FocusScopeWithExternalFocusNode" {
  -bool _usingExternalFocus
  +KeyEventResult Function(FocusNode, KeyEvent)? onKeyEvent
  +KeyEventResult Function(FocusNode, RawKeyEvent)? onKey
  +bool canRequestFocus
  +bool skipTraversal
  +bool descendantsAreFocusable
  +bool descendantsAreTraversable
  +String? debugLabel
}

"widgets::focus_scope::_FocusScopeWithExternalFocusNode" o-- "widgets::focus_manager::KeyEventResult Function(FocusNode, KeyEvent)"
"widgets::focus_scope::_FocusScopeWithExternalFocusNode" o-- "widgets::focus_manager::KeyEventResult Function(FocusNode, RawKeyEvent)"
"widgets::focus_scope::FocusScope" <|-- "widgets::focus_scope::_FocusScopeWithExternalFocusNode"

class "widgets::focus_scope::_FocusScopeState" {
  -FocusScopeNode _createNode()
  +Widget build()
}

"widgets::focus_scope::_FocusState" <|-- "widgets::focus_scope::_FocusScopeState"

class "widgets::focus_scope::_FocusInheritedScope" {
}

"widgets::inherited_notifier::InheritedNotifier" <|-- "widgets::focus_scope::_FocusInheritedScope"

class "widgets::focus_scope::ExcludeFocus" {
  +bool excluding
  +Widget child
  +Widget build()
}

"widgets::focus_scope::ExcludeFocus" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::focus_scope::ExcludeFocus"

class "widgets::_platform_selectable_region_context_menu_io::PlatformSelectableRegionContextMenu" {
  {static} +void Function(String, Object Function(int), {bool isVisible})? debugOverrideRegisterViewFactory
  {static} +void attach()
  {static} +void detach()
  +Widget build()
}

"widgets::_platform_selectable_region_context_menu_io::PlatformSelectableRegionContextMenu" o-- "widgets::_platform_selectable_region_context_menu_io::void Function(String, Object Function(int), {bool isVisible})"
"widgets::framework::StatelessWidget" <|-- "widgets::_platform_selectable_region_context_menu_io::PlatformSelectableRegionContextMenu"

class "widgets::modal_barrier::_SemanticsClipper" {
  +ValueNotifier<EdgeInsets> clipDetailsNotifier
  +_RenderSemanticsClipper createRenderObject()
  +void updateRenderObject()
}

"widgets::modal_barrier::_SemanticsClipper" o-- "foundation::change_notifier::ValueNotifier<EdgeInsets>"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::modal_barrier::_SemanticsClipper"

class "widgets::modal_barrier::_RenderSemanticsClipper" {
  -ValueNotifier<EdgeInsets> _clipDetailsNotifier
  +ValueNotifier<EdgeInsets> clipDetailsNotifier
  +Rect semanticBounds
  +void attach()
  +void detach()
  +void describeSemanticsConfiguration()
}

"widgets::modal_barrier::_RenderSemanticsClipper" o-- "foundation::change_notifier::ValueNotifier<EdgeInsets>"
"widgets::modal_barrier::_RenderSemanticsClipper" o-- "dart::ui::Rect"
"rendering::proxy_box::RenderProxyBox" <|-- "widgets::modal_barrier::_RenderSemanticsClipper"

class "widgets::modal_barrier::ModalBarrier" {
  +Color? color
  +bool dismissible
  +void Function()? onDismiss
  +bool? barrierSemanticsDismissible
  +String? semanticsLabel
  +ValueNotifier<EdgeInsets>? clipDetailsNotifier
  +String? semanticsOnTapHint
  +Widget build()
}

"widgets::modal_barrier::ModalBarrier" o-- "dart::ui::Color"
"widgets::modal_barrier::ModalBarrier" o-- "dart::ui::void Function()"
"widgets::modal_barrier::ModalBarrier" o-- "foundation::change_notifier::ValueNotifier<EdgeInsets>"
"widgets::framework::StatelessWidget" <|-- "widgets::modal_barrier::ModalBarrier"

class "widgets::modal_barrier::AnimatedModalBarrier" {
  +bool dismissible
  +String? semanticsLabel
  +bool? barrierSemanticsDismissible
  +void Function()? onDismiss
  +ValueNotifier<EdgeInsets>? clipDetailsNotifier
  +String? semanticsOnTapHint
  +Animation<Color?> color
  +Widget build()
}

"widgets::modal_barrier::AnimatedModalBarrier" o-- "dart::ui::void Function()"
"widgets::modal_barrier::AnimatedModalBarrier" o-- "foundation::change_notifier::ValueNotifier<EdgeInsets>"
"widgets::modal_barrier::AnimatedModalBarrier" o-- "animation::animation::Animation<Color>"
"widgets::transitions::AnimatedWidget" <|-- "widgets::modal_barrier::AnimatedModalBarrier"

class "widgets::modal_barrier::_AnyTapGestureRecognizer" {
  +void Function()? onAnyTapUp
  +String debugDescription
  #bool isPointerAllowed()
  #void handleTapDown()
  #void handleTapUp()
  #void handleTapCancel()
}

"widgets::modal_barrier::_AnyTapGestureRecognizer" o-- "dart::ui::void Function()"
"gestures::tap::BaseTapGestureRecognizer" <|-- "widgets::modal_barrier::_AnyTapGestureRecognizer"

class "widgets::modal_barrier::_AnyTapGestureRecognizerFactory" {
  +void Function()? onAnyTapUp
  +_AnyTapGestureRecognizer constructor()
  +void initializer()
}

"widgets::modal_barrier::_AnyTapGestureRecognizerFactory" o-- "dart::ui::void Function()"
"widgets::gesture_detector::GestureRecognizerFactory" <|-- "widgets::modal_barrier::_AnyTapGestureRecognizerFactory"

class "widgets::modal_barrier::_ModalBarrierGestureDetector" {
  +Widget child
  +void Function() onDismiss
  +Widget build()
}

"widgets::modal_barrier::_ModalBarrierGestureDetector" o-- "widgets::framework::Widget"
"widgets::modal_barrier::_ModalBarrierGestureDetector" o-- "dart::ui::void Function()"
"widgets::framework::StatelessWidget" <|-- "widgets::modal_barrier::_ModalBarrierGestureDetector"

class "widgets::_html_element_view_web::_HtmlElementViewController" {
  +int viewId
  +String viewType
  +dynamic creationParams
  -bool _initialized
  -Future<void> _initialize()
  +Future<void> clearFocus()
  +Future<void> dispatchPointerEvent()
  +Future<void> dispose()
}

"services::platform_views::PlatformViewController" <|-- "widgets::_html_element_view_web::_HtmlElementViewController"

class "widgets::interactive_viewer::InteractiveViewer" {
  +Alignment? alignment
  +Clip clipBehavior
  +bool alignPanAxis
  +PanAxis panAxis
  +EdgeInsets boundaryMargin
  +Widget Function(BuildContext, Quad)? builder
  +Widget? child
  +bool constrained
  +bool panEnabled
  +bool scaleEnabled
  +bool trackpadScrollCausesScale
  +double scaleFactor
  +double maxScale
  +double minScale
  +double interactionEndFrictionCoefficient
  +void Function(ScaleEndDetails)? onInteractionEnd
  +void Function(ScaleStartDetails)? onInteractionStart
  +void Function(ScaleUpdateDetails)? onInteractionUpdate
  +TransformationController? transformationController
  {static} -double _kDrag
  {static} +Vector3 getNearestPointOnLine()
  {static} +Quad getAxisAlignedBoundingBox()
  {static} +bool pointIsInside()
  {static} +Vector3 getNearestPointInside()
  +State<InteractiveViewer> createState()
}

"widgets::interactive_viewer::InteractiveViewer" o-- "painting::alignment::Alignment"
"widgets::interactive_viewer::InteractiveViewer" o-- "dart::ui::Clip"
"widgets::interactive_viewer::InteractiveViewer" o-- "widgets::interactive_viewer::PanAxis"
"widgets::interactive_viewer::InteractiveViewer" o-- "painting::edge_insets::EdgeInsets"
"widgets::interactive_viewer::InteractiveViewer" o-- "widgets::interactive_viewer::Widget Function(BuildContext, Quad)"
"widgets::interactive_viewer::InteractiveViewer" o-- "widgets::framework::Widget"
"widgets::interactive_viewer::InteractiveViewer" o-- "gestures::scale::void Function(ScaleEndDetails)"
"widgets::interactive_viewer::InteractiveViewer" o-- "gestures::scale::void Function(ScaleStartDetails)"
"widgets::interactive_viewer::InteractiveViewer" o-- "gestures::scale::void Function(ScaleUpdateDetails)"
"widgets::interactive_viewer::InteractiveViewer" o-- "widgets::interactive_viewer::TransformationController"
"widgets::framework::StatefulWidget" <|-- "widgets::interactive_viewer::InteractiveViewer"

class "widgets::interactive_viewer::_InteractiveViewerState" {
  -TransformationController? _transformationController
  -GlobalKey<State<StatefulWidget>> _childKey
  -GlobalKey<State<StatefulWidget>> _parentKey
  -Animation<Offset>? _animation
  -Animation<double>? _scaleAnimation
  -Offset _scaleAnimationFocalPoint
  -AnimationController _controller
  -AnimationController _scaleController
  -Axis? _currentAxis
  -Offset? _referenceFocalPoint
  -double? _scaleStart
  -double? _rotationStart
  -double _currentRotation
  -_GestureType? _gestureType
  -bool _rotateEnabled
  -Rect _boundaryRect
  -Rect _viewport
  -Matrix4 _matrixTranslate()
  -Matrix4 _matrixScale()
  -Matrix4 _matrixRotate()
  -bool _gestureIsSupported()
  -_GestureType _getGestureType()
  -void _onScaleStart()
  -void _onScaleUpdate()
  -void _onScaleEnd()
  -void _receivedPointerSignal()
  -void _onAnimate()
  -void _onScaleAnimate()
  -void _onTransformationControllerChange()
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"widgets::interactive_viewer::_InteractiveViewerState" o-- "widgets::interactive_viewer::TransformationController"
"widgets::interactive_viewer::_InteractiveViewerState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::interactive_viewer::_InteractiveViewerState" o-- "animation::animation::Animation<Offset>"
"widgets::interactive_viewer::_InteractiveViewerState" o-- "animation::animation::Animation<double>"
"widgets::interactive_viewer::_InteractiveViewerState" o-- "dart::ui::Offset"
"widgets::interactive_viewer::_InteractiveViewerState" o-- "animation::animation_controller::AnimationController"
"widgets::interactive_viewer::_InteractiveViewerState" o-- "painting::basic_types::Axis"
"widgets::interactive_viewer::_InteractiveViewerState" o-- "widgets::interactive_viewer::_GestureType"
"widgets::interactive_viewer::_InteractiveViewerState" o-- "dart::ui::Rect"
"widgets::framework::State" <|-- "widgets::interactive_viewer::_InteractiveViewerState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "widgets::interactive_viewer::_InteractiveViewerState"

class "widgets::interactive_viewer::_InteractiveViewerBuilt" {
  +Widget child
  +GlobalKey<State<StatefulWidget>> childKey
  +Clip clipBehavior
  +bool constrained
  +Matrix4 matrix
  +Alignment? alignment
  +Widget build()
}

"widgets::interactive_viewer::_InteractiveViewerBuilt" o-- "widgets::framework::Widget"
"widgets::interactive_viewer::_InteractiveViewerBuilt" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::interactive_viewer::_InteractiveViewerBuilt" o-- "dart::ui::Clip"
"widgets::interactive_viewer::_InteractiveViewerBuilt" o-- "vector_math::vector_math_64::Matrix4"
"widgets::interactive_viewer::_InteractiveViewerBuilt" o-- "painting::alignment::Alignment"
"widgets::framework::StatelessWidget" <|-- "widgets::interactive_viewer::_InteractiveViewerBuilt"

class "widgets::interactive_viewer::TransformationController" {
  +Offset toScene()
}

"foundation::change_notifier::ValueNotifier" <|-- "widgets::interactive_viewer::TransformationController"

class "widgets::interactive_viewer::_GestureType" {
  +int index
  {static} +List<_GestureType> values
  {static} +_GestureType pan
  {static} +_GestureType scale
  {static} +_GestureType rotate
}

"widgets::interactive_viewer::_GestureType" o-- "widgets::interactive_viewer::_GestureType"
"dart::core::Enum" <|-- "widgets::interactive_viewer::_GestureType"

class "widgets::interactive_viewer::PanAxis" {
  +int index
  {static} +List<PanAxis> values
  {static} +PanAxis horizontal
  {static} +PanAxis vertical
  {static} +PanAxis aligned
  {static} +PanAxis free
}

"widgets::interactive_viewer::PanAxis" o-- "widgets::interactive_viewer::PanAxis"
"dart::core::Enum" <|-- "widgets::interactive_viewer::PanAxis"

class "widgets::display_feature_sub_screen::DisplayFeatureSubScreen" {
  +Offset? anchorPoint
  +Widget child
  +Widget build()
  {static} -Offset _fallbackAnchorPoint()
  {static} +Iterable<Rect> avoidBounds()
  {static} -Rect _closestToAnchorPoint()
  {static} -double _distanceFromPointToRect()
  {static} +Iterable<Rect> subScreensInBounds()
  {static} -Offset _capOffset()
}

"widgets::display_feature_sub_screen::DisplayFeatureSubScreen" o-- "dart::ui::Offset"
"widgets::display_feature_sub_screen::DisplayFeatureSubScreen" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::display_feature_sub_screen::DisplayFeatureSubScreen"

abstract class "widgets::unique_widget::UniqueWidget" {
  +T? currentState
  +T createState()
}

"widgets::framework::StatefulWidget" <|-- "widgets::unique_widget::UniqueWidget"

class "widgets::autofill::AutofillGroup" {
  +Widget child
  +AutofillContextAction onDisposeAction
  {static} +AutofillGroupState? maybeOf()
  {static} +AutofillGroupState of()
  +AutofillGroupState createState()
}

"widgets::autofill::AutofillGroup" o-- "widgets::framework::Widget"
"widgets::autofill::AutofillGroup" o-- "widgets::autofill::AutofillContextAction"
"widgets::framework::StatefulWidget" <|-- "widgets::autofill::AutofillGroup"

class "widgets::autofill::AutofillGroupState" {
  -Map<String, AutofillClient> _clients
  -bool _isTopmostAutofillGroup
  +Iterable<AutofillClient> autofillClients
  +AutofillClient? getAutofillClient()
  +void register()
  +void unregister()
  +void didChangeDependencies()
  +Widget build()
  +void dispose()
}

"widgets::framework::State" <|-- "widgets::autofill::AutofillGroupState"
"services::autofill::AutofillScopeMixin" <|-- "widgets::autofill::AutofillGroupState"

class "widgets::autofill::_AutofillScope" {
  -AutofillGroupState? _scope
  +AutofillGroup client
  +bool updateShouldNotify()
}

"widgets::autofill::_AutofillScope" o-- "widgets::autofill::AutofillGroupState"
"widgets::autofill::_AutofillScope" o-- "widgets::autofill::AutofillGroup"
"widgets::framework::InheritedWidget" <|-- "widgets::autofill::_AutofillScope"

class "widgets::autofill::AutofillContextAction" {
  +int index
  {static} +List<AutofillContextAction> values
  {static} +AutofillContextAction commit
  {static} +AutofillContextAction cancel
}

"widgets::autofill::AutofillContextAction" o-- "widgets::autofill::AutofillContextAction"
"dart::core::Enum" <|-- "widgets::autofill::AutofillContextAction"

abstract class "widgets::scroll_activity::ScrollActivityDelegate" {
  +AxisDirection axisDirection
  +double setPixels()
  +void applyUserOffset()
  +void goIdle()
  +void goBallistic()
}

"widgets::scroll_activity::ScrollActivityDelegate" o-- "painting::basic_types::AxisDirection"

abstract class "widgets::scroll_activity::ScrollActivity" {
  -ScrollActivityDelegate _delegate
  -bool _isDisposed
  +ScrollActivityDelegate delegate
  +bool shouldIgnorePointer
  +bool isScrolling
  +double velocity
  +void updateDelegate()
  +void resetActivity()
  +void dispatchScrollStartNotification()
  +void dispatchScrollUpdateNotification()
  +void dispatchOverscrollNotification()
  +void dispatchScrollEndNotification()
  +void applyNewDimensions()
  +void dispose()
  +String toString()
}

"widgets::scroll_activity::ScrollActivity" o-- "widgets::scroll_activity::ScrollActivityDelegate"

class "widgets::scroll_activity::IdleScrollActivity" {
  +bool shouldIgnorePointer
  +bool isScrolling
  +double velocity
  +void applyNewDimensions()
}

"widgets::scroll_activity::ScrollActivity" <|-- "widgets::scroll_activity::IdleScrollActivity"

abstract class "widgets::scroll_activity::ScrollHoldController" {
  +void cancel()
}

class "widgets::scroll_activity::HoldScrollActivity" {
  +void Function()? onHoldCanceled
  +bool shouldIgnorePointer
  +bool isScrolling
  +double velocity
  +void cancel()
  +void dispose()
}

"widgets::scroll_activity::HoldScrollActivity" o-- "dart::ui::void Function()"
"widgets::scroll_activity::ScrollActivity" <|-- "widgets::scroll_activity::HoldScrollActivity"
"widgets::scroll_activity::ScrollHoldController" <|-- "widgets::scroll_activity::HoldScrollActivity"

class "widgets::scroll_activity::ScrollDragController" {
  -ScrollActivityDelegate _delegate
  +void Function()? onDragCanceled
  +double? carriedVelocity
  +double? motionStartDistanceThreshold
  -Duration? _lastNonStationaryTimestamp
  -bool _retainMomentum
  -double? _offsetSinceLastStop
  {static} +Duration momentumRetainStationaryDurationThreshold
  {static} +double momentumRetainVelocityThresholdFactor
  {static} +Duration motionStoppedDurationThreshold
  {static} -double _bigThresholdBreakDistance
  -PointerDeviceKind? _kind
  -dynamic _lastDetails
  +ScrollActivityDelegate delegate
  -bool _reversed
  +dynamic lastDetails
  +void updateDelegate()
  -void _maybeLoseMomentum()
  -double _adjustForScrollStartThreshold()
  +void update()
  +void end()
  +void cancel()
  +void dispose()
  +String toString()
}

"widgets::scroll_activity::ScrollDragController" o-- "widgets::scroll_activity::ScrollActivityDelegate"
"widgets::scroll_activity::ScrollDragController" o-- "dart::ui::void Function()"
"widgets::scroll_activity::ScrollDragController" o-- "dart::ui::PointerDeviceKind"
"gestures::drag::Drag" <|-- "widgets::scroll_activity::ScrollDragController"

class "widgets::scroll_activity::DragScrollActivity" {
  -ScrollDragController? _controller
  +bool shouldIgnorePointer
  +bool isScrolling
  +double velocity
  +void dispatchScrollStartNotification()
  +void dispatchScrollUpdateNotification()
  +void dispatchOverscrollNotification()
  +void dispatchScrollEndNotification()
  +void dispose()
  +String toString()
}

"widgets::scroll_activity::DragScrollActivity" o-- "widgets::scroll_activity::ScrollDragController"
"widgets::scroll_activity::ScrollActivity" <|-- "widgets::scroll_activity::DragScrollActivity"

class "widgets::scroll_activity::BallisticScrollActivity" {
  -AnimationController _controller
  +bool shouldIgnorePointer
  +bool isScrolling
  +double velocity
  +void resetActivity()
  +void applyNewDimensions()
  -void _tick()
  #bool applyMoveTo()
  -void _end()
  +void dispatchOverscrollNotification()
  +void dispose()
  +String toString()
}

"widgets::scroll_activity::BallisticScrollActivity" o-- "animation::animation_controller::AnimationController"
"widgets::scroll_activity::ScrollActivity" <|-- "widgets::scroll_activity::BallisticScrollActivity"

class "widgets::scroll_activity::DrivenScrollActivity" {
  -Completer<void> _completer
  -AnimationController _controller
  +Future<void> done
  +bool shouldIgnorePointer
  +bool isScrolling
  +double velocity
  -void _tick()
  -void _end()
  +void dispatchOverscrollNotification()
  +void dispose()
  +String toString()
}

"widgets::scroll_activity::DrivenScrollActivity" o-- "dart::async::Completer<void>"
"widgets::scroll_activity::DrivenScrollActivity" o-- "animation::animation_controller::AnimationController"
"widgets::scroll_activity::ScrollActivity" <|-- "widgets::scroll_activity::DrivenScrollActivity"

class "widgets::sliver_varied_extent_list::SliverVariedExtentList" {
  +dynamic itemExtentBuilder
  +RenderSliverVariedExtentList createRenderObject()
  +void updateRenderObject()
}

"widgets::sliver::SliverMultiBoxAdaptorWidget" <|-- "widgets::sliver_varied_extent_list::SliverVariedExtentList"

class "widgets::sliver_varied_extent_list::RenderSliverVariedExtentList" {
  -dynamic _itemExtentBuilder
  +dynamic itemExtentBuilder
  +double? itemExtent
}

"rendering::sliver_fixed_extent_list::RenderSliverFixedExtentBoxAdaptor" <|-- "widgets::sliver_varied_extent_list::RenderSliverVariedExtentList"

abstract class "widgets::list_wheel_scroll_view::ListWheelChildDelegate" {
  +int? estimatedChildCount
  +Widget? build()
  +int trueIndexOf()
  +bool shouldRebuild()
}

class "widgets::list_wheel_scroll_view::ListWheelChildListDelegate" {
  +List<Widget> children
  +int estimatedChildCount
  +Widget? build()
  +bool shouldRebuild()
}

"widgets::list_wheel_scroll_view::ListWheelChildDelegate" <|-- "widgets::list_wheel_scroll_view::ListWheelChildListDelegate"

class "widgets::list_wheel_scroll_view::ListWheelChildLoopingListDelegate" {
  +List<Widget> children
  +int? estimatedChildCount
  +int trueIndexOf()
  +Widget? build()
  +bool shouldRebuild()
}

"widgets::list_wheel_scroll_view::ListWheelChildDelegate" <|-- "widgets::list_wheel_scroll_view::ListWheelChildLoopingListDelegate"

class "widgets::list_wheel_scroll_view::ListWheelChildBuilderDelegate" {
  +Widget? Function(BuildContext, int) builder
  +int? childCount
  +int? estimatedChildCount
  +Widget? build()
  +bool shouldRebuild()
}

"widgets::list_wheel_scroll_view::ListWheelChildBuilderDelegate" o-- "widgets::framework::Widget Function(BuildContext, int)"
"widgets::list_wheel_scroll_view::ListWheelChildDelegate" <|-- "widgets::list_wheel_scroll_view::ListWheelChildBuilderDelegate"

class "widgets::list_wheel_scroll_view::FixedExtentScrollController" {
  +int initialItem
  +int selectedItem
  +Future<void> animateToItem()
  +void jumpToItem()
  +ScrollPosition createScrollPosition()
}

"widgets::scroll_controller::ScrollController" <|-- "widgets::list_wheel_scroll_view::FixedExtentScrollController"

class "widgets::list_wheel_scroll_view::FixedExtentMetrics" {
  +int itemIndex
  +FixedExtentMetrics copyWith()
}

"widgets::scroll_metrics::FixedScrollMetrics" <|-- "widgets::list_wheel_scroll_view::FixedExtentMetrics"

class "widgets::list_wheel_scroll_view::_FixedExtentScrollPosition" {
  +double itemExtent
  +int itemIndex
  {static} -double _getItemExtentFromScrollContext()
  +FixedExtentMetrics copyWith()
}

"widgets::scroll_position_with_single_context::ScrollPositionWithSingleContext" <|-- "widgets::list_wheel_scroll_view::_FixedExtentScrollPosition"
"widgets::list_wheel_scroll_view::FixedExtentMetrics" <|-- "widgets::list_wheel_scroll_view::_FixedExtentScrollPosition"

class "widgets::list_wheel_scroll_view::_FixedExtentScrollable" {
  +double itemExtent
  +_FixedExtentScrollableState createState()
}

"widgets::scrollable::Scrollable" <|-- "widgets::list_wheel_scroll_view::_FixedExtentScrollable"

class "widgets::list_wheel_scroll_view::_FixedExtentScrollableState" {
  +double itemExtent
}

"widgets::scrollable::ScrollableState" <|-- "widgets::list_wheel_scroll_view::_FixedExtentScrollableState"

class "widgets::list_wheel_scroll_view::FixedExtentScrollPhysics" {
  +FixedExtentScrollPhysics applyTo()
  +Simulation? createBallisticSimulation()
}

"widgets::scroll_physics::ScrollPhysics" <|-- "widgets::list_wheel_scroll_view::FixedExtentScrollPhysics"

class "widgets::list_wheel_scroll_view::ListWheelScrollView" {
  +ScrollController? controller
  +ScrollPhysics? physics
  +double diameterRatio
  +double perspective
  +double offAxisFraction
  +bool useMagnifier
  +double magnification
  +double overAndUnderCenterOpacity
  +double itemExtent
  +double squeeze
  +void Function(int)? onSelectedItemChanged
  +bool renderChildrenOutsideViewport
  +ListWheelChildDelegate childDelegate
  +Clip clipBehavior
  +String? restorationId
  +ScrollBehavior? scrollBehavior
  +State<ListWheelScrollView> createState()
}

"widgets::list_wheel_scroll_view::ListWheelScrollView" o-- "widgets::scroll_controller::ScrollController"
"widgets::list_wheel_scroll_view::ListWheelScrollView" o-- "widgets::scroll_physics::ScrollPhysics"
"widgets::list_wheel_scroll_view::ListWheelScrollView" o-- "foundation::basic_types::void Function(int)"
"widgets::list_wheel_scroll_view::ListWheelScrollView" o-- "widgets::list_wheel_scroll_view::ListWheelChildDelegate"
"widgets::list_wheel_scroll_view::ListWheelScrollView" o-- "dart::ui::Clip"
"widgets::list_wheel_scroll_view::ListWheelScrollView" o-- "widgets::scroll_configuration::ScrollBehavior"
"widgets::framework::StatefulWidget" <|-- "widgets::list_wheel_scroll_view::ListWheelScrollView"

class "widgets::list_wheel_scroll_view::_ListWheelScrollViewState" {
  -int _lastReportedItemIndex
  -ScrollController? _backupController
  -ScrollController _effectiveController
  +void initState()
  +void dispose()
  -bool _handleScrollNotification()
  +Widget build()
}

"widgets::list_wheel_scroll_view::_ListWheelScrollViewState" o-- "widgets::scroll_controller::ScrollController"
"widgets::framework::State" <|-- "widgets::list_wheel_scroll_view::_ListWheelScrollViewState"

class "widgets::list_wheel_scroll_view::ListWheelElement" {
  -Map<int, Widget?> _childWidgets
  -SplayTreeMap<int, Element> _childElements
  +RenderListWheelViewport renderObject
  +int? childCount
  +void update()
  +void performRebuild()
  +Widget? retrieveWidget()
  +bool childExistsAt()
  +void createChild()
  +void removeChild()
  +Element? updateChild()
  +void insertRenderObjectChild()
  +void moveRenderObjectChild()
  +void removeRenderObjectChild()
  +void visitChildren()
  +void forgetChild()
}

"widgets::list_wheel_scroll_view::ListWheelElement" o-- "dart::collection::SplayTreeMap<int, Element>"
"widgets::list_wheel_scroll_view::ListWheelElement" o-- "rendering::list_wheel_viewport::RenderListWheelViewport"
"widgets::framework::RenderObjectElement" <|-- "widgets::list_wheel_scroll_view::ListWheelElement"
"rendering::list_wheel_viewport::ListWheelChildManager" <|-- "widgets::list_wheel_scroll_view::ListWheelElement"

class "widgets::list_wheel_scroll_view::ListWheelViewport" {
  +double diameterRatio
  +double perspective
  +double offAxisFraction
  +bool useMagnifier
  +double magnification
  +double overAndUnderCenterOpacity
  +double itemExtent
  +double squeeze
  +bool renderChildrenOutsideViewport
  +ViewportOffset offset
  +ListWheelChildDelegate childDelegate
  +Clip clipBehavior
  +ListWheelElement createElement()
  +RenderListWheelViewport createRenderObject()
  +void updateRenderObject()
}

"widgets::list_wheel_scroll_view::ListWheelViewport" o-- "rendering::viewport_offset::ViewportOffset"
"widgets::list_wheel_scroll_view::ListWheelViewport" o-- "widgets::list_wheel_scroll_view::ListWheelChildDelegate"
"widgets::list_wheel_scroll_view::ListWheelViewport" o-- "dart::ui::Clip"
"widgets::framework::RenderObjectWidget" <|-- "widgets::list_wheel_scroll_view::ListWheelViewport"

abstract class "widgets::sliver::SliverWithKeepAliveWidget" {
  +RenderSliverWithKeepAliveMixin createRenderObject()
}

"widgets::framework::RenderObjectWidget" <|-- "widgets::sliver::SliverWithKeepAliveWidget"

abstract class "widgets::sliver::SliverMultiBoxAdaptorWidget" {
  +SliverChildDelegate delegate
  +SliverMultiBoxAdaptorElement createElement()
  +RenderSliverMultiBoxAdaptor createRenderObject()
  +double? estimateMaxScrollOffset()
  +void debugFillProperties()
}

"widgets::sliver::SliverMultiBoxAdaptorWidget" o-- "widgets::scroll_delegate::SliverChildDelegate"
"widgets::sliver::SliverWithKeepAliveWidget" <|-- "widgets::sliver::SliverMultiBoxAdaptorWidget"

class "widgets::sliver::SliverList" {
  +SliverMultiBoxAdaptorElement createElement()
  +RenderSliverList createRenderObject()
}

"widgets::sliver::SliverMultiBoxAdaptorWidget" <|-- "widgets::sliver::SliverList"

class "widgets::sliver::SliverFixedExtentList" {
  +double itemExtent
  +RenderSliverFixedExtentList createRenderObject()
  +void updateRenderObject()
}

"widgets::sliver::SliverMultiBoxAdaptorWidget" <|-- "widgets::sliver::SliverFixedExtentList"

class "widgets::sliver::SliverGrid" {
  +SliverGridDelegate gridDelegate
  +RenderSliverGrid createRenderObject()
  +void updateRenderObject()
  +double estimateMaxScrollOffset()
}

"widgets::sliver::SliverGrid" o-- "rendering::sliver_grid::SliverGridDelegate"
"widgets::sliver::SliverMultiBoxAdaptorWidget" <|-- "widgets::sliver::SliverGrid"

class "widgets::sliver::SliverMultiBoxAdaptorElement" {
  -bool _replaceMovedChildren
  -SplayTreeMap<int, Element?> _childElements
  -RenderBox? _currentBeforeChild
  -int? _currentlyUpdatingChildIndex
  -bool _didUnderflow
  +RenderSliverMultiBoxAdaptor renderObject
  +int? estimatedChildCount
  +int childCount
  +void update()
  +void performRebuild()
  -Widget? _build()
  +void createChild()
  +Element? updateChild()
  +void forgetChild()
  +void removeChild()
  {static} -double _extrapolateMaxScrollOffset()
  +double estimateMaxScrollOffset()
  +void didStartLayout()
  +void didFinishLayout()
  +bool debugAssertChildListLocked()
  +void didAdoptChild()
  +void setDidUnderflow()
  +void insertRenderObjectChild()
  +void moveRenderObjectChild()
  +void removeRenderObjectChild()
  +void visitChildren()
  +void debugVisitOnstageChildren()
}

"widgets::sliver::SliverMultiBoxAdaptorElement" o-- "dart::collection::SplayTreeMap<int, Element>"
"widgets::sliver::SliverMultiBoxAdaptorElement" o-- "rendering::box::RenderBox"
"widgets::sliver::SliverMultiBoxAdaptorElement" o-- "rendering::sliver_multi_box_adaptor::RenderSliverMultiBoxAdaptor"
"widgets::framework::RenderObjectElement" <|-- "widgets::sliver::SliverMultiBoxAdaptorElement"
"rendering::sliver_multi_box_adaptor::RenderSliverBoxChildManager" <|-- "widgets::sliver::SliverMultiBoxAdaptorElement"

class "widgets::sliver::SliverOpacity" {
  +double opacity
  +bool alwaysIncludeSemantics
  +RenderSliverOpacity createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::sliver::SliverOpacity"

class "widgets::sliver::SliverIgnorePointer" {
  +bool ignoring
  +bool? ignoringSemantics
  +RenderSliverIgnorePointer createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::sliver::SliverIgnorePointer"

class "widgets::sliver::SliverOffstage" {
  +bool offstage
  +RenderSliverOffstage createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
  +SingleChildRenderObjectElement createElement()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::sliver::SliverOffstage"

class "widgets::sliver::_SliverOffstageElement" {
  +void debugVisitOnstageChildren()
}

"widgets::framework::SingleChildRenderObjectElement" <|-- "widgets::sliver::_SliverOffstageElement"

class "widgets::sliver::KeepAlive" {
  +bool keepAlive
  +Type debugTypicalAncestorWidgetClass
  +String debugTypicalAncestorWidgetDescription
  +void applyParentData()
  +bool debugCanApplyOutOfTurn()
  +void debugFillProperties()
}

"widgets::framework::ParentDataWidget" <|-- "widgets::sliver::KeepAlive"

class "widgets::sliver::SliverConstrainedCrossAxis" {
  +double maxExtent
  +Widget sliver
  +Widget build()
}

"widgets::sliver::SliverConstrainedCrossAxis" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::sliver::SliverConstrainedCrossAxis"

class "widgets::sliver::_SliverZeroFlexParentDataWidget" {
  +Type debugTypicalAncestorWidgetClass
  +void applyParentData()
}

"widgets::framework::ParentDataWidget" <|-- "widgets::sliver::_SliverZeroFlexParentDataWidget"

class "widgets::sliver::_SliverConstrainedCrossAxis" {
  +double maxExtent
  +dynamic createRenderObject()
  +void updateRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::sliver::_SliverConstrainedCrossAxis"

class "widgets::sliver::SliverCrossAxisExpanded" {
  +int flex
  +Type debugTypicalAncestorWidgetClass
  +void applyParentData()
}

"widgets::framework::ParentDataWidget" <|-- "widgets::sliver::SliverCrossAxisExpanded"

class "widgets::sliver::SliverCrossAxisGroup" {
  +dynamic createRenderObject()
}

"widgets::framework::MultiChildRenderObjectWidget" <|-- "widgets::sliver::SliverCrossAxisGroup"

class "widgets::sliver::SliverMainAxisGroup" {
  +dynamic createRenderObject()
}

"widgets::framework::MultiChildRenderObjectWidget" <|-- "widgets::sliver::SliverMainAxisGroup"

class "widgets::magnifier::MagnifierInfo" {
  {static} +MagnifierInfo empty
  +Offset globalGesturePosition
  +Rect currentLineBoundaries
  +Rect caretRect
  +Rect fieldBounds
  +int hashCode
  +bool ==()
}

"widgets::magnifier::MagnifierInfo" o-- "widgets::magnifier::MagnifierInfo"
"widgets::magnifier::MagnifierInfo" o-- "dart::ui::Offset"
"widgets::magnifier::MagnifierInfo" o-- "dart::ui::Rect"

class "widgets::magnifier::TextMagnifierConfiguration" {
  -Widget? Function(BuildContext, MagnifierController, ValueNotifier<MagnifierInfo>)? _magnifierBuilder
  +bool shouldDisplayHandlesInMagnifier
  {static} +TextMagnifierConfiguration disabled
  +Widget? Function(BuildContext, MagnifierController, ValueNotifier<MagnifierInfo>) magnifierBuilder
}

"widgets::magnifier::TextMagnifierConfiguration" o-- "widgets::magnifier::Widget Function(BuildContext, MagnifierController, ValueNotifier<MagnifierInfo>)"
"widgets::magnifier::TextMagnifierConfiguration" o-- "widgets::magnifier::TextMagnifierConfiguration"

class "widgets::magnifier::MagnifierController" {
  +AnimationController? animationController
  -OverlayEntry? _overlayEntry
  +OverlayEntry? overlayEntry
  +bool shown
  +Future<void> show()
  +Future<void> hide()
  +void removeFromOverlay()
  {static} +Rect shiftWithinBounds()
}

"widgets::magnifier::MagnifierController" o-- "animation::animation_controller::AnimationController"
"widgets::magnifier::MagnifierController" o-- "widgets::overlay::OverlayEntry"

class "widgets::magnifier::MagnifierDecoration" {
  +double opacity
  +int hashCode
  +bool ==()
}

"painting::shape_decoration::ShapeDecoration" <|-- "widgets::magnifier::MagnifierDecoration"

class "widgets::magnifier::RawMagnifier" {
  +Widget? child
  +MagnifierDecoration decoration
  +Offset focalPointOffset
  +double magnificationScale
  +Size size
  +Widget build()
}

"widgets::magnifier::RawMagnifier" o-- "widgets::framework::Widget"
"widgets::magnifier::RawMagnifier" o-- "widgets::magnifier::MagnifierDecoration"
"widgets::magnifier::RawMagnifier" o-- "dart::ui::Offset"
"widgets::magnifier::RawMagnifier" o-- "dart::ui::Size"
"widgets::framework::StatelessWidget" <|-- "widgets::magnifier::RawMagnifier"

class "widgets::magnifier::_MagnifierStyle" {
  +MagnifierDecoration decoration
  +Size size
  +Widget build()
}

"widgets::magnifier::_MagnifierStyle" o-- "widgets::magnifier::MagnifierDecoration"
"widgets::magnifier::_MagnifierStyle" o-- "dart::ui::Size"
"widgets::framework::StatelessWidget" <|-- "widgets::magnifier::_MagnifierStyle"

class "widgets::magnifier::_DonutClip" {
  +double spreadRadius
  +ShapeBorder shape
  +Path getClip()
  +bool shouldReclip()
}

"widgets::magnifier::_DonutClip" o-- "painting::borders::ShapeBorder"
"rendering::proxy_box::CustomClipper" <|-- "widgets::magnifier::_DonutClip"

class "widgets::magnifier::_Magnifier" {
  +Offset focalPointOffset
  +double magnificationScale
  +ShapeBorder shape
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"widgets::magnifier::_Magnifier" o-- "dart::ui::Offset"
"widgets::magnifier::_Magnifier" o-- "painting::borders::ShapeBorder"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::magnifier::_Magnifier"

class "widgets::magnifier::_RenderMagnification" {
  -Offset _focalPointOffset
  -double _magnificationScale
  -ShapeBorder _shape
  +Offset focalPointOffset
  +double magnificationScale
  +ShapeBorder shape
  +bool alwaysNeedsCompositing
  +BackdropFilterLayer? layer
  +void paint()
}

"widgets::magnifier::_RenderMagnification" o-- "dart::ui::Offset"
"widgets::magnifier::_RenderMagnification" o-- "painting::borders::ShapeBorder"
"widgets::magnifier::_RenderMagnification" o-- "rendering::layer::BackdropFilterLayer"
"rendering::proxy_box::RenderProxyBox" <|-- "widgets::magnifier::_RenderMagnification"

class "widgets::platform_menu_bar::ShortcutSerialization" {
  -Map<String, Object?> _internal
  -LogicalKeyboardKey? _trigger
  -String? _character
  -bool? _alt
  -bool? _control
  -bool? _meta
  -bool? _shift
  {static} -int _shortcutModifierAlt
  {static} -int _shortcutModifierControl
  {static} -int _shortcutModifierMeta
  {static} -int _shortcutModifierShift
  +LogicalKeyboardKey? trigger
  +String? character
  +bool? alt
  +bool? control
  +bool? meta
  +bool? shift
  +Map<String, Object?> toChannelRepresentation()
}

"widgets::platform_menu_bar::ShortcutSerialization" o-- "services::keyboard_key.g::LogicalKeyboardKey"

abstract class "widgets::platform_menu_bar::PlatformMenuDelegate" {
  +void setMenus()
  +void clearMenus()
  +bool debugLockDelegate()
  +bool debugUnlockDelegate()
}

class "widgets::platform_menu_bar::DefaultPlatformMenuDelegate" {
  -Map<int, PlatformMenuItem> _idMap
  -int _serial
  -BuildContext? _lockedContext
  +MethodChannel channel
  +void clearMenus()
  +void setMenus()
  -int _getId()
  +bool debugLockDelegate()
  +bool debugUnlockDelegate()
  -Future<void> _methodCallHandler()
}

"widgets::platform_menu_bar::DefaultPlatformMenuDelegate" o-- "widgets::framework::BuildContext"
"widgets::platform_menu_bar::DefaultPlatformMenuDelegate" o-- "services::platform_channel::MethodChannel"
"widgets::platform_menu_bar::PlatformMenuDelegate" <|-- "widgets::platform_menu_bar::DefaultPlatformMenuDelegate"

class "widgets::platform_menu_bar::PlatformMenuBar" {
  +Widget? child
  +Widget? body
  +List<PlatformMenuItem> menus
  +State<PlatformMenuBar> createState()
  +List<DiagnosticsNode> debugDescribeChildren()
}

"widgets::platform_menu_bar::PlatformMenuBar" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::platform_menu_bar::PlatformMenuBar"
"foundation::diagnostics::DiagnosticableTreeMixin" <|-- "widgets::platform_menu_bar::PlatformMenuBar"

class "widgets::platform_menu_bar::_PlatformMenuBarState" {
  +List<PlatformMenuItem> descendants
  +void initState()
  +void dispose()
  +void didUpdateWidget()
  -void _updateMenu()
  +Widget build()
}

"widgets::framework::State" <|-- "widgets::platform_menu_bar::_PlatformMenuBarState"

class "widgets::platform_menu_bar::PlatformMenu" {
  +void Function()? onOpen
  +void Function()? onClose
  +List<PlatformMenuItem> menus
  +List<PlatformMenuItem> descendants
  {static} +List<PlatformMenuItem> getDescendants()
  +Iterable<Map<String, Object?>> toChannelRepresentation()
  {static} +Map<String, Object?> serialize()
  +List<DiagnosticsNode> debugDescribeChildren()
  +void debugFillProperties()
}

"widgets::platform_menu_bar::PlatformMenu" o-- "dart::ui::void Function()"
"widgets::platform_menu_bar::PlatformMenuItem" <|-- "widgets::platform_menu_bar::PlatformMenu"
"foundation::diagnostics::DiagnosticableTreeMixin" <|-- "widgets::platform_menu_bar::PlatformMenu"

class "widgets::platform_menu_bar::PlatformMenuItemGroup" {
  +List<PlatformMenuItem> members
  +Iterable<Map<String, Object?>> toChannelRepresentation()
  {static} +Iterable<Map<String, Object?>> serialize()
  +void debugFillProperties()
}

"widgets::platform_menu_bar::PlatformMenuItem" <|-- "widgets::platform_menu_bar::PlatformMenuItemGroup"

class "widgets::platform_menu_bar::PlatformMenuItem" {
  +String label
  +MenuSerializableShortcut? shortcut
  +void Function()? onSelected
  +Intent? onSelectedIntent
  +void Function()? onOpen
  +void Function()? onClose
  +List<PlatformMenuItem> descendants
  +List<PlatformMenuItem> members
  +Iterable<Map<String, Object?>> toChannelRepresentation()
  {static} +Map<String, Object?> serialize()
  +String toStringShort()
  +void debugFillProperties()
}

"widgets::platform_menu_bar::PlatformMenuItem" o-- "widgets::platform_menu_bar::MenuSerializableShortcut"
"widgets::platform_menu_bar::PlatformMenuItem" o-- "dart::ui::void Function()"
"widgets::platform_menu_bar::PlatformMenuItem" o-- "widgets::actions::Intent"
"foundation::diagnostics::Diagnosticable" <|-- "widgets::platform_menu_bar::PlatformMenuItem"

class "widgets::platform_menu_bar::PlatformProvidedMenuItem" {
  +PlatformProvidedMenuItemType type
  +bool enabled
  {static} +bool hasMenu()
  +Iterable<Map<String, Object?>> toChannelRepresentation()
  +void debugFillProperties()
}

"widgets::platform_menu_bar::PlatformProvidedMenuItem" o-- "widgets::platform_menu_bar::PlatformProvidedMenuItemType"
"widgets::platform_menu_bar::PlatformMenuItem" <|-- "widgets::platform_menu_bar::PlatformProvidedMenuItem"

class "widgets::platform_menu_bar::PlatformProvidedMenuItemType" {
  +int index
  {static} +List<PlatformProvidedMenuItemType> values
  {static} +PlatformProvidedMenuItemType about
  {static} +PlatformProvidedMenuItemType quit
  {static} +PlatformProvidedMenuItemType servicesSubmenu
  {static} +PlatformProvidedMenuItemType hide
  {static} +PlatformProvidedMenuItemType hideOtherApplications
  {static} +PlatformProvidedMenuItemType showAllApplications
  {static} +PlatformProvidedMenuItemType startSpeaking
  {static} +PlatformProvidedMenuItemType stopSpeaking
  {static} +PlatformProvidedMenuItemType toggleFullScreen
  {static} +PlatformProvidedMenuItemType minimizeWindow
  {static} +PlatformProvidedMenuItemType zoomWindow
  {static} +PlatformProvidedMenuItemType arrangeWindowsInFront
}

"widgets::platform_menu_bar::PlatformProvidedMenuItemType" o-- "widgets::platform_menu_bar::PlatformProvidedMenuItemType"
"dart::core::Enum" <|-- "widgets::platform_menu_bar::PlatformProvidedMenuItemType"

abstract class "widgets::platform_menu_bar::MenuSerializableShortcut" {
  +ShortcutSerialization serializeForMenu()
}

"widgets::shortcuts::ShortcutActivator" <|-- "widgets::platform_menu_bar::MenuSerializableShortcut"

class "widgets::dismissible::Dismissible" {
  +Widget child
  +Widget? background
  +Widget? secondaryBackground
  +Future<bool?> Function(DismissDirection)? confirmDismiss
  +void Function()? onResize
  +void Function(DismissDirection)? onDismissed
  +DismissDirection direction
  +Duration? resizeDuration
  +Map<DismissDirection, double> dismissThresholds
  +Duration movementDuration
  +double crossAxisEndOffset
  +DragStartBehavior dragStartBehavior
  +HitTestBehavior behavior
  +void Function(DismissUpdateDetails)? onUpdate
  +State<Dismissible> createState()
}

"widgets::dismissible::Dismissible" o-- "widgets::framework::Widget"
"widgets::dismissible::Dismissible" o-- "widgets::dismissible::Future<bool> Function(DismissDirection)"
"widgets::dismissible::Dismissible" o-- "dart::ui::void Function()"
"widgets::dismissible::Dismissible" o-- "widgets::dismissible::void Function(DismissDirection)"
"widgets::dismissible::Dismissible" o-- "widgets::dismissible::DismissDirection"
"widgets::dismissible::Dismissible" o-- "gestures::recognizer::DragStartBehavior"
"widgets::dismissible::Dismissible" o-- "rendering::proxy_box::HitTestBehavior"
"widgets::dismissible::Dismissible" o-- "widgets::dismissible::void Function(DismissUpdateDetails)"
"widgets::framework::StatefulWidget" <|-- "widgets::dismissible::Dismissible"

class "widgets::dismissible::DismissUpdateDetails" {
  +DismissDirection direction
  +bool reached
  +bool previousReached
  +double progress
}

"widgets::dismissible::DismissUpdateDetails" o-- "widgets::dismissible::DismissDirection"

class "widgets::dismissible::_DismissibleClipper" {
  +Axis axis
  +Animation<Offset> moveAnimation
  +Rect getClip()
  +Rect getApproximateClipRect()
  +bool shouldReclip()
}

"widgets::dismissible::_DismissibleClipper" o-- "painting::basic_types::Axis"
"widgets::dismissible::_DismissibleClipper" o-- "animation::animation::Animation<Offset>"
"rendering::proxy_box::CustomClipper" <|-- "widgets::dismissible::_DismissibleClipper"

class "widgets::dismissible::_DismissibleState" {
  -AnimationController? _moveController
  -Animation<Offset> _moveAnimation
  -AnimationController? _resizeController
  -Animation<double>? _resizeAnimation
  -double _dragExtent
  -bool _confirming
  -bool _dragUnderway
  -Size? _sizePriorToCollapse
  -bool _dismissThresholdReached
  -GlobalKey<State<StatefulWidget>> _contentKey
  +bool wantKeepAlive
  -bool _directionIsXAxis
  -DismissDirection _dismissDirection
  -bool _isActive
  -double _overallDragAxisExtent
  +void initState()
  +void dispose()
  -DismissDirection _extentToDirection()
  -void _handleDragStart()
  -void _handleDragUpdate()
  -void _handleDismissUpdateValueChanged()
  -void _updateMoveAnimation()
  -_FlingGestureKind _describeFlingGesture()
  -void _handleDragEnd()
  -Future<void> _handleDismissStatusChanged()
  -Future<void> _handleMoveCompleted()
  -Future<bool> _confirmStartResizeAnimation()
  -void _startResizeAnimation()
  -void _handleResizeProgressChanged()
  +Widget build()
}

"widgets::dismissible::_DismissibleState" o-- "animation::animation_controller::AnimationController"
"widgets::dismissible::_DismissibleState" o-- "animation::animation::Animation<Offset>"
"widgets::dismissible::_DismissibleState" o-- "animation::animation::Animation<double>"
"widgets::dismissible::_DismissibleState" o-- "dart::ui::Size"
"widgets::dismissible::_DismissibleState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::dismissible::_DismissibleState" o-- "widgets::dismissible::DismissDirection"
"widgets::framework::State" <|-- "widgets::dismissible::_DismissibleState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "widgets::dismissible::_DismissibleState"
"widgets::automatic_keep_alive::AutomaticKeepAliveClientMixin" <|-- "widgets::dismissible::_DismissibleState"

class "widgets::dismissible::DismissDirection" {
  +int index
  {static} +List<DismissDirection> values
  {static} +DismissDirection vertical
  {static} +DismissDirection horizontal
  {static} +DismissDirection endToStart
  {static} +DismissDirection startToEnd
  {static} +DismissDirection up
  {static} +DismissDirection down
  {static} +DismissDirection none
}

"widgets::dismissible::DismissDirection" o-- "widgets::dismissible::DismissDirection"
"dart::core::Enum" <|-- "widgets::dismissible::DismissDirection"

class "widgets::dismissible::_FlingGestureKind" {
  +int index
  {static} +List<_FlingGestureKind> values
  {static} +_FlingGestureKind none
  {static} +_FlingGestureKind forward
  {static} +_FlingGestureKind reverse
}

"widgets::dismissible::_FlingGestureKind" o-- "widgets::dismissible::_FlingGestureKind"
"dart::core::Enum" <|-- "widgets::dismissible::_FlingGestureKind"

class "widgets::scroll_position_with_single_context::ScrollPositionWithSingleContext" {
  -double _heldPreviousVelocity
  -ScrollDirection _userScrollDirection
  -ScrollDragController? _currentDrag
  +AxisDirection axisDirection
  +ScrollDirection userScrollDirection
  +double setPixels()
  +void absorb()
  +void applyNewDimensions()
  +void beginActivity()
  +void applyUserOffset()
  +void goIdle()
  +void goBallistic()
  #void updateUserScrollDirection()
  +Future<void> animateTo()
  +void jumpTo()
  +void pointerScroll()
  +void jumpToWithoutSettling()
  +ScrollHoldController hold()
  +Drag drag()
  +void dispose()
  +void debugFillDescription()
}

"widgets::scroll_position_with_single_context::ScrollPositionWithSingleContext" o-- "rendering::viewport_offset::ScrollDirection"
"widgets::scroll_position_with_single_context::ScrollPositionWithSingleContext" o-- "widgets::scroll_activity::ScrollDragController"
"widgets::scroll_position_with_single_context::ScrollPositionWithSingleContext" o-- "painting::basic_types::AxisDirection"
"widgets::scroll_position::ScrollPosition" <|-- "widgets::scroll_position_with_single_context::ScrollPositionWithSingleContext"
"widgets::scroll_activity::ScrollActivityDelegate" <|-- "widgets::scroll_position_with_single_context::ScrollPositionWithSingleContext"

class "widgets::will_pop_scope::WillPopScope" {
  +Widget child
  +Future<bool> Function()? onWillPop
  +State<WillPopScope> createState()
}

"widgets::will_pop_scope::WillPopScope" o-- "widgets::framework::Widget"
"widgets::will_pop_scope::WillPopScope" o-- "widgets::navigator::Future<bool> Function()"
"widgets::framework::StatefulWidget" <|-- "widgets::will_pop_scope::WillPopScope"

class "widgets::will_pop_scope::_WillPopScopeState" {
  -ModalRoute<dynamic>? _route
  +void didChangeDependencies()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"widgets::will_pop_scope::_WillPopScopeState" o-- "widgets::routes::ModalRoute<dynamic>"
"widgets::framework::State" <|-- "widgets::will_pop_scope::_WillPopScopeState"

class "widgets::text_selection_toolbar_layout_delegate::TextSelectionToolbarLayoutDelegate" {
  +Offset anchorAbove
  +Offset anchorBelow
  +bool? fitsAbove
  {static} +double centerOn()
  +BoxConstraints getConstraintsForChild()
  +Offset getPositionForChild()
  +bool shouldRelayout()
}

"widgets::text_selection_toolbar_layout_delegate::TextSelectionToolbarLayoutDelegate" o-- "dart::ui::Offset"
"rendering::shifted_box::SingleChildLayoutDelegate" <|-- "widgets::text_selection_toolbar_layout_delegate::TextSelectionToolbarLayoutDelegate"

class "widgets::desktop_text_selection_toolbar_layout_delegate::DesktopTextSelectionToolbarLayoutDelegate" {
  +Offset anchor
  +BoxConstraints getConstraintsForChild()
  +Offset getPositionForChild()
  +bool shouldRelayout()
}

"widgets::desktop_text_selection_toolbar_layout_delegate::DesktopTextSelectionToolbarLayoutDelegate" o-- "dart::ui::Offset"
"rendering::shifted_box::SingleChildLayoutDelegate" <|-- "widgets::desktop_text_selection_toolbar_layout_delegate::DesktopTextSelectionToolbarLayoutDelegate"

class "widgets::safe_area::SafeArea" {
  +bool left
  +bool top
  +bool right
  +bool bottom
  +EdgeInsets minimum
  +bool maintainBottomViewPadding
  +Widget child
  +Widget build()
  +void debugFillProperties()
}

"widgets::safe_area::SafeArea" o-- "painting::edge_insets::EdgeInsets"
"widgets::safe_area::SafeArea" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::safe_area::SafeArea"

class "widgets::safe_area::SliverSafeArea" {
  +bool left
  +bool top
  +bool right
  +bool bottom
  +EdgeInsets minimum
  +Widget sliver
  +Widget build()
  +void debugFillProperties()
}

"widgets::safe_area::SliverSafeArea" o-- "painting::edge_insets::EdgeInsets"
"widgets::safe_area::SliverSafeArea" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::safe_area::SliverSafeArea"

abstract class "widgets::status_transitions::StatusTransitionWidget" {
  +Animation<double> animation
  +Widget build()
  +State<StatusTransitionWidget> createState()
}

"widgets::status_transitions::StatusTransitionWidget" o-- "animation::animation::Animation<double>"
"widgets::framework::StatefulWidget" <|-- "widgets::status_transitions::StatusTransitionWidget"

class "widgets::status_transitions::_StatusTransitionState" {
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  -void _animationStatusChanged()
  +Widget build()
}

"widgets::framework::State" <|-- "widgets::status_transitions::_StatusTransitionState"

class "widgets::scrollbar::ScrollbarPainter" {
  -Color _color
  -Color _trackColor
  -Color _trackBorderColor
  -Radius? _trackRadius
  -TextDirection? _textDirection
  -double _thickness
  +Animation<double> fadeoutOpacityAnimation
  -double _mainAxisMargin
  -double _crossAxisMargin
  -Radius? _radius
  -OutlinedBorder? _shape
  -EdgeInsets _padding
  -double _minLength
  -double _minOverscrollLength
  -ScrollbarOrientation? _scrollbarOrientation
  -bool _ignorePointer
  -Rect? _trackRect
  -Rect? _thumbRect
  -double _thumbOffset
  -double _thumbExtent
  -ScrollMetrics? _lastMetrics
  -AxisDirection? _lastAxisDirection
  +Color color
  +Color trackColor
  +Color trackBorderColor
  +Radius? trackRadius
  +TextDirection? textDirection
  +double thickness
  +double mainAxisMargin
  +double crossAxisMargin
  +Radius? radius
  +OutlinedBorder? shape
  +EdgeInsets padding
  +double minLength
  +double minOverscrollLength
  +ScrollbarOrientation? scrollbarOrientation
  +bool ignorePointer
  -double _trackExtent
  -double _traversableTrackExtent
  -double _totalTrackMainAxisOffsets
  -double _leadingTrackMainAxisOffset
  -double _leadingThumbMainAxisOffset
  -bool _lastMetricsAreScrollable
  -bool _isVertical
  -bool _isReversed
  -double _beforeExtent
  -double _afterExtent
  -double _totalContentExtent
  -ScrollbarOrientation _resolvedOrientation
  -Paint _paintThumb
  +List<CustomPainterSemantics> Function(Size)? semanticsBuilder
  -void _setThumbExtent()
  -void _debugAssertIsValidOrientation()
  +void update()
  +void updateThickness()
  -Paint _paintTrack()
  -void _paintScrollbar()
  +void paint()
  +double getTrackToScroll()
  +double getThumbScrollOffset()
  -double _getScrollToTrack()
  +bool? hitTest()
  +bool hitTestInteractive()
  +bool hitTestOnlyThumbInteractive()
  +bool shouldRepaint()
  +bool shouldRebuildSemantics()
  +String toString()
  +void dispose()
}

"widgets::scrollbar::ScrollbarPainter" o-- "dart::ui::Color"
"widgets::scrollbar::ScrollbarPainter" o-- "dart::ui::Radius"
"widgets::scrollbar::ScrollbarPainter" o-- "dart::ui::TextDirection"
"widgets::scrollbar::ScrollbarPainter" o-- "animation::animation::Animation<double>"
"widgets::scrollbar::ScrollbarPainter" o-- "painting::borders::OutlinedBorder"
"widgets::scrollbar::ScrollbarPainter" o-- "painting::edge_insets::EdgeInsets"
"widgets::scrollbar::ScrollbarPainter" o-- "widgets::scrollbar::ScrollbarOrientation"
"widgets::scrollbar::ScrollbarPainter" o-- "dart::ui::Rect"
"widgets::scrollbar::ScrollbarPainter" o-- "widgets::scroll_metrics::ScrollMetrics"
"widgets::scrollbar::ScrollbarPainter" o-- "painting::basic_types::AxisDirection"
"widgets::scrollbar::ScrollbarPainter" o-- "dart::ui::Paint"
"widgets::scrollbar::ScrollbarPainter" o-- "rendering::custom_paint::List<CustomPainterSemantics> Function(Size)"
"foundation::change_notifier::ChangeNotifier" <|-- "widgets::scrollbar::ScrollbarPainter"
"rendering::custom_paint::CustomPainter" <|-- "widgets::scrollbar::ScrollbarPainter"

class "widgets::scrollbar::RawScrollbar" {
  +Widget child
  +ScrollController? controller
  +bool? thumbVisibility
  +OutlinedBorder? shape
  +Radius? radius
  +double? thickness
  +Color? thumbColor
  +double minThumbLength
  +double? minOverscrollLength
  +bool? trackVisibility
  +Radius? trackRadius
  +Color? trackColor
  +Color? trackBorderColor
  +Duration fadeDuration
  +Duration timeToFade
  +Duration pressDuration
  +bool Function(ScrollNotification) notificationPredicate
  +bool? interactive
  +ScrollbarOrientation? scrollbarOrientation
  +double mainAxisMargin
  +double crossAxisMargin
  +EdgeInsets? padding
  +RawScrollbarState<RawScrollbar> createState()
}

"widgets::scrollbar::RawScrollbar" o-- "widgets::framework::Widget"
"widgets::scrollbar::RawScrollbar" o-- "widgets::scroll_controller::ScrollController"
"widgets::scrollbar::RawScrollbar" o-- "painting::borders::OutlinedBorder"
"widgets::scrollbar::RawScrollbar" o-- "dart::ui::Radius"
"widgets::scrollbar::RawScrollbar" o-- "dart::ui::Color"
"widgets::scrollbar::RawScrollbar" o-- "widgets::scroll_notification::bool Function(ScrollNotification)"
"widgets::scrollbar::RawScrollbar" o-- "widgets::scrollbar::ScrollbarOrientation"
"widgets::scrollbar::RawScrollbar" o-- "painting::edge_insets::EdgeInsets"
"widgets::framework::StatefulWidget" <|-- "widgets::scrollbar::RawScrollbar"

class "widgets::scrollbar::RawScrollbarState" {
  -Offset? _startDragScrollbarAxisOffset
  -Offset? _lastDragUpdateOffset
  -double? _startDragThumbOffset
  -ScrollController? _cachedController
  -Timer? _fadeoutTimer
  -AnimationController _fadeoutAnimationController
  -Animation<double> _fadeoutOpacityAnimation
  -GlobalKey<State<StatefulWidget>> _scrollbarPainterKey
  -bool _hoverIsActive
  -bool _thumbDragging
  #ScrollbarPainter scrollbarPainter
  -ScrollController? _effectiveScrollController
  +bool showScrollbar
  -bool _showTrack
  +bool enableGestures
  -Map<Type, GestureRecognizerFactory<GestureRecognizer>> _gestures
  +void initState()
  +void didChangeDependencies()
  -bool _debugScheduleCheckHasValidScrollPosition()
  -void _validateInteractions()
  -bool _debugCheckHasValidScrollPosition()
  #void updateScrollbarPainter()
  +void didUpdateWidget()
  -void _updateScrollPosition()
  -void _maybeStartFadeoutTimer()
  #Axis? getScrollbarDirection()
  #void handleThumbPress()
  #void handleThumbPressStart()
  #void handleThumbPressUpdate()
  #void handleThumbPressEnd()
  -void _handleTrackTapDown()
  -bool _shouldUpdatePainter()
  -bool _handleScrollMetricsNotification()
  -bool _handleScrollNotification()
  #bool isPointerOverTrack()
  #bool isPointerOverThumb()
  #bool isPointerOverScrollbar()
  #void handleHover()
  #void handleHoverExit()
  -double _pointerSignalEventDelta()
  -double _targetScrollOffsetForPointerScroll()
  -void _handlePointerScroll()
  -void _receivedPointerSignal()
  +void dispose()
  +Widget build()
}

"widgets::scrollbar::RawScrollbarState" o-- "dart::ui::Offset"
"widgets::scrollbar::RawScrollbarState" o-- "widgets::scroll_controller::ScrollController"
"widgets::scrollbar::RawScrollbarState" o-- "dart::async::Timer"
"widgets::scrollbar::RawScrollbarState" o-- "animation::animation_controller::AnimationController"
"widgets::scrollbar::RawScrollbarState" o-- "animation::animation::Animation<double>"
"widgets::scrollbar::RawScrollbarState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::scrollbar::RawScrollbarState" o-- "widgets::scrollbar::ScrollbarPainter"
"widgets::framework::State" <|-- "widgets::scrollbar::RawScrollbarState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "widgets::scrollbar::RawScrollbarState"

class "widgets::scrollbar::_ThumbPressGestureRecognizer" {
  -GlobalKey<State<StatefulWidget>> _customPaintKey
  +bool isPointerAllowed()
  -bool _hitTestInteractive()
}

"widgets::scrollbar::_ThumbPressGestureRecognizer" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"gestures::long_press::LongPressGestureRecognizer" <|-- "widgets::scrollbar::_ThumbPressGestureRecognizer"

class "widgets::scrollbar::_TrackTapGestureRecognizer" {
  -GlobalKey<State<StatefulWidget>> _customPaintKey
  +bool isPointerAllowed()
  -bool _hitTestInteractive()
}

"widgets::scrollbar::_TrackTapGestureRecognizer" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"gestures::tap::TapGestureRecognizer" <|-- "widgets::scrollbar::_TrackTapGestureRecognizer"

class "widgets::scrollbar::ScrollbarOrientation" {
  +int index
  {static} +List<ScrollbarOrientation> values
  {static} +ScrollbarOrientation left
  {static} +ScrollbarOrientation right
  {static} +ScrollbarOrientation top
  {static} +ScrollbarOrientation bottom
}

"widgets::scrollbar::ScrollbarOrientation" o-- "widgets::scrollbar::ScrollbarOrientation"
"dart::core::Enum" <|-- "widgets::scrollbar::ScrollbarOrientation"

class "widgets::platform_view::AndroidView" {
  +String viewType
  +void Function(int)? onPlatformViewCreated
  +PlatformViewHitTestBehavior hitTestBehavior
  +TextDirection? layoutDirection
  +Set<Factory<OneSequenceGestureRecognizer>>? gestureRecognizers
  +dynamic creationParams
  +MessageCodec<dynamic>? creationParamsCodec
  +Clip clipBehavior
  +State<AndroidView> createState()
}

"widgets::platform_view::AndroidView" o-- "services::platform_views::void Function(int)"
"widgets::platform_view::AndroidView" o-- "rendering::platform_view::PlatformViewHitTestBehavior"
"widgets::platform_view::AndroidView" o-- "dart::ui::TextDirection"
"widgets::platform_view::AndroidView" o-- "services::message_codec::MessageCodec<dynamic>"
"widgets::platform_view::AndroidView" o-- "dart::ui::Clip"
"widgets::framework::StatefulWidget" <|-- "widgets::platform_view::AndroidView"

abstract class "widgets::platform_view::_DarwinView" {
  +String viewType
  +void Function(int)? onPlatformViewCreated
  +PlatformViewHitTestBehavior hitTestBehavior
  +TextDirection? layoutDirection
  +dynamic creationParams
  +MessageCodec<dynamic>? creationParamsCodec
  +Set<Factory<OneSequenceGestureRecognizer>>? gestureRecognizers
}

"widgets::platform_view::_DarwinView" o-- "services::platform_views::void Function(int)"
"widgets::platform_view::_DarwinView" o-- "rendering::platform_view::PlatformViewHitTestBehavior"
"widgets::platform_view::_DarwinView" o-- "dart::ui::TextDirection"
"widgets::platform_view::_DarwinView" o-- "services::message_codec::MessageCodec<dynamic>"
"widgets::framework::StatefulWidget" <|-- "widgets::platform_view::_DarwinView"

class "widgets::platform_view::UiKitView" {
  +State<UiKitView> createState()
}

"widgets::platform_view::_DarwinView" <|-- "widgets::platform_view::UiKitView"

class "widgets::platform_view::AppKitView" {
  +State<AppKitView> createState()
}

"widgets::platform_view::_DarwinView" <|-- "widgets::platform_view::AppKitView"

class "widgets::platform_view::HtmlElementView" {
  +String viewType
  +void Function(int)? onPlatformViewCreated
  +Object? creationParams
  +Widget build()
}

"widgets::platform_view::HtmlElementView" o-- "services::platform_views::void Function(int)"
"widgets::framework::StatelessWidget" <|-- "widgets::platform_view::HtmlElementView"

class "widgets::platform_view::_AndroidViewState" {
  -int? _id
  -AndroidViewController _controller
  -TextDirection? _layoutDirection
  -bool _initialized
  -FocusNode? _focusNode
  {static} -Set<Factory<OneSequenceGestureRecognizer>> _emptyRecognizersSet
  +Widget build()
  -void _initializeOnce()
  +void didChangeDependencies()
  +void didUpdateWidget()
  -TextDirection _findLayoutDirection()
  +void dispose()
  -void _createNewAndroidView()
  -void _onFocusChange()
}

"widgets::platform_view::_AndroidViewState" o-- "services::platform_views::AndroidViewController"
"widgets::platform_view::_AndroidViewState" o-- "dart::ui::TextDirection"
"widgets::platform_view::_AndroidViewState" o-- "widgets::focus_manager::FocusNode"
"widgets::framework::State" <|-- "widgets::platform_view::_AndroidViewState"

abstract class "widgets::platform_view::_DarwinViewState" {
  -ControllerT? _controller
  -TextDirection? _layoutDirection
  -bool _initialized
  +FocusNode? focusNode
  {static} -Set<Factory<OneSequenceGestureRecognizer>> _emptyRecognizersSet
  +Widget build()
  +ViewT childPlatformView()
  -void _initializeOnce()
  +void didChangeDependencies()
  +void didUpdateWidget()
  -TextDirection _findLayoutDirection()
  +void dispose()
  -Future<void> _createNewUiKitView()
  +Future<ControllerT> createNewViewController()
  -void _onFocusChange()
}

"widgets::platform_view::_DarwinViewState" o-- "dart::ui::TextDirection"
"widgets::platform_view::_DarwinViewState" o-- "widgets::focus_manager::FocusNode"
"widgets::framework::State" <|-- "widgets::platform_view::_DarwinViewState"

class "widgets::platform_view::_UiKitViewState" {
  +Future<UiKitViewController> createNewViewController()
  +_UiKitPlatformView childPlatformView()
}

"widgets::platform_view::_DarwinViewState" <|-- "widgets::platform_view::_UiKitViewState"

class "widgets::platform_view::_AppKitViewState" {
  +Future<dynamic> createNewViewController()
  +_AppKitPlatformView childPlatformView()
}

"widgets::platform_view::_DarwinViewState" <|-- "widgets::platform_view::_AppKitViewState"

class "widgets::platform_view::_AndroidPlatformView" {
  +AndroidViewController controller
  +PlatformViewHitTestBehavior hitTestBehavior
  +Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers
  +Clip clipBehavior
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"widgets::platform_view::_AndroidPlatformView" o-- "services::platform_views::AndroidViewController"
"widgets::platform_view::_AndroidPlatformView" o-- "rendering::platform_view::PlatformViewHitTestBehavior"
"widgets::platform_view::_AndroidPlatformView" o-- "dart::ui::Clip"
"widgets::framework::LeafRenderObjectWidget" <|-- "widgets::platform_view::_AndroidPlatformView"

abstract class "widgets::platform_view::_DarwinPlatformView" {
  +TController controller
  +PlatformViewHitTestBehavior hitTestBehavior
  +Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers
  +void updateRenderObject()
}

"widgets::platform_view::_DarwinPlatformView" o-- "rendering::platform_view::PlatformViewHitTestBehavior"
"widgets::framework::LeafRenderObjectWidget" <|-- "widgets::platform_view::_DarwinPlatformView"

class "widgets::platform_view::_UiKitPlatformView" {
  +RenderObject createRenderObject()
}

"widgets::platform_view::_DarwinPlatformView" <|-- "widgets::platform_view::_UiKitPlatformView"

class "widgets::platform_view::_AppKitPlatformView" {
  +RenderObject createRenderObject()
}

"widgets::platform_view::_DarwinPlatformView" <|-- "widgets::platform_view::_AppKitPlatformView"

class "widgets::platform_view::PlatformViewCreationParams" {
  +int id
  +String viewType
  +void Function(int) onPlatformViewCreated
  +void Function(bool) onFocusChanged
}

"widgets::platform_view::PlatformViewCreationParams" o-- "services::platform_views::void Function(int)"
"widgets::platform_view::PlatformViewCreationParams" o-- "foundation::basic_types::void Function(bool)"

class "widgets::platform_view::PlatformViewLink" {
  -Widget Function(BuildContext, PlatformViewController) _surfaceFactory
  -PlatformViewController Function(PlatformViewCreationParams) _onCreatePlatformView
  +String viewType
  +State<StatefulWidget> createState()
}

"widgets::platform_view::PlatformViewLink" o-- "widgets::platform_view::Widget Function(BuildContext, PlatformViewController)"
"widgets::platform_view::PlatformViewLink" o-- "widgets::platform_view::PlatformViewController Function(PlatformViewCreationParams)"
"widgets::framework::StatefulWidget" <|-- "widgets::platform_view::PlatformViewLink"

class "widgets::platform_view::_PlatformViewLinkState" {
  -int? _id
  -PlatformViewController? _controller
  -bool _platformViewCreated
  -Widget? _surface
  -FocusNode? _focusNode
  +Widget build()
  +void initState()
  +void didUpdateWidget()
  -void _initialize()
  -void _onPlatformViewCreated()
  -void _handleFrameworkFocusChanged()
  -void _handlePlatformFocusChanged()
  +void dispose()
}

"widgets::platform_view::_PlatformViewLinkState" o-- "services::platform_views::PlatformViewController"
"widgets::platform_view::_PlatformViewLinkState" o-- "widgets::framework::Widget"
"widgets::platform_view::_PlatformViewLinkState" o-- "widgets::focus_manager::FocusNode"
"widgets::framework::State" <|-- "widgets::platform_view::_PlatformViewLinkState"

class "widgets::platform_view::PlatformViewSurface" {
  +PlatformViewController controller
  +Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers
  +PlatformViewHitTestBehavior hitTestBehavior
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"widgets::platform_view::PlatformViewSurface" o-- "services::platform_views::PlatformViewController"
"widgets::platform_view::PlatformViewSurface" o-- "rendering::platform_view::PlatformViewHitTestBehavior"
"widgets::framework::LeafRenderObjectWidget" <|-- "widgets::platform_view::PlatformViewSurface"

class "widgets::platform_view::AndroidViewSurface" {
  +AndroidViewController controller
  +Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers
  +PlatformViewHitTestBehavior hitTestBehavior
  +State<StatefulWidget> createState()
}

"widgets::platform_view::AndroidViewSurface" o-- "services::platform_views::AndroidViewController"
"widgets::platform_view::AndroidViewSurface" o-- "rendering::platform_view::PlatformViewHitTestBehavior"
"widgets::framework::StatefulWidget" <|-- "widgets::platform_view::AndroidViewSurface"

class "widgets::platform_view::_AndroidViewSurfaceState" {
  +void initState()
  +void dispose()
  +Widget build()
  -void _onPlatformViewCreated()
}

"widgets::framework::State" <|-- "widgets::platform_view::_AndroidViewSurfaceState"

class "widgets::platform_view::_TextureBasedAndroidViewSurface" {
  +RenderObject createRenderObject()
}

"widgets::platform_view::PlatformViewSurface" <|-- "widgets::platform_view::_TextureBasedAndroidViewSurface"

class "widgets::platform_view::_PlatformLayerBasedAndroidViewSurface" {
  +RenderObject createRenderObject()
}

"widgets::platform_view::PlatformViewSurface" <|-- "widgets::platform_view::_PlatformLayerBasedAndroidViewSurface"

class "widgets::platform_view::_PlatformViewPlaceholderBox" {
  +void Function(Size, Offset) onLayout
  +void performLayout()
}

"widgets::platform_view::_PlatformViewPlaceholderBox" o-- "widgets::platform_view::void Function(Size, Offset)"
"rendering::proxy_box::RenderConstrainedBox" <|-- "widgets::platform_view::_PlatformViewPlaceholderBox"

class "widgets::platform_view::_PlatformViewPlaceHolder" {
  +void Function(Size, Offset) onLayout
  +_PlatformViewPlaceholderBox createRenderObject()
  +void updateRenderObject()
}

"widgets::platform_view::_PlatformViewPlaceHolder" o-- "widgets::platform_view::void Function(Size, Offset)"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::platform_view::_PlatformViewPlaceHolder"

class "widgets::app::WidgetsApp" {
  +GlobalKey<NavigatorState>? navigatorKey
  +Route<dynamic>? Function(RouteSettings)? onGenerateRoute
  +List<Route<dynamic>> Function(String)? onGenerateInitialRoutes
  +PageRoute<T> Function<T>(RouteSettings, Widget Function(BuildContext))? pageRouteBuilder
  +RouteInformationParser<Object>? routeInformationParser
  +RouterDelegate<Object>? routerDelegate
  +BackButtonDispatcher? backButtonDispatcher
  +RouteInformationProvider? routeInformationProvider
  +RouterConfig<Object>? routerConfig
  +Widget? home
  +Map<String, Widget Function(BuildContext)>? routes
  +Route<dynamic>? Function(RouteSettings)? onUnknownRoute
  +bool Function(NavigationNotification)? onNavigationNotification
  +String? initialRoute
  +List<NavigatorObserver>? navigatorObservers
  +Widget Function(BuildContext, Widget?)? builder
  +String title
  +String Function(BuildContext)? onGenerateTitle
  +TextStyle? textStyle
  +Color color
  +Locale? locale
  +Iterable<LocalizationsDelegate<dynamic>>? localizationsDelegates
  +Locale? Function(List<Locale>?, Iterable<Locale>)? localeListResolutionCallback
  +Locale? Function(Locale?, Iterable<Locale>)? localeResolutionCallback
  +Iterable<Locale> supportedLocales
  +bool showPerformanceOverlay
  +bool checkerboardRasterCacheImages
  +bool checkerboardOffscreenLayers
  +bool showSemanticsDebugger
  +bool debugShowWidgetInspector
  +Widget Function(BuildContext, void Function())? inspectorSelectButtonBuilder
  +bool debugShowCheckedModeBanner
  +Map<ShortcutActivator, Intent>? shortcuts
  +Map<Type, Action<Intent>>? actions
  +String? restorationScopeId
  +bool useInheritedMediaQuery
  {static} +bool showPerformanceOverlayOverride
  {static} +bool debugShowWidgetInspectorOverride
  {static} +bool debugAllowBannerOverride
  {static} -Map<ShortcutActivator, Intent> _defaultShortcuts
  {static} -Map<ShortcutActivator, Intent> _defaultWebShortcuts
  {static} -Map<ShortcutActivator, Intent> _defaultAppleOsShortcuts
  {static} +Map<Type, Action<Intent>> defaultActions
  {static} +Map<ShortcutActivator, Intent> defaultShortcuts
  +State<WidgetsApp> createState()
}

"widgets::app::WidgetsApp" o-- "widgets::framework::GlobalKey<NavigatorState>"
"widgets::app::WidgetsApp" o-- "widgets::navigator::Route<dynamic> Function(RouteSettings)"
"widgets::app::WidgetsApp" o-- "widgets::app::List<Route<dynamic>> Function(String)"
"widgets::app::WidgetsApp" o-- "widgets::app::PageRoute<T> Function<T>(RouteSettings, Widget Function(BuildContext))"
"widgets::app::WidgetsApp" o-- "widgets::router::RouteInformationParser<Object>"
"widgets::app::WidgetsApp" o-- "widgets::router::RouterDelegate<Object>"
"widgets::app::WidgetsApp" o-- "widgets::router::BackButtonDispatcher"
"widgets::app::WidgetsApp" o-- "widgets::router::RouteInformationProvider"
"widgets::app::WidgetsApp" o-- "widgets::router::RouterConfig<Object>"
"widgets::app::WidgetsApp" o-- "widgets::framework::Widget"
"widgets::app::WidgetsApp" o-- "widgets::notification_listener::bool Function(NavigationNotification)"
"widgets::app::WidgetsApp" o-- "widgets::framework::Widget Function(BuildContext, Widget)"
"widgets::app::WidgetsApp" o-- "widgets::app::String Function(BuildContext)"
"widgets::app::WidgetsApp" o-- "painting::text_style::TextStyle"
"widgets::app::WidgetsApp" o-- "dart::ui::Color"
"widgets::app::WidgetsApp" o-- "dart::ui::Locale"
"widgets::app::WidgetsApp" o-- "widgets::app::Locale Function(List<Locale>, Iterable<Locale>)"
"widgets::app::WidgetsApp" o-- "widgets::app::Locale Function(Locale, Iterable<Locale>)"
"widgets::app::WidgetsApp" o-- "widgets::widget_inspector::Widget Function(BuildContext, void Function())"
"widgets::framework::StatefulWidget" <|-- "widgets::app::WidgetsApp"

class "widgets::app::_WidgetsAppState" {
  -AppLifecycleState? _appLifecycleState
  -PlatformRouteInformationProvider? _defaultRouteInformationProvider
  -RootBackButtonDispatcher? _defaultBackButtonDispatcher
  -GlobalKey<NavigatorState>? _navigator
  -Locale? _locale
  -String _initialRouteName
  -bool _usesRouterWithDelegates
  -bool _usesRouterWithConfig
  -bool _usesNavigator
  -RouteInformationProvider? _effectiveRouteInformationProvider
  -BackButtonDispatcher _effectiveBackButtonDispatcher
  -Iterable<LocalizationsDelegate<dynamic>> _localizationsDelegates
  -bool _defaultOnNavigationNotification()
  +void didChangeAppLifecycleState()
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  -void _clearRouterResource()
  -void _clearNavigatorResource()
  -void _updateRouting()
  -Route<dynamic>? _onGenerateRoute()
  -Route<dynamic> _onUnknownRoute()
  +Future<bool> didPopRoute()
  +Future<bool> didPushRouteInformation()
  -Locale _resolveLocales()
  +void didChangeLocales()
  -bool _debugCheckLocalizations()
  +Widget build()
}

"widgets::app::_WidgetsAppState" o-- "dart::ui::AppLifecycleState"
"widgets::app::_WidgetsAppState" o-- "widgets::router::PlatformRouteInformationProvider"
"widgets::app::_WidgetsAppState" o-- "widgets::router::RootBackButtonDispatcher"
"widgets::app::_WidgetsAppState" o-- "widgets::framework::GlobalKey<NavigatorState>"
"widgets::app::_WidgetsAppState" o-- "dart::ui::Locale"
"widgets::app::_WidgetsAppState" o-- "widgets::router::RouteInformationProvider"
"widgets::app::_WidgetsAppState" o-- "widgets::router::BackButtonDispatcher"
"widgets::framework::State" <|-- "widgets::app::_WidgetsAppState"
"widgets::binding::WidgetsBindingObserver" <|-- "widgets::app::_WidgetsAppState"

class "widgets::autocomplete::RawAutocomplete" {
  +Widget Function(BuildContext, TextEditingController, FocusNode, void Function())? fieldViewBuilder
  +FocusNode? focusNode
  +Widget Function(BuildContext, void Function(T), Iterable<T>) optionsViewBuilder
  +OptionsViewOpenDirection optionsViewOpenDirection
  +String Function(T) displayStringForOption
  +void Function(T)? onSelected
  +FutureOr<Iterable<T>> Function(TextEditingValue) optionsBuilder
  +TextEditingController? textEditingController
  +TextEditingValue? initialValue
  {static} +void onFieldSubmitted()
  {static} +String defaultStringForOption()
  +State<RawAutocomplete<T>> createState()
}

"widgets::autocomplete::RawAutocomplete" o-- "widgets::autocomplete::Widget Function(BuildContext, TextEditingController, FocusNode, void Function())"
"widgets::autocomplete::RawAutocomplete" o-- "widgets::focus_manager::FocusNode"
"widgets::autocomplete::RawAutocomplete" o-- "widgets::autocomplete::Widget Function(BuildContext, void Function(T), Iterable<T>)"
"widgets::autocomplete::RawAutocomplete" o-- "widgets::autocomplete::OptionsViewOpenDirection"
"widgets::autocomplete::RawAutocomplete" o-- "widgets::autocomplete::String Function(T)"
"widgets::autocomplete::RawAutocomplete" o-- "widgets::autocomplete::void Function(T)"
"widgets::autocomplete::RawAutocomplete" o-- "widgets::autocomplete::FutureOr<Iterable<T>> Function(TextEditingValue)"
"widgets::autocomplete::RawAutocomplete" o-- "widgets::editable_text::TextEditingController"
"widgets::autocomplete::RawAutocomplete" o-- "services::text_input::TextEditingValue"
"widgets::framework::StatefulWidget" <|-- "widgets::autocomplete::RawAutocomplete"

class "widgets::autocomplete::_RawAutocompleteState" {
  -GlobalKey<State<StatefulWidget>> _fieldKey
  -LayerLink _optionsLayerLink
  -TextEditingController _textEditingController
  -FocusNode _focusNode
  -Map<Type, Action<Intent>> _actionMap
  -_AutocompleteCallbackAction<AutocompletePreviousOptionIntent> _previousOptionAction
  -_AutocompleteCallbackAction<AutocompleteNextOptionIntent> _nextOptionAction
  -_AutocompleteCallbackAction<DismissIntent> _hideOptionsAction
  -Iterable<T> _options
  -T? _selection
  -bool _userHidOptions
  -String _lastFieldText
  -ValueNotifier<int> _highlightedOptionIndex
  {static} -Map<ShortcutActivator, Intent> _shortcuts
  -OverlayEntry? _floatingOptions
  -bool _floatingOptionsUpdateScheduled
  -bool _shouldShowOptions
  -Future<void> _onChangedField()
  -void _onChangedFocus()
  -void _onFieldSubmitted()
  -void _select()
  -void _updateHighlight()
  -void _highlightPreviousOption()
  -void _highlightNextOption()
  -Object? _hideOptions()
  -void _setActionsEnabled()
  -void _updateActions()
  -void _updateOverlay()
  -void _updateTextEditingController()
  -void _updateFocusNode()
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
}

"widgets::autocomplete::_RawAutocompleteState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::autocomplete::_RawAutocompleteState" o-- "rendering::layer::LayerLink"
"widgets::autocomplete::_RawAutocompleteState" o-- "widgets::editable_text::TextEditingController"
"widgets::autocomplete::_RawAutocompleteState" o-- "widgets::focus_manager::FocusNode"
"widgets::autocomplete::_RawAutocompleteState" o-- "widgets::autocomplete::_AutocompleteCallbackAction<AutocompletePreviousOptionIntent>"
"widgets::autocomplete::_RawAutocompleteState" o-- "widgets::autocomplete::_AutocompleteCallbackAction<AutocompleteNextOptionIntent>"
"widgets::autocomplete::_RawAutocompleteState" o-- "widgets::autocomplete::_AutocompleteCallbackAction<DismissIntent>"
"widgets::autocomplete::_RawAutocompleteState" o-- "foundation::change_notifier::ValueNotifier<int>"
"widgets::autocomplete::_RawAutocompleteState" o-- "widgets::overlay::OverlayEntry"
"widgets::framework::State" <|-- "widgets::autocomplete::_RawAutocompleteState"

class "widgets::autocomplete::_AutocompleteCallbackAction" {
  +bool enabled
  +bool isEnabled()
  +bool consumesKey()
}

"widgets::actions::CallbackAction" <|-- "widgets::autocomplete::_AutocompleteCallbackAction"

class "widgets::autocomplete::AutocompletePreviousOptionIntent" {
}

"widgets::actions::Intent" <|-- "widgets::autocomplete::AutocompletePreviousOptionIntent"

class "widgets::autocomplete::AutocompleteNextOptionIntent" {
}

"widgets::actions::Intent" <|-- "widgets::autocomplete::AutocompleteNextOptionIntent"

class "widgets::autocomplete::AutocompleteHighlightedOption" {
  {static} +int of()
}

"widgets::inherited_notifier::InheritedNotifier" <|-- "widgets::autocomplete::AutocompleteHighlightedOption"

class "widgets::autocomplete::OptionsViewOpenDirection" {
  +int index
  {static} +List<OptionsViewOpenDirection> values
  {static} +OptionsViewOpenDirection up
  {static} +OptionsViewOpenDirection down
}

"widgets::autocomplete::OptionsViewOpenDirection" o-- "widgets::autocomplete::OptionsViewOpenDirection"
"dart::core::Enum" <|-- "widgets::autocomplete::OptionsViewOpenDirection"

abstract class "widgets::scroll_notification::ScrollNotification" {
  +ScrollMetrics metrics
  +BuildContext? context
  +void debugFillDescription()
}

"widgets::scroll_notification::ScrollNotification" o-- "widgets::scroll_metrics::ScrollMetrics"
"widgets::scroll_notification::ScrollNotification" o-- "widgets::framework::BuildContext"
"widgets::notification_listener::LayoutChangedNotification" <|-- "widgets::scroll_notification::ScrollNotification"
"widgets::scroll_notification::ViewportNotificationMixin" <|-- "widgets::scroll_notification::ScrollNotification"

class "widgets::scroll_notification::ScrollStartNotification" {
  +DragStartDetails? dragDetails
  +void debugFillDescription()
}

"widgets::scroll_notification::ScrollStartNotification" o-- "gestures::drag_details::DragStartDetails"
"widgets::scroll_notification::ScrollNotification" <|-- "widgets::scroll_notification::ScrollStartNotification"

class "widgets::scroll_notification::ScrollUpdateNotification" {
  +DragUpdateDetails? dragDetails
  +double? scrollDelta
  +void debugFillDescription()
}

"widgets::scroll_notification::ScrollUpdateNotification" o-- "gestures::drag_details::DragUpdateDetails"
"widgets::scroll_notification::ScrollNotification" <|-- "widgets::scroll_notification::ScrollUpdateNotification"

class "widgets::scroll_notification::OverscrollNotification" {
  +DragUpdateDetails? dragDetails
  +double overscroll
  +double velocity
  +void debugFillDescription()
}

"widgets::scroll_notification::OverscrollNotification" o-- "gestures::drag_details::DragUpdateDetails"
"widgets::scroll_notification::ScrollNotification" <|-- "widgets::scroll_notification::OverscrollNotification"

class "widgets::scroll_notification::ScrollEndNotification" {
  +DragEndDetails? dragDetails
  +void debugFillDescription()
}

"widgets::scroll_notification::ScrollEndNotification" o-- "gestures::drag_details::DragEndDetails"
"widgets::scroll_notification::ScrollNotification" <|-- "widgets::scroll_notification::ScrollEndNotification"

class "widgets::scroll_notification::UserScrollNotification" {
  +ScrollDirection direction
  +void debugFillDescription()
}

"widgets::scroll_notification::UserScrollNotification" o-- "rendering::viewport_offset::ScrollDirection"
"widgets::scroll_notification::ScrollNotification" <|-- "widgets::scroll_notification::UserScrollNotification"

abstract class "widgets::scroll_notification::ViewportNotificationMixin" {
  -int _depth
  +int depth
  +void debugFillDescription()
}

abstract class "widgets::scroll_notification::ViewportElementMixin" {
  +bool onNotification()
}

class "widgets::overlay::OverlayEntry" {
  +Widget Function(BuildContext) builder
  -bool _opaque
  -bool _maintainState
  -ValueNotifier<_OverlayEntryWidgetState?>? _overlayEntryStateNotifier
  -OverlayState? _overlay
  -GlobalKey<_OverlayEntryWidgetState> _key
  -bool _disposedByOwner
  +bool opaque
  +bool maintainState
  +bool mounted
  +void addListener()
  +void removeListener()
  +void remove()
  +void markNeedsBuild()
  -void _didUnmount()
  +void dispose()
  +String toString()
}

"widgets::overlay::OverlayEntry" o-- "widgets::framework::Widget Function(BuildContext)"
"widgets::overlay::OverlayEntry" o-- "foundation::change_notifier::ValueNotifier<_OverlayEntryWidgetState>"
"widgets::overlay::OverlayEntry" o-- "widgets::overlay::OverlayState"
"widgets::overlay::OverlayEntry" o-- "widgets::framework::GlobalKey<_OverlayEntryWidgetState>"
"foundation::change_notifier::Listenable" <|-- "widgets::overlay::OverlayEntry"

class "widgets::overlay::_OverlayEntryWidget" {
  +OverlayEntry entry
  +OverlayState overlayState
  +bool tickerEnabled
  +_OverlayEntryWidgetState createState()
}

"widgets::overlay::_OverlayEntryWidget" o-- "widgets::overlay::OverlayEntry"
"widgets::overlay::_OverlayEntryWidget" o-- "widgets::overlay::OverlayState"
"widgets::framework::StatefulWidget" <|-- "widgets::overlay::_OverlayEntryWidget"

class "widgets::overlay::_OverlayEntryWidgetState" {
  -_RenderTheater _theater
  -LinkedList<_OverlayEntryLocation>? _sortedTheaterSiblings
  -Iterable<RenderBox> _paintOrderIterable
  -Iterable<RenderBox> _hitTestOrderIterable
  -void _add()
  -void _remove()
  -Iterable<RenderBox> _createChildIterable()
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  +Widget build()
  -void _markNeedsBuild()
}

"widgets::overlay::_OverlayEntryWidgetState" o-- "widgets::overlay::_RenderTheater"
"widgets::overlay::_OverlayEntryWidgetState" o-- "dart::collection::LinkedList<_OverlayEntryLocation>"
"widgets::framework::State" <|-- "widgets::overlay::_OverlayEntryWidgetState"

class "widgets::overlay::Overlay" {
  +List<OverlayEntry> initialEntries
  +Clip clipBehavior
  {static} +OverlayState of()
  {static} +OverlayState? maybeOf()
  +OverlayState createState()
}

"widgets::overlay::Overlay" o-- "dart::ui::Clip"
"widgets::framework::StatefulWidget" <|-- "widgets::overlay::Overlay"

class "widgets::overlay::OverlayState" {
  -List<OverlayEntry> _entries
  +void initState()
  -int _insertionIndex()
  -bool _debugCanInsertEntry()
  +void insert()
  +void insertAll()
  -bool _debugVerifyInsertPosition()
  +void rearrange()
  -void _markDirty()
  +bool debugIsVisible()
  -void _didChangeEntryOpacity()
  +Widget build()
  +void debugFillProperties()
}

"widgets::framework::State" <|-- "widgets::overlay::OverlayState"
"widgets::ticker_provider::TickerProviderStateMixin" <|-- "widgets::overlay::OverlayState"

class "widgets::overlay::_Theater" {
  +int skipCount
  +Clip clipBehavior
  +_TheaterElement createElement()
  +_RenderTheater createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::overlay::_Theater" o-- "dart::ui::Clip"
"widgets::framework::MultiChildRenderObjectWidget" <|-- "widgets::overlay::_Theater"

class "widgets::overlay::_TheaterElement" {
  +_RenderTheater renderObject
  +void insertRenderObjectChild()
  +void moveRenderObjectChild()
  +void debugVisitOnstageChildren()
}

"widgets::overlay::_TheaterElement" o-- "widgets::overlay::_RenderTheater"
"widgets::framework::MultiChildRenderObjectElement" <|-- "widgets::overlay::_TheaterElement"

class "widgets::overlay::_TheaterParentData" {
  +OverlayEntry? overlayEntry
  +Iterator<RenderBox>? paintOrderIterator
  +Iterator<RenderBox>? hitTestOrderIterator
  +void visitChildrenOfOverlayEntry()
}

"widgets::overlay::_TheaterParentData" o-- "widgets::overlay::OverlayEntry"
"rendering::stack::StackParentData" <|-- "widgets::overlay::_TheaterParentData"

class "widgets::overlay::_RenderTheater" {
  -Alignment? _alignmentCache
  -TextDirection _textDirection
  -int _skipCount
  -Clip _clipBehavior
  -bool _skipMarkNeedsLayout
  -LayerHandle<ClipRectLayer> _clipRectLayer
  +_RenderTheater theater
  -Alignment _resolvedAlignment
  +TextDirection textDirection
  +int skipCount
  +Clip clipBehavior
  -RenderBox? _firstOnstageChild
  -RenderBox? _lastOnstageChild
  +void setupParentData()
  +void attach()
  {static} -void _detachChild()
  +void detach()
  +void redepthChildren()
  -void _markNeedResolution()
  -void _addDeferredChild()
  -void _removeDeferredChild()
  +void markNeedsLayout()
  +double computeMinIntrinsicWidth()
  +double computeMaxIntrinsicWidth()
  +double computeMinIntrinsicHeight()
  +double computeMaxIntrinsicHeight()
  +double? computeDistanceToActualBaseline()
  +Size computeDryLayout()
  -Iterable<RenderBox> _childrenInPaintOrder()
  -Iterable<RenderBox> _childrenInHitTestOrder()
  +void paint()
  +void dispose()
  +void visitChildren()
  +void visitChildrenForSemantics()
  +Rect? describeApproximatePaintClip()
  +void debugFillProperties()
  +List<DiagnosticsNode> debugDescribeChildren()
}

"widgets::overlay::_RenderTheater" o-- "painting::alignment::Alignment"
"widgets::overlay::_RenderTheater" o-- "dart::ui::TextDirection"
"widgets::overlay::_RenderTheater" o-- "dart::ui::Clip"
"widgets::overlay::_RenderTheater" o-- "rendering::layer::LayerHandle<ClipRectLayer>"
"widgets::overlay::_RenderTheater" o-- "widgets::overlay::_RenderTheater"
"widgets::overlay::_RenderTheater" o-- "rendering::box::RenderBox"
"rendering::box::RenderBox" <|-- "widgets::overlay::_RenderTheater"
"rendering::object::ContainerRenderObjectMixin" <|-- "widgets::overlay::_RenderTheater"
"widgets::overlay::_RenderTheaterMixin" <|-- "widgets::overlay::_RenderTheater"

class "widgets::overlay::OverlayPortalController" {
  -_OverlayPortalState? _attachTarget
  -int? _zOrderIndex
  -String? _debugLabel
  {static} -int _wallTime
  +bool isShowing
  -int _now()
  +void show()
  +void hide()
  +void toggle()
  +String toString()
}

"widgets::overlay::OverlayPortalController" o-- "widgets::overlay::_OverlayPortalState"

class "widgets::overlay::OverlayPortal" {
  +OverlayPortalController controller
  +Widget Function(BuildContext) overlayChildBuilder
  +Widget? child
  -bool _targetRootOverlay
  +State<OverlayPortal> createState()
}

"widgets::overlay::OverlayPortal" o-- "widgets::overlay::OverlayPortalController"
"widgets::overlay::OverlayPortal" o-- "widgets::framework::Widget Function(BuildContext)"
"widgets::overlay::OverlayPortal" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::overlay::OverlayPortal"

class "widgets::overlay::_OverlayPortalState" {
  -int? _zOrderIndex
  -bool _childModelMayHaveChanged
  -_OverlayEntryLocation? _locationCache
  {static} -bool _isTheSameLocation()
  -_OverlayEntryLocation _getLocation()
  +void initState()
  -void _setupController()
  +void didChangeDependencies()
  +void didUpdateWidget()
  +void dispose()
  +void show()
  +void hide()
  +Widget build()
}

"widgets::overlay::_OverlayPortalState" o-- "widgets::overlay::_OverlayEntryLocation"
"widgets::framework::State" <|-- "widgets::overlay::_OverlayPortalState"

class "widgets::overlay::_OverlayEntryLocation" {
  -int _zOrderIndex
  -_OverlayEntryWidgetState _childModel
  -_RenderTheater _theater
  -_RenderDeferredLayoutBox? _overlayChildRenderBox
  -StackTrace? _debugMarkLocationInvalidStackTrace
  -void _addToChildModel()
  -void _removeFromChildModel()
  -void _addChild()
  -void _removeChild()
  -void _moveChild()
  -void _activate()
  -void _deactivate()
  -bool _debugIsLocationValid()
  -void _debugMarkLocationInvalid()
  +String toString()
}

"widgets::overlay::_OverlayEntryLocation" o-- "widgets::overlay::_OverlayEntryWidgetState"
"widgets::overlay::_OverlayEntryLocation" o-- "widgets::overlay::_RenderTheater"
"widgets::overlay::_OverlayEntryLocation" o-- "widgets::overlay::_RenderDeferredLayoutBox"
"dart::collection::LinkedListEntry" <|-- "widgets::overlay::_OverlayEntryLocation"

class "widgets::overlay::_RenderTheaterMarker" {
  +_RenderTheater theater
  +_OverlayEntryWidgetState overlayEntryWidgetState
  +bool updateShouldNotify()
  {static} +_RenderTheaterMarker of()
  {static} -InheritedElement? _rootRenderTheaterMarkerOf()
}

"widgets::overlay::_RenderTheaterMarker" o-- "widgets::overlay::_RenderTheater"
"widgets::overlay::_RenderTheaterMarker" o-- "widgets::overlay::_OverlayEntryWidgetState"
"widgets::framework::InheritedWidget" <|-- "widgets::overlay::_RenderTheaterMarker"

class "widgets::overlay::_OverlayPortal" {
  +Widget? overlayChild
  +Widget? child
  +_OverlayEntryLocation? overlayLocation
  +RenderObjectElement createElement()
  +RenderObject createRenderObject()
}

"widgets::overlay::_OverlayPortal" o-- "widgets::framework::Widget"
"widgets::overlay::_OverlayPortal" o-- "widgets::overlay::_OverlayEntryLocation"
"widgets::framework::RenderObjectWidget" <|-- "widgets::overlay::_OverlayPortal"

class "widgets::overlay::_OverlayPortalElement" {
  -Element? _overlayChild
  -Element? _child
  +_RenderLayoutSurrogateProxyBox renderObject
  +void mount()
  +void update()
  +void forgetChild()
  +void visitChildren()
  +void activate()
  +void deactivate()
  +void insertRenderObjectChild()
  +void moveRenderObjectChild()
  +void removeRenderObjectChild()
  +void debugFillProperties()
}

"widgets::overlay::_OverlayPortalElement" o-- "widgets::framework::Element"
"widgets::overlay::_OverlayPortalElement" o-- "widgets::overlay::_RenderLayoutSurrogateProxyBox"
"widgets::framework::RenderObjectElement" <|-- "widgets::overlay::_OverlayPortalElement"

class "widgets::overlay::_DeferredLayout" {
  +_RenderLayoutSurrogateProxyBox getLayoutParent()
  +_RenderDeferredLayoutBox createRenderObject()
  +void updateRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::overlay::_DeferredLayout"

class "widgets::overlay::_RenderDeferredLayoutBox" {
  -_RenderLayoutSurrogateProxyBox _layoutSurrogate
  -bool _callingMarkParentNeedsLayout
  -bool _needsLayout
  -bool _theaterDoingThisLayout
  -bool _debugMutationsLocked
  +StackParentData stackParentData
  +_RenderTheater theater
  +RenderObject? debugLayoutParent
  -Iterable<RenderBox> _childrenInPaintOrder()
  -Iterable<RenderBox> _childrenInHitTestOrder()
  +void redepthChildren()
  +void markParentNeedsLayout()
  +void markNeedsLayout()
  +void layoutByLayoutSurrogate()
  +void layout()
  +void performResize()
  +void performLayout()
  +void applyPaintTransform()
}

"widgets::overlay::_RenderDeferredLayoutBox" o-- "widgets::overlay::_RenderLayoutSurrogateProxyBox"
"widgets::overlay::_RenderDeferredLayoutBox" o-- "rendering::stack::StackParentData"
"widgets::overlay::_RenderDeferredLayoutBox" o-- "widgets::overlay::_RenderTheater"
"widgets::overlay::_RenderDeferredLayoutBox" o-- "rendering::object::RenderObject"
"rendering::proxy_box::RenderProxyBox" <|-- "widgets::overlay::_RenderDeferredLayoutBox"
"widgets::overlay::_RenderTheaterMixin" <|-- "widgets::overlay::_RenderDeferredLayoutBox"
"dart::collection::LinkedListEntry" <|-- "widgets::overlay::_RenderDeferredLayoutBox"

class "widgets::overlay::_RenderLayoutSurrogateProxyBox" {
  -_RenderDeferredLayoutBox? _deferredLayoutChild
  +void redepthChildren()
  +void performLayout()
}

"widgets::overlay::_RenderLayoutSurrogateProxyBox" o-- "widgets::overlay::_RenderDeferredLayoutBox"
"rendering::proxy_box::RenderProxyBox" <|-- "widgets::overlay::_RenderLayoutSurrogateProxyBox"

abstract class "widgets::overlay::_RenderTheaterMixin" {
  +_RenderTheater theater
  +bool sizedByParent
  -Iterable<RenderBox> _childrenInPaintOrder()
  -Iterable<RenderBox> _childrenInHitTestOrder()
  +void setupParentData()
  +void performLayout()
  +bool hitTestChildren()
  +void paint()
}

"widgets::overlay::_RenderTheaterMixin" o-- "widgets::overlay::_RenderTheater"

class "widgets::service_extensions::WidgetsServiceExtensions" {
  +int index
  {static} +List<WidgetsServiceExtensions> values
  {static} +WidgetsServiceExtensions debugDumpApp
  {static} +WidgetsServiceExtensions debugDumpFocusTree
  {static} +WidgetsServiceExtensions showPerformanceOverlay
  {static} +WidgetsServiceExtensions didSendFirstFrameEvent
  {static} +WidgetsServiceExtensions didSendFirstFrameRasterizedEvent
  {static} +WidgetsServiceExtensions fastReassemble
  {static} +WidgetsServiceExtensions profileWidgetBuilds
  {static} +WidgetsServiceExtensions profileUserWidgetBuilds
  {static} +WidgetsServiceExtensions debugAllowBanner
}

"widgets::service_extensions::WidgetsServiceExtensions" o-- "widgets::service_extensions::WidgetsServiceExtensions"
"dart::core::Enum" <|-- "widgets::service_extensions::WidgetsServiceExtensions"

class "widgets::service_extensions::WidgetInspectorServiceExtensions" {
  +int index
  {static} +List<WidgetInspectorServiceExtensions> values
  {static} +WidgetInspectorServiceExtensions structuredErrors
  {static} +WidgetInspectorServiceExtensions show
  {static} +WidgetInspectorServiceExtensions trackRebuildDirtyWidgets
  {static} +WidgetInspectorServiceExtensions trackRepaintWidgets
  {static} +WidgetInspectorServiceExtensions disposeAllGroups
  {static} +WidgetInspectorServiceExtensions disposeGroup
  {static} +WidgetInspectorServiceExtensions isWidgetTreeReady
  {static} +WidgetInspectorServiceExtensions disposeId
  {static} +WidgetInspectorServiceExtensions setPubRootDirectories
  {static} +WidgetInspectorServiceExtensions addPubRootDirectories
  {static} +WidgetInspectorServiceExtensions removePubRootDirectories
  {static} +WidgetInspectorServiceExtensions getPubRootDirectories
  {static} +WidgetInspectorServiceExtensions setSelectionById
  {static} +WidgetInspectorServiceExtensions getParentChain
  {static} +WidgetInspectorServiceExtensions getProperties
  {static} +WidgetInspectorServiceExtensions getChildren
  {static} +WidgetInspectorServiceExtensions getChildrenSummaryTree
  {static} +WidgetInspectorServiceExtensions getChildrenDetailsSubtree
  {static} +WidgetInspectorServiceExtensions getRootWidget
  {static} +WidgetInspectorServiceExtensions getRootWidgetSummaryTree
  {static} +WidgetInspectorServiceExtensions getRootWidgetSummaryTreeWithPreviews
  {static} +WidgetInspectorServiceExtensions getDetailsSubtree
  {static} +WidgetInspectorServiceExtensions getSelectedWidget
  {static} +WidgetInspectorServiceExtensions getSelectedSummaryWidget
  {static} +WidgetInspectorServiceExtensions isWidgetCreationTracked
  {static} +WidgetInspectorServiceExtensions screenshot
  {static} +WidgetInspectorServiceExtensions getLayoutExplorerNode
  {static} +WidgetInspectorServiceExtensions setFlexFit
  {static} +WidgetInspectorServiceExtensions setFlexFactor
  {static} +WidgetInspectorServiceExtensions setFlexProperties
}

"widgets::service_extensions::WidgetInspectorServiceExtensions" o-- "widgets::service_extensions::WidgetInspectorServiceExtensions"
"dart::core::Enum" <|-- "widgets::service_extensions::WidgetInspectorServiceExtensions"

class "widgets::default_selection_style::DefaultSelectionStyle" {
  {static} +Color defaultColor
  +Color? cursorColor
  +Color? selectionColor
  +MouseCursor? mouseCursor
  {static} +Widget merge()
  {static} +DefaultSelectionStyle of()
  +Widget wrap()
  +bool updateShouldNotify()
}

"widgets::default_selection_style::DefaultSelectionStyle" o-- "dart::ui::Color"
"widgets::default_selection_style::DefaultSelectionStyle" o-- "services::mouse_cursor::MouseCursor"
"widgets::inherited_theme::InheritedTheme" <|-- "widgets::default_selection_style::DefaultSelectionStyle"

class "widgets::default_selection_style::_NullWidget" {
  +Widget build()
}

"widgets::framework::StatelessWidget" <|-- "widgets::default_selection_style::_NullWidget"

class "widgets::scroll_simulation::BouncingScrollSimulation" {
  {static} +double maxSpringTransferVelocity
  +double leadingExtent
  +double trailingExtent
  +SpringDescription spring
  -FrictionSimulation _frictionSimulation
  -Simulation _springSimulation
  -double _springTime
  -double _timeOffset
  -Simulation _underscrollSimulation()
  -Simulation _overscrollSimulation()
  -Simulation _simulation()
  +double x()
  +double dx()
  +bool isDone()
  +String toString()
}

"widgets::scroll_simulation::BouncingScrollSimulation" o-- "physics::spring_simulation::SpringDescription"
"widgets::scroll_simulation::BouncingScrollSimulation" o-- "physics::friction_simulation::FrictionSimulation"
"widgets::scroll_simulation::BouncingScrollSimulation" o-- "physics::simulation::Simulation"
"physics::simulation::Simulation" <|-- "widgets::scroll_simulation::BouncingScrollSimulation"

class "widgets::scroll_simulation::ClampingScrollSimulation" {
  +double position
  +double velocity
  +double friction
  -double _duration
  -double _distance
  {static} -double _kDecelerationRate
  {static} -double _kInflexion
  {static} -double _physicalCoeff
  -double _flingDuration()
  -double _flingDistance()
  +double x()
  +double dx()
  +bool isDone()
}

"physics::simulation::Simulation" <|-- "widgets::scroll_simulation::ClampingScrollSimulation"

class "widgets::raw_keyboard_listener::RawKeyboardListener" {
  +FocusNode focusNode
  +bool autofocus
  +bool includeSemantics
  +void Function(RawKeyEvent)? onKey
  +Widget child
  +State<RawKeyboardListener> createState()
  +void debugFillProperties()
}

"widgets::raw_keyboard_listener::RawKeyboardListener" o-- "widgets::focus_manager::FocusNode"
"widgets::raw_keyboard_listener::RawKeyboardListener" o-- "foundation::basic_types::void Function(RawKeyEvent)"
"widgets::raw_keyboard_listener::RawKeyboardListener" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::raw_keyboard_listener::RawKeyboardListener"

class "widgets::raw_keyboard_listener::_RawKeyboardListenerState" {
  -bool _listening
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  -void _handleFocusChanged()
  -void _attachKeyboardIfDetached()
  -void _detachKeyboardIfAttached()
  -void _handleRawKeyEvent()
  +Widget build()
}

"widgets::framework::State" <|-- "widgets::raw_keyboard_listener::_RawKeyboardListenerState"

class "widgets::spacer::Spacer" {
  +int flex
  +Widget build()
}

"widgets::framework::StatelessWidget" <|-- "widgets::spacer::Spacer"

abstract class "widgets::scroll_view::ScrollView" {
  +Axis scrollDirection
  +bool reverse
  +ScrollController? controller
  +bool? primary
  +ScrollPhysics? physics
  +ScrollBehavior? scrollBehavior
  +bool shrinkWrap
  +Key? center
  +double anchor
  +double? cacheExtent
  +int? semanticChildCount
  +DragStartBehavior dragStartBehavior
  +ScrollViewKeyboardDismissBehavior keyboardDismissBehavior
  +String? restorationId
  +Clip clipBehavior
  #AxisDirection getDirection()
  #List<Widget> buildSlivers()
  #Widget buildViewport()
  +Widget build()
  +void debugFillProperties()
}

"widgets::scroll_view::ScrollView" o-- "painting::basic_types::Axis"
"widgets::scroll_view::ScrollView" o-- "widgets::scroll_controller::ScrollController"
"widgets::scroll_view::ScrollView" o-- "widgets::scroll_physics::ScrollPhysics"
"widgets::scroll_view::ScrollView" o-- "widgets::scroll_configuration::ScrollBehavior"
"widgets::scroll_view::ScrollView" o-- "foundation::key::Key"
"widgets::scroll_view::ScrollView" o-- "gestures::recognizer::DragStartBehavior"
"widgets::scroll_view::ScrollView" o-- "widgets::scroll_view::ScrollViewKeyboardDismissBehavior"
"widgets::scroll_view::ScrollView" o-- "dart::ui::Clip"
"widgets::framework::StatelessWidget" <|-- "widgets::scroll_view::ScrollView"

class "widgets::scroll_view::CustomScrollView" {
  +List<Widget> slivers
  +List<Widget> buildSlivers()
}

"widgets::scroll_view::ScrollView" <|-- "widgets::scroll_view::CustomScrollView"

abstract class "widgets::scroll_view::BoxScrollView" {
  +EdgeInsetsGeometry? padding
  +List<Widget> buildSlivers()
  #Widget buildChildLayout()
  +void debugFillProperties()
}

"widgets::scroll_view::BoxScrollView" o-- "painting::edge_insets::EdgeInsetsGeometry"
"widgets::scroll_view::ScrollView" <|-- "widgets::scroll_view::BoxScrollView"

class "widgets::scroll_view::ListView" {
  +double? itemExtent
  +dynamic itemExtentBuilder
  +Widget? prototypeItem
  +SliverChildDelegate childrenDelegate
  +Widget buildChildLayout()
  +void debugFillProperties()
  {static} -int _computeActualChildCount()
}

"widgets::scroll_view::ListView" o-- "widgets::framework::Widget"
"widgets::scroll_view::ListView" o-- "widgets::scroll_delegate::SliverChildDelegate"
"widgets::scroll_view::BoxScrollView" <|-- "widgets::scroll_view::ListView"

class "widgets::scroll_view::GridView" {
  +SliverGridDelegate gridDelegate
  +SliverChildDelegate childrenDelegate
  +Widget buildChildLayout()
}

"widgets::scroll_view::GridView" o-- "rendering::sliver_grid::SliverGridDelegate"
"widgets::scroll_view::GridView" o-- "widgets::scroll_delegate::SliverChildDelegate"
"widgets::scroll_view::BoxScrollView" <|-- "widgets::scroll_view::GridView"

class "widgets::scroll_view::ScrollViewKeyboardDismissBehavior" {
  +int index
  {static} +List<ScrollViewKeyboardDismissBehavior> values
  {static} +ScrollViewKeyboardDismissBehavior manual
  {static} +ScrollViewKeyboardDismissBehavior onDrag
}

"widgets::scroll_view::ScrollViewKeyboardDismissBehavior" o-- "widgets::scroll_view::ScrollViewKeyboardDismissBehavior"
"dart::core::Enum" <|-- "widgets::scroll_view::ScrollViewKeyboardDismissBehavior"

class "widgets::_platform_selectable_region_context_menu_web::PlatformSelectableRegionContextMenu" {
  +Widget child
  {static} -SelectionContainerDelegate? _activeClient
  {static} -String? _registeredViewType
  {static} +void Function(String, Object Function(int), {bool isVisible})? debugOverrideRegisterViewFactory
  {static} -void Function(String, Object Function(int), {bool isVisible}) _registerViewFactory
  {static} +void attach()
  {static} +void detach()
  {static} -void _register()
  {static} -String _registerWebSelectionCallback()
  +Widget build()
}

"widgets::_platform_selectable_region_context_menu_web::PlatformSelectableRegionContextMenu" o-- "widgets::framework::Widget"
"widgets::_platform_selectable_region_context_menu_web::PlatformSelectableRegionContextMenu" o-- "widgets::selection_container::SelectionContainerDelegate"
"widgets::_platform_selectable_region_context_menu_web::PlatformSelectableRegionContextMenu" o-- "widgets::_platform_selectable_region_context_menu_web::void Function(String, Object Function(int), {bool isVisible})"
"widgets::framework::StatelessWidget" <|-- "widgets::_platform_selectable_region_context_menu_web::PlatformSelectableRegionContextMenu"

class "widgets::localizations::_Pending" {
  +LocalizationsDelegate<dynamic> delegate
  +Future<dynamic> futureValue
}

"widgets::localizations::_Pending" o-- "widgets::localizations::LocalizationsDelegate<dynamic>"

abstract class "widgets::localizations::LocalizationsDelegate" {
  +Type type
  +bool isSupported()
  +Future<T> load()
  +bool shouldReload()
  +String toString()
}

abstract class "widgets::localizations::WidgetsLocalizations" {
  +TextDirection textDirection
  +String reorderItemToStart
  +String reorderItemToEnd
  +String reorderItemUp
  +String reorderItemDown
  +String reorderItemLeft
  +String reorderItemRight
  {static} +WidgetsLocalizations of()
}

"widgets::localizations::WidgetsLocalizations" o-- "dart::ui::TextDirection"

class "widgets::localizations::_WidgetsLocalizationsDelegate" {
  +bool isSupported()
  +Future<WidgetsLocalizations> load()
  +bool shouldReload()
  +String toString()
}

"widgets::localizations::LocalizationsDelegate" <|-- "widgets::localizations::_WidgetsLocalizationsDelegate"

class "widgets::localizations::DefaultWidgetsLocalizations" {
  {static} +LocalizationsDelegate<WidgetsLocalizations> delegate
  +String reorderItemUp
  +String reorderItemDown
  +String reorderItemLeft
  +String reorderItemRight
  +String reorderItemToEnd
  +String reorderItemToStart
  +TextDirection textDirection
  {static} +Future<WidgetsLocalizations> load()
}

"widgets::localizations::DefaultWidgetsLocalizations" o-- "widgets::localizations::LocalizationsDelegate<WidgetsLocalizations>"
"widgets::localizations::DefaultWidgetsLocalizations" o-- "dart::ui::TextDirection"
"widgets::localizations::WidgetsLocalizations" <|-- "widgets::localizations::DefaultWidgetsLocalizations"

class "widgets::localizations::_LocalizationsScope" {
  +Locale locale
  +_LocalizationsState localizationsState
  +Map<Type, dynamic> typeToResources
  +bool updateShouldNotify()
}

"widgets::localizations::_LocalizationsScope" o-- "dart::ui::Locale"
"widgets::localizations::_LocalizationsScope" o-- "widgets::localizations::_LocalizationsState"
"widgets::framework::InheritedWidget" <|-- "widgets::localizations::_LocalizationsScope"

class "widgets::localizations::Localizations" {
  +Locale locale
  +List<LocalizationsDelegate<dynamic>> delegates
  +Widget? child
  {static} +Locale localeOf()
  {static} +Locale? maybeLocaleOf()
  {static} -List<LocalizationsDelegate<dynamic>> _delegatesOf()
  {static} +T? of()
  +State<Localizations> createState()
  +void debugFillProperties()
}

"widgets::localizations::Localizations" o-- "dart::ui::Locale"
"widgets::localizations::Localizations" o-- "widgets::framework::Widget"
"widgets::framework::StatefulWidget" <|-- "widgets::localizations::Localizations"

class "widgets::localizations::_LocalizationsState" {
  -GlobalKey<State<StatefulWidget>> _localizedResourcesScopeKey
  -Map<Type, dynamic> _typeToResources
  -Locale? _locale
  +Locale? locale
  -TextDirection _textDirection
  +void initState()
  -bool _anyDelegatesShouldReload()
  +void didUpdateWidget()
  +void load()
  +T resourcesFor()
  +Widget build()
}

"widgets::localizations::_LocalizationsState" o-- "widgets::framework::GlobalKey<State<StatefulWidget>>"
"widgets::localizations::_LocalizationsState" o-- "dart::ui::Locale"
"widgets::localizations::_LocalizationsState" o-- "dart::ui::TextDirection"
"widgets::framework::State" <|-- "widgets::localizations::_LocalizationsState"

class "widgets::selectable_region::SelectableRegion" {
  +TextMagnifierConfiguration magnifierConfiguration
  +FocusNode focusNode
  +Widget child
  +Widget Function(BuildContext, SelectableRegionState)? contextMenuBuilder
  +TextSelectionControls selectionControls
  +void Function(SelectedContent?)? onSelectionChanged
  {static} +List<ContextMenuButtonItem> getSelectableButtonItems()
  +State<StatefulWidget> createState()
}

"widgets::selectable_region::SelectableRegion" o-- "widgets::magnifier::TextMagnifierConfiguration"
"widgets::selectable_region::SelectableRegion" o-- "widgets::focus_manager::FocusNode"
"widgets::selectable_region::SelectableRegion" o-- "widgets::framework::Widget"
"widgets::selectable_region::SelectableRegion" o-- "widgets::selectable_region::Widget Function(BuildContext, SelectableRegionState)"
"widgets::selectable_region::SelectableRegion" o-- "widgets::text_selection::TextSelectionControls"
"widgets::selectable_region::SelectableRegion" o-- "foundation::basic_types::void Function(SelectedContent)"
"widgets::framework::StatefulWidget" <|-- "widgets::selectable_region::SelectableRegion"

class "widgets::selectable_region::SelectableRegionState" {
  -Map<Type, Action<Intent>> _actions
  -Map<Type, GestureRecognizerFactory<GestureRecognizer>> _gestureRecognizers
  -SelectionOverlay? _selectionOverlay
  -LayerLink _startHandleLayerLink
  -LayerLink _endHandleLayerLink
  -LayerLink _toolbarLayerLink
  -_SelectableRegionContainerDelegate _selectionDelegate
  -Selectable? _selectable
  -Orientation? _lastOrientation
  -SelectedContent? _lastSelectedContent
  +Offset? lastSecondaryTapDownPosition
  -Offset? _selectionEndPosition
  -bool _scheduledSelectionEndEdgeUpdate
  -Offset? _selectionStartPosition
  -bool _scheduledSelectionStartEdgeUpdate
  -Offset _selectionStartHandleDragPosition
  -Offset _selectionEndHandleDragPosition
  -bool? _adjustingSelectionEnd
  -double? _directionalHorizontalBaseline
  +TextEditingValue textEditingValue
  -bool _hasSelectionOverlayGeometry
  +SelectionOverlay? selectionOverlay
  -bool _userDraggingSelectionEnd
  -bool _userDraggingSelectionStart
  +TextSelectionToolbarAnchors contextMenuAnchors
  +List<ContextMenuButtonItem> contextMenuButtonItems
  +double startGlyphHeight
  +double endGlyphHeight
  +List<TextSelectionPoint> selectionEndpoints
  +bool cutEnabled
  +bool pasteEnabled
  +void initState()
  +void didChangeDependencies()
  +void didUpdateWidget()
  -Action<T> _makeOverridable()
  -void _handleFocusChanged()
  -void _updateSelectionStatus()
  {static} -int _getEffectiveConsecutiveTapCount()
  -void _initMouseGestureRecognizer()
  -void _initTouchGestureRecognizer()
  -void _startNewMouseSelectionGesture()
  -void _handleMouseDragStart()
  -void _handleMouseDragUpdate()
  -void _handleMouseDragEnd()
  -void _handleMouseTapUp()
  -void _updateSelectedContentIfNeeded()
  -void _handleTouchLongPressStart()
  -void _handleTouchLongPressMoveUpdate()
  -void _handleTouchLongPressEnd()
  -bool _positionIsOnActiveSelection()
  -void _handleRightClickDown()
  -void _triggerSelectionEndEdgeUpdate()
  -void _onAnyDragEnd()
  -void _stopSelectionEndEdgeUpdate()
  -void _triggerSelectionStartEdgeUpdate()
  -void _stopSelectionStartEdgeUpdate()
  -void _handleSelectionStartHandleDragStart()
  -void _handleSelectionStartHandleDragUpdate()
  -void _handleSelectionEndHandleDragStart()
  -void _handleSelectionEndHandleDragUpdate()
  -MagnifierInfo _buildInfoForMagnifier()
  -void _createSelectionOverlay()
  -void _updateSelectionOverlay()
  -bool _showHandles()
  -bool _showToolbar()
  -void _selectEndTo()
  -void _selectStartTo()
  -void _collapseSelectionAt()
  -void _selectWordAt()
  -void _finalizeSelection()
  -void _clearSelection()
  -Future<void> _copy()
  -bool _determineIsAdjustingSelectionEnd()
  -void _granularlyExtendSelection()
  -void _directionallyExtendSelection()
  +void hideToolbar()
  +void selectAll()
  +void copySelection()
  +void bringIntoView()
  +void cutSelection()
  +void userUpdateTextEditingValue()
  +Future<void> pasteText()
  +void add()
  +void remove()
  +void dispose()
  +Widget build()
}

"widgets::selectable_region::SelectableRegionState" o-- "widgets::text_selection::SelectionOverlay"
"widgets::selectable_region::SelectableRegionState" o-- "rendering::layer::LayerLink"
"widgets::selectable_region::SelectableRegionState" o-- "widgets::selectable_region::_SelectableRegionContainerDelegate"
"widgets::selectable_region::SelectableRegionState" o-- "rendering::selection::Selectable"
"widgets::selectable_region::SelectableRegionState" o-- "widgets::media_query::Orientation"
"widgets::selectable_region::SelectableRegionState" o-- "rendering::selection::SelectedContent"
"widgets::selectable_region::SelectableRegionState" o-- "dart::ui::Offset"
"widgets::selectable_region::SelectableRegionState" o-- "services::text_input::TextEditingValue"
"widgets::selectable_region::SelectableRegionState" o-- "widgets::text_selection_toolbar_anchors::TextSelectionToolbarAnchors"
"widgets::framework::State" <|-- "widgets::selectable_region::SelectableRegionState"
"services::text_input::TextSelectionDelegate" <|-- "widgets::selectable_region::SelectableRegionState"
"rendering::selection::SelectionRegistrar" <|-- "widgets::selectable_region::SelectableRegionState"

abstract class "widgets::selectable_region::_NonOverrideAction" {
  +Object? invokeAction()
  +Object? invoke()
}

"widgets::actions::ContextAction" <|-- "widgets::selectable_region::_NonOverrideAction"

class "widgets::selectable_region::_SelectAllAction" {
  +SelectableRegionState state
  +void invokeAction()
}

"widgets::selectable_region::_SelectAllAction" o-- "widgets::selectable_region::SelectableRegionState"
"widgets::selectable_region::_NonOverrideAction" <|-- "widgets::selectable_region::_SelectAllAction"

class "widgets::selectable_region::_CopySelectionAction" {
  +SelectableRegionState state
  +void invokeAction()
}

"widgets::selectable_region::_CopySelectionAction" o-- "widgets::selectable_region::SelectableRegionState"
"widgets::selectable_region::_NonOverrideAction" <|-- "widgets::selectable_region::_CopySelectionAction"

class "widgets::selectable_region::_GranularlyExtendSelectionAction" {
  +SelectableRegionState state
  +dynamic granularity
  +void invokeAction()
}

"widgets::selectable_region::_GranularlyExtendSelectionAction" o-- "widgets::selectable_region::SelectableRegionState"
"widgets::selectable_region::_NonOverrideAction" <|-- "widgets::selectable_region::_GranularlyExtendSelectionAction"

class "widgets::selectable_region::_GranularlyExtendCaretSelectionAction" {
  +SelectableRegionState state
  +dynamic granularity
  +void invokeAction()
}

"widgets::selectable_region::_GranularlyExtendCaretSelectionAction" o-- "widgets::selectable_region::SelectableRegionState"
"widgets::selectable_region::_NonOverrideAction" <|-- "widgets::selectable_region::_GranularlyExtendCaretSelectionAction"

class "widgets::selectable_region::_DirectionallyExtendCaretSelectionAction" {
  +SelectableRegionState state
  +void invokeAction()
}

"widgets::selectable_region::_DirectionallyExtendCaretSelectionAction" o-- "widgets::selectable_region::SelectableRegionState"
"widgets::selectable_region::_NonOverrideAction" <|-- "widgets::selectable_region::_DirectionallyExtendCaretSelectionAction"

class "widgets::selectable_region::_SelectableRegionContainerDelegate" {
  -Set<Selectable> _hasReceivedStartEvent
  -Set<Selectable> _hasReceivedEndEvent
  -Offset? _lastStartEdgeUpdateGlobalPosition
  -Offset? _lastEndEdgeUpdateGlobalPosition
  +void remove()
  -void _updateLastEdgeEventsFromGeometries()
  +SelectionResult handleSelectAll()
  +SelectionResult handleSelectWord()
  +SelectionResult handleClearSelection()
  +SelectionResult handleSelectionEdgeUpdate()
  +void dispose()
  +SelectionResult dispatchSelectionEventToChild()
  +void ensureChildUpdated()
  +void didChangeSelectables()
}

"widgets::selectable_region::_SelectableRegionContainerDelegate" o-- "dart::ui::Offset"
"widgets::selectable_region::MultiSelectableSelectionContainerDelegate" <|-- "widgets::selectable_region::_SelectableRegionContainerDelegate"

abstract class "widgets::selectable_region::MultiSelectableSelectionContainerDelegate" {
  +List<Selectable> selectables
  {static} -double _kSelectionHandleDrawableAreaPadding
  #int currentSelectionEndIndex
  #int currentSelectionStartIndex
  -LayerLink? _startHandleLayer
  -Selectable? _startHandleLayerOwner
  -LayerLink? _endHandleLayer
  -Selectable? _endHandleLayerOwner
  -bool _isHandlingSelectionEvent
  -bool _scheduledSelectableUpdate
  -bool _selectionInProgress
  -Set<Selectable> _additions
  -bool _extendSelectionInProgress
  -SelectionGeometry _selectionGeometry
  +SelectionGeometry value
  +int Function(Selectable, Selectable) compareOrder
  +void add()
  +void remove()
  +void layoutDidChange()
  -void _scheduleSelectableUpdate()
  -void _updateSelectables()
  -void _flushAdditions()
  -void _removeSelectable()
  #void didChangeSelectables()
  -void _updateSelectionGeometry()
  -int _compareScreenOrder()
  {static} -int _compareVertically()
  {static} -int _compareHorizontally()
  -void _handleSelectableGeometryChange()
  #SelectionGeometry getSelectionGeometry()
  -int _adjustSelectionIndexBasedOnSelectionGeometry()
  +void pushHandleLayers()
  -void _updateHandleLayersAndOwners()
  +SelectedContent? getSelectedContent()
  -void _flushInactiveSelections()
  #SelectionResult handleSelectAll()
  #SelectionResult handleSelectWord()
  #SelectionResult handleClearSelection()
  #SelectionResult handleGranularlyExtendSelection()
  #SelectionResult handleDirectionallyExtendSelection()
  #SelectionResult handleSelectionEdgeUpdate()
  +SelectionResult dispatchSelectionEvent()
  +void dispose()
  #void ensureChildUpdated()
  #SelectionResult dispatchSelectionEventToChild()
  -SelectionResult _initSelection()
  -SelectionResult _adjustSelection()
}

"widgets::selectable_region::MultiSelectableSelectionContainerDelegate" o-- "rendering::layer::LayerLink"
"widgets::selectable_region::MultiSelectableSelectionContainerDelegate" o-- "rendering::selection::Selectable"
"widgets::selectable_region::MultiSelectableSelectionContainerDelegate" o-- "rendering::selection::SelectionGeometry"
"widgets::selectable_region::MultiSelectableSelectionContainerDelegate" o-- "dart::core::int Function(Selectable, Selectable)"
"widgets::selection_container::SelectionContainerDelegate" <|-- "widgets::selectable_region::MultiSelectableSelectionContainerDelegate"
"foundation::change_notifier::ChangeNotifier" <|-- "widgets::selectable_region::MultiSelectableSelectionContainerDelegate"

class "widgets::sliver_fill::SliverFillViewport" {
  +double viewportFraction
  +bool padEnds
  +SliverChildDelegate delegate
  +Widget build()
}

"widgets::sliver_fill::SliverFillViewport" o-- "widgets::scroll_delegate::SliverChildDelegate"
"widgets::framework::StatelessWidget" <|-- "widgets::sliver_fill::SliverFillViewport"

class "widgets::sliver_fill::_SliverFillViewportRenderObjectWidget" {
  +double viewportFraction
  +RenderSliverFillViewport createRenderObject()
  +void updateRenderObject()
}

"widgets::sliver::SliverMultiBoxAdaptorWidget" <|-- "widgets::sliver_fill::_SliverFillViewportRenderObjectWidget"

class "widgets::sliver_fill::_SliverFractionalPadding" {
  +double viewportFraction
  +RenderObject createRenderObject()
  +void updateRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::sliver_fill::_SliverFractionalPadding"

class "widgets::sliver_fill::_RenderSliverFractionalPadding" {
  -SliverConstraints? _lastResolvedConstraints
  -double _viewportFraction
  -EdgeInsets? _resolvedPadding
  +double viewportFraction
  +EdgeInsets? resolvedPadding
  -void _markNeedsResolution()
  -void _resolve()
  +void performLayout()
}

"widgets::sliver_fill::_RenderSliverFractionalPadding" o-- "rendering::sliver::SliverConstraints"
"widgets::sliver_fill::_RenderSliverFractionalPadding" o-- "painting::edge_insets::EdgeInsets"
"rendering::sliver_padding::RenderSliverEdgeInsetsPadding" <|-- "widgets::sliver_fill::_RenderSliverFractionalPadding"

class "widgets::sliver_fill::SliverFillRemaining" {
  +Widget? child
  +bool hasScrollBody
  +bool fillOverscroll
  +Widget build()
  +void debugFillProperties()
}

"widgets::sliver_fill::SliverFillRemaining" o-- "widgets::framework::Widget"
"widgets::framework::StatelessWidget" <|-- "widgets::sliver_fill::SliverFillRemaining"

class "widgets::sliver_fill::_SliverFillRemainingWithScrollable" {
  +RenderSliverFillRemainingWithScrollable createRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::sliver_fill::_SliverFillRemainingWithScrollable"

class "widgets::sliver_fill::_SliverFillRemainingWithoutScrollable" {
  +RenderSliverFillRemaining createRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::sliver_fill::_SliverFillRemainingWithoutScrollable"

class "widgets::sliver_fill::_SliverFillRemainingAndOverscroll" {
  +RenderSliverFillRemainingAndOverscroll createRenderObject()
}

"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::sliver_fill::_SliverFillRemainingAndOverscroll"

class "widgets::animated_size::AnimatedSize" {
  +Widget? child
  +AlignmentGeometry alignment
  +Curve curve
  +Duration duration
  +Duration? reverseDuration
  +Clip clipBehavior
  +State<AnimatedSize> createState()
}

"widgets::animated_size::AnimatedSize" o-- "widgets::framework::Widget"
"widgets::animated_size::AnimatedSize" o-- "painting::alignment::AlignmentGeometry"
"widgets::animated_size::AnimatedSize" o-- "animation::curves::Curve"
"widgets::animated_size::AnimatedSize" o-- "dart::ui::Clip"
"widgets::framework::StatefulWidget" <|-- "widgets::animated_size::AnimatedSize"

class "widgets::animated_size::_AnimatedSizeState" {
  +Widget build()
}

"widgets::framework::State" <|-- "widgets::animated_size::_AnimatedSizeState"
"widgets::ticker_provider::SingleTickerProviderStateMixin" <|-- "widgets::animated_size::_AnimatedSizeState"

class "widgets::animated_size::_AnimatedSize" {
  +AlignmentGeometry alignment
  +Curve curve
  +Duration duration
  +Duration? reverseDuration
  +TickerProvider vsync
  +Clip clipBehavior
  +RenderAnimatedSize createRenderObject()
  +void updateRenderObject()
  +void debugFillProperties()
}

"widgets::animated_size::_AnimatedSize" o-- "painting::alignment::AlignmentGeometry"
"widgets::animated_size::_AnimatedSize" o-- "animation::curves::Curve"
"widgets::animated_size::_AnimatedSize" o-- "scheduler::ticker::TickerProvider"
"widgets::animated_size::_AnimatedSize" o-- "dart::ui::Clip"
"widgets::framework::SingleChildRenderObjectWidget" <|-- "widgets::animated_size::_AnimatedSize"

class "widgets::binding::WidgetsBindingObserver" {
  +Future<bool> didPopRoute()
  +Future<bool> didPushRoute()
  +Future<bool> didPushRouteInformation()
  +void didChangeMetrics()
  +void didChangeTextScaleFactor()
  +void didChangePlatformBrightness()
  +void didChangeLocales()
  +void didChangeAppLifecycleState()
  +Future<dynamic> didRequestAppExit()
  +void didHaveMemoryPressure()
  +void didChangeAccessibilityFeatures()
}

class "widgets::binding::RootWidget" {
  +Widget? child
  +String? debugShortDescription
  +RootElement createElement()
  +RootElement attach()
  +String toStringShort()
}

"widgets::binding::RootWidget" o-- "widgets::framework::Widget"
"widgets::framework::Widget" <|-- "widgets::binding::RootWidget"

class "widgets::binding::RootElement" {
  -Element? _child
  -RootWidget? _newWidget
  +bool debugDoingBuild
  +void visitChildren()
  +void forgetChild()
  +void mount()
  +void update()
  +void performRebuild()
  -void _rebuild()
  +bool debugExpectsRenderObjectForSlot()
}

"widgets::binding::RootElement" o-- "widgets::framework::Element"
"widgets::binding::RootElement" o-- "widgets::binding::RootWidget"
"widgets::framework::Element" <|-- "widgets::binding::RootElement"
"widgets::framework::RootElementMixin" <|-- "widgets::binding::RootElement"

class "widgets::binding::WidgetsFlutterBinding" {
  {static} +WidgetsBinding ensureInitialized()
}

"scheduler::binding::SchedulerBinding" <|-- "widgets::binding::WidgetsFlutterBinding"
"services::binding::ServicesBinding" <|-- "widgets::binding::WidgetsFlutterBinding"
"painting::binding::PaintingBinding" <|-- "widgets::binding::WidgetsFlutterBinding"
"semantics::binding::SemanticsBinding" <|-- "widgets::binding::WidgetsFlutterBinding"
"rendering::binding::RendererBinding" <|-- "widgets::binding::WidgetsFlutterBinding"
"widgets::binding::WidgetsBinding" <|-- "widgets::binding::WidgetsFlutterBinding"

abstract class "widgets::binding::" {
}

abstract class "widgets::binding::WidgetsBinding" {
  {static} -WidgetsBinding? _instance
  -BuildOwner? _buildOwner
  +PlatformMenuDelegate platformMenuDelegate
  -List<WidgetsBindingObserver> _observers
  -bool _needToReportFirstFrame
  -Completer<void> _firstFrameCompleter
  #bool debugBuildingDirtyElements
  -Element? _rootElement
  -bool _readyToProduceFrames
  {static} +WidgetsBinding instance
  +BuildOwner? buildOwner
  +FocusManager focusManager
  +bool firstFrameRasterized
  +Future<void> waitUntilFirstFrameRasterized
  +bool debugDidSendFirstFrameEvent
  +Element? rootElement
  +Element? renderViewElement
  +bool framesEnabled
  +bool isRootWidgetAttached
  +void initInstances()
  -void _debugAddStackFilters()
  +void initServiceExtensions()
  -Future<void> _forceRebuild()
  +void addObserver()
  +bool removeObserver()
  +Future<dynamic> handleRequestAppExit()
  +void handleMetricsChanged()
  +void handleTextScaleFactorChanged()
  +void handlePlatformBrightnessChanged()
  +void handleAccessibilityFeaturesChanged()
  #void handleLocaleChanged()
  #void dispatchLocalesChanged()
  #void dispatchAccessibilityFeaturesChanged()
  #Future<void> handlePopRoute()
  #Future<void> handlePushRoute()
  -Future<void> _handlePushRouteInformation()
  -Future<dynamic> _handleNavigationInvocation()
  +void handleAppLifecycleStateChanged()
  +void handleMemoryPressure()
  -void _handleBuildScheduled()
  +void drawFrame()
  +Widget wrapWithDefaultView()
  #void scheduleAttachRootWidget()
  +void attachRootWidget()
  +void attachToBuildOwner()
  +Future<void> performReassemble()
  +Locale? computePlatformResolvedLocale()
}

"widgets::binding::WidgetsBinding" o-- "widgets::binding::WidgetsBinding"
"widgets::binding::WidgetsBinding" o-- "widgets::framework::BuildOwner"
"widgets::binding::WidgetsBinding" o-- "widgets::platform_menu_bar::PlatformMenuDelegate"
"widgets::binding::WidgetsBinding" o-- "dart::async::Completer<void>"
"widgets::binding::WidgetsBinding" o-- "widgets::framework::Element"
"widgets::binding::WidgetsBinding" o-- "widgets::focus_manager::FocusManager"

